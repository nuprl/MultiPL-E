language: php
name: HumanEval_48_is_palindrome
results:
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace(',', '', $text);\n    $text = str_replace('.', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')',\
    \ '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']',\
    \ '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp9ip2sov1.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $len = strlen($text);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($text[$i]\
    \ != $text[$len - $i - 1]) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppknc74og.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text_length\
    \ = strlen($text);\n    $half_length = $text_length / 2;\n    $is_palindrome =\
    \ true;\n    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] !=\
    \ $text[$text_length - $i - 1]) {\n            $is_palindrome = false;\n     \
    \       break;\n        }\n    }\n    return $is_palindrome;\n}\n\n/* Checks if\
    \ given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(' ', '', $text);\n\t$text_len =\
    \ strlen($text);\n\t$half_len = floor($text_len / 2);\n\tfor ($i = 0; $i < $half_len;\
    \ $i++) {\n\t\tif ($text[$i] != $text[$text_len - $i - 1]) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\n/* Checks if given string is a palindrome\n>>>\
    \ is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '',\
    \ $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\\
    '', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('[',\
    \ '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpfhmhk84t.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdez1xb4f.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_rev = strrev($text);\n    if ($text == $text_rev) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $reverse = strrev($text);\n    if ($text == $reverse) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ (strlen($text) == 0) {\n        return true;\n    }\n    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z0-9]/', '', $text);\n    $text_length = strlen($text);\n\
    \    for ($i = 0; $i < $text_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n    $text =\
    \ str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\", \"\", $text);\n\
    \    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"{\",\
    \ \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text = str_replace(\"\
    '\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n    $text\
    \ = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\", \"\",\
    \ $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\
    \\r\", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text\
    \ = str_replace(\"\\v\", \"\", $text);\n    $text = str_replace(\"\\f\", \"\"\
    , $text);\n    $text = str_replace(\"\\0\", \"\", $text);\n    $text = str_replace(\"\
    \\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n   \
    \ $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\"\
    , \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text =\
    \ str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\"\
    , $text\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpyus5l_yl.php
    on line 43

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome_recursive(\"\")\ntrue\n>>> is_palindrome_recursive(\"aba\")\n\
    true\n>>> is_palindrome_recursive(\"aaaaa\")\ntrue\n>>> is_palindrome_recursive(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/i', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n   \
    \     if ($text[$i] != $text[$text_length - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpp8flrgo8.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"`\", \"\", $text);\n    $text = str_replace(\"~\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpde64t8lw.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = intval($text_length / 2);\n\
    \    $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n   \
    \     if ($text[$i] != $text[$text_length - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z]/', '', $text);\n\t$text_len\
    \ = strlen($text);\n\t$mid_point = floor($text_len / 2);\n\t$is_palindrome = true;\n\
    \tfor ($i = 0; $i < $mid_point; $i++) {\n\t\tif ($text[$i] != $text[$text_len\
    \ - $i - 1]) {\n\t\t\t$is_palindrome = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ $is_palindrome;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = $text_len / 2;\n    for ($i =\
    \ 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i -\
    \ 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text_length\
    \ = strlen($text);\n    $half_length = floor($text_length / 2);\n    $is_palindrome\
    \ = true;\n    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            $is_palindrome = false;\n  \
    \          break;\n        }\n    }\n    return $is_palindrome;\n}\n\n/* Checks\
    \ if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpk6a1efe6.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppvgyx2yw.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ (strlen($text) < 2) {\n        return true;\n    }\n    if ($text[0] != $text[strlen($text)\
    \ - 1]) {\n        return false;\n    }\n    return is_palindrome(substr($text,\
    \ 1, strlen($text) - 2));\n}\n\n/* Checks if given string is a palindrome\n>>>\
    \ is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp3wqtcbiw.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    return\
    \ $text == strrev($text);\n}\n\n/* Checks if given string is a palindrome\n>>>\
    \ is_palindrome_v2(\"\")\ntrue\n>>> is_palindrome_v2(\"aba\")\ntrue\n>>> is_palindrome_v2(\"\
    aaaaa\")\ntrue\n>>> is_palindrome_v2(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ ($text == '') {\n        return true;\n    }\n    $text = strtolower($text);\n\
    \    $text = str_replace(' ', '', $text);\n    $length = strlen($text);\n    $middle\
    \ = floor($length / 2);\n    for ($i = 0; $i < $middle; $i++) {\n        if ($text[$i]\
    \ != $text[$length - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - 1 - $i]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Returns the longest palindrome in\
    \ a given string\n>>> longest_palindrome(\"\")\n\"\"\n>>> longest_palindrome(\"\
    a\")\n\"a\"\n>>> longest_palindrome(\"aa\")\n\"aa\"\n>>> longest_palindrome(\"\
    baa\")\n\"aa\"\n>>> longest_palindrome(\"aab\")\n\"aa\"\n>>> longest_palindrome(\"\
    baabcd\")\n\"baab\"\n>>> longest_palindrome(\"baablkj12345432133d\")\n\"123454321\"\
    */\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmphwf__nzn.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z]/', '', $text);\n\t$text_length\
    \ = strlen($text);\n\t$half_length = floor($text_length / 2);\n\tfor ($i = 0;\
    \ $i < $half_length; $i++) {\n\t\tif ($text[$i] != $text[$text_length - $i - 1])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Checks if given\
    \ string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n    $text =\
    \ str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\", \"\", $text);\n\
    \    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"{\",\
    \ \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text = str_replace(\"\
    '\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n    $text\
    \ = str_replace(\"\\\\\", \"\", $text);\n    $text = str_replace(\"/\", \"\",\
    \ $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\";\",\
    \ \"\", $text);\n    $text = str_replace\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3f29vugi.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_reversed = strrev($text);\n    if ($text == $text_reversed) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\n\n/* Checks if\
    \ given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp1ndh80_c.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"`\", \"\", $text);\n    $text = str_replace(\"~\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpde64t8lw.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text_len\
    \ = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n        if ($text[$i]\
    \ != $text[$text_len - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ (strlen($text) <= 1) {\n        return true;\n    } else {\n        if ($text[0]\
    \ == $text[strlen($text) - 1]) {\n            return is_palindrome(substr($text,\
    \ 1, strlen($text) - 2));\n        } else {\n            return false;\n     \
    \   }\n    }\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text = str_replace(\"\
    \\\"\", \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text\
    \ = str_replace(\"_\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n\
    \    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\",\
    \ \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"\
    {\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text =\
    \ str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\", \"\", $text);\n\
    \    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"+\",\
    \ \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text = str_replace(\"\
    *\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n    $text =\
    \ str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n\
    \    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"#\",\
    \ \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"\
    ~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n    $text =\
    \ str_replace(\":\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmps3ncl2b5.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(\" \", \"\", $text);\n\t$text =\
    \ str_replace(\".\", \"\", $text);\n\t$text = str_replace(\",\", \"\", $text);\n\
    \t$text = str_replace(\"!\", \"\", $text);\n\t$text = str_replace(\"?\", \"\"\
    , $text);\n\t$text = str_replace(\"-\", \"\", $text);\n\t$text = str_replace(\"\
    _\", \"\", $text);\n\t$text = str_replace(\"'\", \"\", $text);\n\t$text = str_replace(\"\
    \\\"\", \"\", $text);\n\t$text = str_replace(\";\", \"\", $text);\n\t$text = str_replace(\"\
    :\", \"\", $text);\n\t$text = str_replace(\"(\", \"\", $text);\n\t$text = str_replace(\"\
    )\", \"\", $text);\n\t$text = str_replace(\"[\", \"\", $text);\n\t$text = str_replace(\"\
    ]\", \"\", $text);\n\t$text = str_replace(\"{\", \"\", $text);\n\t$text = str_replace(\"\
    }\", \"\", $text);\n\t$text = str_replace(\"/\", \"\", $text);\n\t$text = str_replace(\"\
    \\\\\", \"\", $text);\n\t$text = str_replace(\"+\", \"\", $text);\n\t$text = str_replace(\"\
    *\", \"\", $text);\n\t$text = str_replace(\"=\", \"\", $text);\n\t$text = str_replace(\"\
    %\", \"\", $text);\n\t$text = str_replace(\"$\", \"\", $text);\n\t$text = str_replace(\"\
    #\", \"\", $text);\n\t$text = str_replace(\"@\", \"\", $text);\n\t$text = str_replace(\"\
    &\", \"\", $text);\n\t$text = str_replace(\"^\", \"\", $text);\n\t$text = str_replace(\"\
    ~\", \"\", $text);\n\t$text = str_replace(\"`\", \"\", $text);\n\t$text = str_replace(\"\
    |\", \"\", $text);\n\t$text = str_replace\nfunction candidate(...$args) {\n  \
    \  return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpni573u7p.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_text_length = $text_length / 2;\n\
    \    for ($i = 0; $i < $half_text_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_text_length = floor($text_length\
    \ / 2);\n    $is_palindrome = true;\n    for ($i = 0; $i < $half_text_length;\
    \ $i++) {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n        \
    \    $is_palindrome = false;\n            break;\n        }\n    }\n    return\
    \ $is_palindrome;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace(',', '', $text);\n    $text = str_replace('.', '', $text);\n   \
    \ $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')',\
    \ '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']',\
    \ '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpgzzxw32v.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"/\",\
    \ \"\", $text);\n    $text = str_replace(\"\\\\\", \"\", $text);\n    $text =\
    \ str_replace(\"(\", \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n\
    \    $text = str_replace(\"[\", \"\", $text);\n    $text = str_replace(\"]\",\
    \ \"\", $text);\n    $text = str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"\
    }\", \"\", $text);\n    $text = str_replace(\"<\", \"\", $text);\n    $text =\
    \ str_replace(\">\", \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n\
    \    $text = str_replace(\"=\", \"\", $text);\n    $text = str_replace(\"*\",\
    \ \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n    $text = str_replace(\"\
    ^\", \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n    $text =\
    \ str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"#\", \"\", $text);\n\
    \    $text = str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"`\",\
    \ \"\", $text);\n    $text = str_replace\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpzy8z1g33.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n    $text =\
    \ str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\", \"\", $text);\n\
    \    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"{\",\
    \ \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text = str_replace(\"\
    '\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n    $text\
    \ = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\", \"\",\
    \ $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\";\",\
    \ \"\", $text);\n    $text = str_replace\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp28xvw88w.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $text_length_half = floor($text_length\
    \ / 2);\n    for ($i = 0; $i < $text_length_half; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $len = strlen($text);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($text[$i]\
    \ != $text[$len - $i - 1]) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len; $i++) {\n  \
    \      if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome_recursive(\"\")\ntrue\n>>> is_palindrome_recursive(\"aba\")\n\
    true\n>>> is_palindrome_recursive(\"aaaaa\")\ntrue\n>>> is_palindrome_recursive(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpzubchguc.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(' ', '', $text);\n\t$text = str_replace('.',\
    \ '', $text);\n\t$text = str_replace(',', '', $text);\n\t$text = str_replace('!',\
    \ '', $text);\n\t$text = str_replace('?', '', $text);\n\t$text = str_replace('-',\
    \ '', $text);\n\t$text = str_replace('_', '', $text);\n\t$text = str_replace('(',\
    \ '', $text);\n\t$text = str_replace(')', '', $text);\n\t$text = str_replace('[',\
    \ '', $text);\n\t$text = str_replace(']', '', $text);\n\t$text = str_replace('{',\
    \ '', $text);\n\t$text = str_replace('}', '', $text);\n\t$text = str_replace('\"\
    ', '', $text);\n\t$text = str_replace(\"'\", '', $text);\n\t$text = str_replace('/',\
    \ '', $text);\n\t$text = str_replace('\\\\', '', $text);\n\t$text = str_replace('+',\
    \ '', $text);\n\t$text = str_replace('*', '', $text);\n\t$text = str_replace('=',\
    \ '', $text);\n\t$text = str_replace('%', '', $text);\n\t$text = str_replace('$',\
    \ '', $text);\n\t$text = str_replace('#', '', $text);\n\t$text = str_replace('@',\
    \ '', $text);\n\t$text = str_replace('&', '', $text);\n\t$text = str_replace('^',\
    \ '', $text);\n\t$text = str_replace('~', '', $text);\n\t$text = str_replace('`',\
    \ '', $text);\n\t$text = str_replace('|', '', $text);\n\t$text = str_replace(';',\
    \ '', $text);\n\t$text = str_replace(':', '', $text);\n\t$text =\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp8w2h8j57.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"_\",\
    \ \"\", $text);\n    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"\
    ?\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n    $text =\
    \ str_replace(\":\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n\
    \    $text = str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\"\\\
    \\\", \"\", $text);\n    $text = str_replace(\"/\", \"\", $text);\n    $text =\
    \ str_replace(\"(\", \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n\
    \    $text = str_replace(\"[\", \"\", $text);\n    $text = str_replace(\"]\",\
    \ \"\", $text);\n    $text = str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"\
    }\", \"\", $text);\n    $text = str_replace(\"<\", \"\", $text);\n    $text =\
    \ str_replace(\">\", \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n\
    \    $text = str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"#\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    %\", \"\", $text);\n    $text = str_replace(\"^\", \"\", $text);\n    $text =\
    \ str_replace(\"&\", \"\", $text);\n    $text = str_replace(\"*\", \"\", $text);\n\
    \    $text = str_replace(\"+\", \"\", $text);\n    $text = str_replace(\"=\",\
    \ \"\", $text);\n    $text = str_replace\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n    $text = str_replace(\"\
    :\", \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text =\
    \ str_replace(\"_\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n\
    \    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\",\
    \ \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"\
    {\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text =\
    \ str_replace(\"'\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpn1vwnxzk.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = $text_length / 2;\n    for\
    \ ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $text_length_half = floor($text_length\
    \ / 2);\n    for ($i = 0; $i < $text_length_half; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z]/', '', $text);\n\t$text_rev\
    \ = strrev($text);\n\treturn $text == $text_rev;\n}\n\n/* Checks if given string\
    \ is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\n\
    true\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\n\
    function candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace(',', '', $text);\n    $text = str_replace('.', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpjx0tbcq4.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z]/', '', $text);\n\t$text_length\
    \ = strlen($text);\n\t$half_length = floor($text_length / 2);\n\tfor ($i = 0;\
    \ $i < $half_length; $i++) {\n\t\tif ($text[$i] != $text[$text_length - $i - 1])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Checks if given\
    \ string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - 1 - $i]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $length = strlen($text);\n    $half = floor($length / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        if ($text[$i] != $text[$length - $i - 1]) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\n\n/* Checks\
    \ if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpq7lqv5rr.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text_len\
    \ = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n        if ($text[$i]\
    \ != $text[$text_len - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z0-9]/', '', $text);\n\t\
    $len = strlen($text);\n\tfor ($i = 0; $i < $len / 2; $i++) {\n\t\tif ($text[$i]\
    \ != $text[$len - $i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n   \
    \     if ($text[$i] != $text[$text_length - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')',\
    \ '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']',\
    \ '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdwuria4s.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome_2(\"\")\ntrue\n>>> is_palindrome_2(\"aba\")\ntrue\n>>> is_palindrome_2(\"\
    aaaaa\")\ntrue\n>>> is_palindrome_2(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $reverse = strrev($text);\n    if ($text == $reverse) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Returns the longest palindrome in\
    \ a given string\n>>> longest_palindrome(\"\")\n\"\"\n>>> longest_palindrome(\"\
    a\")\n\"a\"\n>>> longest_palindrome(\"aa\")\n\"aa\"\n>>> longest_palindrome(\"\
    baa\")\n\"aa\"\n>>> longest_palindrome(\"aab\")\n\"aa\"\n>>> longest_palindrome(\"\
    baabcd\")\n\"baab\"\n>>> longest_palindrome(\"baablkj12345432133d\")\n\"123454321\"\
    */\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpat5g6lnh.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppknc74og.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = $text_length / 2;\n   \
    \ $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n      \
    \  if ($text[$i] != $text[$text_length - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ (strlen($text) == 0) {\n        return true;\n    }\n    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z]/', '', $text);\n    $text_length = strlen($text);\n\
    \    for ($i = 0; $i < $text_length / 2; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length; $i++) {\n\
    \        if ($text[$i] != $text[$text_length - 1 - $i]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>',\
    \ '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp3cvs5b6p.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $len = strlen($text);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if ($text[$i] != $text[$len - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $length = strlen($text);\n    for ($i = 0; $i < $length / 2; $i++) {\n  \
    \      if ($text[$i] != $text[$length - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(\" \", \"\", $text);\n\t$text =\
    \ str_replace(\".\", \"\", $text);\n\t$text = str_replace(\",\", \"\", $text);\n\
    \t$text = str_replace(\"!\", \"\", $text);\n\t$text = str_replace(\"?\", \"\"\
    , $text);\n\t$text = str_replace(\"-\", \"\", $text);\n\t$text = str_replace(\"\
    _\", \"\", $text);\n\t$text = str_replace(\"'\", \"\", $text);\n\t$text = str_replace(\"\
    \\\"\", \"\", $text);\n\t$text = str_replace(\";\", \"\", $text);\n\t$text = str_replace(\"\
    :\", \"\", $text);\n\t$text = str_replace(\"(\", \"\", $text);\n\t$text = str_replace(\"\
    )\", \"\", $text);\n\t$text = str_replace(\"[\", \"\", $text);\n\t$text = str_replace(\"\
    ]\", \"\", $text);\n\t$text = str_replace(\"{\", \"\", $text);\n\t$text = str_replace(\"\
    }\", \"\", $text);\n\t$text = str_replace(\"/\", \"\", $text);\n\t$text = str_replace(\"\
    \\\\\", \"\", $text);\n\t$text = str_replace(\"+\", \"\", $text);\n\t$text = str_replace(\"\
    =\", \"\", $text);\n\t$text = str_replace(\"*\", \"\", $text);\n\t$text = str_replace(\"\
    &\", \"\", $text);\n\t$text = str_replace(\"^\", \"\", $text);\n\t$text = str_replace(\"\
    %\", \"\", $text);\n\t$text = str_replace(\"$\", \"\", $text);\n\t$text = str_replace(\"\
    #\", \"\", $text);\n\t$text = str_replace(\"@\", \"\", $text);\n\t$text = str_replace(\"\
    ~\", \"\", $text);\n\t$text = str_replace(\"`\", \"\", $text);\n\t$text = str_replace(\"\
    |\", \"\", $text);\n\t$text = str_replace\nfunction candidate(...$args) {\n  \
    \  return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp_7608sz6.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]+/i', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len; $i++) {\n  \
    \      if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(\" \", \"\", $text);\n\t$text =\
    \ str_replace(\".\", \"\", $text);\n\t$text = str_replace(\",\", \"\", $text);\n\
    \t$text = str_replace(\"!\", \"\", $text);\n\t$text = str_replace(\"?\", \"\"\
    , $text);\n\t$text = str_replace(\"'\", \"\", $text);\n\t$text = str_replace(\"\
    \\\"\", \"\", $text);\n\t$text = str_replace(\"-\", \"\", $text);\n\t$text = str_replace(\"\
    _\", \"\", $text);\n\t$text = str_replace(\";\", \"\", $text);\n\t$text = str_replace(\"\
    :\", \"\", $text);\n\t$text = str_replace(\"(\", \"\", $text);\n\t$text = str_replace(\"\
    )\", \"\", $text);\n\t$text = str_replace(\"[\", \"\", $text);\n\t$text = str_replace(\"\
    ]\", \"\", $text);\n\t$text = str_replace(\"{\", \"\", $text);\n\t$text = str_replace(\"\
    }\", \"\", $text);\n\t$text = str_replace(\"/\", \"\", $text);\n\t$text = str_replace(\"\
    \\\\\", \"\", $text);\n\t$text = str_replace(\"+\", \"\", $text);\n\t$text = str_replace(\"\
    =\", \"\", $text);\n\t$text = str_replace(\"*\", \"\", $text);\n\t$text = str_replace(\"\
    &\", \"\", $text);\n\t$text = str_replace(\"^\", \"\", $text);\n\t$text = str_replace(\"\
    %\", \"\", $text);\n\t$text = str_replace(\"$\", \"\", $text);\n\t$text = str_replace(\"\
    #\", \"\", $text);\n\t$text = str_replace(\"@\", \"\", $text);\n\t$text = str_replace(\"\
    ~\", \"\", $text);\n\t$text = str_replace(\"`\", \"\", $text);\n\t$text = str_replace(\"\
    |\", \"\", $text);\n\t$text = str_replace\nfunction candidate(...$args) {\n  \
    \  return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp14q1et2_.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(\" \", \"\", $text);\n\t$text =\
    \ str_replace(\".\", \"\", $text);\n\t$text = str_replace(\",\", \"\", $text);\n\
    \t$text = str_replace(\"!\", \"\", $text);\n\t$text = str_replace(\"?\", \"\"\
    , $text);\n\t$text = str_replace(\"-\", \"\", $text);\n\t$text = str_replace(\"\
    _\", \"\", $text);\n\t$text = str_replace(\"'\", \"\", $text);\n\t$text = str_replace(\"\
    \\\"\", \"\", $text);\n\t$text = str_replace(\"(\", \"\", $text);\n\t$text = str_replace(\"\
    )\", \"\", $text);\n\t$text = str_replace(\"[\", \"\", $text);\n\t$text = str_replace(\"\
    ]\", \"\", $text);\n\t$text = str_replace(\"{\", \"\", $text);\n\t$text = str_replace(\"\
    }\", \"\", $text);\n\t$text = str_replace(\";\", \"\", $text);\n\t$text = str_replace(\"\
    :\", \"\", $text);\n\t$text = str_replace(\"/\", \"\", $text);\n\t$text = str_replace(\"\
    \\\\\", \"\", $text);\n\t$text = str_replace(\"|\", \"\", $text);\n\t$text = str_replace(\"\
    +\", \"\", $text);\n\t$text = str_replace(\"=\", \"\", $text);\n\t$text = str_replace(\"\
    *\", \"\", $text);\n\t$text = str_replace(\"&\", \"\", $text);\n\t$text = str_replace(\"\
    ^\", \"\", $text);\n\t$text = str_replace(\"%\", \"\", $text);\n\t$text = str_replace(\"\
    $\", \"\", $text);\n\t$text = str_replace(\"#\", \"\", $text);\n\t$text = str_replace(\"\
    @\", \"\", $text);\n\t$text = str_replace(\"`\", \"\", $text);\n\t$text = str_replace(\"\
    ~\", \"\", $text);\n\t$text = str_replace\nfunction candidate(...$args) {\n  \
    \  return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpdo5k3shg.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $len = strlen($text);\n    for ($i = 0; $i < $len / 2; $i++) {\n        if ($text[$i]\
    \ != $text[$len - $i - 1]) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text = str_split($text);\n    $text_length = count($text);\n    for ($i\
    \ = 0; $i < $text_length / 2; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - 1 - $i]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n   \
    \     if ($text[$i] != $text[$text_length - 1 - $i]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $text_length_half = floor($text_length /\
    \ 2);\n    for ($i = 0; $i < $text_length_half; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '',\
    \ $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"\
    '\", '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp2tiyge_8.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(' ', '', $text);\n\t$text = str_replace('.',\
    \ '', $text);\n\t$text = str_replace(',', '', $text);\n\t$text = str_replace('!',\
    \ '', $text);\n\t$text = str_replace('?', '', $text);\n\t$text = str_replace('-',\
    \ '', $text);\n\t$text = str_replace('_', '', $text);\n\t$text = str_replace('(',\
    \ '', $text);\n\t$text = str_replace(')', '', $text);\n\t$text = str_replace('[',\
    \ '', $text);\n\t$text = str_replace(']', '', $text);\n\t$text = str_replace('{',\
    \ '', $text);\n\t$text = str_replace('}', '', $text);\n\t$text = str_replace(':',\
    \ '', $text);\n\t$text = str_replace(';', '', $text);\n\t$text = str_replace('\"\
    ', '', $text);\n\t$text = str_replace(\"'\", '', $text);\n\t$text = str_replace('/',\
    \ '', $text);\n\t$text = str_replace('\\\\', '', $text);\n\t$text = str_replace('*',\
    \ '', $text);\n\t$text = str_replace('+', '', $text);\n\t$text = str_replace('=',\
    \ '', $text);\n\t$text = str_replace('%', '', $text);\n\t$text = str_replace('$',\
    \ '', $text);\n\t$text = str_replace('#', '', $text);\n\t$text = str_replace('@',\
    \ '', $text);\n\t$text = str_replace('&', '', $text);\n\t$text = str_replace('^',\
    \ '', $text);\n\t$text = str_replace('~', '', $text);\n\t$text = str_replace('`',\
    \ '', $text);\n\t$text = str_replace('<', '', $text);\n\t$text =\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpbktc8gw4.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n    $text = str_replace(\"\
    *\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n    $text =\
    \ str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n\
    \    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"#\",\
    \ \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"\
    ~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n    $text =\
    \ str_replace(\"1\", \"\", $text);\n    $text = str_replace(\"2\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmppd18rx7l.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(' ', '', $text);\n\t$text = str_replace('.',\
    \ '', $text);\n\t$text = str_replace(',', '', $text);\n\t$text = str_replace(';',\
    \ '', $text);\n\t$text = str_replace('!', '', $text);\n\t$text = str_replace('?',\
    \ '', $text);\n\t$text = str_replace('-', '', $text);\n\t$text = str_replace('_',\
    \ '', $text);\n\t$text = str_replace('(', '', $text);\n\t$text = str_replace(')',\
    \ '', $text);\n\t$text = str_replace('[', '', $text);\n\t$text = str_replace(']',\
    \ '', $text);\n\t$text = str_replace('{', '', $text);\n\t$text = str_replace('}',\
    \ '', $text);\n\t$text = str_replace('\"', '', $text);\n\t$text = str_replace(\"\
    '\", '', $text);\n\t$text = str_replace('/', '', $text);\n\t$text = str_replace('\\\
    \\', '', $text);\n\t$text = str_replace('|', '', $text);\n\t$text = str_replace('+',\
    \ '', $text);\n\t$text = str_replace('=', '', $text);\n\t$text = str_replace('*',\
    \ '', $text);\n\t$text = str_replace('&', '', $text);\n\t$text = str_replace('^',\
    \ '', $text);\n\t$text = str_replace('%', '', $text);\n\t$text = str_replace('$',\
    \ '', $text);\n\t$text = str_replace('#', '', $text);\n\t$text = str_replace('@',\
    \ '', $text);\n\t$text = str_replace('~', '', $text);\n\t$text = str_replace('`',\
    \ '', $text);\n\t$text = str_replace(':', '', $text);\n\t$text =\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvw8luvb1.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpatw1tx1b.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_rev = strrev($text);\n    if ($text == $text_rev) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n/* Checks if given string\
    \ is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\n\
    true\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\n\
    function candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Returns the sum of all numbers in a given range\n>>> sum_of_numbers(1,\
    \ 5)\n15\n>>> sum_of_numbers(0, 5)\n15\n>>> sum_of_numbers(0, 0)\n0\n>>> sum_of_numbers(1,\
    \ 0)\n0*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = $text_length / 2;\n    $is_palindrome\
    \ = true;\n    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            $is_palindrome = false;\n  \
    \          break;\n        }\n    }\n    return $is_palindrome;\n}\n\n/* Checks\
    \ if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    return\
    \ $text == strrev($text);\n}\n\n/* Checks if given string is a palindrome\n>>>\
    \ is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n    $text = str_replace(\"\
    =\", \"\", $text);\n    $text = str_replace(\"*\", \"\", $text);\n    $text =\
    \ str_replace(\"&\", \"\", $text);\n    $text = str_replace(\"^\", \"\", $text);\n\
    \    $text = str_replace(\"%\", \"\", $text);\n    $text = str_replace(\"$\",\
    \ \"\", $text);\n    $text = str_replace(\"#\", \"\", $text);\n    $text = str_replace(\"\
    @\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"<\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp7jpad70l.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpbpybipdl.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $text_half_length = floor($text_length /\
    \ 2);\n    for ($i = 0; $i < $text_half_length; $i++) {\n        if ($text[$i]\
    \ != $text[$text_length - $i - 1]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    return $text == strrev($text);\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxa8aknh3.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppjre8a4y.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpwjifa1m0.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n/* Returns the sum of all numbers\
    \ in the given array\n>>> sum_array([])\n0\n>>> sum_array([1, 2, 3])\n6\n>>> sum_array([1,\
    \ 2, 3, 4, 5])\n15*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpwod_f33j.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-z]/', '', $text);\n\t$text_length\
    \ = strlen($text);\n\t$text_half_length = floor($text_length / 2);\n\tfor ($i\
    \ = 0; $i < $text_half_length; $i++) {\n\t\tif ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Checks\
    \ if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    $is_palindrome = true;\n    for ($i = 0; $i < $half_length; $i++) {\n   \
    \     if ($text[$i] != $text[$text_length - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = str_replace(\" \", \"\", $text);\n\t$text =\
    \ str_replace(\".\", \"\", $text);\n\t$text = str_replace(\",\", \"\", $text);\n\
    \t$text = str_replace(\"!\", \"\", $text);\n\t$text = str_replace(\"?\", \"\"\
    , $text);\n\t$text = str_replace(\"-\", \"\", $text);\n\t$text = str_replace(\"\
    _\", \"\", $text);\n\t$text = str_replace(\"'\", \"\", $text);\n\t$text = str_replace(\"\
    \\\"\", \"\", $text);\n\t$text = str_replace(\";\", \"\", $text);\n\t$text = str_replace(\"\
    :\", \"\", $text);\n\t$text = str_replace(\"(\", \"\", $text);\n\t$text = str_replace(\"\
    )\", \"\", $text);\n\t$text = str_replace(\"[\", \"\", $text);\n\t$text = str_replace(\"\
    ]\", \"\", $text);\n\t$text = str_replace(\"{\", \"\", $text);\n\t$text = str_replace(\"\
    }\", \"\", $text);\n\t$text = str_replace(\"/\", \"\", $text);\n\t$text = str_replace(\"\
    \\\\\", \"\", $text);\n\t$text = str_replace(\"|\", \"\", $text);\n\t$text = str_replace(\"\
    +\", \"\", $text);\n\t$text = str_replace(\"=\", \"\", $text);\n\t$text = str_replace(\"\
    *\", \"\", $text);\n\t$text = str_replace(\"&\", \"\", $text);\n\t$text = str_replace(\"\
    ^\", \"\", $text);\n\t$text = str_replace(\"%\", \"\", $text);\n\t$text = str_replace(\"\
    $\", \"\", $text);\n\t$text = str_replace(\"#\", \"\", $text);\n\t$text = str_replace(\"\
    @\", \"\", $text);\n\t$text = str_replace(\"~\", \"\", $text);\n\t$text = str_replace(\"\
    `\", \"\", $text);\n\t$text = str_replace\nfunction candidate(...$args) {\n  \
    \  return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpwadq5dcl.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpiv_yzj11.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace(',', '', $text);\n    $text = str_replace('.', '', $text);\n   \
    \ $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')',\
    \ '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']',\
    \ '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpbaqei90d.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    return\
    \ $text == strrev($text);\n}\n\n/* Returns the number of words in a given string\n\
    >>> word_count(\"\")\n0\n>>> word_count(\"a\")\n1\n>>> word_count(\"a b\")\n2\n\
    >>> word_count(\"a b c\")\n3\n>>> word_count(\"a b c d\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for ($i\
    \ = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len - $i\
    \ - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    /* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>>\
    \ is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '',\
    \ $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('/',\
    \ '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('#',\
    \ '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('<',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpn7vnqlwj.php on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2; $i++) {\n \
    \       if ($text[$i] != $text[$text_len - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Checks if given string is a palindrome\n\
    >>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('%',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~',\
    \ '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|',\
    \ '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxkx74u9e.php on line 45

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n\
    \    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"(\",\
    \ \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"\
    [\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text =\
    \ str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\"\
    , \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\
    +\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n\
    \    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"%\",\
    \ \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"\
    #\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text =\
    \ str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp2hnzo_z3.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n\t$text\
    \ = strtolower($text);\n\t$text = preg_replace('/[^a-zA-Z0-9]/', '', $text);\n\
    \t$text_length = strlen($text);\n\t$text_length_half = floor($text_length / 2);\n\
    \tfor ($i = 0; $i < $text_length_half; $i++) {\n\t\tif ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Checks\
    \ if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\n\
    false*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"\
    zbcd\")\nfalse*/\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n    $text\
    \ = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n\
    \    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\",\
    \ \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"\
    _\", \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n    $text =\
    \ str_replace(\"=\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n\
    \    $text = str_replace(\"#\", \"\", $text);\n    $text = str_replace(\"$\",\
    \ \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n    $text = str_replace(\"\
    ^\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n    $text =\
    \ str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n\
    \    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\",\
    \ \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"\
    {\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text =\
    \ str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"\\\\\", \"\", $text);\n\
    \    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\":\",\
    \ \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n    $text = str_replace(\"\
    '\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n    $text\
    \ = str_replace(\"<\", \"\", $text);\n    $text = str_replace(\">\", \"\", $text);\n\
    \    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpyydm48gc.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n\
    \    $text_len = strlen($text);\n    $half_len = floor($text_len / 2);\n    for\
    \ ($i = 0; $i < $half_len; $i++) {\n        if ($text[$i] != $text[$text_len -\
    \ $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n/* Returns the longest palindrome in a given string\n>>> longest_palindrome(\"\
    \")\n\"\"\n>>> longest_palindrome(\"a\")\n\"a\"\n>>> longest_palindrome(\"aa\"\
    )\n\"aa\"\n>>> longest_palindrome(\"baa\")\n\"aa\"\n>>> longest_palindrome(\"\
    aab\")\n\"aa\"\n>>> longest_palindrome(\"baabcd\")\n\"baab\"\n>>> longest_palindrome(\"\
    baablkj12345432133d\")\n\"123454321\"*/\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    if\
    \ (strlen($text) == 0) {\n        return true;\n    }\n    if (strlen($text) ==\
    \ 1) {\n        return true;\n    }\n    if (strlen($text) == 2) {\n        if\
    \ ($text[0] == $text[1]) {\n            return true;\n        } else {\n     \
    \       return false;\n        }\n    }\n    if ($text[0] == $text[strlen($text)\
    \ - 1]) {\n        return is_palindrome(substr($text, 1, strlen($text) - 2));\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Checks if given string is\
    \ a palindrome\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"aaaaa\")\ntrue\n>>> is_palindrome(\"zbcd\")\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Checks if given string is a palindrome\n>>> is_palindrome(\"\
    \")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"aaaaa\")\ntrue\n\
    >>> is_palindrome(\"zbcd\")\nfalse*/\nfunction is_palindrome($text) {\n    $text\
    \ = strtolower($text);\n    $text = str_replace(' ', '', $text);\n    $text =\
    \ str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n   \
    \ $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text =\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppknc74og.php on line 45

    '
  timestamp: 1660220777

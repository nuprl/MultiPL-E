language: php
name: HumanEval_155_even_odd_count
results:
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjliu86c1.php:36\n\
    Stack trace:\n#0 /tmp/tmpjliu86c1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjliu86c1.php\
    \ on line 36\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = str_split($num);\n\tforeach ($num as $value) {\n\
    \t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nFatal error: Uncaught TypeError: Unsupported operand types: string\
    \ % int in /tmp/tmpvbw5_dzx.php:13\nStack trace:\n#0 /tmp/tmpvbw5_dzx.php(23):\
    \ even_odd_count(Array)\n#1 {main}\n  thrown in /tmp/tmpvbw5_dzx.php on line 13\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return an array that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"hello\")\narray(2, 3)\n\
    >>> vowel_consonant_count(\"world\")\narray(1, 4)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bc6ba22.php:42\n\
    Stack trace:\n#0 /tmp/tmp4bc6ba22.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4bc6ba22.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0]\\n\";\necho \"Odd: $result[1]\\n\";\n\n$num = 123;\n$result\
    \ = even_odd_count($num);\necho \"Even: $result[0]\\n\";\necho \"Odd: $result[1]\\\
    n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 1\nOdd: 1\nEven: 1\nOdd: 2\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7rb8xmt7.php:45\nStack trace:\n#0 /tmp/tmp7rb8xmt7.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7rb8xmt7.php on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp291p3fa4.php:43\nStack trace:\n#0 /tmp/tmp291p3fa4.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp291p3fa4.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return an array that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"Hello\")\narray(2, 3)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rgr2_ra.php:40\n\
    Stack trace:\n#0 /tmp/tmp9rgr2_ra.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9rgr2_ra.php\
    \ on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count([-12, -1, 0, 1, 2])\n\
    array(3, 2)\n>>> even_odd_count([1, 2, 3, 4, 5])\narray(2, 3)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9iqt0_z.php:42\n\
    Stack trace:\n#0 /tmp/tmpg9iqt0_z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg9iqt0_z.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num != 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given a string. return the number of vowels in the string.\nExample:\n\
    >>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5he7p1w_.php:42\n\
    Stack trace:\n#0 /tmp/tmp5he7p1w_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5he7p1w_.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string, return\
    \ the number of vowels in the string.\nExample:\n>>> count_vowels(\"hello\")\n\
    2\n>>> count_vowels(\"world\")\n1\n*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztxrs4g0.php:43\n\
    Stack trace:\n#0 /tmp/tmpztxrs4g0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpztxrs4g0.php\
    \ on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\")\n0*/\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpowdpxs.php:44\n\
    Stack trace:\n#0 /tmp/tmphpowdpxs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmphpowdpxs.php\
    \ on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgpogwgjo.php:39\n\
    Stack trace:\n#0 /tmp/tmpgpogwgjo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgpogwgjo.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    Hello\")\n2\n>>> count_vowels(\"World\")\n1*/\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0awzjl11.php:42\n\
    Stack trace:\n#0 /tmp/tmp0awzjl11.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0awzjl11.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztj701kp.php:42\n\
    Stack trace:\n#0 /tmp/tmpztj701kp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpztj701kp.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7nqhf509.php:43\nStack trace:\n#0 /tmp/tmp7nqhf509.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7nqhf509.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztj701kp.php:42\n\
    Stack trace:\n#0 /tmp/tmpztj701kp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpztj701kp.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    if ($num < 0) {\n        $num = -$num;\n    }\n   \
    \ while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = ($num - $digit) / 10;\n    }\n    return array($even, $odd);\n\
    }\n\n$num = -12;\nprint_r(even_odd_count($num));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp6muh_jfa.php:40\nStack trace:\n#0 /tmp/tmp6muh_jfa.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6muh_jfa.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$arr = str_split($num);\n\tforeach ($arr as $value) {\n\
    \t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn array($even, $odd);\n}\n\n/* Given a string. return an array\
    \ that has the number of vowels and consonants respectively.\nExample:\n>>> vowel_consonant_count('abc')\n\
    array(1, 2)\n>>> vowel_consonant_count('aabbcc')\narray(2, 4)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp1vug4fe5.php:13\nStack trace:\n#0 /tmp/tmp1vug4fe5.php(29): even_odd_count(-78)\n\
    #1 /tmp/tmp1vug4fe5.php(34): candidate(-78)\n#2 /tmp/tmp1vug4fe5.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1vug4fe5.php on line 13\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop4tp24a.php:38\n\
    Stack trace:\n#0 /tmp/tmpop4tp24a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpop4tp24a.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an array of integers.\
    \ return an array that has the number of even and odd integers respectively.\n\
    Example:\n>>> even_odd_count_array(array(1, 2, 3, 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1,\
    \ 2, 3, 4, 5, 6))\narray(3, 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsvjmqjh.php:42\n\
    Stack trace:\n#0 /tmp/tmphsvjmqjh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphsvjmqjh.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpakrhivxg.php:42\nStack trace:\n#0 /tmp/tmpakrhivxg.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpakrhivxg.php on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdb4z4zsb.php:43\nStack trace:\n#0 /tmp/tmpdb4z4zsb.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdb4z4zsb.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxhc48m0.php:42\n\
    Stack trace:\n#0 /tmp/tmpsxhc48m0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsxhc48m0.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgucnaou.php:42\n\
    Stack trace:\n#0 /tmp/tmpjgucnaou.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjgucnaou.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string, return\
    \ the number of vowels in the string.\nExample:\n>>> count_vowels(\"Hello\")\n\
    2\n>>> count_vowels(\"World\")\n1*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4mq05k5.php:42\n\
    Stack trace:\n#0 /tmp/tmpy4mq05k5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy4mq05k5.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    $num = -12;\n$result = even_odd_count($num);\nprint_r($result);\n\n$num = 123;\n\
    $result = even_odd_count($num);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5mxpfya.php:43\n\
    Stack trace:\n#0 /tmp/tmpp5mxpfya.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp5mxpfya.php\
    \ on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\necho \"Number\
    \ of even and odd digits in $num are: \";\nprint_r(even_odd_count($num));\n\n\
    $num = 123;\necho \"Number of even and odd digits in $num are: \";\nprint_r(even_odd_count($num));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Number of even and odd digits in -12 are: Array\n(\n    [0] => 1\n    [1]\
    \ => 1\n)\nNumber of even and odd digits in 123 are: Array\n(\n    [0] => 1\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ghty2ox.php:43\n\
    Stack trace:\n#0 /tmp/tmp1ghty2ox.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1ghty2ox.php\
    \ on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count([1, 2, 3, 4, 5])\n\
    array(2, 3)\n>>> even_odd_count([1, 2, 3, 4, 5, 6])\narray(3, 3)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphyb6hy6.php:42\n\
    Stack trace:\n#0 /tmp/tmpphyb6hy6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpphyb6hy6.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkpd8kz7.php:38\n\
    Stack trace:\n#0 /tmp/tmppkpd8kz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkpd8kz7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$abs = abs($num);\n\twhile ($abs > 0) {\n\t\t$digit = $abs\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$abs = floor($abs / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxx41ond.php:42\n\
    Stack trace:\n#0 /tmp/tmpgxx41ond.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgxx41ond.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\t$num = (string)$num;\n\tfor ($i =\
    \ 0; $i < strlen($num); $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$even++;\n\
    \t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\n/*\
    \ Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an array of integers.\
    \ return an array that has the number of even and odd integers respectively.\n\
    Example:\n>>> even_odd_count_array(array(1, 2, 3, 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1,\
    \ 2, 3, 4, 5, 6))\narray(3, 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthcp3zlu.php:42\n\
    Stack trace:\n#0 /tmp/tmpthcp3zlu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpthcp3zlu.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp291p3fa4.php:43\nStack trace:\n#0 /tmp/tmp291p3fa4.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp291p3fa4.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6a2lfy3.php:42\n\
    Stack trace:\n#0 /tmp/tmpt6a2lfy3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpt6a2lfy3.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    $num = -12;\n$result = even_odd_count($num);\necho \"Even: \" . $result[0] . \"\
    \ Odd: \" . $result[1];\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 1 Odd: 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplptoaqig.php:39\n\
    Stack trace:\n#0 /tmp/tmplptoaqig.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplptoaqig.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptuhurtda.php:42\nStack trace:\n#0 /tmp/tmptuhurtda.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmptuhurtda.php on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = ($num - $digit) / 10;\n\t}\n\treturn array($even, $odd);\n}\n\
    \necho '<pre>';\nprint_r(even_odd_count(-12));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(even_odd_count(123));\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm6lxspcq.php:44\nStack trace:\n#0 /tmp/tmpm6lxspcq.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm6lxspcq.php on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $num\
    \ = abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n      \
    \  $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbevvi7gt.php:35\n\
    Stack trace:\n#0 /tmp/tmpbevvi7gt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbevvi7gt.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers, return the number of even and odd integers in the\
    \ array.\nExample:\n>>> even_odd_count_array(array(1, 2, 3, 4, 5))\narray(2, 3)\n\
    >>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3, 3)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddhhq9bn.php:42\n\
    Stack trace:\n#0 /tmp/tmpddhhq9bn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpddhhq9bn.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluncge5s.php:42\n\
    Stack trace:\n#0 /tmp/tmpluncge5s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpluncge5s.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cubhlnz.php:35\n\
    Stack trace:\n#0 /tmp/tmp8cubhlnz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8cubhlnz.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\n/* Given an array of integers.\
    \ return an array that has the number of even and odd integers respectively.\n\
    Example:\n>>> even_odd_count([1, 2, 3, 4, 5])\narray(2, 3)\n>>> even_odd_count([1,\
    \ 2, 3, 4, 5, 6])\narray(3, 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_j1mewx.php:42\n\
    Stack trace:\n#0 /tmp/tmpl_j1mewx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl_j1mewx.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = ($num - $digit) / 10;\n\t}\n\treturn array($even, $odd);\n}\n\
    \n/* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizeb7rm4.php:42\n\
    Stack trace:\n#0 /tmp/tmpizeb7rm4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpizeb7rm4.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\")\n0*/\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpowdpxs.php:44\n\
    Stack trace:\n#0 /tmp/tmphpowdpxs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmphpowdpxs.php\
    \ on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\necho \"The number\
    \ of even and odd digits in $num are: \";\nprint_r(even_odd_count($num));\necho\
    \ \"\\n\";\n\n$num = 123;\necho \"The number of even and odd digits in $num are:\
    \ \";\nprint_r(even_odd_count($num));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The number of even and odd digits in -12 are: Array\n(\n    [0] => 1\n\
    \    [1] => 1\n)\n\nThe number of even and odd digits in 123 are: Array\n(\n \
    \   [0] => 1\n    [1] => 2\n)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcopashos.php:45\nStack trace:\n#0 /tmp/tmpcopashos.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcopashos.php on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztj701kp.php:42\n\
    Stack trace:\n#0 /tmp/tmpztj701kp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpztj701kp.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgucnaou.php:42\n\
    Stack trace:\n#0 /tmp/tmpjgucnaou.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjgucnaou.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = ($num - $digit) / 10;\n\t}\n\treturn array($even, $odd);\n}\n\
    \n/* Given a string. return an array that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"hello\")\narray(2, 3)\n\
    >>> vowel_consonant_count(\"world\")\narray(1, 4)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmw9n7bh.php:42\n\
    Stack trace:\n#0 /tmp/tmpdmw9n7bh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdmw9n7bh.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluncge5s.php:42\n\
    Stack trace:\n#0 /tmp/tmpluncge5s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpluncge5s.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return a string that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"Hello\")\narray(2, 3)\n\
    >>> vowel_consonant_count(\"World\")\narray(1, 4)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nfzuzfu.php:42\n\
    Stack trace:\n#0 /tmp/tmp6nfzuzfu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6nfzuzfu.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2y3capi.php:42\n\
    Stack trace:\n#0 /tmp/tmpg2y3capi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg2y3capi.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$rem = $num\
    \ % 10;\n\t\tif ($rem % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = $num / 10;\n\t}\n\treturn array($even, $odd);\n}\n\n$num = -12;\n\
    $result = even_odd_count($num);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpzv20kta_.php
    on line 13


    Deprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpzv20kta_.php
    on line 13


    Deprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpzv20kta_.php
    on line 13


    Deprecated: Implicit conversion from float 0.0012000000000000001 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 0.00012000000000000002 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses
    precision in /tmp/tmpzv20kta_.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses
    precision in /tmp/tmpzv20kta'
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n  $even\
    \ = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpah0f84ot.php:42\n\
    Stack trace:\n#0 /tmp/tmpah0f84ot.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpah0f84ot.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    $num = -12;\n$result = even_odd_count($num);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1ujwyjm5.php:40\nStack trace:\n#0 /tmp/tmp1ujwyjm5.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1ujwyjm5.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = str_split($num);\n\tforeach ($num as $value) {\n\
    \t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn array($even, $odd);\n}\n\n/* Given an integer. return an array\
    \ that has the number of even and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\n\
    array(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp231hd0yb.php:13\nStack trace:\n#0 /tmp/tmp231hd0yb.php(29): even_odd_count(Array)\n\
    #1 /tmp/tmp231hd0yb.php(34): candidate(-78)\n#2 /tmp/tmp231hd0yb.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp231hd0yb.php on line 13\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    if ($num < 0) {\n        $num = $num * -1;\n    }\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    abcdefg\")\n2\n>>> count_vowels(\"aAbcdefg\")\n3\n>>> count_vowels(\"\")\n0\n\
    >>> count_vowels(\"abcd1234\")\n2\n>>> count_vowels(\"abcd1234AEIOU\")\n8\n*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string. return\
    \ the number of vowels in the string.\nExample:\n>>> count_vowels(\"hello\")\n\
    2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixvep265.php:42\n\
    Stack trace:\n#0 /tmp/tmpixvep265.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpixvep265.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\necho '<pre>';\nprint_r(even_odd_count(-12));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(even_odd_count(123));\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps_o8g9o6.php:44\nStack trace:\n#0 /tmp/tmps_o8g9o6.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmps_o8g9o6.php on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n  $even\
    \ = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80ofz9s1.php:42\n\
    Stack trace:\n#0 /tmp/tmp80ofz9s1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp80ofz9s1.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n  $even\
    \ = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    $num = -12;\nprint_r(even_odd_count($num));\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzsf93ao8.php:38\nStack trace:\n#0 /tmp/tmpzsf93ao8.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzsf93ao8.php on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given a string. return the number of vowels and consonants respectively.\n\
    Example:\n>>> vowel_consonant_count(\"Hello\")\narray(2, 3)\n>>> vowel_consonant_count(\"\
    World\")\narray(1, 4)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqe_y_rv.php:42\n\
    Stack trace:\n#0 /tmp/tmpoqe_y_rv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpoqe_y_rv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp291p3fa4.php:43\nStack trace:\n#0 /tmp/tmp291p3fa4.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp291p3fa4.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    echo \"Even: \" . $result[0] . \" Odd: \" . $result[1];\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 1 Odd: 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjl2mcgd4.php:39\n\
    Stack trace:\n#0 /tmp/tmpjl2mcgd4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjl2mcgd4.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzhtf8p3.php:37\n\
    Stack trace:\n#0 /tmp/tmpnzhtf8p3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnzhtf8p3.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd\
    \ += 1;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given a string, return a new string where the first and last chars have\
    \ been exchanged.\nExample:\n>>> front_back('code')\n'eodc'\n>>> front_back('a')\n\
    'a'\n>>> front_back('ab')\n'ba'*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsby5kg71.php:44\n\
    Stack trace:\n#0 /tmp/tmpsby5kg71.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsby5kg71.php\
    \ on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1jxwt_d.php:35\n\
    Stack trace:\n#0 /tmp/tmph1jxwt_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph1jxwt_d.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkpd8kz7.php:38\n\
    Stack trace:\n#0 /tmp/tmppkpd8kz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkpd8kz7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return a string where for every char in the original, there\
    \ are two chars.\nExample:\n>>> double_char('The')\n'TThhee'\n>>> double_char('AAbb')\n\
    'AAAAbbbb'\n>>> double_char('Hi-There')\n'HHii--TThheerree'*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkqoko9.php:44\n\
    Stack trace:\n#0 /tmp/tmpqhkqoko9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqhkqoko9.php\
    \ on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd numbers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxevs90v.php:42\n\
    Stack trace:\n#0 /tmp/tmpxxevs90v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxxevs90v.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_th48m4v.php:42\n\
    Stack trace:\n#0 /tmp/tmp_th48m4v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_th48m4v.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = ($num - $digit) / 10;\n\t}\n\treturn array($even, $odd);\n}\n\
    \n/* Given a string. return a string that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"hello\")\narray(2, 3)\n\
    >>> vowel_consonant_count(\"world\")\narray(1, 4)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yhelysw.php:42\n\
    Stack trace:\n#0 /tmp/tmp3yhelysw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3yhelysw.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = $num / 10;\n\t}\n\treturn array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpywx65sf6.php
    on line 13


    Deprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpywx65sf6.php
    on line 13


    Deprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpywx65sf6.php
    on line 13


    Deprecated: Implicit conversion from float 0.0012000000000000001 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 0.00012000000000000002 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses
    precision in /tmp/tmpywx65sf6.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses
    precision in /tmp/tmpywx65sf'
  timestamp: 1660220723
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n$num = -12;\n$result = even_odd_count($num);\necho \"Number of even digits\
    \ in $num is $result[0] and number of odd digits is $result[1]\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Number of even digits in -12 is 1 and number of odd digits is 1\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpi23g3yva.php:39\nStack trace:\n\
    #0 /tmp/tmpi23g3yva.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi23g3yva.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = $num / 10;\n\t}\n\treturn array($even, $odd);\n}\n\n/* Given\
    \ an array of integers. return an array that has the number of even and odd integers\
    \ respectively.\nExample:\n>>> even_odd_count([1, 2, 3, 4, 5])\narray(2, 3)\n\
    >>> even_odd_count([1, 2, 3, 4, 5, 6])\narray(3, 3)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp0nar06vo.php
    on line 13


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp0nar06vo.php
    on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp0nar06vo.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int'
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztj701kp.php:42\n\
    Stack trace:\n#0 /tmp/tmpztj701kp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpztj701kp.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num != 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given a string, return the number of vowels in the string.\nExample:\n\
    >>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\
    \")\n0*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkx94xf2.php:44\n\
    Stack trace:\n#0 /tmp/tmpfkx94xf2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfkx94xf2.php\
    \ on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$arr = str_split($num);\n\tforeach ($arr as $value) {\n\
    \t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn array($even, $odd);\n}\n\n/* Given a string, return a string\
    \ that has the same characters in reverse order.\nExample:\n>>> reverse_string(\"\
    hello\")\n\"olleh\"\n>>> reverse_string(\"world\")\n\"dlrow\"*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp19mc_e6e.php:13\nStack trace:\n#0 /tmp/tmp19mc_e6e.php(29): even_odd_count(-78)\n\
    #1 /tmp/tmp19mc_e6e.php(34): candidate(-78)\n#2 /tmp/tmp19mc_e6e.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp19mc_e6e.php on line 13\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return an array that has the number of even and\
    \ odd integers respectively.\nExample:\n>>> even_odd_count_array(array(1, 2, 3,\
    \ 4, 5))\narray(2, 3)\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3,\
    \ 3)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzdc65g_.php:42\n\
    Stack trace:\n#0 /tmp/tmpuzdc65g_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpuzdc65g_.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8bmuktc.php:37\n\
    Stack trace:\n#0 /tmp/tmpm8bmuktc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm8bmuktc.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return the number of words in the string.\nExample:\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, I am here\")\n4*/\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuggl11db.php:42\n\
    Stack trace:\n#0 /tmp/tmpuggl11db.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpuggl11db.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesqot8hc.php:38\n\
    Stack trace:\n#0 /tmp/tmpesqot8hc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpesqot8hc.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluncge5s.php:42\n\
    Stack trace:\n#0 /tmp/tmpluncge5s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpluncge5s.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkpd8kz7.php:38\n\
    Stack trace:\n#0 /tmp/tmppkpd8kz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkpd8kz7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp291p3fa4.php:43\nStack trace:\n#0 /tmp/tmp291p3fa4.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp291p3fa4.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the first character that is not repeated anywhere in\
    \ the string.\nFor example, given the string \"abcdab\", the function should return\
    \ 'c'.\nGiven the string \"xyzxyz\", the function should return ''.*/\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceqar_j5.php:39\n\
    Stack trace:\n#0 /tmp/tmpceqar_j5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpceqar_j5.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $num\
    \ = abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n      \
    \  $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5tkt3k7.php:38\n\
    Stack trace:\n#0 /tmp/tmpa5tkt3k7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa5tkt3k7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptuhurtda.php:42\nStack trace:\n#0 /tmp/tmptuhurtda.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmptuhurtda.php on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    $num = (string)$num;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n    }\n \
    \   return array($even, $odd);\n}\n\n/*Given an array of integers, return the\
    \ sum of the integers that are in the array.\nExample:\n>>> sum_of_array(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxhc48m0.php:42\n\
    Stack trace:\n#0 /tmp/tmpsxhc48m0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsxhc48m0.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an array of integers. return the sum of the first and last elements.\n\
    Example:\n>>> sum_first_last(array(1, 2, 3))\n4\n>>> sum_first_last(array(1, 2,\
    \ 3, 4))\n5*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxhh__j1.php:42\n\
    Stack trace:\n#0 /tmp/tmpnxhh__j1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnxhh__j1.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    $num = abs($num);\n    while ($num > 0) {\n \
    \       $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n        $num = floor($num\
    \ / 10);\n    }\n    return array($even_count, $odd_count);\n}\n\n/* Given an\
    \ integer. return an array that has the number of even and odd digits respectively.\n\
    Example:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1,\
    \ 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6arcju6z.php:42\n\
    Stack trace:\n#0 /tmp/tmp6arcju6z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6arcju6z.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return an array that has the number of vowels and consonants\
    \ respectively.\nExample:\n>>> vowel_consonant_count(\"abc\")\narray(1, 2)\n>>>\
    \ vowel_consonant_count(\"abcd\")\narray(2, 2)*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30f79bdd.php:42\n\
    Stack trace:\n#0 /tmp/tmp30f79bdd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp30f79bdd.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesqot8hc.php:38\n\
    Stack trace:\n#0 /tmp/tmpesqot8hc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpesqot8hc.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = ($num - $digit) / 10;\n\t}\n\treturn array($even, $odd);\n}\n\
    \n/* Given a string, return the number of vowels in the string.\nExample:\n>>>\
    \ count_vowels(\"hello\")\n2\n>>> count_vowels(\"world\")\n1\n*/\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_61axvn.php:43\n\
    Stack trace:\n#0 /tmp/tmps_61axvn.php(46): test()\n#1 {main}\n  thrown in /tmp/tmps_61axvn.php\
    \ on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\")\n0\n*/\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrj5rphu.php:45\n\
    Stack trace:\n#0 /tmp/tmplrj5rphu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmplrj5rphu.php\
    \ on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdb4z4zsb.php:43\nStack trace:\n#0 /tmp/tmpdb4z4zsb.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdb4z4zsb.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkpd8kz7.php:38\n\
    Stack trace:\n#0 /tmp/tmppkpd8kz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkpd8kz7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkpd8kz7.php:38\n\
    Stack trace:\n#0 /tmp/tmppkpd8kz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkpd8kz7.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even_count\
    \ = 0;\n\t$odd_count = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit\
    \ = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count++;\n\t\t} else {\n\
    \t\t\t$odd_count++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even_count,\
    \ $odd_count);\n}\n\n$num = -12;\n$result = even_odd_count($num);\necho \"Even\
    \ count: \" . $result[0] . \"\\n\";\necho \"Odd count: \" . $result[1] . \"\\\
    n\";\n\n$num = 123;\n$result = even_odd_count($num);\necho \"Even count: \" .\
    \ $result[0] . \"\\n\";\necho \"Odd count: \" . $result[1] . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even count: 1\nOdd count: 1\nEven count: 1\nOdd count: 2\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpxkl0b9ls.php:45\nStack trace:\n\
    #0 /tmp/tmpxkl0b9ls.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxkl0b9ls.php\
    \ on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt682u4sg.php:39\n\
    Stack trace:\n#0 /tmp/tmpt682u4sg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt682u4sg.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $num\
    \ = abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n      \
    \  $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5z7rbouw.php:43\nStack trace:\n#0 /tmp/tmp5z7rbouw.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5z7rbouw.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an array of integers.\
    \ return an array that has the number of even and odd integers respectively.\n\
    Example:\n>>> even_odd_count_array(array(1, 2, 3, 4, 5, 6))\narray(3, 3)\n>>>\
    \ even_odd_count_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\narray(5, 5)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4si2eum.php:42\n\
    Stack trace:\n#0 /tmp/tmpc4si2eum.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc4si2eum.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesqot8hc.php:38\n\
    Stack trace:\n#0 /tmp/tmpesqot8hc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpesqot8hc.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string, return\
    \ the number of vowels in the string.\nExample:\n>>> count_vowels(\"hello\")\n\
    2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbm7_n87.php:42\n\
    Stack trace:\n#0 /tmp/tmpxbm7_n87.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxbm7_n87.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string. return the number of vowels in the string.\nExample:\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dr6mk21.php:42\n\
    Stack trace:\n#0 /tmp/tmp4dr6mk21.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4dr6mk21.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaydyvrfz.php:43\nStack trace:\n#0 /tmp/tmpaydyvrfz.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaydyvrfz.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string, return\
    \ the number of vowels in the string.\nExample:\n>>> count_vowels(\"Hello\")\n\
    2\n>>> count_vowels(\"World\")\n1*/\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4mq05k5.php:42\n\
    Stack trace:\n#0 /tmp/tmpy4mq05k5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy4mq05k5.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$num\
    \ = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n\
    }\n\n/* Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxhc48m0.php:42\n\
    Stack trace:\n#0 /tmp/tmpsxhc48m0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsxhc48m0.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    $num = -12;\necho \"Even and odd digits in $num are: \";\nprint_r(even_odd_count($num));\n\
    echo \"\\n\";\n\n$num = 123;\necho \"Even and odd digits in $num are: \";\nprint_r(even_odd_count($num));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even and odd digits in -12 are: Array\n(\n    [0] => 1\n    [1] => 1\n\
    )\n\nEven and odd digits in 123 are: Array\n(\n    [0] => 1\n    [1] => 2\n)\n\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufoaec15.php:45\n\
    Stack trace:\n#0 /tmp/tmpufoaec15.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpufoaec15.php\
    \ on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7nqhf509.php:43\nStack trace:\n#0 /tmp/tmp7nqhf509.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7nqhf509.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0], Odd: $result[1]\";\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 1, Odd: 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl79k1wx.php:39\n\
    Stack trace:\n#0 /tmp/tmpwl79k1wx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwl79k1wx.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string, return\
    \ an array that has the number of vowels and consonants respectively.\nExample:\n\
    >>> vowel_consonant_count(\"hello\")\narray(2, 3)\n>>> vowel_consonant_count(\"\
    world\")\narray(1, 4)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qrznsw5.php:42\n\
    Stack trace:\n#0 /tmp/tmp7qrznsw5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7qrznsw5.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$last = $num\
    \ % 10;\n\t\tif ($last % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z03chdz.php:38\n\
    Stack trace:\n#0 /tmp/tmp1z03chdz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1z03chdz.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given a string. return\
    \ a string that has the number of vowels and consonants respectively.\nExample:\n\
    >>> vowel_consonant_count(\"abracadabra\")\narray(5, 7)\n>>> vowel_consonant_count(\"\
    python\")\narray(2, 4)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4yr9c9r.php:42\n\
    Stack trace:\n#0 /tmp/tmpn4yr9c9r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn4yr9c9r.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9a9pbybl.php:43\nStack trace:\n#0 /tmp/tmp9a9pbybl.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9a9pbybl.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $num\
    \ = abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n      \
    \  $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n\n$num = -12;\nprint_r(even_odd_count($num));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpevsiz0hw.php
    on line 13


    Deprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpevsiz0hw.php
    on line 13


    Deprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpevsiz0hw.php
    on line 13


    Deprecated: Implicit conversion from float 0.0012000000000000001 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 0.00012000000000000002 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses
    precision in /tmp/tmpevsiz0hw.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses
    precision in /tmp/tmpevsiz0h'
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$arr = str_split($num);\n\tforeach ($arr as $value) {\n\
    \t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn array($even, $odd);\n}\n\n/* Given a string, return the number\
    \ of vowels in the string.\nExample:\n>>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"\
    world\")\n1\n*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpw4m9_2zg.php:13\nStack trace:\n#0 /tmp/tmpw4m9_2zg.php(30): even_odd_count(-78)\n\
    #1 /tmp/tmpw4m9_2zg.php(35): candidate(-78)\n#2 /tmp/tmpw4m9_2zg.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw4m9_2zg.php on line 13\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp291p3fa4.php:43\nStack trace:\n#0 /tmp/tmp291p3fa4.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp291p3fa4.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluncge5s.php:42\n\
    Stack trace:\n#0 /tmp/tmpluncge5s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpluncge5s.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppwl_vv06.php:39\nStack trace:\n#0 /tmp/tmppwl_vv06.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppwl_vv06.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n/* Given an integer. return\
    \ an array that has the number of even and odd digits respectively.\nExample:\n\
    >>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\narray(1, 2)*/\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe54ljjog.php:42\n\
    Stack trace:\n#0 /tmp/tmpe54ljjog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe54ljjog.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95xx_cv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg95xx_cv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg95xx_cv.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n>>> even_odd_count(123)\n\
    array(1, 2)*/\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylibtroj.php:42\n\
    Stack trace:\n#0 /tmp/tmpylibtroj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpylibtroj.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    /* Given a string, return the number of vowels in the string.\nExample:\n>>> num_vowels(\"\
    hello\")\n2\n>>> num_vowels(\"world\")\n1*/\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dxvwuo7.php:42\n\
    Stack trace:\n#0 /tmp/tmp_dxvwuo7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_dxvwuo7.php\
    \ on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppwl_vv06.php:39\nStack trace:\n#0 /tmp/tmppwl_vv06.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppwl_vv06.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8lkfm0r.php:38\n\
    Stack trace:\n#0 /tmp/tmpy8lkfm0r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy8lkfm0r.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$remainder\
    \ = $num % 10;\n\t\tif ($remainder % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\
    \t\t\t$odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even,\
    \ $odd);\n}\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawlozzob.php:38\n\
    Stack trace:\n#0 /tmp/tmpawlozzob.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpawlozzob.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n\t$even\
    \ = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7omp4m_u.php:43\nStack trace:\n#0 /tmp/tmp7omp4m_u.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7omp4m_u.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\nExample:\n>>> even_odd_count(-12)\narray(1, 1)\n\
    >>> even_odd_count(123)\narray(1, 2)*/\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    print_r($result);\n\n$num = 123;\n$result = even_odd_count($num);\nprint_r($result);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4grne4l.php:43\n\
    Stack trace:\n#0 /tmp/tmpf4grne4l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf4grne4l.php\
    \ on line 43\n"
  timestamp: 1660220716

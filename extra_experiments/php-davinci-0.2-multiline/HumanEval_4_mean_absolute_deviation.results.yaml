language: php
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle numbers.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\nIf the list is even, the average of the two middle\
    \ values is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median of the dataset.\n\
    The median is the middle element of the sorted dataset.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg1jojc58.php:10\n\
    Stack trace:\n#0 /tmp/tmpg1jojc58.php(25): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg1jojc58.php(29): candidate(Array)\n#2 /tmp/tmpg1jojc58.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg1jojc58.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $n\
    \ = count($numbers);\n    $mean = array_sum($numbers) / $n;\n    $deviations =\
    \ array();\n    foreach ($numbers as $number) {\n        $deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($deviations) / $n;\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of the dataset, when the dataset is sorted.\nIf there are an even number of\
    \ values, the median is the mean of the two\nmiddle values.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$deviations = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\treturn mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median of the dataset.\n\
    The median is the middle value of the dataset, when sorted.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpbd5kd2d8.php:10\n\
    Stack trace:\n#0 /tmp/tmpbd5kd2d8.php(25): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpbd5kd2d8.php(29): candidate(Array)\n#2 /tmp/tmpbd5kd2d8.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbd5kd2d8.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ in a sorted list of numbers.\nIf the list is even, the average of the two middle\
    \ values is used.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpd8pcksp0.php:10\n\
    Stack trace:\n#0 /tmp/tmpd8pcksp0.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpd8pcksp0.php(26): candidate(Array)\n#2 /tmp/tmpd8pcksp0.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd8pcksp0.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\t\
    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given array\
    \ of input numbers, calculate the Median Absolute\nDeviation around the median\
    \ of this dataset.\nMedian Absolute Deviation is the median of the absolute differences\
    \ between\neach element and a centerpoint (median in this case):\nMAD = median\
    \ | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n\
    1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median.\nThe median is the middle number in a sorted list of numbers.\n\
    If there are two middle numbers, the median is the mean of those two.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp4m012soi.php:10\n\
    Stack trace:\n#0 /tmp/tmp4m012soi.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4m012soi.php(30): candidate(Array)\n#2 /tmp/tmp4m012soi.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4m012soi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpd8pcksp0.php:10\n\
    Stack trace:\n#0 /tmp/tmpd8pcksp0.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpd8pcksp0.php(26): candidate(Array)\n#2 /tmp/tmpd8pcksp0.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd8pcksp0.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of the dataset.\nThe median is\
    \ the middle value of a dataset, sorted in ascending order.\nIf there are an even\
    \ number of elements, the median is the average of the\ntwo middle values.\n>>>\
    \ median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle value in a sorted list of numbers.\nIf the list is of even length,\
    \ the average of the two middle numbers is\nreturned.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp3a3f9ay7.php:10\n\
    Stack trace:\n#0 /tmp/tmp3a3f9ay7.php(27): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp3a3f9ay7.php(31): candidate(Array)\n#2 /tmp/tmp3a3f9ay7.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3a3f9ay7.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle element\
    \ of the sorted array.\nIf the array has an even number of elements, the median\
    \ is the average of\nthe two middle elements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $absolute_deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median.\nThe median is the middle number in a sorted list of numbers.\n\
    If there are two middle numbers, the median is the mean of those two numbers.\n\
    >>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp5l53_dor.php:10\n\
    Stack trace:\n#0 /tmp/tmp5l53_dor.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp5l53_dor.php(30): candidate(Array)\n#2 /tmp/tmp5l53_dor.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5l53_dor.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    differences from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\nIf the list is even, the average of the two middle\
    \ numbers is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted array.\nIf the array has an even number of elements, the median\
    \ is the average of\nthe two middle values.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the dataset.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    differences from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of the dataset.\nThe median is\
    \ the middle value of a sorted dataset. If the dataset is even\nlength, the average\
    \ of the two middle values is used.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the absolute\ndifferences between\
    \ each element and a centerpoint (median in this case):\nMAD = average | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median absolute\ndeviation around the median of this dataset.\n\
    Median Absolute Deviation is the median of the absolute differences between\n\
    each element and a centerpoint (median in this case):\nMAD = median | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp4x1rukvb.php:10\n\
    Stack trace:\n#0 /tmp/tmp4x1rukvb.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4x1rukvb.php(30): candidate(Array)\n#2 /tmp/tmp4x1rukvb.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4x1rukvb.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate Median Absolute Deviation\naround the median\
    \ of this dataset.\nMedian Absolute Deviation is the median of the absolute difference\
    \ between\neach element and a centerpoint (median in this case):\nMAD = median\
    \ | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n\
    1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median.\nThe median is the middle number in a sorted list of numbers.\n\
    If the list length is even, the average of the two middle numbers is returned.\n\
    >>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0v5o0ma6.php:10\n\
    Stack trace:\n#0 /tmp/tmp0v5o0ma6.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp0v5o0ma6.php(30): candidate(Array)\n#2 /tmp/tmp0v5o0ma6.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0v5o0ma6.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the variance.\nVariance\
    \ is the average of the squared differences from the Mean:\nvariance = average\
    \ (x - x_mean)^2\n>>> standard_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.2909944487358056*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviation = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviation[] = abs($number - $mean);\n    }\n\
    \    return array_sum($deviation) / count($deviation);\n}\n\n/* For a given array\
    \ of input numbers, calculate the median.\nThe median is the middle value of a\
    \ dataset, when sorted in ascending order.\nIf the dataset has an even number\
    \ of elements, the median is the average of\nthe two middle elements.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list is of even length, the two middle\
    \ numbers are averaged.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle elements.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5\
    \ */\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0jwr_hmy.php:10\n\
    Stack trace:\n#0 /tmp/tmp0jwr_hmy.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp0jwr_hmy.php(26): candidate(Array)\n#2 /tmp/tmp0jwr_hmy.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0jwr_hmy.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is a measure of how spread out the data is:\n\
    SD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the dataset.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers. If there are\ntwo middle numbers, the median is\
    \ the mean of those two numbers.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n\
    >>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ in a sorted list of numbers.\nIf there is an even number of values, the median\
    \ is the mean of the two\nmiddle values.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Mean Absolute Deviation\naround the median\
    \ of this dataset.\nMean Absolute Deviation is the average absolute difference\
    \ between each\nelement and a centerpoint (median in this case):\nMAD = average\
    \ | x - x_median |\n>>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average squared\
    \ deviation\nfrom the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of the dataset.\nThe median is\
    \ the middle value of the dataset when it is sorted.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\t\
    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given array\
    \ of input numbers, calculate the median.\nThe median is the middle value of a\
    \ sorted list of numbers.\nIf the list is even, the average of the two middle\
    \ numbers is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    deviations from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of the dataset.\nThe median is\
    \ the middle value of the dataset when it is sorted.\nIf the dataset has an even\
    \ number of elements, the median is the average\nof the two middle values.\n>>>\
    \ median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp1mulnn9n.php:10\n\
    Stack trace:\n#0 /tmp/tmp1mulnn9n.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp1mulnn9n.php(26): candidate(Array)\n#2 /tmp/tmp1mulnn9n.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1mulnn9n.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ of a sorted array.\nIf the array has an even number of elements, the median\
    \ is the average of\nthe two middle elements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the variance.\nVariance\
    \ is the average of the squared differences from the Mean.\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a dataset, or the average of the two\nmiddle values if the dataset has an\
    \ even number of elements.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average squared\
    \ deviation\nfrom the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    deviations from the mean:\ns = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of this dataset.\nThe median is\
    \ the middle value of a sorted dataset. If the dataset has an\neven number of\
    \ values, the median is the average of the two middle values.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\t\
    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given array\
    \ of input numbers, calculate the median.\nThe median is the middle value of a\
    \ sorted dataset.\nIf the dataset is even, the average of the two middle values\
    \ is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp205j1lz9.php:10\n\
    Stack trace:\n#0 /tmp/tmp205j1lz9.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp205j1lz9.php(26): candidate(Array)\n#2 /tmp/tmp205j1lz9.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp205j1lz9.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\t\
    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given array\
    \ of input numbers, calculate the median of the dataset.\nThe median is the middle\
    \ value of a dataset, after sorting the values.\nIf the dataset has an even number\
    \ of elements, the median is the average\nof the two middle values.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $differences = array();\n    foreach ($numbers as $number)\
    \ {\n        $differences[] = abs($number - $mean);\n    }\n    return mean($differences);\n\
    }\n\n/* For a given array of input numbers, calculate the mean.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpzns5m_ss.php:10\n\
    Stack trace:\n#0 /tmp/tmpzns5m_ss.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpzns5m_ss.php(26): candidate(Array)\n#2 /tmp/tmpzns5m_ss.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzns5m_ss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is a measure of how spread out the values\
    \ are.\nStandard deviation is the square root of the variance.\nVariance is the\
    \ average of the squared differences from the mean.\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf the list has an even number\
    \ of elements, the median is the average of the\ntwo middle elements.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp_w5tr2km.php:10\n\
    Stack trace:\n#0 /tmp/tmp_w5tr2km.php(27): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp_w5tr2km.php(31): candidate(Array)\n#2 /tmp/tmp_w5tr2km.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_w5tr2km.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median absolute\ndeviation around the median of this dataset.\n\
    Median Absolute Deviation is the median of the absolute differences between\n\
    each element and a centerpoint (median in this case):\nMAD = median | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp4x1rukvb.php:10\n\
    Stack trace:\n#0 /tmp/tmp4x1rukvb.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4x1rukvb.php(30): candidate(Array)\n#2 /tmp/tmp4x1rukvb.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4x1rukvb.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$deviations = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\treturn mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf the list has an even number\
    \ of elements, the median is the\naverage of the two middle elements.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxmafi8q7.php:10\n\
    Stack trace:\n#0 /tmp/tmpxmafi8q7.php(27): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxmafi8q7.php(31): candidate(Array)\n#2 /tmp/tmpxmafi8q7.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxmafi8q7.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\nIf the list is even, the average of the two middle\
    \ numbers is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is a measure of how spread out the values\
    \ are.\nStandard deviation is the square root of the variance.\nVariance is the\
    \ average of the squared differences from the mean.\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle element\
    \ of a sorted array.\nIf the array has an even number of elements, the median\
    \ is the average of\nthe two middle elements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median of the dataset.\nThe median is\
    \ the middle number in a sorted list of numbers.\nIf the list is even, the average\
    \ of the two middle numbers is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle element\
    \ of a sorted array. If the array has an\neven number of elements, the median\
    \ is the average of the two middle\nelements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    deviations from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpd8pcksp0.php:10\n\
    Stack trace:\n#0 /tmp/tmpd8pcksp0.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpd8pcksp0.php(26): candidate(Array)\n#2 /tmp/tmpd8pcksp0.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd8pcksp0.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the standard deviation\naround the mean of this dataset.\nStandard deviation\
    \ is the square root of the average squared deviation\nfrom the mean:\nSD = sqrt(average\
    \ (x - x_mean)^2)\n>>> standard_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.29099444874*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmphkbpw9ck.php:10\n\
    Stack trace:\n#0 /tmp/tmphkbpw9ck.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmphkbpw9ck.php(30): candidate(Array)\n#2 /tmp/tmphkbpw9ck.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmphkbpw9ck.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the dataset.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpxt7428ry.php:10\n\
    Stack trace:\n#0 /tmp/tmpxt7428ry.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpxt7428ry.php(30): candidate(Array)\n#2 /tmp/tmpxt7428ry.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxt7428ry.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    differences from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $differences = array();\n    foreach ($numbers as $number)\
    \ {\n        $differences[] = abs($number - $mean);\n    }\n    return mean($differences);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg9w8jjk2.php:10\n\
    Stack trace:\n#0 /tmp/tmpg9w8jjk2.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg9w8jjk2.php(26): candidate(Array)\n#2 /tmp/tmpg9w8jjk2.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg9w8jjk2.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    deviations from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle element\
    \ of a sorted array.\nIf the array has an even number of elements, the median\
    \ is the average of\nthe two middle elements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    >>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpy6j13u6q.php:10\n\
    Stack trace:\n#0 /tmp/tmpy6j13u6q.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpy6j13u6q.php(26): candidate(Array)\n#2 /tmp/tmpy6j13u6q.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy6j13u6q.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $absolute_deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the standard deviation\n\
    around the mean of this dataset.\nStandard deviation is a measure of how spread\
    \ out the values are.\nStandard deviation is the square root of the variance.\n\
    Variance is the average of the squared differences from the mean.\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$deviations = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\treturn mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj5l0o6ui.php:10\n\
    Stack trace:\n#0 /tmp/tmpj5l0o6ui.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpj5l0o6ui.php(26): candidate(Array)\n#2 /tmp/tmpj5l0o6ui.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj5l0o6ui.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate Median Absolute Deviation\n\
    around the median of this dataset.\nMedian Absolute Deviation is the median of\
    \ the absolute differences between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp4y2mb617.php:10\n\
    Stack trace:\n#0 /tmp/tmp4y2mb617.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4y2mb617.php(30): candidate(Array)\n#2 /tmp/tmp4y2mb617.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4y2mb617.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\t\
    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given array\
    \ of input numbers, calculate the median absolute\ndeviation around the median\
    \ of this dataset.\nMedian Absolute Deviation is the median of the absolute difference\
    \ between\neach element and a centerpoint (median in this case):\nMAD = median\
    \ | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n\
    1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n  $mean\
    \ = mean($numbers);\n  $absolute_deviations = array();\n  foreach ($numbers as\
    \ $number) {\n    $absolute_deviations[] = abs($number - $mean);\n  }\n  return\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf the list is of even length,\
    \ the two middle numbers are averaged.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp_6d32gra.php:10\n\
    Stack trace:\n#0 /tmp/tmp_6d32gra.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp_6d32gra.php(30): candidate(Array)\n#2 /tmp/tmp_6d32gra.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6d32gra.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpe_x7duwd.php:10\n\
    Stack trace:\n#0 /tmp/tmpe_x7duwd.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpe_x7duwd.php(26): candidate(Array)\n#2 /tmp/tmpe_x7duwd.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe_x7duwd.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $absolute_deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    deviations from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average squared\
    \ deviation\nfrom the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviation = 0;\n    foreach ($numbers\
    \ as $number) {\n        $deviation += abs($number - $mean);\n    }\n    return\
    \ $deviation / count($numbers);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median absolute\ndeviation around the median of this dataset.\nMedian Absolute\
    \ Deviation is the median of the absolute difference between\neach element and\
    \ a centerpoint (median in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median.\nThe median is the middle element of the sorted array.\nIf the array\
    \ has an even number of elements, the median is the average of\nthe two middle\
    \ elements.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpidmuqbhe.php:10\n\
    Stack trace:\n#0 /tmp/tmpidmuqbhe.php(27): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpidmuqbhe.php(31): candidate(Array)\n#2 /tmp/tmpidmuqbhe.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpidmuqbhe.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median.\nThe median is the middle number in a sorted list of numbers.\n\
    If the list is of even length, the average of the two middle numbers is\nreturned.\n\
    >>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpt84uywn8.php:10\n\
    Stack trace:\n#0 /tmp/tmpt84uywn8.php(25): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpt84uywn8.php(29): candidate(Array)\n#2 /tmp/tmpt84uywn8.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt84uywn8.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle numbers.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted array.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the dataset.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the Median Absolute\nDeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute difference between\neach element and a centerpoint (median in\
    \ this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp6zltdeqr.php:10\n\
    Stack trace:\n#0 /tmp/tmp6zltdeqr.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp6zltdeqr.php(30): candidate(Array)\n#2 /tmp/tmp6zltdeqr.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6zltdeqr.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf there are an even number of numbers, the median\
    \ is the average of the two\nmiddle numbers.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle value of a set of numbers.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmplvlamirz.php:10\n\
    Stack trace:\n#0 /tmp/tmplvlamirz.php(25): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmplvlamirz.php(29): candidate(Array)\n#2 /tmp/tmplvlamirz.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmplvlamirz.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median of the dataset.\nThe median is the middle number in a sorted\
    \ list of numbers.\nIf the list is of even length, the two middle numbers are\
    \ averaged.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmphr_cvttf.php:10\n\
    Stack trace:\n#0 /tmp/tmphr_cvttf.php(24): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmphr_cvttf.php(28): candidate(Array)\n#2 /tmp/tmphr_cvttf.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmphr_cvttf.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate Median Absolute Deviation\naround the median\
    \ of this dataset.\nMedian Absolute Deviation is the median of the absolute difference\
    \ between\neach element and a centerpoint (median in this case):\nMAD = median\
    \ | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n\
    1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle numbers.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle numbers.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp205j1lz9.php:10\n\
    Stack trace:\n#0 /tmp/tmp205j1lz9.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp205j1lz9.php(26): candidate(Array)\n#2 /tmp/tmp205j1lz9.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp205j1lz9.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the mean of the dataset.\n\
    The mean is the sum of all the elements divided by the number of elements.\n>>>\
    \ mean(array(1.0, 2.0, 3.0, 4.0))\n2.5 */\nfunction candidate(...$args) {\n  \
    \  return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpchf7lav8.php:10\n\
    Stack trace:\n#0 /tmp/tmpchf7lav8.php(23): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpchf7lav8.php(27): candidate(Array)\n#2 /tmp/tmpchf7lav8.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpchf7lav8.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median absolute\ndeviation around the median of this dataset.\n\
    Median Absolute Deviation is the median of the absolute difference between\neach\
    \ element and a centerpoint (median in this case):\nMAD = median | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpzy_7vbsq.php:10\n\
    Stack trace:\n#0 /tmp/tmpzy_7vbsq.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpzy_7vbsq.php(30): candidate(Array)\n#2 /tmp/tmpzy_7vbsq.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzy_7vbsq.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $absolute_deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf there are two middle numbers,\
    \ the median is the mean of those two.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpe2r1621u.php:10\n\
    Stack trace:\n#0 /tmp/tmpe2r1621u.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpe2r1621u.php(30): candidate(Array)\n#2 /tmp/tmpe2r1621u.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe2r1621u.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ difference between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\nIf the list is even, the mean of the two middle\
    \ numbers is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n>>> median(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the median.\nThe median is the middle value of a dataset, sorted in\
    \ ascending order.\nIf the dataset is even-length, the average of the two middle\
    \ values is\nreturned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpn6loq_2b.php:10\n\
    Stack trace:\n#0 /tmp/tmpn6loq_2b.php(25): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpn6loq_2b.php(29): candidate(Array)\n#2 /tmp/tmpn6loq_2b.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn6loq_2b.php on line 10\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the Median Absolute\nDeviation around the median of this dataset.\n\
    Median Absolute Deviation is the median of the absolute differences between\n\
    each element and a centerpoint (median in this case):\nMAD = median | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpelv1y89a.php:10\n\
    Stack trace:\n#0 /tmp/tmpelv1y89a.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpelv1y89a.php(30): candidate(Array)\n#2 /tmp/tmpelv1y89a.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpelv1y89a.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ in a sorted list of numbers.\nIf the list has an even number of elements, the\
    \ median is the average of the\ntwo middle elements.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ of a sorted array. If the array has an\neven number of elements, the median\
    \ is the average of the two middle\nelements.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$deviations = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\t$deviations[] = abs($number - $mean);\n\t}\n\treturn mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf there are two middle numbers,\
    \ the median is the mean of those two.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpzrw1jfku.php:10\n\
    Stack trace:\n#0 /tmp/tmpzrw1jfku.php(24): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpzrw1jfku.php(28): candidate(Array)\n#2 /tmp/tmpzrw1jfku.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzrw1jfku.php on line 10\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median of this dataset.\n\
    The median is the middle number of a sorted list of numbers.\nIf the list is even,\
    \ the average of the two middle numbers is returned.\n>>> median(array(1.0, 2.0,\
    \ 3.0, 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmph5axmiet.php:10\n\
    Stack trace:\n#0 /tmp/tmph5axmiet.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmph5axmiet.php(30): candidate(Array)\n#2 /tmp/tmph5axmiet.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmph5axmiet.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median.\nThe median\
    \ is the middle number in a sorted list of numbers.\nIf the list is of even length,\
    \ the average of the two middle numbers is used.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmprkhfw3qf.php:10\n\
    Stack trace:\n#0 /tmp/tmprkhfw3qf.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmprkhfw3qf.php(30): candidate(Array)\n#2 /tmp/tmprkhfw3qf.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmprkhfw3qf.php on line 10\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    differences from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation.\nStandard deviation\
    \ is the square root of the average of the squared\ndeviations from the mean:\n\
    SD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median absolute\ndeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the median absolute\ndeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpz5rb8jss.php:10\n\
    Stack trace:\n#0 /tmp/tmpz5rb8jss.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpz5rb8jss.php(30): candidate(Array)\n#2 /tmp/tmpz5rb8jss.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz5rb8jss.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle number\
    \ in a sorted list of numbers.\nIf there are an even number of numbers, the median\
    \ is the mean of the two\nmiddle numbers.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n\
    2.5\n>>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the Median Absolute\nDeviation around the median of this dataset.\n\
    Median Absolute Deviation is the median of the absolute differences between\n\
    each element and a centerpoint (median in this case):\nMAD = median | x - x_median\
    \ |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))\n1.0*/\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpelv1y89a.php:10\n\
    Stack trace:\n#0 /tmp/tmpelv1y89a.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpelv1y89a.php(30): candidate(Array)\n#2 /tmp/tmpelv1y89a.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpelv1y89a.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the mean of the dataset.\n>>> mean(array(1.0,\
    \ 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\n>>> median(array(1.0, 2.0, 3.0,\
    \ 4.0))\n2.5*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpdzd7caoi.php:10\n\
    Stack trace:\n#0 /tmp/tmpdzd7caoi.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpdzd7caoi.php(26): candidate(Array)\n#2 /tmp/tmpdzd7caoi.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzd7caoi.php on line 10\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n\n/* For a given array of input numbers, calculate the Median Absolute\nDeviation\
    \ around the median of this dataset.\nMedian Absolute Deviation is the median\
    \ of the absolute differences between\neach element and a centerpoint (median\
    \ in this case):\nMAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp98e_4pn4.php:10\n\
    Stack trace:\n#0 /tmp/tmp98e_4pn4.php(26): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp98e_4pn4.php(30): candidate(Array)\n#2 /tmp/tmp98e_4pn4.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp98e_4pn4.php on line 10\n"
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average squared\
    \ deviation\nfrom the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.2909944487358056*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\n/* For a given array of input numbers, calculate\
    \ the median.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp1mulnn9n.php:10\n\
    Stack trace:\n#0 /tmp/tmp1mulnn9n.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp1mulnn9n.php(26): candidate(Array)\n#2 /tmp/tmp1mulnn9n.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1mulnn9n.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the Median Absolute\nDeviation around the\
    \ median of this dataset.\nMedian Absolute Deviation is the median of the absolute\
    \ differences between\neach element and a centerpoint (median in this case):\n\
    MAD = median | x - x_median |\n>>> median_absolute_deviation(array(1.0, 2.0, 3.0,\
    \ 4.0))\n1.0*/\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the median.\nThe median is the middle value\
    \ of a sorted list of numbers.\nIf the list is even-length, the average of the\
    \ two middle values is returned.\n>>> median(array(1.0, 2.0, 3.0, 4.0))\n2.5\n\
    >>> median(array(1.0, 2.0, 3.0, 4.0, 5.0))\n3.0*/\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n\n/* For a given array of input numbers,\
    \ calculate the mean of the dataset.\n>>> mean(array(1.0, 2.0, 3.0, 4.0))\n2.5*/\n\
    function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpq6gfp523.php:10\n\
    Stack trace:\n#0 /tmp/tmpq6gfp523.php(22): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpq6gfp523.php(26): candidate(Array)\n#2 /tmp/tmpq6gfp523.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6gfp523.php on line 10\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\naround the mean of this dataset.\nMean Absolute Deviation is the\
    \ average absolute difference between each\nelement and a centerpoint (mean in\
    \ this case):\nMAD = average | x - x_mean |\n>>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.0*/\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n\n/* For a given\
    \ array of input numbers, calculate the standard deviation\naround the mean of\
    \ this dataset.\nStandard deviation is the square root of the average of the squared\n\
    differences from the mean:\nSD = sqrt(average (x - x_mean)^2)\n>>> standard_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n1.29099444874*/\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777

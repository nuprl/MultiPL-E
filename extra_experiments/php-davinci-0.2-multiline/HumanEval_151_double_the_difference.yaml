name: HumanEval_151_double_the_difference
language: php
prompt: "<?php\n/* Given an array of numbers, return the sum of squares of the numbers\n\
  in the array that are odd. Ignore numbers that are negative or not integers.\n>>>\
  \ double_the_difference(array(1, 3, 2, 0))\n10\n>>> double_the_difference(array(-1,\
  \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n81\n>>> double_the_difference(array(0))\n\
  0\nIf the input array is empty, return 0.*/\nfunction double_the_difference($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return double_the_difference(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
  \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are\nodd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "\t$sum = 0;\n\tforeach ($lst as\
    \ $num) {\n\t\tif (is_int($num) && $num > 0) {\n\t\t\t$sum += pow($num, 2);\n\t\
    \t}\n\t}\n\treturn $sum;\n}\n\n/* Given an array of numbers, return the sum of\
    \ the two largest numbers.\n>>> sum_of_two_largest(array(1, 2, 3))\n5\n>>> sum_of_two_largest(array(1,\
    \ 2, 3, 4))\n7\n>>> sum_of_two_largest(array(1, 2))\n3\n>>> sum_of_two_largest(array(1))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $value) {\n        if (is_int($value) && $value > 0) {\n            $sum\
    \ += pow($value, 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of the numbers in the array\nthat are odd. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the numbers in the array that are odd.\nIgnore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num >= 0) {\n      $sum += $num ** 2;\n    }\n  }\n  return $sum;\n}", " \
    \   $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num\
    \ > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value)\
    \ && $value > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n\
    }", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ pow($item, 2);\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n   \
    \ foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n        \
    \    $sum += $num * $num;\n        }\n    }\n    return $sum;\n}", "    $sum =\
    \ 0;\n    foreach ($lst as $num) {\n        if ($num > 0 && is_int($num)) {\n\
    \            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}", " \
    \   $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num\
    \ > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of numbers, return the sum of the numbers in the array\n\
    that are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of strings, return the sum of the lengths of the\
    \ strings\nthat are anagrams of each other. Ignore strings that are not anagrams\
    \ of\neach other.\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\"))\n\
    6\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\"))\n6\n>>>\
    \ double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"cat\"))\n\
    12\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\"))\n12\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"\
    dog\", \"cat\", \"dog\", \"cat\"))\n18\n>>> double_the_difference(array(\"cat\"\
    , \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"))\n18\n>>> double_the_difference(array(\"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    ))\n24\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"dog\", \"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"))\n24\n>>> double_the_difference(array(\"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\", \"cat\"))\n30\n>>> double_the_difference(array(\"cat\", \"dog\", \"\
    cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\"\
    , \"dog\"))\n30\n>>> double_the_difference(array(\"cat\", \"dog\", \"cat\", \"\
    dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"\
    , \"cat\"))\n36\n>>> double_the_difference(array(\"cat\", \"", "    $sum = 0;\n\
    \    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n     \
    \       $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num %\
    \ 2 == 1 && is_int($num) && $num > 0) {\n            $sum += $num * $num;\n  \
    \      }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num)\
    \ {\n        if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n\
    \        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst as\
    \ $item) {\n        if (is_int($item) && $item > 0) {\n            $sum += $item\
    \ * $item;\n        }\n    }\n    return $sum;\n}", "    $odd_squares = array_filter($lst,\
    \ function($num) {\n        return is_int($num) && $num > 0 && $num % 2 == 1;\n\
    \    });\n    $sum = array_reduce($odd_squares, function($sum, $num) {\n     \
    \   return $sum + $num * $num;\n    }, 0);\n    return $sum * 2;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += pow($num, 2);\n        }\n    }\n    return $sum;\n}", "  $sum = 0;\n  foreach\
    \ ($lst as $num) {\n    if (is_int($num) && $num > 0) {\n      $sum += $num *\
    \ $num;\n    }\n  }\n  return $sum;\n}\n\n/* Given an array of numbers, return\
    \ the sum of squares of the numbers\nin the array that are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "\t$sum = 0;\n\tforeach ($lst as\
    \ $num) {\n\t\tif (is_int($num) && $num > 0) {\n\t\t\t$sum += pow($num, 2);\n\t\
    \t}\n\t}\n\treturn $sum;\n}\n\necho double_the_difference(array(1, 3, 2, 0));\n\
    echo double_the_difference(array(-1, -2, 0));\necho double_the_difference(array(9,\
    \ -2));\necho double_the_difference(array(0));", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n\
    /* Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num ** 2;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum\
    \ += $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of the numbers in the array that are odd.\nIgnore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array that are odd.\nIgnore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num)\
    \ && $num > 0) {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\
    \n/* Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}",
  "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of numbers, return the sum of the numbers in the array\n\
    that are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the numbers in the array\nthat are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given a list of\
    \ numbers, return the sum of the numbers in the list.\nIgnore all non-numeric\
    \ values in the list.\n>>> sum_of_numbers(array(1, 2, 3, 4, 5))\n15\n>>> sum_of_numbers(array(1,\
    \ 2, \"3\", 4, 5))\n12\n>>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\"))\n21\n\
    >>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\"))\n28\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\"))\n36\n>>> sum_of_numbers(array(1, 2, 3, 4,\
    \ 5, \"6\", \"7\", \"8\", \"9\"))\n45\n>>> sum_of_numbers(array(1, 2, 3, 4, 5,\
    \ \"6\", \"7\", \"8\", \"9\", \"10\"))\n55\n>>> sum_of_numbers(array(1, 2, 3,\
    \ 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"))\n66\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"))\n78\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"))\n91\n\
    >>> sum_of_numbers(array(1, 2, 3, 4, 5, \"6\", \"7\", \"8\", \"9\", \"10\", \"\
    11\", \"12\", \"13\", \"14\"))\n105\n>>> sum_of_numbers(array(1, 2, 3, 4, 5, \"\
    6\", \"7\", \"8\",", "    $sum = 0;\n    foreach ($lst as $num) {\n        if\
    \ (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n \
    \       if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n  \
    \      }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the\
    \ sum of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of squares of the numbers\nin the array that are\
    \ odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers in the\
    \ list.\nIgnore numbers that are negative or not integers.\n>>> sum_of_positive_numbers(array(1,\
    \ 3, 2, 0))\n6\n>>> sum_of_positive_numbers(array(-1, -2, 0))\n0\n>>> sum_of_positive_numbers(array(9,\
    \ -2))\n9\n>>> sum_of_positive_numbers(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += pow($num, 2);\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n \
    \   foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n      \
    \      $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of squares of the numbers\nin the array that are odd. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item >= 0 && $item % 2 == 1) {\n            $sum += $item * $item;\n   \
    \     }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the\
    \ sum of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "\t$sum = 0;\n\tforeach ($lst as\
    \ $value) {\n\t\tif (is_int($value) && $value > 0) {\n\t\t\t$sum += $value * $value;\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an array of numbers, return the sum\
    \ of the squares of all the numbers\nin the array that are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) &&\
    \ $num > 0) {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array that\n\
    are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n\
    /* Given a list of numbers, return the sum of the numbers in the list\nthat are\
    \ even. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n2\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n0\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $val) {\n    if (is_int($val) &&\
    \ $val > 0) {\n      $sum += $val * $val;\n    }\n  }\n  return $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value)\
    \ && $value > 0) {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n\
    }", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item)\
    \ && $item > 0) {\n      $sum += $item * $item;\n    }\n  }\n  return $sum;\n\
    }\n\n/* Given an array of numbers, return the sum of the numbers in the array\n\
    that are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num)\
    \ && $num > 0) {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\
    \n/* Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\necho double_the_difference(array(1,\
    \ 3, 2, 0));\necho double_the_difference(array(-1, -2, 0));\necho double_the_difference(array(9,\
    \ -2));\necho double_the_difference(array(0));", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n  \
    \  foreach ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n    \
    \        $sum += $item * $item;\n        }\n    }\n    return $sum;\n}", "\t$sum\
    \ = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num > 0) {\n\t\t\t\
    $sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}", "  $sum = 0;\n  foreach\
    \ ($lst as $num) {\n    if (is_int($num) && $num > 0) {\n      $sum += $num *\
    \ $num;\n    }\n  }\n  return $sum;\n}", "    $sum = 0;\n    foreach ($lst as\
    \ $item) {\n        if (is_int($item) && $item > 0) {\n            $sum += pow($item,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the two largest numbers.\n>>> sum_of_largest_two(array(1,\
    \ 2, 3))\n5\n>>> sum_of_largest_two(array(1, 2, 3, 4))\n7\n>>> sum_of_largest_two(array(1,\
    \ 2))\n3\n>>> sum_of_largest_two(array(1))\n0\nIf the input array is empty, return\
    \ 0.*/", "\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) &&\
    \ $value > 0) {\n\t\t\t$sum += pow($value, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\
    \n/* Given a string, return true if it is a palindrome, and false otherwise.\n\
    >>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"racecar\")\nTrue\n>>> is_palindrome(\"\")\n\
    True\n>>> is_palindrome(\"aabb\")\nFalse\n>>> is_palindrome(\"aabbaa\")\nTrue\n\
    >>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\")\n\
    False\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\nFalse\n>>> is_palindrome(\"aabbccbbaa\")\nTrue\n>>> is_palindrome(\"aabbccbbaaa\"\
    )\n", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of integers, return the sum of the integers that\
    \ are\nmultiples of 3 or 5, but not both.\n>>> sum_of_multiples(array(1, 3, 5,\
    \ 7, 9))\n8\n>>> sum_of_multiples(array(0, 3, 5, 7, 9))\n15\n>>> sum_of_multiples(array(0,\
    \ 0, 0, 0, 0))\n0\n>>> sum_of_multiples(array(1, 2, 3, 4, 5))\n0\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n33\n>>> sum_of_multiples(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n60\n>>> sum_of_multiples(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n78\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30))\n195\n>>> sum_of_multiples(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40))\n495\n>>> sum_of_multiples(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,", "    $sum = 0;\n    foreach ($lst as $num)\
    \ {\n        if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n\
    \        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst as\
    \ $num) {\n        if ($num % 2 != 0 && is_int($num) && $num > 0) {\n        \
    \    $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n\
    /* Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given a list of numbers, return the sum of the numbers in the\
    \ list\nthat are even. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n2\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n0\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given a string, return\
    \ the sum of the numbers appearing in the string,\n ignoring all other characters.\
    \ A number is a series of 1 or more digit chars\n in a row. (Note: Character.isDigit(char)\
    \ tests if a char is one of the chars\n '0', '1', .. '9'. Integer.parseInt(string)\
    \ converts a string to an int.)\n\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"\
    aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18\n*/", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n  \
    \  foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n       \
    \     $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array\nthat are odd. Ignore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum\
    \ += pow($item, 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of the numbers in the array\nthat are odd. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num)\
    \ && $num > 0) {\n\t\t\t$sum += pow($num, 2);\n\t\t}\n\t}\n\treturn $sum;\n}",
  "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a list of numbers, return the sum of the numbers that are even.\n\
    Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n2\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n0\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item >= 0 && $item % 2 == 1) {\n\
    \            $sum += $item * $item;\n        }\n    }\n    return $sum;\n}", " \
    \ $sum = 0;\n  foreach ($lst as $value) {\n    if (is_int($value) && $value >\
    \ 0) {\n      $sum += $value * $value;\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0) {\n            $sum += $value * $value;\n        }\n    }\n \
    \   return $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if\
    \ (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n \
    \       if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n  \
    \      }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return the\
    \ sum of the numbers in the array that are odd.\nIgnore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ pow($item, 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the numbers in the array\nthat are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ pow($item, 2);\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n   \
    \ foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n        \
    \    $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}", "    $sum\
    \ = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n\
    \            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array\nthat\
    \ are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "  $sum = 0;\n  foreach ($lst as\
    \ $num) {\n    if (is_int($num) && $num > 0) {\n      $sum += $num * $num;\n \
    \   }\n  }\n  return $sum;\n}", "    $sum = 0;\n    foreach ($lst as $item) {\n\
    \        if (is_int($item) && $item > 0) {\n            $sum += pow($item, 2);\n\
    \        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return\
    \ the sum of the numbers in the array that are odd.\nIgnore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n  \
    \  foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n       \
    \     $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\necho double_the_difference(array(1,\
    \ 3, 2, 0));\necho double_the_difference(array(-1, -2, 0));\necho double_the_difference(array(9,\
    \ -2));\necho double_the_difference(array(0));", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num >= 0 && $num % 2 == 1) {\n    \
    \        $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given\
    \ an array of numbers, return the sum of the numbers in the array that are odd.\n\
    Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n    if ($num > 0 && $num\
    \ % 2 == 1) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/*\
    \ Given a list of numbers, return the sum of the numbers in the list\nthat are\
    \ between 1 and 10, inclusive. Ignore all other numbers.\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1))\n55\n>>> sum_of_numbers_between_1_and_10(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, 0))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1))\n55\n>>> sum_of_numbers_between_1_and_10(array(0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, 0))\n55\n>>> sum_of_numbers_between_1_and_10(array(0))\n\
    0\n>>> sum_of_numbers_between_1_and_10(array(11))\n0\n>>> sum_of_numbers_between_1_and_10(",
  "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num >=\
    \ 0) {\n            if ($num % 2 != 0) {\n                $sum += $num * $num;\n\
    \            }\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum\
    \ += $item * $item;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n\
    \    foreach ($lst as $i) {\n        if (is_int($i) && $i > 0) {\n           \
    \ $sum += $i * $i;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n \
    \   foreach ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n   \
    \         $sum += $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of squares of the numbers\nin the\
    \ array that are odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "\t$sum = 0;\n\tforeach ($lst\
    \ as $num) {\n\t\tif (is_int($num) && $num > 0) {\n\t\t\t$sum += $num * $num;\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an array of numbers, return the sum\
    \ of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the squares of the numbers\nin the array that are\
    \ odd. Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num\
    \ % 2 != 0 && is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n\
    \        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers, return\
    \ the sum of squares of the numbers\nin the array that are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n10\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n81\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "\t$sum = 0;\n\tforeach ($lst\
    \ as $value) {\n\t\tif (is_int($value) && $value > 0) {\n\t\t\t$sum += pow($value,\
    \ 2);\n\t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an array of numbers, return the\
    \ sum of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "\t$sum = 0;\n\tforeach ($lst as\
    \ $value) {\n\t\tif (is_int($value) && $value > 0) {\n\t\t\t$sum += $value * $value;\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n\n/* Given an array of numbers, return the sum\
    \ of the numbers in the array that are odd.\nIgnore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ $item * $item;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the numbers in the array\nthat are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) &&\
    \ $num > 0) {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}", " \
    \   $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num\
    \ > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) &&\
    \ $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}", " \
    \ $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0) {\n\
    \      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}", "    $sum = 0;\n\
    \    foreach ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n  \
    \          $sum += pow($item, 2);\n        }\n    }\n    return $sum;\n}", " \
    \   $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num\
    \ > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of numbers, return the sum of the numbers in the array\
    \ that are odd.\nIgnore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}", "  $sum = 0;\n  foreach ($lst as\
    \ $num) {\n    if (is_int($num) && $num > 0) {\n      $sum += $num * $num;\n \
    \   }\n  }\n  return $sum;\n}\n\n/* Given an array of numbers, return the sum\
    \ of the numbers in the array\nthat are odd. Ignore numbers that are negative\
    \ or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of numbers,\
    \ return the sum of the numbers in the array\nthat are odd. Ignore numbers that\
    \ are negative or not integers.\n>>> double_the_difference(array(1, 3, 2, 0))\n\
    4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "  $sum = 0;\n  foreach ($lst as\
    \ $num) {\n    if (is_int($num) && $num > 0) {\n      $sum += $num * $num;\n \
    \   }\n  }\n  return $sum;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n   \
    \ if (is_int($num) && $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum\
    \ += pow($item, 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of the numbers in the array\nthat are odd. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) &&\
    \ $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}\n\n/*\
    \ Given an array of numbers, return the sum of the numbers in the array that are\
    \ odd.\nIgnore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array\nthat are odd. Ignore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if ($num > 0 && $num % 2 == 1) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum;\n}\n\n/* Given an array\
    \ of numbers, return the sum of the numbers in the array\nthat are odd. Ignore\
    \ numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) &&\
    \ $num > 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n}", " \
    \ $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item > 0)\
    \ {\n      $sum += pow($item, 2);\n    }\n  }\n  return $sum;\n}\n\n/* Given an\
    \ array of numbers, return the sum of the numbers in the array\nthat are odd.\
    \ Ignore numbers that are negative or not integers.\n>>> double_the_difference(array(1,\
    \ 3, 2, 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\n/* Given an array of numbers, return the sum of the numbers\
    \ in the array that are odd.\nIgnore numbers that are negative or not integers.\n\
    >>> double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/", "    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        if (is_int($item) && $item > 0) {\n            $sum +=\
    \ pow($item, 2);\n        }\n    }\n    return $sum;\n}\n\n/* Given an array of\
    \ numbers, return the sum of the numbers in the array\nthat are odd. Ignore numbers\
    \ that are negative or not integers.\n>>> double_the_difference(array(1, 3, 2,\
    \ 0))\n4\n>>> double_the_difference(array(-1, -2, 0))\n0\n>>> double_the_difference(array(9,\
    \ -2))\n9\n>>> double_the_difference(array(0))\n0\nIf the input array is empty,\
    \ return 0.*/", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\n/* Given an array of numbers, return the sum of the numbers in the\
    \ array that are odd.\nIgnore numbers that are negative or not integers.\n>>>\
    \ double_the_difference(array(1, 3, 2, 0))\n4\n>>> double_the_difference(array(-1,\
    \ -2, 0))\n0\n>>> double_the_difference(array(9, -2))\n9\n>>> double_the_difference(array(0))\n\
    0\nIf the input array is empty, return 0.*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

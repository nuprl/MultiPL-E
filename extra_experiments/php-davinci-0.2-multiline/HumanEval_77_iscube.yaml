name: HumanEval_77_iscube
language: php
prompt: "<?php\n/* Write a function that takes an integer a and returns true \nif\
  \ this ingeger is a cube of some integer number.\nNote: you may assume the input\
  \ is always valid.\nExamples:\n>>> iscube(1)\ntrue\n>>> iscube(2)\nfalse\n>>> iscube(-1)\n\
  true\n>>> iscube(64)\ntrue\n>>> iscube(0)\ntrue\n>>> iscube(180)\nfalse*/\nfunction\
  \ iscube($a) {\n"
tests: "function candidate(...$args) {\n    return iscube(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(-1) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(64) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(180) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1000) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(0) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1729)\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $b = sqrt($a);\n  if ($b == round($b)) {\n    $c = sqrt($b);\n  \
    \  if ($c == round($c)) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b =\
    \ 0;\n\twhile ($b * $b * $b < abs($a)) {\n\t\t$b++;\n\t}\n\treturn $b * $b * $b\
    \ == abs($a);\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/* Write a function\
    \ that takes an integer a and returns true \nif this ingeger is a square of some\
    \ integer number.\nNote: you may assume the input is always valid.\nExamples:\n\
    >>> issquare(1)\ntrue\n>>> issquare(2)\nfalse\n>>> issquare(-1)\ntrue\n>>> issquare(64)\n\
    true\n>>> issquare(0)\ntrue\n>>> issquare(180)\nfalse*/", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  for ($i = 1; $i <= $a; $i++) {\n        if ($i * $i * $i == $a) {\n       \
    \     return true;\n        }\n    }\n    return false;\n}", "\t$b = sqrt($a);\n\
    \tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\tif ($c == round($c)) {\n\t\t\
    \treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\tif\
    \ ($a == 0) {\n\t\treturn true;\n\t}\n\telse {\n\t\t$b = abs($a);\n\t\tfor ($i\
    \ = 1; $i <= $b; $i++) {\n\t\t\tif ($i*$i*$i == $b) {\n\t\t\t\treturn true;\n\t\
    \t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\tif ($a < 0) {\n\t\t\
    $b = -$a;\n\t}\n\tif ($b == 0) {\n\t\treturn true;\n\t}\n\t$c = 1;\n\twhile ($c\
    \ * $c * $c < $b) {\n\t\t$c++;\n\t}\n\tif ($c * $c * $c == $b) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\
    \t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\t$c = $b * $b * $b;\n\tif ($c == $a) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b\
    \ = pow($a, 1/3);\n\tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $x = 1;\n    while ($x\
    \ * $x * $x < $a) {\n        $x++;\n    }\n    if ($x * $x * $x == $a) {\n   \
    \     return true;\n    }\n    return false;\n}", "    if ($a == 0) {\n      \
    \  return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i =\
    \ 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n  \
    \          return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn\
    \ true;\n\t}\n\tfor ($i = 1; $i < $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\
    \t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \tif ($b == round($b)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\
    \t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0)\
    \ {\n\t\t$c++;\n\t\t$b = $b / 2;\n\t}\n\t$d = pow(2, $c);\n\tif ($d == $a) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a\
    \ == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n        $x++;\n    }\n \
    \   if ($x * $x * $x == $a) {\n        return true;\n    }\n    return false;\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif($a == 0) {\n\t\treturn true;\n\t}\n\t$b = abs($a);\n\t$c\
    \ = round(pow($b, 1/3));\n\tif($c * $c * $c == $b) {\n\t\treturn true;\n\t}\n\t\
    return false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\t$c = $b * $b * $b;\n\tif ($c == $a) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b\
    \ = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif\
    \ ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\treturn $a == pow(round(pow($a, 1/3)), 3);\n}", "\t$b = sqrt($a);\n\
    \t$c = sqrt($b);\n\tif ($c == round($c)) {\n\t\treturn true;\n\t}\n\telse {\n\t\
    \treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\treturn $a == pow(round(pow($a,\
    \ 1/3)), 3);\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\t$c = $b * $b * $b;\n\tif\
    \ ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "    if ($a == 0) {\n        return true;\n    }\n    if ($a\
    \ < 0) {\n        $a = -$a;\n    }\n    for ($i = 1; $i < $a; $i++) {\n      \
    \  if ($i * $i * $i == $a) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "\t$c = 0;\n\t$b = 0;\n\twhile ($c < $a) {\n\t\
    \t$c = $b * $b * $b;\n\t\t$b++;\n\t}\n\tif ($c == $a) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b = sqrt($a);\n\tif\
    \ ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn\
    \ $a == pow(round(pow($a, 1/3)), 3);\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\t$a = abs($a);\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t\
    }\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i\
    \ == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\t}\n\t\
    else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\treturn $a == 0 ? true\
    \ : $a > 0 ? (int)pow($a, 1/3) == pow($a, 1/3) : (int)pow(abs($a), 1/3) == pow(abs($a),\
    \ 1/3);\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$c = round(pow($a, 1/3));\n\tif ($c * $c * $c == $a) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\
    \tif ($a < 0) {\n\t\t$b = -$a;\n\t}\n\t$c = pow($b, 1/3);\n\tif ($c == round($c))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$x =\
    \ $a;\n\tif ($x < 0) {\n\t\t$x = -$x;\n\t}\n\tif ($x == 0) {\n\t\treturn true;\n\
    \t}\n\tfor ($i = 1; $i <= $x; $i++) {\n\t\tif ($i * $i * $i == $x) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\t$b = abs($a);\n\t$c = round(pow($b, 1/3));\n\tif ($c * $c * $c == $b) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn $a == 0 ? true : $a > 0\
    \ ? is_int(pow($a, 1/3)) : is_int(pow(abs($a), 1/3));\n}", "\tif ($a < 0) {\n\t\
    \t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$i = 1;\n\twhile\
    \ ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) .\
    \ \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n   \
    \ while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n          \
    \  return true;\n        }\n        $i++;\n    }\n    return false;\n}", "\t$i\
    \ = 1;\n\twhile ($i*$i*$i < $a) {\n\t\t$i++;\n\t}\n\tif ($i*$i*$i == $a) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b\
    \ = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\t$a = abs($a);\n\t$i = 1;\n\twhile ($i*$i*$i\
    \ < $a) {\n\t\t$i++;\n\t}\n\tif ($i*$i*$i == $a) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\t$c = sqrt($b);\n\
    \tif ($c == round($c)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho iscube(1).\"\\n\";\necho iscube(2).\"\\n\";\necho iscube(-1).\"\\n\"\
    ;\necho iscube(64).\"\\n\";\necho iscube(0).\"\\n\";\necho iscube(180).\"\\n\"\
    ;", "    if ($a == 0) {\n        return true;\n    }\n    $a = abs($a);\n    $i\
    \ = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n\
    \            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n\n/*\n * Test code\n */\nvar_dump(iscube(1));\nvar_dump(iscube(2));\nvar_dump(iscube(-1));\n\
    var_dump(iscube(64));\nvar_dump(iscube(0));\nvar_dump(iscube(180));", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i\
    \ = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\
    \t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\t$c = 0;\n\twhile ($b\
    \ > 0) {\n\t\t$c++;\n\t\t$b = $b / 2;\n\t}\n\t$d = pow(2, $c);\n\tif ($d == $a)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"<br>\";\necho iscube(2) . \"<br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64)\
    \ . \"<br>\";\necho iscube(0) . \"<br>\";\necho iscube(180) . \"<br>\";", "\t\
    if ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\t\
    return true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn\
    \ $a == 0 || $a == 1 || $a == -1 || $a == 64 || $a == -64 ? true : false;\n}\n\
    echo iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\t\t$c++;\n\t\t\
    $b = $b / 2;\n\t}\n\t$c = pow(2, $c);\n\t$d = $c;\n\twhile ($d * $c <= $a) {\n\
    \t\t$d = $d * $c;\n\t}\n\tif ($d == $a) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif\
    \ ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\
    \t\t$a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i ==\
    \ $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a,\
    \ 1/3));\n\tif($b * $b * $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$x = 1;\n\twhile ($x * $x * $x < $a) {\n\t\t$x++;\n\t}\n\tif\
    \ ($x * $x * $x == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b =\
    \ round(pow($a, 1/3));\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t}\n\t\
    return false;\n}", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\
    \t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i\
    \ * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}",
  "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n\
    \        return true;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \t$c = sqrt($b);\n\tif ($c == round($c)) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\necho iscube(1) . \"<br>\";\necho iscube(2) . \"<br>\";\n\
    echo iscube(-1) . \"<br>\";\necho iscube(64) . \"<br>\";\necho iscube(0) . \"\
    <br>\";\necho iscube(180) . \"<br>\";", "\t$b = pow($a, 1/3);\n\tif (is_int($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\t\
    return true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = pow($b, 3);\n\tif ($c == $a) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b = $a;\n\twhile ($b\
    \ > 0) {\n\t\tif ($b % 3 == 0) {\n\t\t\t$b = $b / 3;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif (is_int($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"<br>\";\necho iscube(2) . \"<br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64)\
    \ . \"<br>\";\necho iscube(0) . \"<br>\";\necho iscube(180) . \"<br>\";", "\t\
    if ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t\
    $i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \tif ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t\
    if ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i\
    \ * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n \
    \       $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n    \
    \    if ($i * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\\
    n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) .\
    \ \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a, 1/3));\n\tif ($b\
    \ * $b * $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n        $x++;\n    }\n \
    \   if ($x * $x * $x == $a) {\n        return true;\n    }\n    return false;\n\
    }", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$a = abs($a);\n\t$n = 1;\n\twhile\
    \ ($n * $n * $n < $a) {\n\t\t$n++;\n\t}\n\tif ($n * $n * $n == $a) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "   \
    \ if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a =\
    \ -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i *\
    \ $i * $i == $a) {\n            return true;\n        }\n        $i++;\n    }\n\
    \    return false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a, 1/3));\n\tif ($b * $b\
    \ * $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) .\
    \ \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = $b * $b * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b = sqrt($a);\n\t$c\
    \ = $b * $b * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\t$c = 0;\n\twhile ($c*$c*$c < abs($a))\
    \ {\n\t\t$c++;\n\t}\n\tif ($c*$c*$c != abs($a)) {\n\t\treturn false;\n\t} else\
    \ {\n\t\treturn true;\n\t}\n}\necho iscube(1);\necho \"\\n\";\necho iscube(2);\n\
    echo \"\\n\";\necho iscube(-1);\necho \"\\n\";\necho iscube(64);\necho \"\\n\"\
    ;\necho iscube(0);\necho \"\\n\";\necho iscube(180);\necho \"\\n\";", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i =\
    \ 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    if ($a == 0) {\n        return true;\n \
    \   }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}", "    $x = pow($a, 1/3);\n    if (is_int($x)) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho iscube(1) . PHP_EOL;\necho\
    \ iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\n\
    echo iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "\tif ($a == 0) {\n\t\
    \treturn true;\n\t}\n\t$b = abs($a);\n\t$c = round(pow($b, 1/3));\n\tif ($c *\
    \ $c * $c == $b) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = round($b);\n\tif ($c * $c * $c == $a) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\tif($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor($i\
    \ = 1; $i <= $a; $i++) {\n\t\tif($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\
    \t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <=\
    \ $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\necho iscube(1) . \"<br>\";\necho iscube(2) . \"<br>\";\n\
    echo iscube(-1) . \"<br>\";\necho iscube(64) . \"<br>\";\necho iscube(0) . \"\
    <br>\";\necho iscube(180) . \"<br>\";", "\treturn is_int(pow($a, 1/3));\n}\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\
    \t\t$a = -$a;\n\t}\n\t$b = round(pow($a, 1/3));\n\tif (pow($b, 3) == $a) {\n\t\
    \treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    } elseif ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while\
    \ ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return\
    \ true;\n        }\n        $i++;\n    }\n    return false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i =\
    \ 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    return $a\
    \ == 0 || $a == 1 || $a == -1 || $a == 64 || $a == -64;\n}", "    if ($a == 0)\
    \ {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n\
    \    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = $a;\n\twhile ($b > 0) {\n\t\tif ($b % 3 == 0) {\n\t\t\t\
    $b = $b / 3;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    $i = 0;\n    while ($i * $i * $i <= abs($a)) {\n        if\
    \ ($i * $i * $i == abs($a)) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\necho iscube(1) . \"<br>\";\necho iscube(2) . \"\
    <br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64) . \"<br>\";\necho iscube(0)\
    \ . \"<br>\";\necho iscube(180) . \"<br>\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <=\
    \ $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn false;\n}", "    if ($a == 0) {\n        return true;\n    }\n \
    \   if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i *\
    \ $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n \
    \       }\n        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn\
    \ is_int(pow($a, 1/3));\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\t$b = 0;\n\twhile ($b\
    \ * $b * $b < abs($a)) {\n\t\t$b++;\n\t}\n\treturn $b * $b * $b == abs($a);\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "    $b = pow($a, 1/3);\n    if (is_int($b))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "    if ($a == 0) {\n        return true;\n    }\n    if ($a\
    \ < 0) {\n        $a = -$a;\n    }\n    $b = round(pow($a, 1/3));\n    if ($b\
    \ * $b * $b == $a) {\n        return true;\n    }\n    return false;\n}\n\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$a = abs($a);\n\t$b = round(pow($a,\
    \ 1/3));\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\tfor ($i = 1; $i < $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\
    \t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a ==\
    \ 0) {\n\t\treturn true;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= abs($a)) {\n\
    \t\tif ($i * $i * $i == abs($a)) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\
    \treturn false;\n}", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\
    \t\t$a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i ==\
    \ $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1) .\
    \ PHP_EOL;\necho iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64)\
    \ . PHP_EOL;\necho iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    if ($a == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\t\
    if ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    \necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i\
    \ == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "    return ($a == 0) ? true : (pow($a, 1/3) == round(pow($a, 1/3)));\n\
    }", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\
    \t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "    if($a\
    \ == 0) {\n        return true;\n    }\n    if($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while($i * $i * $i <= $a) {\n        if($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\necho iscube(1) . \"<br>\";\necho iscube(2) . \"<br>\";\necho iscube(-1)\
    \ . \"<br>\";\necho iscube(64) . \"<br>\";\necho iscube(0) . \"<br>\";\necho iscube(180)\
    \ . \"<br>\";", "\treturn $a == 0 || $a == 1 || $a == -1 || $a == 64 || $a ==\
    \ -64 ? true : false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\"\
    ;\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\
    \\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $b = round(pow($a, 1/3));\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "\t$cube = round(pow($a, 1/3));\n\tif ($cube\
    \ * $cube * $cube == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$x = 1;\n\twhile ($x * $x * $x < $a) {\n\
    \t\t$x++;\n\t}\n\tif ($x * $x * $x == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Write a function that takes an integer a and returns true \nif this ingeger\
    \ is a square of some integer number.\nNote: you may assume the input is always\
    \ valid.\nExamples:\n>>> issquare(1)\ntrue\n>>> issquare(2)\nfalse\n>>> issquare(-1)\n\
    true\n>>> issquare(64)\ntrue\n>>> issquare(0)\ntrue\n>>> issquare(180)\nfalse*/",
  "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i = 0; $i <= $a; $i++) {\n\t\tif ($i\
    \ * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "\treturn is_int(pow($a, 1/3));\n}\n\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\t$c\
    \ = $a;\n\t$b = 0;\n\twhile ($c > 0) {\n\t\t$b++;\n\t\t$c = $c - $b;\n\t}\n\t\
    if ($c == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\
    \t\tif ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\
    \t\t$c++;\n\t\t$b = $b / 2;\n\t}\n\t$c = pow(2, $c);\n\t$d = 0;\n\twhile ($c >\
    \ 0) {\n\t\t$d++;\n\t\t$c = $c / 2;\n\t}\n\t$d = pow(2, $d);\n\t$e = $d * $d *\
    \ $d;\n\tif ($e == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho iscube(1);\necho \"<br>\";\necho iscube(2);\necho \"<br>\";\necho iscube(-1);\n\
    echo \"<br>\";\necho iscube(64);\necho \"<br>\";\necho iscube(0);\necho \"<br>\"\
    ;\necho iscube(180);\necho \"<br>\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = sqrt($b);\n\tif ($c == round($c)) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\t\
    return true;\n\t}\n\t$a = abs($a);\n\t$b = pow($a, 1/3);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\tif ($c == round($c)) {\n\t\t\
    \treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1) . PHP_EOL;\necho\
    \ iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\n\
    echo iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a)\
    \ {\n        if ($i * $i * $i == $a) {\n            return true;\n        }\n\
    \        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn is_int(cbrt($a));\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t\
    if ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\
    \t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif($a==0)\n\t\treturn true;\n\tif($a<0)\n\t\t$a=-$a;\n\t$x=round(pow($a,1/3));\n\
    \tif($x*$x*$x==$a)\n\t\treturn true;\n\telse\n\t\treturn false;\n}", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b =\
    \ 1;\n\twhile ($b * $b * $b < $a) {\n\t\t$b++;\n\t}\n\tif ($b * $b * $b == $a)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    $b = sqrt($a);\n\
    \    $c = round($b);\n    if ($c * $c * $c == $a) {\n        return true;\n  \
    \  } else {\n        return false;\n    }\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\treturn\
    \ is_int(pow($a, 1/3));\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\\
    n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) .\
    \ \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\twhile ($b >= 1) {\n\t\
    \tif ($b == 1) {\n\t\t\treturn true;\n\t\t}\n\t\tif ($b % 3 == 0) {\n\t\t\t$b\
    \ = $b / 3;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i\
    \ == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}", "\t\
    $b = sqrt($a);\n\t$c = sqrt($b);\n\tif ($c == floor($c)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho \"<br>\";\necho iscube(2);\n\
    echo \"<br>\";\necho iscube(-1);\necho \"<br>\";\necho iscube(64);\necho \"<br>\"\
    ;\necho iscube(0);\necho \"<br>\";\necho iscube(180);\necho \"<br>\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = abs($a);\n\
    \    }\n    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n       \
    \ return true;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\
    \t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile\
    \ ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\
    \t}\n\t\t$i++;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $x = 0;\n   \
    \ while ($x * $x * $x < $a) {\n        $x++;\n    }\n    if ($x * $x * $x == $a)\
    \ {\n        return true;\n    }\n    return false;\n}", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\t$b = $a;\n\twhile ($b > 0) {\n\t\tif ($b\
    \ == 1) {\n\t\t\treturn true;\n\t\t}\n\t\t$b = $b / 3;\n\t}\n\treturn false;\n\
    }\necho iscube(1);\necho \"\\n\";\necho iscube(2);\necho \"\\n\";\necho iscube(-1);\n\
    echo \"\\n\";\necho iscube(64);\necho \"\\n\";\necho iscube(0);\necho \"\\n\"\
    ;\necho iscube(180);\necho \"\\n\";", "    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    if ($a == 0) {\n        return true;\n    }\n    $i = 1;\n    while\
    \ ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return\
    \ true;\n        }\n        $i++;\n    }\n    return false;\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = abs($a);\n\
    \    }\n    $b = 1;\n    while ($b * $b * $b < $a) {\n        $b++;\n    }\n \
    \   if ($b * $b * $b == $a) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return true;\n \
    \   } elseif ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\necho iscube(1) . '<br>';\n\
    echo iscube(2) . '<br>';\necho iscube(-1) . '<br>';\necho iscube(64) . '<br>';\n\
    echo iscube(0) . '<br>';\necho iscube(180) . '<br>';", "\t$b = sqrt($a);\n\tif\
    \ (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$result = false;\n\tif ($a == 0) {\n\t\t$result = true;\n\
    \t} elseif ($a > 0) {\n\t\t$result = is_int(pow($a, 1/3));\n\t} else {\n\t\t$result\
    \ = is_int(pow(abs($a), 1/3));\n\t}\n\treturn $result;\n}\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n       \
    \ return true;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn $a == pow(round(pow($a,\
    \ 1/3)), 3);\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\tif ($a < 0) {\n\t\t$b = -$a;\n\
    \t}\n\t$c = round(pow($b, 1/3));\n\tif ($c * $c * $c == $b) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\"\
    ;\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\
    \\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i\
    \ * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n   \
    \ }\n    return false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\"\
    ;\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\
    \\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif($a==0)\
    \ {\n\t\treturn true;\n\t}\n\tif($a<0) {\n\t\t$a=-$a;\n\t}\n\t$i=1;\n\twhile($i*$i*$i<=$a)\
    \ {\n\t\tif($i*$i*$i==$a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\
    \tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\
    \t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    $i = 1;\n\
    \    while ($i * $i * $i <= abs($a)) {\n        if ($i * $i * $i == abs($a)) {\n\
    \            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\treturn $a == pow(round(pow($a, 1/3)), 3);\n\
    }", "    return $a == 0 || $a == 1 || $a == -1 || $a == 64 || $a == -64;\n}\n\n\
    /* Write a function that takes an integer a and returns true \nif this ingeger\
    \ is a square of some integer number.\nNote: you may assume the input is always\
    \ valid.\nExamples:\n>>> issquare(1)\ntrue\n>>> issquare(2)\nfalse\n>>> issquare(-1)\n\
    true\n>>> issquare(64)\ntrue\n>>> issquare(0)\ntrue\n>>> issquare(180)\nfalse*/",
  "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    for ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) .\
    \ \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t\
    }\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\
    \t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i*$i*$i < $a) {\n\t\t$i++;\n\t}\n\tif ($i*$i*$i\
    \ == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Write a function that\
    \ takes an integer a and returns true \nif this ingeger is a square of some integer\
    \ number.\nNote: you may assume the input is always valid.\nExamples:\n>>> issquare(1)\n\
    true\n>>> issquare(2)\nfalse\n>>> issquare(-1)\ntrue\n>>> issquare(64)\ntrue\n\
    >>> issquare(0)\ntrue\n>>> issquare(180)\nfalse*/", "\t$a = abs($a);\n\t$b = round(pow($a,\
    \ 1/3));\n\treturn $a == pow($b, 3);\n}\n\necho iscube(1) . \"<br>\";\necho iscube(2)\
    \ . \"<br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64) . \"<br>\";\necho\
    \ iscube(0) . \"<br>\";\necho iscube(180) . \"<br>\";", "\tif ($a == 0) {\n\t\t\
    return true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$x = 1;\n\twhile ($x\
    \ * $x * $x < $a) {\n\t\t$x++;\n\t}\n\tif ($x * $x * $x == $a) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif\
    \ ($a == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif\
    \ ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\
    \t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}\necho iscube(1).\"\
    \\n\";\necho iscube(2).\"\\n\";\necho iscube(-1).\"\\n\";\necho iscube(64).\"\\\
    n\";\necho iscube(0).\"\\n\";\necho iscube(180).\"\\n\";", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\t$c = sqrt($b);\n\tif ($c == round($c)) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho\
    \ iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\t$b = sqrt($a);\n\tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "    return $a == pow(round(pow($a, 1/3)),\
    \ 3);\n}", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a =\
    \ -$a;\n\t}\n\t$x = 1;\n\twhile ($x * $x * $x < $a) {\n\t\t$x++;\n\t}\n\tif ($x\
    \ * $x * $x == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho iscube(1)\
    \ . \"<br>\";\necho iscube(2) . \"<br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64)\
    \ . \"<br>\";\necho iscube(0) . \"<br>\";\necho iscube(180) . \"<br>\";", "\t\
    return $a == 0 || $a == 1 || $a == -1 || $a == 64 || $a == -64;\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\n/*\n * Testing\n */\nvar_dump(iscube(1));\nvar_dump(iscube(2));\n\
    var_dump(iscube(-1));\nvar_dump(iscube(64));\nvar_dump(iscube(0));\nvar_dump(iscube(180));",
  "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    for ($i = 1; $i <= $a; $i++) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\
    \t\t\treturn true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}", "\tif ($a == 0)\
    \ {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a,\
    \ 1/3));\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$x =\
    \ 1;\n\twhile ($x * $x * $x < $a) {\n\t\t$x++;\n\t}\n\tif ($x * $x * $x == $a)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}", "\t$b = sqrt($a);\n\t$c = $b\
    \ * $b * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "\t$b = sqrt($a);\n\t$c = sqrt($b);\n\tif\
    \ ($c == round($c)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i =\
    \ 0;\n\twhile ($i * $i * $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t\t$i++;\n\t}\n\treturn false;\n}", "    if ($a == 0) {\n   \
    \     return true;\n    }\n    if ($a < 0) {\n        $a = abs($a);\n    }\n \
    \   $x = 1;\n    while ($x * $x * $x < $a) {\n        $x++;\n    }\n    if ($x\
    \ * $x * $x == $a) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a\
    \ == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a)\
    \ {\n        if ($i * $i * $i == $a) {\n            return true;\n        }\n\
    \        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \t$c = sqrt($b);\n\tif ($c == round($c)) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho\
    \ iscube(64);\necho iscube(0);\necho iscube(180);", "\t$a = abs($a);\n\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i*$i*$i\
    \ == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n       \
    \ return true;\n    }\n    return false;\n}\n\n/*\nWrite a function that takes\
    \ an integer a and returns true if this integer is a square of some integer number.\n\
    Note: you may assume the input is always valid.\nExamples:\n>>> issquare(1)\n\
    true\n>>> issquare(2)\nfalse\n>>> issquare(-1)\ntrue\n>>> issquare(64)\ntrue\n\
    >>> issquare(0)\ntrue\n>>> issquare(180)\nfalse\n*/", "\t$b = sqrt($a);\n\tif\
    \ ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "\t$i = 1;\n\twhile ($i*$i*$i < $a) {\n\t\t\
    $i++;\n\t}\n\tif ($i*$i*$i == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}", "\tif ($a == 0) {\n\t\
    \treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = abs($a);\n\t}\n\t$i = 1;\n\twhile\
    \ ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) .\
    \ \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn $a == pow(round(pow($a,\
    \ 1/3)), 3);\n}", "\treturn is_int(pow($a, 1/3));\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "   \
    \ if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a =\
    \ -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i *\
    \ $i * $i == $a) {\n            return true;\n        }\n        $i++;\n    }\n\
    \    return false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "    $i = 1;\n    while ($i * $i * $i <= abs($a))\
    \ {\n        if ($i * $i * $i == abs($a)) {\n            return true;\n      \
    \  }\n        $i++;\n    }\n    return false;\n}", "\t$b = sqrt($a);\n\t$c = $b\
    \ * $b * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif($a == 0) {\n\t\treturn true;\n\t}\n\tif($a < 0) {\n\t\t$a\
    \ = -$a;\n\t}\n\t$i = 1;\n\twhile($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif($i\
    \ * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    for ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

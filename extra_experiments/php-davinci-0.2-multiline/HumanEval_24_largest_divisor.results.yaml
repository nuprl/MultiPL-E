language: php
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_to(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6\n>>> sum_numbers(5)\n\
    15*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers smaller than n that are divisible by 3 or 5\n>>> sum_of_3_or_5_multiples(10)\n\
    23*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6\n>>> sum_numbers(5)\n\
    15*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n\
    }\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\n/* For a given number n, find the sum of all the numbers\
    \ from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(5)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(5)\n15*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers 1 to n\n>>> smallest_multiple(5)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all its digits\n>>> sum_digits(1234)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n-1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n      \
    \      return $i;\n        }\n    }\n}\n\n/* For a given number n, find the sum\
    \ of all the numbers from 1 to n that are a multiple of 3 or 5\n>>> sum_of_multiples(10)\n\
    23*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* Given a list of\
    \ numbers, return the smallest number in the list\n>>> smallest([34, 15, 88, 2])\n\
    2\n>>> smallest([34, -345, -1, 100])\n-345*/\nfunction candidate(...$args) {\n\
    \    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers smaller than n that are divisible by 3 or\
    \ 5\n>>> sum_of_3_or_5_multiples(10)\n23*/\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(5)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\necho largest_divisor(15);\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\necho largest_divisor(15);\necho \"\\n\";\n\n/* For a given\
    \ number n, find the largest number that divides n evenly, smaller than n\n>>>\
    \ largest_divisor(15)\n5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all its digits\n>>> sum_digits(1234)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\n/* Given a list of numbers, return the sum of the two\
    \ largest numbers\n>>> sum_of_largest([10, 4, 34, 6, 92, 2])\n126*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\necho largest_divisor(15);\n\
    echo \"\\n\";\n\n/* For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the sum of all the numbers\
    \ from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_of_numbers(5)\n15*/\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_of_numbers(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\n/* For a given number n, find the sum of all\
    \ the multiples of 3 or 5 below n\n>>> sum_of_multiples(10)\n23*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the sum of all\
    \ the numbers from 1 to n\n>>> sum_numbers(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the sum of all\
    \ the numbers from 1 to n that are a multiple of 3 or 5\n>>> sum_mults(10)\n23*/\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all of the multiples of 3 or 5 below n\n>>> sum_of_multiples(10)\n23*/\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\necho largest_divisor(15);\n\
    echo \"\\n\";\n\n/* For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\n/* For a given number n, find the sum of all\
    \ the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers smaller than n that are divisible by 3 or 5\n>>> sum_divisible_by_3_or_5(10)\n\
    23*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\necho largest_divisor(15);\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n-1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n      \
    \      return $i;\n        }\n    }\n}\n\n/* For a given number n, find the smallest\
    \ number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all numbers from 1 to n\n>>> sum_numbers(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all numbers from 1 to n\n>>> sum_numbers(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(5)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the smallest number that\
    \ is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that n is divisible by, larger than n\n>>> smallest_multiple(15)\n\
    30*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n       \
    \     return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpny3eln4v.php:23\n\
    Stack trace:\n#0 /tmp/tmpny3eln4v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpny3eln4v.php\
    \ on line 23\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i -= 1;\n    }\n}\n\n/* For a given\
    \ number n, find the largest number that divides n evenly, smaller than n\n>>>\
    \ largest_divisor(15)\n5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(5)\n60*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(5)\n15*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_to(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest prime number that divides n evenly, smaller than n\n>>>\
    \ largest_prime_divisor(15)\n5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n-1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_to(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all positive integers smaller than n that are divisible by\
    \ 3 or 5\n>>> sum_divisible_by_3_or_5(10)\n23*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(5)\n60*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers smaller than n that are divisible by 3 or 5\n>>> sum_3_5(10)\n\
    23*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\n/* For a given number n, find the sum of all\
    \ the numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* Given a list of\
    \ numbers, return True if first and last number of a list is same\n>>> is_same_first_and_last([10,\
    \ 20, 30, 40, 10])\nTrue\n>>> is_same_first_and_last([10, 20, 30, 40])\nFalse*/\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is evenly divisible by all numbers from 1 to\
    \ n\n>>> smallest_multiple(10)\n2520*/\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the smallest\
    \ number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_to(10)\n55*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the smallest number that is divisible by n\n>>> smallest_multiple(15)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the smallest number that\
    \ is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(10)\n\
    2520*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor\
    \ -= 1;\n    }\n    return $divisor;\n}\n\n/* For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\necho largest_divisor(15);\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ smallest number that is evenly divisible by all numbers from 1 to n\n>>> smallest_multiple(5)\n\
    60*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* Given a list of\
    \ numbers, return the smallest number in the list\n>>> smallest([1, 2, 3, 4])\n\
    1\n>>> smallest([0, -10, 10])\n-10\n>>> smallest([-1, -2, -3, -4])\n-4*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\necho largest_divisor(15);\n\
    function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\n/* For a given number n, find the largest number\
    \ that divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\n/* For a given number n, find the\
    \ sum of all numbers from 1 to n\n>>> sum_numbers(4)\n10*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the sum of all the numbers from 1 to n\n>>> sum_numbers(3)\n6*/\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\necho largest_divisor(15);\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '5'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\n/* For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n>>> largest_divisor(15)\n5*/\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\n/* For a given number\
    \ n, find the largest number that divides n evenly, smaller than n\n>>> largest_divisor(15)\n\
    5*/\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716

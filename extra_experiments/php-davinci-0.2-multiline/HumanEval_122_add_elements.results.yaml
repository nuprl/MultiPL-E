language: php
name: HumanEval_122_add_elements
results:
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a non-empty array of integers arr and an integer k, return\nthe sum of the elements\
    \ with at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a non-empty array of integers arr and an integer k, return\nthe sum of the elements\
    \ with at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a string s, return the first character that occurs more than once in the string.\n\
    If there is no such character, return -1.\nExample:\n>>> first_duplicate_char('abcdefghijklmnopqrstuvwxyz')\n\
    -1\n>>> first_duplicate_char('abcdefghijklmnopqrstuvwxyza')\na\nConstraints:\n\
    1. 1 <= len(s) <= 100\n2. s is a lowercase English letter string*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/*\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\n*/\n\n$arr = array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of occurrences of each element in the array.\n\
    Example:\n>>> occurrences(array(1, 2, 3, 1, 2, 3, 1, 2, 3))\narray(1 => 3, 2 =>\
    \ 3, 3 => 3)\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 0 <= arr[i] <= 100*/\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  $i = 0;\n  while ($i < $k) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n    $i++;\n  }\n  return $sum;\n}\n\
    \nprint_r(add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4));\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of elements with\nat\
    \ most two digits from the first k elements of arr.\nExample:\n>>> count_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n3\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    foreach ($arr as $key => $value) {\n        if ($key\
    \ < $k) {\n            if ($value < 10) {\n                $sum += $value;\n \
    \           } elseif ($value < 100) {\n                $sum += $value;\n     \
    \       }\n        }\n    }\n    return $sum;\n}\n\n/* Given a non-empty array\
    \ of integers arr and an integer k, return\nthe sum of the elements with at most\
    \ two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of elements\nthat are\
    \ greater than or equal to the average of all the elements in the array.\nExample:\n\
    >>> greater_than_average(array(1, 2, 3, 4, 5))\n3\nConstraints:\n1. 1 <= len(arr)\
    \ <= 100\n2. 1 <= arr[i] <= 1000*/\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of pairs of integers\n\
    that have a difference of k.\nExample:\n>>> count_pairs(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9), 2)\n4\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1 <= arr[i] <= 1000\n\
    3. 1 <= k <= 1000*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of elements that are\ngreater than or equal\
    \ to the average of all elements in the array.\nExample:\n>>> greater_than_average(array(1,\
    \ 2, 3, 4, 5))\n3\nConstraints:\n1. 1 <= len(arr) <= 100\n2. -1000 <= arr[i] <=\
    \ 1000*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a non-empty array of integers arr and an integer k, return\nthe sum of the elements\
    \ with at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] >= 10\
    \ && $arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ub6f88a.php:28\n\
    Stack trace:\n#0 /tmp/tmp_ub6f88a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_ub6f88a.php\
    \ on line 28\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of elements with\nat most two digits from\
    \ the first k elements of arr.\nExample:\n>>> count_elements(array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9), 4)\n2\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1 <=\
    \ k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > 99) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvw4yy6_.php:33\n\
    Stack trace:\n#0 /tmp/tmpzvw4yy6_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzvw4yy6_.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/*\n * Tests\n */\nassert_options(ASSERT_BAIL, 1);\n\n$tests = array(\n \
    \   array(\n        'input' => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n     \
    \   'k' => 4,\n        'expected' => 24\n    ),\n    array(\n        'input' =>\
    \ array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n        'k' => 3,\n        'expected'\
    \ => 24\n    ),\n    array(\n        'input' => array(111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9),\n        'k' => 2,\n        'expected' => 24\n    ),\n    array(\n\
    \        'input' => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n        'k' => 1,\n\
    \        'expected' => 3\n    ),\n    array(\n        'input' => array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9),\n        'k' => 5,\n        'expected' => 24\n    ),\n\
    \    array(\n        'input' => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n    \
    \    'k' => 6,\n        'expected' => 24\n    ),\n    array(\n        'input'\
    \ => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n        'k' => 7,\n        'expected'\
    \ => 24\n    ),\n    array(\n        'input' => array(111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9),\n        'k' => 8,\n        'expected' => 24\n    ),\n    array(\n\
    \        'input' => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n        'k' => 9\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpd8ekbsag.php
    on line 69

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/*\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\n*/\necho add_elements(array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9), 4) . \"\\n\";\n\n/*\n>>> add_elements(array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9), 9)\n24\n*/\necho add_elements(array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9), 9) . \"\\n\";\n\n/*\n>>> add_elements(array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9), 1)\n3\n*/\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9), 1) . \"\\n\";\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9), 0)\n0\n*/\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 0) . \"\\n\";\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ -1)\n0\n*/\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), -1) .\
    \ \"\\n\";\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), -9)\n\
    0\n*/\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), -9) . \"\\n\"\
    ;\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), -\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 56 in /tmp/tmpz_xhe91z.php on
    line 56

    '
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a non-empty array of integers arr and an integer k, return\nthe sum of the elements\
    \ with at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/*\nGiven a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)\n*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] > 99)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2d778ox3.php:28\n\
    Stack trace:\n#0 /tmp/tmp2d778ox3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2d778ox3.php\
    \ on line 28\n"
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of elements\nwith at most two digits from\
    \ the first k elements of arr.\nExample:\n>>> count_elements(array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9), 4)\n3\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1 <=\
    \ k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 10) {\n            $sum += $arr[$i];\n        } elseif ($arr[$i] < 100) {\n\
    \            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr\
    \ = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of elements with a value\n\
    greater than or equal to the given integer k.\nExample:\n>>> count_elements(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9), 5)\n4\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1\
    \ <= k <= 100*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220657
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] >= 10\
    \ && $arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of pairs of integers\n\
    that have a difference of k.\nExample:\n>>> num_pairs([1, 5, 3, 4, 2], 2)\n3\n\
    Constraints:\n1. 1 <= len(arr) <= 10^5\n2. 1 <= arr[i] <= 10^9\n3. 1 <= k <= 10^9*/\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8sx7s89.php:34\n\
    Stack trace:\n#0 /tmp/tmpw8sx7s89.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw8sx7s89.php\
    \ on line 34\n"
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of elements that are\nequal to the largest\
    \ element in the array.\nExample:\n>>> count_largest_element(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9))\n1\n>>> count_largest_element(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 9))\n2\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1 <= arr[i] <= 1000*/\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given an array of integers arr, return the number of elements with a value\n\
    equal to the value of the element at index 0.\nExample:\n>>> count_zeros(array(1,\
    \ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpw7cz21_q.php on
    line 20

    '
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given an array\
    \ of integers arr, return the number of integers that are\nless than or equal\
    \ to the sum of the first k elements of arr.\nExample:\n>>> count_elements(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9), 4)\n8\nConstraints:\n1. 1 <= len(arr) <= 100\n2. 1\
    \ <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ a non-empty array of integers arr and an integer k, return\nthe sum of the elements\
    \ with at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given\
    \ an array of integers arr, return the sum of the elements with at most two digits.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9))\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a string s, return the number of characters in the string that are\n\
    not vowels.\nExample:\n>>> count_non_vowels(\"Hello world!\")\n7\nConstraints:\n\
    1. 1 <= len(s) <= 100\n2. s is a string of lowercase letters and spaces*/\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a string\
    \ s, return the longest substring of s that contains\nat most two unique characters.\n\
    Example:\n>>> longest_substring('abcbbbbcccbdddadacb')\n'bcbbbbcccb'\nConstraints:\n\
    1. 1 <= len(s) <= 1000\n2. s contains only lowercase English letters.*/\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > 99) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvw4yy6_.php:33\n\
    Stack trace:\n#0 /tmp/tmpzvw4yy6_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzvw4yy6_.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\n*/\n\
    \n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/* Given a non-empty array of integers arr and an integer k, return\nthe\
    \ sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n/*\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\n>>>\
    \ add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 5)\n30\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 6)\n36\n>>> add_elements(array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9), 7)\n42\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9), 8)\n48\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 9)\n54\n\
    >>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 10)\n54\n*/\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220657
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '24'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a non-empty array of integers arr and an integer k, return\n\
    the sum of the elements with at most two digits from the first k elements of arr.\n\
    Example:\n>>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n\
    1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)*/\nfunction add_elements($arr,\
    \ $k) {\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n/* Given a non-empty\
    \ array of integers arr and an integer k, return\nthe sum of the elements with\
    \ at most two digits from the first k elements of arr.\nExample:\n>>> add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4)\n24\nConstraints:\n1. 1 <= len(arr) <= 100\n\
    2. 1 <= k <= len(arr)*/\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656

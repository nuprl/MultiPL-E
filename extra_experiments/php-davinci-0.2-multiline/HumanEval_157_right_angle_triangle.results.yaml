language: php
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \tif ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return ($a * $a == $b * $b + $c * $c);\n    } elseif ($b > $a && $b >\
    \ $c) {\n        return ($b * $b == $a * $a + $c * $c);\n    } else {\n      \
    \  return ($c * $c == $a * $a + $b * $b);\n    }\n}\n\n/* Given a number, return\
    \ true if it is a prime number, false otherwise.\nExample:\n>>> is_prime(5)\n\
    true\n>>> is_prime(6)\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    if ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2\
    \ + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2,\
    \ 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return pow($a, 2) == pow($b, 2) + pow($c, 2);\n    }\n    if ($b > $a\
    \ && $b > $c) {\n        return pow($b, 2) == pow($a, 2) + pow($c, 2);\n    }\n\
    \    if ($c > $a && $c > $b) {\n        return pow($c, 2) == pow($a, 2) + pow($b,\
    \ 2);\n    }\n}\n\n/* Given a string, return true if it is a palindrome, false\
    \ otherwise.\nA palindrome is a string that is the same forwards and backwards.\n\
    Example:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\nfalse*/\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphirdxdm8.php:38\n\
    Stack trace:\n#0 /tmp/tmphirdxdm8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphirdxdm8.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = array($a, $b, $c);\n \
    \ sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2\
    \ * $cathetus2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\
    /* Given a string, return the number of words in the string.\nExample:\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, how are you?\")\n5*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a = pow($a, 2);\n    $b = pow($b,\
    \ 2);\n    $c = pow($c, 2);\n    if ($a + $b == $c || $a + $c == $b || $b + $c\
    \ == $a) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\necho right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    $hypotenuse = $a;\n\t\t$cathetus1 = $b;\n\t\t$cathetus2 = $c;\n\t} elseif ($b\
    \ > $a && $b > $c) {\n\t\t$hypotenuse = $b;\n\t\t$cathetus1 = $a;\n\t\t$cathetus2\
    \ = $c;\n\t} else {\n\t\t$hypotenuse = $c;\n\t\t$cathetus1 = $a;\n\t\t$cathetus2\
    \ = $b;\n\t}\n\tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2\
    \ * $cathetus2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that reads the\
    \ same forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n>>>\
    \ palindrome('tacocat')\ntrue\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = array($a, $b, $c);\n \
    \ sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  $hypotenuse_squared = pow($hypotenuse, 2);\n  $cathetus1_squared\
    \ = pow($cathetus1, 2);\n  $cathetus2_squared = pow($cathetus2, 2);\n  if ($hypotenuse_squared\
    \ == $cathetus1_squared + $cathetus2_squared) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\necho right_angle_triangle(3, 4, 5);\necho \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $max = max($a, $b, $c);\n   \
    \ $min = min($a, $b, $c);\n    $mid = ($a + $b + $c) - $max - $min;\n    return\
    \ $max * $max == $min * $min + $mid * $mid;\n}\n\n/*\n * Test code\n */\nassert(right_angle_triangle(3,\
    \ 4, 5) == true);\nassert(right_angle_triangle(1, 2, 3) == false);\nassert(right_angle_triangle(5,\
    \ 12, 13) == true);\nassert(right_angle_triangle(5, 12, 14) == false);\nassert(right_angle_triangle(5,\
    \ 12, 15) == false);\nassert(right_angle_triangle(5, 12, 16) == false);\nassert(right_angle_triangle(5,\
    \ 12, 17) == false);\nassert(right_angle_triangle(5, 12, 18) == false);\nassert(right_angle_triangle(5,\
    \ 12, 19) == false);\nassert(right_angle_triangle(5, 12, 20) == false);\nassert(right_angle_triangle(5,\
    \ 12, 21) == false);\nassert(right_angle_triangle(5, 12, 22) == false);\nassert(right_angle_triangle(5,\
    \ 12, 23) == false);\nassert(right_angle_triangle(5, 12, 24) == false);\nassert(right_angle_triangle(5,\
    \ 12, 25) == false);\nassert(right_angle_triangle(5, 12, 26) == false);\nassert(right_angle_triangle(5,\
    \ 12, 27) == false);\nassert(right_angle_triangle(5, 12, 28) == false);\nassert(right_angle_triangle(5,\
    \ 12, 29) == false);\nassert(right_angle_triangle(5, 12, 30) == false);\nassert(right_angle_triangle(5,\
    \ 12, 31) == false);\nassert(right_angle_triangle(5, 12, 32) == false);\nassert(right_angle_triangle(5\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmphhne_zg9.php
    on line 44

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$adjacent = min($a, $b, $c);\n\t$opposite = ($a + $b + $c) - $hypotenuse - $adjacent;\n\
    \tif ($hypotenuse ** 2 == $adjacent ** 2 + $opposite ** 2) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3, 4, 5);\n\
    echo right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2\
    \ = $sides[0];\n\tif ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  if ($a > $b && $a > $c) {\n   \
    \ return $a * $a == $b * $b + $c * $c;\n  } else if ($b > $a && $b > $c) {\n \
    \   return $b * $b == $a * $a + $c * $c;\n  } else {\n    return $c * $c == $a\
    \ * $a + $b * $b;\n  }\n}\n\n/* Given a string, return the number of words in\
    \ the string.\nExample:\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"\
    Hello world, how are you?\")\n5*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$cathetus1 = min($a, $b, $c);\n\t$cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \treturn $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n\necho right_angle_triangle(3, 4, 5) ? \"true\\n\" : \"false\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $triangle = array($a, $b, $c);\n\
    \  sort($triangle);\n  return pow($triangle[0], 2) + pow($triangle[1], 2) == pow($triangle[2],\
    \ 2);\n}\n\n/* Given a string, return true if the string is a palindrome, false\
    \ otherwise.\nA palindrome is a string that reads the same forwards and backwards.\n\
    Example:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\nfalse*/\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n\
    \  if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\necho right_angle_triangle(5,\
    \ 3, 4) . PHP_EOL;\necho right_angle_triangle(5, 12, 13) . PHP_EOL;\necho right_angle_triangle(5,\
    \ 12, 14) . PHP_EOL;\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1

    1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\n/* Given a number n, return the sum of all numbers from 1 to n.\n\
    Example:\n>>> sum_of_numbers(5)\n15\n>>> sum_of_numbers(10)\n55\n*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    return pow($hypotenuse, 2) == pow($side1, 2) + pow($side2, 2);\n}\n\n/* Given\
    \ a number, return true if it is a prime number, false otherwise.\nA prime number\
    \ is a number that is only divisible by 1 and itself.\nExample:\n>>> is_prime(3)\n\
    true\n>>> is_prime(4)\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n\n/* Given a string, return true if the string\
    \ is a palindrome, false otherwise.\nA palindrome is a string that reads the same\
    \ forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\n\
    false*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $a = $sides[0];\n    $b = $sides[1];\n    $c = $sides[2];\n    return $a\
    \ * $a + $b * $b == $c * $c;\n}\n\n/* Given a string, return true if it is a palindrome,\
    \ false otherwise.\nA palindrome is a string that is the same forwards and backwards.\n\
    Example:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('tacocat')\ntrue\n>>>\
    \ palindrome('taco cat')\nfalse\n>>> palindrome('tacocatx')\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $arr = [$a, $b, $c];\n    sort($arr);\n\
    \    $a = $arr[0];\n    $b = $arr[1];\n    $c = $arr[2];\n    if ($a * $a + $b\
    \ * $b == $c * $c) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\n/* Given a number. Return true if it is a prime number, false otherwise.\n\
    Example:\n>>> is_prime(7)\ntrue\n>>> is_prime(10)\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if (($a * $a) + ($b * $b) ==\
    \ ($c * $c)) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\n\n/* Given a number n, return true if the number is prime, false otherwise.\n\
    Example:\n>>> is_prime(11)\ntrue\n>>> is_prime(12)\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0n66trnd.php:32\n\
    Stack trace:\n#0 /tmp/tmp0n66trnd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0n66trnd.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2 = $sides[0];\n\
    \tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       if ($a * $a == $b * $b + $c * $c) {\n            return true;\n      \
    \  }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a * $a + $c\
    \ * $c) {\n            return true;\n        }\n    } else if ($c > $a && $c >\
    \ $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\n/* Given a number, return true if the\
    \ number is a prime number, false otherwise.\nExample:\n>>> is_prime(5)\ntrue\n\
    >>> is_prime(6)\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $max = max($a, $b, $c);\n   \
    \ $min = min($a, $b, $c);\n    $mid = $a + $b + $c - $max - $min;\n    return\
    \ $max * $max == $min * $min + $mid * $mid;\n}\n\n/* Given a number n, return\
    \ true if n is in the range 1..10, inclusive.\nUnless outside_mode is true, in\
    \ which case return true if the number is less\nor equal to 1, or greater or equal\
    \ to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n>>> in1to10(11, false)\nfalse\n\
    >>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return ($a * $a == $b * $b + $c * $c);\n    } elseif ($b > $a && $b >\
    \ $c) {\n        return ($b * $b == $a * $a + $c * $c);\n    } else {\n      \
    \  return ($c * $c == $a * $a + $b * $b);\n    }\n}\n\n/* Given a string, return\
    \ true if it is a palindrome, false otherwise.\nA palindrome is a string that\
    \ is the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n\
    >>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n\n/* Given a string,\
    \ return true if it is a palindrome, false otherwise.\nA palindrome is a string\
    \ that is the same when read forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$cathetus1 = min($a, $b, $c);\n\t$cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \treturn $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n\n/* Given a number n. Return the number of the integers between 1 and n that\
    \ \ncontain the digit 3.\nExample:\n>>> count_3(3)\n1\n>>> count_3(13)\n2\n>>>\
    \ count_3(33)\n4*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $a = pow($a, 2);\n  $b = pow($b,\
    \ 2);\n  $c = pow($c, 2);\n  if ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\treturn pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n        return false;\n    }\n    $arr = array($a, $b, $c);\n    sort($arr);\n\
    \    if ($arr[0] * $arr[0] + $arr[1] * $arr[1] == $arr[2] * $arr[2]) {\n     \
    \   return true;\n    }\n    return false;\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    if ($a * $a == $b * $b + $c * $c) {\n\t\t\treturn true;\n\t\t}\n\t} elseif ($b\
    \ > $a && $b > $c) {\n\t\tif ($b * $b == $a * $a + $c * $c) {\n\t\t\treturn true;\n\
    \t\t}\n\t} elseif ($c > $a && $c > $b) {\n\t\tif ($c * $c == $a * $a + $b * $b)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/* Given a string,\
    \ return true if it is a palindrome, false otherwise.\nA palindrome is a string\
    \ that reads the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       if ($a * $a == $b * $b + $c * $c) {\n            return true;\n      \
    \  }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a * $a + $c\
    \ * $c) {\n            return true;\n        }\n    } else if ($c > $a && $c >\
    \ $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/*\
    \ Given a number n, return the sum of the first n positive odd numbers.\nExample:\n\
    >>> sum_of_odd_numbers(3)\n9\n>>> sum_of_odd_numbers(5)\n25*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 6);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 7);\necho \"\\n\";\necho right_angle_triangle(3, 4, 8);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 9);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 10);\necho \"\\n\";\necho right_angle_triangle(3, 4, 11);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 12);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 13);\necho \"\\n\";\necho right_angle_triangle(3, 4, 14);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 15);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 16);\necho \"\\n\";\necho right_angle_triangle(3, 4, 17);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 18);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 19);\necho \"\\n\";\necho right_angle_triangle(3, 4, 20);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 21);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 22);\necho \"\\n\";\necho right_angle_triangle(3, 4, 23);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 24);\necho \"\\n\";\necho\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp3s42sby_.php on line 63

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $arr = [$a, $b, $c];\n    sort($arr);\n\
    \    return pow($arr[0], 2) + pow($arr[1], 2) == pow($arr[2], 2);\n}\n\n/* Given\
    \ a string, return the length of the longest substring without repeating\ncharacters.\n\
    Example:\n>>> longest_substring(\"abcabcbb\")\n3\n>>> longest_substring(\"bbbbb\"\
    )\n1\n>>> longest_substring(\"pwwkew\")\n3*/\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hyp = max($a, $b, $c);\n\t$cat1\
    \ = min($a, $b, $c);\n\t$cat2 = $a + $b + $c - $hyp - $cat1;\n\treturn $hyp *\
    \ $hyp == $cat1 * $cat1 + $cat2 * $cat2;\n}\n\n/* Given a string, return the first\
    \ character that is not repeated anywhere in\nthe string.\nExample:\n>>> first_non_repeated_character('aabbcdd123')\n\
    '4'\n>>> first_non_repeated_character('a')\n'a'\n>>> first_non_repeated_character('112233445566')\n\
    '7'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    return $a*$a == $b*$b + $c*$c;\n\t} elseif ($b > $a && $b > $c) {\n\t\treturn\
    \ $b*$b == $a*$a + $c*$c;\n\t} else {\n\t\treturn $c*$c == $a*$a + $b*$b;\n\t\
    }\n}\n\necho right_angle_triangle(3, 4, 5) . PHP_EOL;\necho right_angle_triangle(1,\
    \ 2, 3) . PHP_EOL;\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if (($a * $a) + ($b * $b) ==\
    \ ($c * $c)) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\necho right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2,\
    \ 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mm4i7_s.php:27\n\
    Stack trace:\n#0 /tmp/tmp2mm4i7_s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2mm4i7_s.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       if ($a * $a == $b * $b + $c * $c) {\n            return true;\n      \
    \  }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a * $a + $c\
    \ * $c) {\n            return true;\n        }\n    } else if ($c > $a && $c >\
    \ $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\n/* Given a list of numbers, return\
    \ the sum of the numbers.\nExample:\n>>> sum_of_numbers([1, 2, 3])\n6\n>>> sum_of_numbers([-1,\
    \ -2, -3])\n-6*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    $hypotenuse2 = $hypotenuse * $hypotenuse;\n\
    \    $cathetus12 = $cathetus1 * $cathetus1;\n    $cathetus22 = $cathetus2 * $cathetus2;\n\
    \    if ($hypotenuse2 == $cathetus12 + $cathetus22) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Given a string. Return true\
    \ if the string is a palindrome, false otherwise.\nA palindrome is a string that\
    \ reads the same backward as forward.\nExample:\n>>> palindrome('abba')\ntrue\n\
    >>> palindrome('abc')\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n\
    \    } elseif ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 +\
    \ $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n \
    \   }\n}\necho right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  if (($a * $a) + ($b * $b) == ($c\
    \ * $c)) {\n    return true;\n  } else {\n    return false;\n  }\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s6hmhy6.php:29\n\
    Stack trace:\n#0 /tmp/tmp6s6hmhy6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6s6hmhy6.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n   \
    \ $leg2 = $sides[1];\n    if ($hypotenuse ** 2 == $leg1 ** 2 + $leg2 ** 2) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = array($a, $b, $c);\n \
    \ sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $a2 = $a * $a;\n  $b2 = $b * $b;\n\
    \  $c2 = $c * $c;\n  if ($a2 + $b2 == $c2) {\n    return true;\n  } elseif ($a2\
    \ + $c2 == $b2) {\n    return true;\n  } elseif ($b2 + $c2 == $a2) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho right_angle_triangle(3, 4,\
    \ 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\necho right_angle_triangle(3, 4, 5)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\necho right_angle_triangle(1, 2, 3) ?\
    \ \"true\" : \"false\";\necho \"\\n\";\necho right_angle_triangle(5, 4, 3) ? \"\
    true\" : \"false\";\necho \"\\n\";\necho right_angle_triangle(3, 5, 4) ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho right_angle_triangle(4, 3, 5) ? \"true\" :\
    \ \"false\";\necho \"\\n\";\necho right_angle_triangle(4, 5, 3) ? \"true\" : \"\
    false\";\necho \"\\n\";\necho right_angle_triangle(5, 3, 4) ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho right_angle_triangle(3, 3, 3) ? \"true\" : \"false\";\n\
    echo \"\\n\";\necho right_angle_triangle(3, 4, 4) ? \"true\" : \"false\";\necho\
    \ \"\\n\";\necho right_angle_triangle(4, 3, 4) ? \"true\" : \"false\";\necho \"\
    \\n\";\necho right_angle_triangle(4, 4, 3) ? \"true\" : \"false\";\necho \"\\\
    n\";\necho right_angle_triangle(4, 4, 4) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\necho right_angle_triangle(4, 5, 6) ? \"true\" : \"false\";\necho \"\\n\";\n\
    echo right_angle_triangle(6, 4, 5) ? \"true\" : \"false\";\necho \"\\n\";\necho\
    \ right_angle_triangle(5, 6\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpap5jgw_v.php
    on line 50

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 **\
    \ 2;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $hypotenuse = max($a, $b, $c);\n\
    \  $side1 = min($a, $b, $c);\n  $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \  return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    $hypotenuse = $a;\n\t\t$side1 = $b;\n\t\t$side2 = $c;\n\t} elseif ($b > $a &&\
    \ $b > $c) {\n\t\t$hypotenuse = $b;\n\t\t$side1 = $a;\n\t\t$side2 = $c;\n\t} else\
    \ {\n\t\t$hypotenuse = $c;\n\t\t$side1 = $a;\n\t\t$side2 = $b;\n\t}\n\t$square_hypotenuse\
    \ = pow($hypotenuse, 2);\n\t$square_side1 = pow($side1, 2);\n\t$square_side2 =\
    \ pow($side2, 2);\n\tif ($square_hypotenuse == $square_side1 + $square_side2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\n\
    echo right_angle_triangle(3, 4, 5) ? \"true\\n\" : \"false\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif (($a*$a) + ($b*$b) == ($c*$c))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfzi4v_7.php:29\n\
    Stack trace:\n#0 /tmp/tmpwfzi4v_7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwfzi4v_7.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return $sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n\
    }\n\n/* Given a string of words, return the length of the shortest word(s).\n\
    String will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    return $a * $a == $b * $b + $c * $c;\n\t} elseif ($b > $a && $b > $c) {\n\t\t\
    return $b * $b == $a * $a + $c * $c;\n\t} else {\n\t\treturn $c * $c == $a * $a\
    \ + $b * $b;\n\t}\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2\
    \ + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\necho right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1,\
    \ 2, 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2 + $c2 == $a2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a number n, return true\
    \ if n is in the range 1..10, inclusive. \nUnless outside_mode is true, in which\
    \ case return true if the number is less \nor equal to 1, or greater or equal\
    \ to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n>>> in1to10(11, false)\nfalse\n\
    >>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    return ($a * $a + $b * $b ==\
    \ $c * $c) || ($a * $a + $c * $c == $b * $b) || ($b * $b + $c * $c == $a * $a);\n\
    }\n\n/* Given a number, return true if it is a prime number, false otherwise.\n\
    Example:\n>>> is_prime(7)\ntrue\n>>> is_prime(10)\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    return $a * $a == $b * $b + $c * $c;\n\t} elseif ($b > $a && $b > $c) {\n\t\t\
    return $b * $b == $a * $a + $c * $c;\n\t} else {\n\t\treturn $c * $c == $a * $a\
    \ + $b * $b;\n\t}\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a number n, return true\
    \ if n is in the range 1..10, inclusive. \nUnless outside_mode is true, in which\
    \ case return true if the number is less \nor equal to 1, or greater or equal\
    \ to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n>>> in1to10(11, false)\nfalse\n\
    >>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    if ($hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho right_angle_triangle(3, 4, 5) . \"\\\
    n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \t$hypotenuse = $sides[2];\n\t$leg1 = $sides[0];\n\t$leg2 = $sides[1];\n\t$hypotenuse_squared\
    \ = pow($hypotenuse, 2);\n\t$leg1_squared = pow($leg1, 2);\n\t$leg2_squared =\
    \ pow($leg2, 2);\n\tif ($hypotenuse_squared == $leg1_squared + $leg2_squared)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return a string\
    \ with the words reversed.\nExample:\n>>> reverse_words('The quick brown fox jumps\
    \ over the lazy dog')\n'dog lazy the over jumps fox brown quick The'\n>>> reverse_words('Hello,\
    \ World!')\n'World! Hello,'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\n\
    /* Given a string, return a new string with the first and last characters \nswapped.\n\
    Example:\n>>> swap_first_last('hello')\n'oellh'\n>>> swap_first_last('world')\n\
    'dlrow'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/*\
    \ Given a string, return true if it is a palindrome, false otherwise.\nA palindrome\
    \ is a word that reads the same backwards as forwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 **\
    \ 2;\n}\n\n/* Given a number. Return true if the number is prime, false otherwise.\n\
    Example:\n>>> is_prime(5)\ntrue\n>>> is_prime(6)\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $triangle = array($a, $b, $c);\n\
    \    sort($triangle);\n    return pow($triangle[0], 2) + pow($triangle[1], 2)\
    \ == pow($triangle[2], 2);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    return $sides[0] * $sides[0] + $sides[1] * $sides[1] ==\
    \ $sides[2] * $sides[2];\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = ($a + $b + $c) - $hypotenuse\
    \ - $cathetus1;\n    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 **\
    \ 2;\n}\n\n/* Given the lengths of the three sides of a triangle. Return the type\
    \ of the\ntriangle.\nA right-angled triangle is a triangle in which one angle\
    \ is right angle or \n90 degree.\nAn equilateral triangle is a triangle in which\
    \ all three sides are equal.\nAn isosceles triangle is a triangle in which two\
    \ sides are equal.\nExample:\n>>> triangle_type(3, 4, 5)\n'right-angled'\n>>>\
    \ triangle_type(1, 2, 3)\n'obtuse'\n>>> triangle_type(1, 1, 1)\n'equilateral'\n\
    >>> triangle_type(2, 2, 3)\n'isosceles'*/\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n\n/* Given a string,\
    \ return true if it is a palindrome, false otherwise.\nA palindrome is a string\
    \ that reads the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $triangle = array($a, $b, $c);\n\
    \    sort($triangle);\n    $hypotenuse = $triangle[2];\n    $adjacent = $triangle[1];\n\
    \    $opposite = $triangle[0];\n    if ($hypotenuse * $hypotenuse == $adjacent\
    \ * $adjacent + $opposite * $opposite) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\necho right_angle_triangle(3, 4, 5);\necho\
    \ right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    if ($hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t}\n\telse if\
    \ ($a2 + $c2 == $b2) {\n\t\treturn true;\n\t}\n\telse if ($b2 + $c2 == $a2) {\n\
    \t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = array_pop($sides);\n    $sum = array_sum($sides);\n\
    \    if ($hypotenuse == sqrt($sum * $sum)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho right_angle_triangle(3, 4, 5) . PHP_EOL;\n\
    echo right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ryiny3u.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ryiny3u.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9ryiny3u.php\
    \ on line 30\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that reads the\
    \ same forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n>>>\
    \ palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a = pow($a, 2);\n    $b = pow($b,\
    \ 2);\n    $c = pow($c, 2);\n    if ($a + $b == $c) {\n        return true;\n\
    \    } elseif ($a + $c == $b) {\n        return true;\n    } elseif ($b + $c ==\
    \ $a) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    \necho right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\necho \"\\n\";\necho right_angle_triangle(5, 3, 4);\necho \"\\n\";\n\
    echo right_angle_triangle(5, 4, 3);\necho \"\\n\";\necho right_angle_triangle(4,\
    \ 5, 3);\necho \"\\n\";\necho right_angle_triangle(4, 3, 5);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 5, 4);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(3, 4, 6);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 6, 4);\necho \"\\n\";\necho right_angle_triangle(6,\
    \ 3, 4);\necho \"\\n\";\necho right_angle_triangle(6, 4, 3);\necho \"\\n\";\n\
    echo right_angle_triangle(4, 6, 3);\necho \"\\n\";\necho right_angle_triangle(4,\
    \ 3, 6);\necho \"\\n\";\necho right_angle_triangle(3, 6, 4);\necho \"\\n\";\n\
    echo right_angle_triangle(3, 4, 6);\necho \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 7);\necho \"\\n\";\necho right_angle_triangle(3, 7, 4);\necho \"\\n\";\n\
    echo right_angle_triangle(7, 3, 4);\necho \"\\n\";\necho right_angle_triangle(7,\
    \ 4, 3);\necho \"\\n\";\necho right_angle\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpf234ry33.php on line 67

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n/* Given a string, return\
    \ true if the string is a palindrome, false otherwise.\nA palindrome is a word\
    \ or phrase that is the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2\
    \ + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\n/* Given a string, return a string with the first letter of each\
    \ word capitalized.\nExample:\n>>> capitalize_words('hello world')\n'Hello World'\n\
    >>> capitalize_words('the quick brown fox jumps over the lazy dog')\n'The Quick\
    \ Brown Fox Jumps Over The Lazy Dog'*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given a string, return a\
    \ new string with the first and last characters \nswapped.\nExample:\n>>> swap_first_last('hello')\n\
    'oellh'\n>>> swap_first_last('python')\n'nthypo'*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2\
    \ = $sides[0];\n\t$hypotenuse_squared = pow($hypotenuse, 2);\n\t$cathetus1_squared\
    \ = pow($cathetus1, 2);\n\t$cathetus2_squared = pow($cathetus2, 2);\n\t$sum_of_squares\
    \ = $cathetus1_squared + $cathetus2_squared;\n\tif ($hypotenuse_squared == $sum_of_squares)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return the first\
    \ non-repeating character.\nExample:\n>>> first_non_repeating_char('abcdab')\n\
    'c'\n>>> first_non_repeating_char('abcdabcd')\n'c'\n>>> first_non_repeating_char('abcdabcdab')\n\
    'c'\n>>> first_non_repeating_char('abcdabcdabc')\n'c'\n>>> first_non_repeating_char('abcdabcdabcd')\n\
    'c'\n>>> first_non_repeating_char('abcdefg')\n'a'\n>>> first_non_repeating_char('abcdefgh')\n\
    'a'\n>>> first_non_repeating_char('abcdefghi')\n'a'\n>>> first_non_repeating_char('abcdefghij')\n\
    'a'\n>>> first_non_repeating_char('abcdefghijk')\n'a'\n>>> first_non_repeating_char('abcdefghijkl')\n\
    'a'\n>>> first_non_repeating_char('abcdefghijklm')\n'a'\n>>> first_non_repeating_char('abcdefghijklmn')\n\
    'a'\n>>> first_non_repeating_char('abcdefghijklmno')\n'a'\n>>> first_non_repeating_char('abcdefghijklmnop')\n\
    'a'\n>>> first_non_repeating_char('abcdefghijklmnopq')\n'a'\n>>> first_non_repeating_char('abcdefghijklmnopqr')\n\
    'a'\n>>> first_non_repeating_char('abcdefghijklmnopqrs')\n'a'\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpvl1kyddp.php on
    line 21

    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\n/*\
    \ Given a list of numbers, return true if the list contains a number that is\n\
    greater than the sum of all other numbers in the list.\nExample:\n>>> greatest_number([1,\
    \ 2, 3, 4])\nfalse\n>>> greatest_number([4, 1, 2, 3])\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    if ($a * $a == $b * $b + $c * $c) {\n\t\t\treturn true;\n\t\t}\n\t} elseif ($b\
    \ > $a && $b > $c) {\n\t\tif ($b * $b == $a * $a + $c * $c) {\n\t\t\treturn true;\n\
    \t\t}\n\t} elseif ($c > $a && $c > $b) {\n\t\tif ($c * $c == $a * $a + $b * $b)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n\
    }\n\n/* Given a number n, return true if n is in the range 1..10, inclusive.\n\
    Unless outside_mode is true, in which case return true if the number is less\n\
    or equal to 1, or greater or equal to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n\
    >>> in1to10(11, false)\nfalse\n>>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2\
    \ = $sides[0];\n\tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2\
    \ * $cathetus2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    /* Given a string, return a new string with the first and last characters \nswapped.\n\
    Example:\n>>> swap_first_last(\"Hello\")\n\"oellH\"\n>>> swap_first_last(\"\"\
    )\n\"\"\n>>> swap_first_last(\"a\")\n\"a\"*/\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4,\
    \ 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2\
    \ + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\n/* Given a string, return a new string that is the reverse of the\
    \ original.\nExample:\n>>> reverse_string('hello')\n'olleh'\n>>> reverse_string('hello\
    \ world')\n'dlrow olleh'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    $square_hypotenuse = pow($hypotenuse, 2);\n\
    \    $square_cathetus1 = pow($cathetus1, 2);\n    $square_cathetus2 = pow($cathetus2,\
    \ 2);\n    if ($square_hypotenuse == $square_cathetus1 + $square_cathetus2) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    $hypotenuse_squared = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1,\
    \ 2);\n    $cathetus2_squared = pow($cathetus2, 2);\n    $sum_of_squares = $cathetus1_squared\
    \ + $cathetus2_squared;\n    if ($hypotenuse_squared == $sum_of_squares) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    if ($hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \tif ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    return ($sides[0] ** 2 + $sides[1] ** 2) == $sides[2]\
    \ ** 2;\n}\n\n/* Given a string, return true if the string is a palindrome, false\
    \ otherwise.\nA palindrome is a string that is the same forwards and backwards.\n\
    Example:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\nfalse*/\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $a2 = $a * $a;\n  $b2 = $b * $b;\n\
    \  $c2 = $c * $c;\n  if($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2 + $c2 == $a2)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/* Given a string,\
    \ return the character that occurs the most times.\nExample:\n>>> most_occurring_character('aabacada')\n\
    'a'\n>>> most_occurring_character('abcdefghijklmnopqrstuvwxyz')\n'a'*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if (($a*$a + $b*$b == $c*$c)\
    \ || ($a*$a + $c*$c == $b*$b) || ($b*$b + $c*$c == $a*$a)) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho right_angle_triangle(3, 4,\
    \ 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \    return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n\
    }\n\n/* Given a number n, return true if n is in the range 1..10, inclusive.\n\
    Unless outside_mode is true, in which case return true if the number is less\n\
    or equal to 1, or greater or equal to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n\
    >>> in1to10(11, false)\nfalse\n>>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  if ($a > $b && $a > $c) {\n   \
    \ return $a * $a == $b * $b + $c * $c;\n  } else if ($b > $a && $b > $c) {\n \
    \   return $b * $b == $a * $a + $c * $c;\n  } else {\n    return $c * $c == $a\
    \ * $a + $b * $b;\n  }\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho\
    \ right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n        return false;\n    }\n    $hypotenuse = max($a, $b, $c);\n\
    \    $adjacent = ($a + $b + $c) - $hypotenuse;\n    $opposite = ($a + $b + $c)\
    \ - $adjacent - $hypotenuse;\n    if ($hypotenuse * $hypotenuse == $adjacent *\
    \ $adjacent + $opposite * $opposite) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0d5ctij.php:28\n\
    Stack trace:\n#0 /tmp/tmpi0d5ctij.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi0d5ctij.php\
    \ on line 28\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c || $a + $c == $b || $b + $c ==\
    \ $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2 + $c2 == $a2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a number n, return true\
    \ if n is in the range 1..10, inclusive.\nUnless outside_mode is true, in which\
    \ case return true if the number is less\nor equal to 1, or greater or equal to\
    \ 10.\nExample:\n>>> in1to10(5, false)\ntrue\n>>> in1to10(11, false)\nfalse\n\
    >>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} else if ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} else if ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  if (($a*$a + $b*$b) == ($c*$c))\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0ji97tb.php:28\n\
    Stack trace:\n#0 /tmp/tmpl0ji97tb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl0ji97tb.php\
    \ on line 28\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $max = max($a, $b, $c);\n   \
    \ $min = min($a, $b, $c);\n    $mid = $a + $b + $c - $max - $min;\n    if ($max\
    \ * $max == $min * $min + $mid * $mid) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\necho right_angle_triangle(3, 4, 5);\necho\
    \ right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that is the same\
    \ when read forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n\
    >>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4,\
    \ 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $others = array_diff([$a, $b, $c], [$hypotenuse]);\n    $sum_of_squares =\
    \ array_sum(array_map(function($x) {\n        return $x * $x;\n    }, $others));\n\
    \    return $hypotenuse * $hypotenuse == $sum_of_squares;\n}\n\n/* Given a string,\
    \ return the number of vowels in the string.\nExample:\n>>> count_vowels('hello')\n\
    2\n>>> count_vowels('world')\n1\n>>> count_vowels('helloworld')\n3*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n        return false;\n    }\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    }\n    return false;\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4,\
    \ 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n/* Given a string of\
    \ words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a number. Return true if\
    \ the number is a perfect square, false otherwise.\nA perfect square is a number\
    \ which is the product of some number multiplied by \nitself.\nExample:\n>>> perfect_square(4)\n\
    true\n>>> perfect_square(5)\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that is the same\
    \ forwards and backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\n\
    false*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n\n/* Given a string,\
    \ return a new string where the first and last characters\nhave been exchanged.\n\
    Example:\n>>> front_back('code')\n'eodc'\n>>> front_back('a')\n'a'\n>>> front_back('ab')\n\
    'ba'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2) {\n\t\treturn true;\n\t} elseif ($a2\
    \ + $c2 == $b2) {\n\t\treturn true;\n\t} elseif ($b2 + $c2 == $a2) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4,\
    \ 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\n\
    /* Given a string, return true if it is a palindrome, false otherwise.\nA palindrome\
    \ is a string that reads the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t// your code here\n}\n\n/* Given\
    \ a string, return a string where for every character in the original \nthere\
    \ are three characters.\nExample:\n>>> triple_char('Mississippi')\n'MMMiiissssssiiissssssiiippppppiii'\n\
    */\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjscdsd0w.php:26\n\
    Stack trace:\n#0 /tmp/tmpjscdsd0w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjscdsd0w.php\
    \ on line 26\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a = pow($a, 2);\n    $b = pow($b,\
    \ 2);\n    $c = pow($c, 2);\n    if ($a + $b == $c || $a + $c == $b || $b + $c\
    \ == $a) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return $sides[0] ** 2 + $sides[1] ** 2 == $sides[2] ** 2;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2\
    \ = $sides[0];\n\tif ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    }\n    if ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    }\n    if ($c > $a && $c\
    \ > $b) {\n        return $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given\
    \ a string, return true if it is a palindrome, false otherwise.\nA palindrome\
    \ is a string that reads the same forwards and backwards.\nExample:\n>>> palindrome('racecar')\n\
    true\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbuptos9.php:38\n\
    Stack trace:\n#0 /tmp/tmpfbuptos9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfbuptos9.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2 = $sides[0];\n\
    \tif ($hypotenuse**2 == $cathetus1**2 + $cathetus2**2) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3, 4, 5) . \"\
    \\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \t$hypotenuse = $sides[2];\n\t$cathetus1 = $sides[1];\n\t$cathetus2 = $sides[0];\n\
    \tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given a string,\
    \ return a new string where the first and last characters have\nbeen exchanged.\n\
    Example:\n>>> front_back('code')\n'eodc'\n>>> front_back('a')\n'a'\n>>> front_back('ab')\n\
    'ba'*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \t$hypotenuse2 = pow($hypotenuse, 2);\n\t$side12 = pow($side1, 2);\n\t$side22\
    \ = pow($side2, 2);\n\tif ($hypotenuse2 == $side12 + $side22) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4, 5) . PHP_EOL;\n\
    echo right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$sum = $a + $b + $c;\n\t$sum -= $hypotenuse;\n\tif ($sum > $hypotenuse) {\n\t\
    \treturn false;\n\t}\n\tif ($sum == $hypotenuse) {\n\t\treturn true;\n\t}\n}\n\
    echo right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu3_ozws.php:29\n\
    Stack trace:\n#0 /tmp/tmpyu3_ozws.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyu3_ozws.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if (($a * $a) + ($b * $b) ==\
    \ ($c * $c)) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\n\necho right_angle_triangle(3, 4, 5);\necho right_angle_triangle(1, 2,\
    \ 3);\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsf109jhs.php:28\n\
    Stack trace:\n#0 /tmp/tmpsf109jhs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsf109jhs.php\
    \ on line 28\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = ($a + $b + $c) - $hypotenuse\
    \ - $cathetus1;\n    return ($hypotenuse**2 == $cathetus1**2 + $cathetus2**2);\n\
    }\n\n/* Given a number. Return true if it is a prime number, false otherwise.\n\
    A prime number is a number that is divisible only by 1 and itself.\nExample:\n\
    >>> is_prime(5)\ntrue\n>>> is_prime(4)\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $a2 = $a * $a;\n  $b2 = $b * $b;\n\
    \  $c2 = $c * $c;\n  if ($a2 + $b2 == $c2) {\n    return true;\n  } elseif ($a2\
    \ + $c2 == $b2) {\n    return true;\n  } elseif ($b2 + $c2 == $a2) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a word that reads the\
    \ same backwards as it does forwards.\nExample:\n>>> palindrome('racecar')\ntrue\n\
    >>> palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n\
    \    } elseif ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 +\
    \ $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n \
    \   }\n}\n\n/* Given a string, return the number of vowels in the string.\nExample:\n\
    >>> count_vowels('hello')\n2\n>>> count_vowels('world')\n1\n>>> count_vowels('aaaa')\n\
    4\n>>> count_vowels('bbbb')\n0*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that is the same\
    \ when read forwards or backwards.\nExample:\n>>> palindrome('racecar')\ntrue\n\
    >>> palindrome('tacocat')\ntrue\n>>> palindrome('taco cat')\nfalse\n>>> palindrome('tacocatX')\n\
    false*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    $hypotenuse_squared = pow($hypotenuse, 2);\n\
    \    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared = pow($cathetus2,\
    \ 2);\n    if ($hypotenuse_squared == $cathetus1_squared + $cathetus2_squared)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/*\
    \ Given a list of numbers, return the sum of the numbers.\nExample:\n>>> sum_of_numbers([1,\
    \ 2, 3])\n6\n>>> sum_of_numbers([1, 2, 3, 4])\n10*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = ($a + $b + $c) - $hypotenuse\
    \ - $cathetus1;\n    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = pow($a, 2);\n\t$b = pow($b,\
    \ 2);\n\t$c = pow($c, 2);\n\tif ($a + $b == $c) {\n\t\treturn true;\n\t} elseif\
    \ ($a + $c == $b) {\n\t\treturn true;\n\t} elseif ($b + $c == $a) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3, 4,\
    \ 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = array_pop($sides);\n\t$sum_of_squares = array_reduce($sides,\
    \ function($carry, $item) {\n\t\treturn $carry + $item * $item;\n\t}, 0);\n\t\
    return $hypotenuse * $hypotenuse == $sum_of_squares;\n}\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return $sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n\
    }\n\n/* Given a string, return true if it is a palindrome, false otherwise.\n\
    Example:\n>>> palindrome('abba')\ntrue\n>>> palindrome('abc')\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a2 = $a * $a;\n\t$b2 = $b * $b;\n\
    \t$c2 = $c * $c;\n\tif ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2 + $c2 == $a2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$cathetus1 = min($a, $b, $c);\n\t$cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \t$square_hypotenuse = pow($hypotenuse, 2);\n\t$square_side1 = pow($side1, 2);\n\
    \t$square_side2 = pow($side2, 2);\n\tif ($square_hypotenuse == $square_side1 +\
    \ $square_side2) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given a number\
    \ n, return true if n is in the range 1..10, inclusive.\nUnless outside_mode is\
    \ true, in which case return true if the number is less\nor equal to 1, or greater\
    \ or equal to 10.\nExample:\n>>> in1to10(5, false)\ntrue\n>>> in1to10(11, false)\n\
    false\n>>> in1to10(11, true)\ntrue*/\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\n\
    /* Given a string, return true if the string is a palindrome, false otherwise.\n\
    A palindrome is a string that reads the same forwards and backwards.\nExample:\n\
    >>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$a = abs($a);\n\t$b = abs($b);\n\
    \t$c = abs($c);\n\tif ($a > $b && $a > $c) {\n\t\treturn $a * $a == $b * $b +\
    \ $c * $c;\n\t} elseif ($b > $a && $b > $c) {\n\t\treturn $b * $b == $a * $a +\
    \ $c * $c;\n\t} elseif ($c > $a && $c > $b) {\n\t\treturn $c * $c == $a * $a +\
    \ $b * $b;\n\t}\n\treturn false;\n}\n\n/* Given a number, return true if it is\
    \ a prime number, false otherwise.\nA prime number is a number that is only divisible\
    \ by itself and 1.\nExample:\n>>> is_prime(7)\ntrue\n>>> is_prime(10)\nfalse*/\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = ($a + $b + $c) - $hypotenuse\
    \ - $cathetus1;\n    return ($hypotenuse * $hypotenuse) == ($cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2);\n}\n\necho right_angle_triangle(3, 4, 5) . PHP_EOL;\n\
    echo right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  if ($a > $b && $a > $c) {\n   \
    \ if ($a * $a == $b * $b + $c * $c) {\n      return true;\n    }\n  } else if\
    \ ($b > $a && $b > $c) {\n    if ($b * $b == $a * $a + $c * $c) {\n      return\
    \ true;\n    }\n  } else if ($c > $a && $c > $b) {\n    if ($c * $c == $a * $a\
    \ + $b * $b) {\n      return true;\n    }\n  }\n  return false;\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \tif ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n        return false;\n    }\n    $max = max($a, $b, $c);\n    $sum\
    \ = $a + $b + $c;\n    if ($max == $a) {\n        return ($b * $b + $c * $c) ==\
    \ ($a * $a);\n    } else if ($max == $b) {\n        return ($a * $a + $c * $c)\
    \ == ($b * $b);\n    } else {\n        return ($a * $a + $b * $b) == ($c * $c);\n\
    \    }\n}\n\n/* Given a string, return the length of the longest substring without\
    \ repeating\ncharacters.\nExample:\n>>> longest_substring(\"abcabcbb\")\n3\n>>>\
    \ longest_substring(\"bbbbb\")\n1\n>>> longest_substring(\"pwwkew\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n  $arr = [$a, $b, $c];\n  sort($arr);\n\
    \  $a = $arr[0];\n  $b = $arr[1];\n  $c = $arr[2];\n  if ($a * $a + $b * $b ==\
    \ $c * $c) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho\
    \ right_angle_triangle(3, 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    return $a * $a == $b * $b + $c * $c;\n\t} elseif ($b > $a && $b > $c) {\n\t\t\
    return $b * $b == $a * $a + $c * $c;\n\t} else {\n\t\treturn $c * $c == $a * $a\
    \ + $b * $b;\n\t}\n}\n\n/* Given a string, return the number of vowels in the\
    \ string.\nExample:\n>>> vowels('Hello')\n2\n>>> vowels('Why')\n0*/\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$others = array_diff([$a, $b, $c], [$hypotenuse]);\n\t$sum_of_squares = array_sum(array_map(function($x)\
    \ { return $x * $x; }, $others));\n\treturn $hypotenuse * $hypotenuse == $sum_of_squares;\n\
    }\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\necho right_angle_triangle(5, 3, 4) . \"\\n\";\necho right_angle_triangle(4,\
    \ 5, 3) . \"\\n\";\necho right_angle_triangle(3, 5, 4) . \"\\n\";\necho right_angle_triangle(4,\
    \ 3, 5) . \"\\n\";\necho right_angle_triangle(5, 4, 3) . \"\\n\";\necho right_angle_triangle(3,\
    \ 3, 3) . \"\\n\";\necho right_angle_triangle(3, 3, 4) . \"\\n\";\necho right_angle_triangle(3,\
    \ 4, 3) . \"\\n\";\necho right_angle_triangle(4, 3, 3) . \"\\n\";\necho right_angle_triangle(3,\
    \ 3, 5) . \"\\n\";\necho right_angle_triangle(3, 5, 3) . \"\\n\";\necho right_angle_triangle(5,\
    \ 3, 3) . \"\\n\";\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(3,\
    \ 5, 4) . \"\\n\";\necho right_angle_triangle(4, 3, 5) . \"\\n\";\necho right_angle_triangle(4,\
    \ 5, 3) . \"\\n\";\necho right_angle_triangle(5, 3, 4) . \"\\n\";\necho right_angle_triangle(5,\
    \ 4, 3) . \"\\n\";\necho right_angle_triangle(3, 3, 7) . \"\\n\";\necho right_angle_triangle\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp9imolzt4.php on line 40

    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    $hypotenuse_squared = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1,\
    \ 2);\n    $cathetus2_squared = pow($cathetus2, 2);\n    $sum_of_cathetus_squared\
    \ = $cathetus1_squared + $cathetus2_squared;\n    if ($hypotenuse_squared == $sum_of_cathetus_squared)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$side1 = min($a, $b, $c);\n\t$side2 = ($a + $b + $c) - $hypotenuse - $side1;\n\
    \treturn $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n\n\
    /* Given a string, return the length of the longest substring without repeating\n\
    characters.\nExample:\n>>> longest_substring(\"abcabcbb\")\n3\n>>> longest_substring(\"\
    bbbbb\")\n1\n>>> longest_substring(\"pwwkew\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    /* Given a list of numbers, return true if the list contains a number that \n\
    appears more than once.\nExample:\n>>> contains_duplicate([1, 2, 3, 4, 5])\nfalse\n\
    >>> contains_duplicate([1, 2, 3, 4, 5, 2])\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = array($a, $b, $c);\n\t\
    sort($sides);\n\t$hypotenuse = $sides[2];\n\t$adjacent = $sides[1];\n\t$opposite\
    \ = $sides[0];\n\tif ($hypotenuse * $hypotenuse == $adjacent * $adjacent + $opposite\
    \ * $opposite) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ right_angle_triangle(3, 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    $hypotenuse = $a;\n\t\t$cathetus1 = $b;\n\t\t$cathetus2 = $c;\n\t} elseif ($b\
    \ > $a && $b > $c) {\n\t\t$hypotenuse = $b;\n\t\t$cathetus1 = $a;\n\t\t$cathetus2\
    \ = $c;\n\t} else {\n\t\t$hypotenuse = $c;\n\t\t$cathetus1 = $a;\n\t\t$cathetus2\
    \ = $b;\n\t}\n\tif ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nA palindrome is a string that is the same\
    \ when reversed.\nExample:\n>>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\n\
    false*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    if ($hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    return $a * $a == $b * $b + $c * $c;\n\t} elseif ($b > $a && $b > $c) {\n\t\t\
    return $b * $b == $a * $a + $c * $c;\n\t} else {\n\t\treturn $c * $c == $a * $a\
    \ + $b * $b;\n\t}\n}\n\n/* Given a list of numbers, return the sum of the numbers.\n\
    Example:\n>>> sum_of_numbers([1, 2, 3])\n6\n>>> sum_of_numbers([5, 10, 15])\n\
    30*/\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif ($a > $b && $a > $c) {\n\t\t\
    if ($a * $a == $b * $b + $c * $c) {\n\t\t\treturn true;\n\t\t}\n\t} elseif ($b\
    \ > $a && $b > $c) {\n\t\tif ($b * $b == $a * $a + $c * $c) {\n\t\t\treturn true;\n\
    \t\t}\n\t} elseif ($c > $a && $c > $b) {\n\t\tif ($c * $c == $a * $a + $b * $b)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho right_angle_triangle(3,\
    \ 4, 5);\necho right_angle_triangle(1, 2, 3);\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    return $sides[0] * $sides[0] + $sides[1] * $sides[1] ==\
    \ $sides[2] * $sides[2];\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b\
    \ * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n\
    \    } elseif ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 +\
    \ $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n \
    \   }\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if (($a * $a) + ($b * $b) ==\
    \ ($c * $c)) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\n\necho right_angle_triangle(3, 4, 5);\necho \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcb__khkr.php:30\n\
    Stack trace:\n#0 /tmp/tmpcb__khkr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcb__khkr.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 **\
    \ 2;\n}\n\n/* Given a string, return true if it is a palindrome, false otherwise.\n\
    A palindrome is a string that reads the same forwards and backwards.\nExample:\n\
    >>> palindrome('racecar')\ntrue\n>>> palindrome('hello')\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return a new string\
    \ with the characters in reverse order.\nExample:\n>>> reverse_string('hello')\n\
    'olleh'\n>>> reverse_string('world')\n'dlrow'*/\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$hypotenuse = max($a, $b, $c);\n\
    \t$cathetus1 = min($a, $b, $c);\n\t$cathetus2 = ($a + $b + $c) - $hypotenuse -\
    \ $cathetus1;\n\tif ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2\
    \ * $cathetus2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    if ($a > $b && $a > $c) {\n \
    \       return $a * $a == $b * $b + $c * $c;\n    } elseif ($b > $a && $b > $c)\
    \ {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n\n/* Given a string, return true if\
    \ it is a palindrome, false otherwise.\nExample:\n>>> is_palindrome('racecar')\n\
    true\n>>> is_palindrome('hello')\nfalse*/\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    if ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2\
    \ ** 2) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$sides = [$a, $b, $c];\n\tsort($sides);\n\
    \tif ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho right_angle_triangle(3,\
    \ 4, 5);\necho \"\\n\";\necho right_angle_triangle(1, 2, 3);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\t$arr = array($a, $b, $c);\n\tsort($arr);\n\
    \tif ($arr[0] * $arr[0] + $arr[1] * $arr[1] == $arr[2] * $arr[2]) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\\
    n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return true\
    \ if the three\nsides form a right-angled triangle, false otherwise.\nA right-angled\
    \ triangle is a triangle in which one angle is right angle or \n90 degree.\nExample:\n\
    >>> right_angle_triangle(3, 4, 5)\ntrue\n>>> right_angle_triangle(1, 2, 3)\nfalse*/\n\
    function right_angle_triangle($a, $b, $c) {\n\tif (($a*$a) + ($b*$b) == ($c*$c))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jnn99kj.php:28\n\
    Stack trace:\n#0 /tmp/tmp6jnn99kj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6jnn99kj.php\
    \ on line 28\n"
  timestamp: 1660220717

language: php
name: HumanEval_145_order_by_points
results:
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\n$nums = array(1, 11, -1, -11, -12);\n\
    print_r(order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv13u523.php:27\n\
    Stack trace:\n#0 /tmp/tmpnv13u523.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnv13u523.php\
    \ on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($item) use\
    \ ($nums) {\n        return $nums[$item];\n    }, $result);\n    return $result;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar62sh28.php:30\n\
    Stack trace:\n#0 /tmp/tmpar62sh28.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpar62sh28.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitsyt059.php:30\n\
    Stack trace:\n#0 /tmp/tmpitsyt059.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpitsyt059.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = [];\n  foreach ($nums as $key => $num) {\n\
    \    $sum[$key] = array_sum(str_split($num));\n  }\n  array_multisort($sum, SORT_ASC,\
    \ $nums);\n  return $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpy9ffffpl.php:27\nStack trace:\n#0 /tmp/tmpy9ffffpl.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpy9ffffpl.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which takes a\
    \ string as an argument\nand returns the first character which is not repeated\n\
    anywhere in the string.\nFor example:\n>>> first_non_repeated_character('aabbcc')\n\
    'b'\n>>> first_non_repeated_character('abcdef')\n'a'\n>>> first_non_repeated_character('aabbccddeeff')\n\
    'g'\n*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3yhuk1o.php:36\n\
    Stack trace:\n#0 /tmp/tmp_3yhuk1o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_3yhuk1o.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach ($nums\
    \ as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n \
    \   }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n/* Write a function which returns\
    \ the sum of all the numbers\nin the given array.\nFor example:\n>>> sum_of_numbers(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_numbers(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokf8cdpq.php:36\n\
    Stack trace:\n#0 /tmp/tmpokf8cdpq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpokf8cdpq.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($num) use\
    \ ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg03u0ujo.php:31\nStack trace:\n#0 /tmp/tmpg03u0ujo.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg03u0ujo.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($item) use\
    \ ($nums) {\n        return $nums[$item];\n    }, $result);\n    return $result;\n\
    }\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhru6w40.php:31\n\
    Stack trace:\n#0 /tmp/tmpyhru6w40.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyhru6w40.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_arr = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum = 0;\n        while ($value != 0) {\n           \
    \ $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        $sum_arr[$key] = $sum;\n    }\n    asort($sum_arr);\n    $result = array();\n\
    \    foreach ($sum_arr as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -12\n    [1] => -11\n    [2] => -1\n    [3] => 1\n\
    \    [4] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgob2h8t1.php:36\n\
    Stack trace:\n#0 /tmp/tmpgob2h8t1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgob2h8t1.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ SORT_ASC, $nums);\n\treturn $nums;\n}\n\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ay_a6xf.php:26\n\
    Stack trace:\n#0 /tmp/tmp4ay_a6xf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4ay_a6xf.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbyzrt3r.php:29\n\
    Stack trace:\n#0 /tmp/tmphbyzrt3r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphbyzrt3r.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    $result = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8ymcmb5.php:37\n\
    Stack trace:\n#0 /tmp/tmpb8ymcmb5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpb8ymcmb5.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $arr = [];\n  foreach ($nums as $key => $value)\
    \ {\n    $arr[$key] = array_sum(str_split($value));\n  }\n  asort($arr);\n  $result\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp070fl6jw.php:29\n\
    Stack trace:\n#0 /tmp/tmp070fl6jw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp070fl6jw.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzynoq4.php:29\n\
    Stack trace:\n#0 /tmp/tmpahzynoq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpahzynoq4.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function($key) use ($nums) {\n\
    \        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n$nums\
    \ = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdozwrpu.php:37\n\
    Stack trace:\n#0 /tmp/tmpmdozwrpu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmdozwrpu.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_nums = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum_nums[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($sum_nums);\n    $result = array();\n    foreach ($sum_nums as $key\
    \ => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazouk3lk.php:31\n\
    Stack trace:\n#0 /tmp/tmpazouk3lk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpazouk3lk.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum_array = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n \
    \     $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sum_array[$key]\
    \ = $sum;\n  }\n  asort($sum_array);\n  $result = array();\n  foreach ($sum_array\
    \ as $key => $value) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg75me2su.php:37\nStack trace:\n#0 /tmp/tmpg75me2su.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg75me2su.php on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sums = [];\n\tforeach ($nums as $key => $num) {\n\
    \t\t$sum = 0;\n\t\t$num = abs($num);\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num\
    \ % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\t$sums[$key] = $sum;\n\t}\n\
    \tasort($sums);\n\t$result = [];\n\tforeach ($sums as $key => $sum) {\n\t\t$result[]\
    \ = $nums[$key];\n\t}\n\treturn $result;\n}\n\n/* Write a function which returns\
    \ the number of days in a month\nfor a given year and month.\nFor example:\n>>>\
    \ days_in_month(2016, 2)\n29\n>>> days_in_month(2016, 3)\n31\n>>> days_in_month(2015,\
    \ 2)\n28*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5s8mzdk.php:44\n\
    Stack trace:\n#0 /tmp/tmpx5s8mzdk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpx5s8mzdk.php\
    \ on line 44\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qvyf56o.php:25\n\
    Stack trace:\n#0 /tmp/tmp2qvyf56o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2qvyf56o.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result =\
    \ array_keys($result);\n    $result = array_map(function($item) use ($nums) {\n\
    \        return $nums[$item];\n    }, $result);\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyc8liy2.php:36\n\
    Stack trace:\n#0 /tmp/tmpoyc8liy2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoyc8liy2.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0a3xkz3.php:35\n\
    Stack trace:\n#0 /tmp/tmpi0a3xkz3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi0a3xkz3.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3yuuigu.php:36\n\
    Stack trace:\n#0 /tmp/tmpk3yuuigu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpk3yuuigu.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of all the numbers\nin the given array of integers.\nFor example:\n\
    >>> sum_of_numbers(array(1, 2, 3, 4, 5))\n15\n>>> sum_of_numbers(array(1, -1,\
    \ 2, -2, 3, -3))\n0\n>>> sum_of_numbers(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpiz23ls.php:34\n\
    Stack trace:\n#0 /tmp/tmpbpiz23ls.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbpiz23ls.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    foreach ($arr as $key => $value) {\n        $arr[$key] = $nums[$key];\n \
    \   }\n    return $arr;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => -1\n    [1] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5225j0c.php:28\n\
    Stack trace:\n#0 /tmp/tmpa5225j0c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa5225j0c.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    $result = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6no7evf.php:29\n\
    Stack trace:\n#0 /tmp/tmpi6no7evf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi6no7evf.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums = array_map(function($num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    asort($nums);\n    return array_keys($nums);\n}\n\
    \n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug880cry.php:32\n\
    Stack trace:\n#0 /tmp/tmpug880cry.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpug880cry.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of all the numbers\nin the given array.\nFor example:\n>>> sum_of_array(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_array(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlqtyazq.php:32\n\
    Stack trace:\n#0 /tmp/tmpxlqtyazq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxlqtyazq.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $new_nums = array();\n    $sum = 0;\n    foreach\
    \ ($nums as $key => $value) {\n        $sum = 0;\n        $value = (string)$value;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            $sum += $value[$i];\n\
    \        }\n        $new_nums[$key] = $sum;\n    }\n    asort($new_nums);\n  \
    \  $result = array();\n    foreach ($new_nums as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string\
    \ in /tmp/tmp2hqkahnm.php:18\nStack trace:\n#0 /tmp/tmp2hqkahnm.php(31): order_by_points(Array)\n\
    #1 {main}\n  thrown in /tmp/tmp2hqkahnm.php on line 18\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrla0y1r.php:35\n\
    Stack trace:\n#0 /tmp/tmpkrla0y1r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkrla0y1r.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\necho '<pre>';\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] =>\
    \ 11\n    [4] => -12\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpk25xnioj.php:28\nStack trace:\n#0 /tmp/tmpk25xnioj.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmpk25xnioj.php on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum = 0;\n        $value = abs($value);\n        while ($value >\
    \ 0) {\n            $sum += $value % 10;\n            $value = floor($value /\
    \ 10);\n        }\n        $arr[$key] = $sum;\n    }\n    asort($arr);\n    $result\
    \ = [];\n    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3voxnbe_.php:36\n\
    Stack trace:\n#0 /tmp/tmp3voxnbe_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3voxnbe_.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n/* Write a function which returns\
    \ the sum of the digits of the given integer.\nFor example:\n>>> sum_of_digits(123)\n\
    6\n>>> sum_of_digits(0)\n0\n>>> sum_of_digits(-123)\n6*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0dbxp0z.php:37\n\
    Stack trace:\n#0 /tmp/tmpa0dbxp0z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa0dbxp0z.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kj8ugio.php:29\n\
    Stack trace:\n#0 /tmp/tmp1kj8ugio.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1kj8ugio.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums = array_map(function($num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    asort($nums);\n    return array_keys($nums);\n}\n\
    \n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug880cry.php:32\n\
    Stack trace:\n#0 /tmp/tmpug880cry.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpug880cry.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums = array_map(function($num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    asort($nums);\n    return array_keys($nums);\n}\n\
    \n/* Write a function which returns the sum of the digits of the given integer.\n\
    For example:\n>>> sum_of_digits(123)\n6\n>>> sum_of_digits(1325132435356)\n43\n\
    >>> sum_of_digits(0)\n0\n>>> sum_of_digits(-10)\n1*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgl1opza.php:40\n\
    Stack trace:\n#0 /tmp/tmpcgl1opza.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcgl1opza.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\n\n$nums\
    \ = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9eq4tue.php:31\n\
    Stack trace:\n#0 /tmp/tmpg9eq4tue.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg9eq4tue.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_nums = array();\n    foreach ($nums as $num)\
    \ {\n        $sum_nums[] = array_sum(str_split($num));\n    }\n    array_multisort($sum_nums,\
    \ $nums);\n    return $nums;\n}\n\n/* Write a function which takes an array of\
    \ integers and returns\nthe number of integers which are divisible by 3.\nFor\
    \ example:\n>>> count_divisible_by_3(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n4\n\
    >>> count_divisible_by_3(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15))\n7\n>>> count_divisible_by_3(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvz487bd.php:34\n\
    Stack trace:\n#0 /tmp/tmphvz487bd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphvz487bd.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    $result = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrc8vkkb.php:29\n\
    Stack trace:\n#0 /tmp/tmpsrc8vkkb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsrc8vkkb.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which takes an\
    \ array of integers and returns\nthe sum of the integers that are evenly divisible\
    \ by 3.\nFor example:\n>>> sum_of_three(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\n18\n\
    >>> sum_of_three(array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))\n27\n>>> sum_of_three(array())\n\
    0*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17gat7e0.php:34\n\
    Stack trace:\n#0 /tmp/tmp17gat7e0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp17gat7e0.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\n\n/* Write a function which takes a string as\
    \ an argument\nand returns a string with the first letter of each word\ncapitalized\
    \ and all other letters lowercase.\nFor example:\n>>> capitalize(\"hello world\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    HELLO WORLD!\")\n\"Hello World!\"\n>>> capitalize(\"hello WORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"hello WORLD!\")\n\"Hello World!\"\n>>> capitalize(\"hello,\
    \ WORLD!\")\n\"Hello, World!\"\n>>> capitalize(\"hello, world!\")\n\"Hello, World!\"\
    \n>>> capitalize(\"hello, world! hello, world!\")\n\"Hello, World! Hello, World!\"\
    \n>>> capitalize(\"HELLO, WORLD! HELLO, WORLD!\")\n\"Hello, World! Hello, World!\"\
    \n>>> capitalize(\"HELLO, WORLD! HELLO, WORLD! HELLO, WORLD!\")\n\"Hello, World!\
    \ Hello, World! Hello, World!\"\n>>> capitalize(\"HELLO, WORLD! HELLO, WORLD!\
    \ HELLO, WORLD! HELLO, WORLD!\")\n\"Hello, World! Hello, World! Hello, World!\
    \ Hello, World!\"\n>>> capitalize(\"HELLO, WORLD! HELLO, WORLD! HELLO, WORLD!\
    \ HELLO, WORLD! HELLO, WORLD!\")\n\"Hello, World! Hello, World! Hello, World!\
    \ Hello, World! Hello, World!\"\n>>> capitalize(\"HELLO, WORLD! HELLO, WORLD!\
    \ HELLO, WORLD! HELLO, WORLD! HELLO, WORLD! HELLO, WORLD!\")\n\"Hello, World!\
    \ Hello, World! Hello, World! Hello, World! Hello\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmpem77h1g5.php on
    line 30

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $res =\
    \ array();\n    foreach ($sums as $key => $sum) {\n        $res[] = $nums[$key];\n\
    \    }\n    return $res;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyq2r9vxo.php:37\n\
    Stack trace:\n#0 /tmp/tmpyq2r9vxo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyq2r9vxo.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwygmkaxv.php:25\n\
    Stack trace:\n#0 /tmp/tmpwygmkaxv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwygmkaxv.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    $count = count($nums);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $sum[$i] = array_sum(str_split($nums[$i]));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jtdnerc.php:30\n\
    Stack trace:\n#0 /tmp/tmp_jtdnerc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_jtdnerc.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    $result = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(order_by_points(array()));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n</pre><pre>Array\n(\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpg0ykzrhg.php:36\nStack trace:\n#0 /tmp/tmpg0ykzrhg.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpg0ykzrhg.php on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qjji30i.php:36\n\
    Stack trace:\n#0 /tmp/tmp4qjji30i.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4qjji30i.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = array();\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrrxy7cq.php:30\n\
    Stack trace:\n#0 /tmp/tmpsrrxy7cq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsrrxy7cq.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = [];\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = $value;\n\t\t$sum[$key] = array_sum(str_split($value));\n\
    \t}\n\tarray_multisort($sum, SORT_ASC, $nums);\n\treturn $nums;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbczjkx2g.php:26\n\
    Stack trace:\n#0 /tmp/tmpbczjkx2g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbczjkx2g.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum = 0;\n        $temp = $value;\n        while ($temp\
    \ != 0) {\n            $sum += $temp % 10;\n            $temp = (int)($temp /\
    \ 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result2 = array();\n    foreach ($result as $key => $value) {\n        $result2[]\
    \ = $nums[$key];\n    }\n    return $result2;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -12\n    [1] => -11\n    [2] => -1\n    [3] => 1\n\
    \    [4] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zutrsg0.php:37\n\
    Stack trace:\n#0 /tmp/tmp_zutrsg0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_zutrsg0.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    $result = array();\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n/* Write a function which returns\
    \ the sum of the first n\nnumbers of the Fibonacci sequence.\nFor example:\n>>>\
    \ fibonacci(1)\n1\n>>> fibonacci(2)\n1\n>>> fibonacci(3)\n2\n>>> fibonacci(4)\n\
    3\n>>> fibonacci(5)\n5\n>>> fibonacci(6)\n8\n>>> fibonacci(7)\n13\n>>> fibonacci(8)\n\
    21\n>>> fibonacci(9)\n34\n>>> fibonacci(10)\n55*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3euvuuqx.php:52\n\
    Stack trace:\n#0 /tmp/tmp3euvuuqx.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp3euvuuqx.php\
    \ on line 52\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgm61vlky.php:31\nStack trace:\n#0 /tmp/tmpgm61vlky.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgm61vlky.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzynoq4.php:29\n\
    Stack trace:\n#0 /tmp/tmpahzynoq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpahzynoq4.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbyzrt3r.php:29\n\
    Stack trace:\n#0 /tmp/tmphbyzrt3r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphbyzrt3r.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    $sum = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66i7psc9.php:29\n\
    Stack trace:\n#0 /tmp/tmp66i7psc9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66i7psc9.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    $result = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9moh51c.php:29\n\
    Stack trace:\n#0 /tmp/tmpc9moh51c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc9moh51c.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ SORT_ASC, $nums);\n\treturn $nums;\n}\n\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpy5oxbjb8.php:27\nStack trace:\n#0 /tmp/tmpy5oxbjb8.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpy5oxbjb8.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\n\n$nums = [1, 11, -1, -11, -12];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5mng9ey.php:37\n\
    Stack trace:\n#0 /tmp/tmpy5mng9ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy5mng9ey.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptolskwrv.php:26\n\
    Stack trace:\n#0 /tmp/tmptolskwrv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptolskwrv.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzynoq4.php:29\n\
    Stack trace:\n#0 /tmp/tmpahzynoq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpahzynoq4.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of all the integers\nin the given array.\nFor example:\n>>> sum_of_integers(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_integers(array(1, 2, 3, 4, -5))\n5\n>>> sum_of_integers(array(1,\
    \ 2, 3, 4, -5, -6))\n-1\n>>> sum_of_integers(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu8gq5fg.php:36\n\
    Stack trace:\n#0 /tmp/tmpcu8gq5fg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcu8gq5fg.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrla0y1r.php:35\n\
    Stack trace:\n#0 /tmp/tmpkrla0y1r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkrla0y1r.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n$nums = array(1, 11, -1, -11, -12);\n\
    print_r(order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbnb97zv.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbnb97zv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfbnb97zv.php\
    \ on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2\
    \ = [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0a3xkz3.php:35\n\
    Stack trace:\n#0 /tmp/tmpi0a3xkz3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi0a3xkz3.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$arr = [];\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$arr[$key] = array_sum(str_split($value));\n\t}\n\tasort($arr);\n\t$result\
    \ = [];\n\tforeach ($arr as $key => $value) {\n\t\t$result[] = $nums[$key];\n\t\
    }\n\treturn $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97indzng.php:29\n\
    Stack trace:\n#0 /tmp/tmp97indzng.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp97indzng.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $result = [];\n  foreach ($nums as $key => $num)\
    \ {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum\
    \ += $num % 10;\n      $num = floor($num / 10);\n    }\n    $result[$key] = $sum;\n\
    \  }\n  asort($result);\n  $result = array_keys($result);\n  $sorted = [];\n \
    \ foreach ($result as $key) {\n    $sorted[] = $nums[$key];\n  }\n  return $sorted;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    $sum = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66i7psc9.php:29\n\
    Stack trace:\n#0 /tmp/tmp66i7psc9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66i7psc9.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sum = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $nums_sum[$key] = array_sum(str_split($value));\n    }\n\
    \    array_multisort($nums_sum, SORT_ASC, $nums);\n    return $nums;\n}\n\n/*\
    \ Write a function which returns the sum of the digits of the given integer.\n\
    For example:\n>>> sum_of_digits(123)\n6\n>>> sum_of_digits(0)\n0\n>>> sum_of_digits(-123)\n\
    6*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2bbyyn5.php:33\n\
    Stack trace:\n#0 /tmp/tmpe2bbyyn5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpe2bbyyn5.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $points = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $points[$key] = array_sum(str_split($num));\n    }\n   \
    \ array_multisort($points, SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpudxxaqnk.php:27\nStack trace:\n#0 /tmp/tmpudxxaqnk.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpudxxaqnk.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => -11\n    [2] => -12\n    [3] => 1\n\
    \    [4] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhdxpvdd.php:36\n\
    Stack trace:\n#0 /tmp/tmpvhdxpvdd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvhdxpvdd.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1g094g0.php:31\n\
    Stack trace:\n#0 /tmp/tmpd1g094g0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd1g094g0.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzynoq4.php:29\n\
    Stack trace:\n#0 /tmp/tmpahzynoq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpahzynoq4.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = $value;\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\n\
    print_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnmnx4lv.php:27\n\
    Stack trace:\n#0 /tmp/tmpvnmnx4lv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvnmnx4lv.php\
    \ on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = 0;\n\t$arr = array();\n\tforeach ($nums as\
    \ $key => $value) {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\t\twhile ($value\
    \ > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = floor($value / 10);\n\t\t\
    }\n\t\t$arr[$key] = $sum;\n\t}\n\tasort($arr);\n\t$result = array();\n\tforeach\
    \ ($arr as $key => $value) {\n\t\t$result[] = $nums[$key];\n\t}\n\treturn $result;\n\
    }\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4gsqozl.php:36\n\
    Stack trace:\n#0 /tmp/tmpc4gsqozl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc4gsqozl.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $arr = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $arr[$key] = array_sum(str_split($value));\n  }\n  asort($arr);\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qr1olkm.php:29\n\
    Stack trace:\n#0 /tmp/tmp2qr1olkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qr1olkm.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($item) use\
    \ ($nums) {\n        return $nums[$item];\n    }, $result);\n    return $result;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyawg_7m8.php:31\nStack trace:\n#0 /tmp/tmpyawg_7m8.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyawg_7m8.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $new_nums = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $new_nums[$key] = array_sum(str_split($num));\n    }\n    asort($new_nums);\n\
    \    foreach ($new_nums as $key => $num) {\n        $new_nums[$key] = $nums[$key];\n\
    \    }\n    return $new_nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => -1\n    [1] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqfdyuo1.php:29\n\
    Stack trace:\n#0 /tmp/tmppqfdyuo1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppqfdyuo1.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of all the integers\nin the given array.\nFor example:\n>>> sum_of_integers(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_of_integers(array(-1, -2, -3, -4, -5))\n-15\n>>> sum_of_integers(array())\n\
    0*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskry9yk9.php:34\n\
    Stack trace:\n#0 /tmp/tmpskry9yk9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpskry9yk9.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    $sum = 0;\n    foreach ($nums\
    \ as $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$sum][] = $num;\n    }\n    ksort($result);\n    $result\
    \ = array_reduce($result, 'array_merge', []);\n    return $result;\n}\n\nvar_dump(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nvar_dump(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(5) {\n  [0]=>\n  float(0)\n  [1]=>\n  float(0)\n  [2]=>\n  float(0)\n\
    \  [3]=>\n  float(0)\n  [4]=>\n  float(0)\n}\narray(0) {\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp61zut674.php:35\nStack trace:\n#0 /tmp/tmp61zut674.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp61zut674.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result2 = array();\n    foreach ($result as $key =>\
    \ $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs5s0h5h.php:29\n\
    Stack trace:\n#0 /tmp/tmpcs5s0h5h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcs5s0h5h.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sum = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $nums_sum[$key] = array_sum(str_split($value));\n    }\n\
    \    array_multisort($nums_sum, SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptz9s28f2.php:25\n\
    Stack trace:\n#0 /tmp/tmptz9s28f2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptz9s28f2.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $res = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $res[$key] = array_sum(str_split($num));\n    }\n    asort($res);\n\
    \    $res2 = [];\n    foreach ($res as $key => $num) {\n        $res2[] = $nums[$key];\n\
    \    }\n    return $res2;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91gq8zwt.php:29\n\
    Stack trace:\n#0 /tmp/tmp91gq8zwt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp91gq8zwt.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    $result = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl97cnmkc.php:30\n\
    Stack trace:\n#0 /tmp/tmpl97cnmkc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl97cnmkc.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpix9_14ka.php:27\nStack trace:\n#0 /tmp/tmpix9_14ka.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpix9_14ka.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $arr = [];\n  foreach ($nums as $key => $value)\
    \ {\n    $arr[$key] = array_sum(str_split($value));\n  }\n  asort($arr);\n  $result\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktcdpesp.php:30\n\
    Stack trace:\n#0 /tmp/tmpktcdpesp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpktcdpesp.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the number of times\nthat the string \"code\" appears anywhere in the given\
    \ string,\nexcept we'll accept any letter for the 'd', so \"cope\" and \"cooe\"\
    \ count.\nFor example:\n>>> count_code('aaacodebbb')\n1\n>>> count_code('codexxcode')\n\
    2\n>>> count_code('cozexxcope')\n2*/\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pnry190.php:35\n\
    Stack trace:\n#0 /tmp/tmp2pnry190.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2pnry190.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpne6dp00b.php:36\n\
    Stack trace:\n#0 /tmp/tmpne6dp00b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpne6dp00b.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwygmkaxv.php:25\n\
    Stack trace:\n#0 /tmp/tmpwygmkaxv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwygmkaxv.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_of_digits = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum_of_digits[$key] = array_sum(str_split($num));\n   \
    \ }\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72_94u7c.php:26\n\
    Stack trace:\n#0 /tmp/tmp72_94u7c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp72_94u7c.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kj8ugio.php:29\n\
    Stack trace:\n#0 /tmp/tmp1kj8ugio.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1kj8ugio.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_arr = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sum_arr[$key] = $sum;\n    }\n    asort($sum_arr);\n    $result\
    \ = array();\n    foreach ($sum_arr as $key => $value) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qxdqa6y.php:37\n\
    Stack trace:\n#0 /tmp/tmp_qxdqa6y.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_qxdqa6y.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = array();\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6v5l383.php:29\n\
    Stack trace:\n#0 /tmp/tmpl6v5l383.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl6v5l383.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwygmkaxv.php:25\n\
    Stack trace:\n#0 /tmp/tmpwygmkaxv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwygmkaxv.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = (int)($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  $new_result = [];\n    foreach ($result as $key => $value) {\n        $new_result[]\
    \ = $nums[$value];\n    }\n    return $new_result;\n}\n\n$nums = array(1, 11,\
    \ -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => -11\n    [2] => -12\n    [3] => 1\n\
    \    [4] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyd6ebzp1.php:37\n\
    Stack trace:\n#0 /tmp/tmpyd6ebzp1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyd6ebzp1.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ SORT_ASC, $nums);\n\treturn $nums;\n}\n\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ay_a6xf.php:26\n\
    Stack trace:\n#0 /tmp/tmp4ay_a6xf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4ay_a6xf.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9px49x47.php:29\n\
    Stack trace:\n#0 /tmp/tmp9px49x47.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9px49x47.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = $value;\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz62robv_.php:26\n\
    Stack trace:\n#0 /tmp/tmpz62robv_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz62robv_.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sums = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $nums_sums[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($nums_sums);\n    $result = array();\n    foreach ($nums_sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\
    print_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeuw4gjzx.php:29\n\
    Stack trace:\n#0 /tmp/tmpeuw4gjzx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpeuw4gjzx.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sums = array();\n\tforeach ($nums as $key => $num)\
    \ {\n\t\t$sum = 0;\n\t\twhile ($num != 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t\
    $num = (int)($num / 10);\n\t\t}\n\t\t$sums[$key] = $sum;\n\t}\n\tasort($sums);\n\
    \t$result = array();\n\tforeach ($sums as $key => $sum) {\n\t\t$result[] = $nums[$key];\n\
    \t}\n\treturn $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -12\n    [1] => -11\n    [2] => -1\n    [3] => 1\n\
    \    [4] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd26almcz.php:36\n\
    Stack trace:\n#0 /tmp/tmpd26almcz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd26almcz.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = [];\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ $nums);\n\treturn $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt72ychhw.php:26\n\
    Stack trace:\n#0 /tmp/tmpt72ychhw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt72ychhw.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sum = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $nums_sum[$key] = array_sum(str_split($num));\n    }\n \
    \   array_multisort($nums_sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpe_gmlofv.php:27\nStack trace:\n#0 /tmp/tmpe_gmlofv.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe_gmlofv.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppixnei_3.php:26\n\
    Stack trace:\n#0 /tmp/tmppixnei_3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppixnei_3.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1g094g0.php:31\n\
    Stack trace:\n#0 /tmp/tmpd1g094g0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd1g094g0.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjruco_xz.php:31\n\
    Stack trace:\n#0 /tmp/tmpjruco_xz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjruco_xz.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    foreach ($arr as $key => $value) {\n        $arr[$key] = $nums[$key];\n \
    \   }\n    return $arr;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => -1\n    [1] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8atr5hpl.php:28\n\
    Stack trace:\n#0 /tmp/tmp8atr5hpl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8atr5hpl.php\
    \ on line 28\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($num) use\
    \ ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg03u0ujo.php:31\nStack trace:\n#0 /tmp/tmpg03u0ujo.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg03u0ujo.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kj8ugio.php:29\n\
    Stack trace:\n#0 /tmp/tmp1kj8ugio.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1kj8ugio.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\n$result\
    \ = order_by_points($nums);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgw6nbx4w.php:38\n\
    Stack trace:\n#0 /tmp/tmpgw6nbx4w.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgw6nbx4w.php\
    \ on line 38\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of the first n\nelements of the given array.\nFor example:\n>>> sum_of_first_n(array(1,\
    \ 2, 3, 4, 5), 2)\n3\n>>> sum_of_first_n(array(1, 2, 3, 4, 5), 5)\n15\n>>> sum_of_first_n(array(1,\
    \ 2, 3, 4, 5), 0)\n0\n>>> sum_of_first_n(array(1, 2, 3, 4, 5), -1)\n0\n>>> sum_of_first_n(array(1,\
    \ 2, 3, 4, 5), 10)\n15\n>>> sum_of_first_n(array(), 10)\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptv8kdl4u.php:40\n\
    Stack trace:\n#0 /tmp/tmptv8kdl4u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptv8kdl4u.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    print_r(order_by_points(array()));\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_hg8iugu.php:33\nStack trace:\n#0 /tmp/tmp_hg8iugu.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_hg8iugu.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk65s1nn.php:29\n\
    Stack trace:\n#0 /tmp/tmpdk65s1nn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdk65s1nn.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqiqnghsg.php:37\nStack trace:\n#0 /tmp/tmpqiqnghsg.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqiqnghsg.php on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    if (empty($nums)) {\n        return $nums;\n \
    \   }\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\n/* Write a function which returns the sum of\
    \ the digits of the given integer.\nFor example:\n>>> sum_of_digits(123)\n6\n\
    >>> sum_of_digits(0)\n0\n>>> sum_of_digits(-123)\n6\n>>> sum_of_digits(123.45)\n\
    6\n>>> sum_of_digits('123')\n6\n>>> sum_of_digits('-123')\n6\n>>> sum_of_digits('123.45')\n\
    6\n>>> sum_of_digits('abc')\n0\n>>> sum_of_digits('')\n0\n>>> sum_of_digits('\
    \ ')\n0\n>>> sum_of_digits(null)\n0\n>>> sum_of_digits(true)\n1\n>>> sum_of_digits(false)\n\
    0\n>>> sum_of_digits(array())\n0\n>>> sum_of_digits(array(1, 2, 3))\n6\n>>> sum_of_digits(array('a',\
    \ 'b', 'c'))\n0\n>>> sum_of_digits(array(1, 2, 'c'))\n3\n>>> sum_of_digits(array(1,\
    \ 'b', 'c'))\n1\n>>> sum_of_digits(array('a', 'b', 3))\n3\n>>> sum_of_digits(array('a',\
    \ 2, 3))\n5\n>>> sum_of_digits(array(1, 'b', 3))\n4\n>>> sum_of_digits(array(1,\
    \ 'b', 'c'))\n1\n>>> sum_of_digits(array('a', 'b', 3))\n3\n>>> sum_of_digits(array('a',\
    \ 2, 3))\n5\n>>> sum_of_dig\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpgg9npfta.php on
    line 23

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result =\
    \ array_keys($result);\n    foreach ($result as $key => $value) {\n        $result[$key]\
    \ = $nums[$value];\n    }\n    return $result;\n}\n\n/* Write a function which\
    \ takes a string and returns the number of\nunique characters in the string.\n\
    For example:\n>>> count_unique_chars(\"abcde\")\n5\n>>> count_unique_chars(\"\
    aabbccdd\")\n2\n>>> count_unique_chars(\"\")\n0\n*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmq3a6ny.php:45\n\
    Stack trace:\n#0 /tmp/tmpzmq3a6ny.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzmq3a6ny.php\
    \ on line 45\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixtkuixo.php:36\nStack trace:\n#0 /tmp/tmpixtkuixo.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixtkuixo.php on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/*\n * Write a function which returns\
    \ the sum of all the elements in the array.\n * For example:\n * >>> sum_of_array(array(1,\
    \ 2, 3, 4))\n * 10\n * >>> sum_of_array(array())\n * 0\n */\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0qnz7xp.php:33\n\
    Stack trace:\n#0 /tmp/tmpa0qnz7xp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa0qnz7xp.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ SORT_ASC, $nums);\n\treturn $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ofrxq4b.php:25\n\
    Stack trace:\n#0 /tmp/tmp9ofrxq4b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9ofrxq4b.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    $result = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9moh51c.php:29\n\
    Stack trace:\n#0 /tmp/tmpc9moh51c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc9moh51c.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitsyt059.php:30\n\
    Stack trace:\n#0 /tmp/tmpitsyt059.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpitsyt059.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60i5qtbb.php:32\n\
    Stack trace:\n#0 /tmp/tmp60i5qtbb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp60i5qtbb.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums = array_map(function($num) {\n        return\
    \ $num + array_sum(str_split(abs($num)));\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\n/* Write a function which returns the sum\
    \ of the first n\nnumbers in the Fibonacci sequence.\nFor example:\n>>> fibonacci_sum(1)\n\
    1\n>>> fibonacci_sum(2)\n2\n>>> fibonacci_sum(3)\n4\n>>> fibonacci_sum(4)\n7\n\
    >>> fibonacci_sum(5)\n12*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw8m6mls.php:37\n\
    Stack trace:\n#0 /tmp/tmpmw8m6mls.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmw8m6mls.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11,\
    \ -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0ymmdi3.php:31\n\
    Stack trace:\n#0 /tmp/tmpb0ymmdi3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb0ymmdi3.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum_array = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum = 0;\n        $value = abs($value);\n        while\
    \ ($value > 0) {\n            $sum += $value % 10;\n            $value = floor($value\
    \ / 10);\n        }\n        $sum_array[$key] = $sum;\n    }\n    asort($sum_array);\n\
    \    $result = array();\n    foreach ($sum_array as $key => $value) {\n      \
    \  $result[] = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = array(1,\
    \ 11, -1, -11, -12);\necho \"<pre>\";\nprint_r(order_by_points($nums));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bsqrxiz.php:39\n\
    Stack trace:\n#0 /tmp/tmp5bsqrxiz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp5bsqrxiz.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $nums_sum = [];\n  foreach ($nums as $key => $value)\
    \ {\n    $nums_sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($nums_sum,\
    \ $nums);\n  return $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxpdcy9y.php:26\n\
    Stack trace:\n#0 /tmp/tmpaxpdcy9y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaxpdcy9y.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kj8ugio.php:29\n\
    Stack trace:\n#0 /tmp/tmp1kj8ugio.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1kj8ugio.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sum = [];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $nums_sum[$i] = array_sum(str_split($nums[$i]));\n    }\n \
    \   array_multisort($nums_sum, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpe1dk_1.php:25\n\
    Stack trace:\n#0 /tmp/tmpnpe1dk_1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnpe1dk_1.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sums = array();\n  foreach ($nums as $key => $num)\
    \ {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n  $result\
    \ = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    print_r(order_by_points(array()));\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4ktc0n4r.php:31\nStack trace:\n#0 /tmp/tmp4ktc0n4r.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4ktc0n4r.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    array_multisort($arr,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8os5dike.php:25\n\
    Stack trace:\n#0 /tmp/tmp8os5dike.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8os5dike.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzynoq4.php:29\n\
    Stack trace:\n#0 /tmp/tmpahzynoq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpahzynoq4.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum = 0;\n        $value = abs($value);\n        while\
    \ ($value > 0) {\n            $sum += $value % 10;\n            $value = floor($value\
    \ / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result2 = array();\n    foreach ($result as $key => $value) {\n        $result2[]\
    \ = $nums[$key];\n    }\n    return $result2;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqwk6f96.php:35\n\
    Stack trace:\n#0 /tmp/tmpvqwk6f96.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvqwk6f96.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11,\
    \ -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3yuuigu.php:36\n\
    Stack trace:\n#0 /tmp/tmpk3yuuigu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpk3yuuigu.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sums = array();\n\tforeach ($nums as $key => $num)\
    \ {\n\t\t$sum = 0;\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = floor($num / 10);\n\t\t}\n\t\t$sums[$key] = $sum;\n\t}\n\tasort($sums);\n\t\
    $result = array();\n\tforeach ($sums as $key => $sum) {\n\t\t$result[] = $nums[$key];\n\
    \t}\n\treturn $result;\n}\n\n/* Write a function which returns the number of occurrences\
    \ of\neach letter in the given string.\nFor example:\n>>> count_letters(\"hello\"\
    )\narray('h' => 1, 'e' => 1, 'l' => 2, 'o' => 1)\n>>> count_letters(\"\")\narray()*/\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhhrmwv0.php:41\n\
    Stack trace:\n#0 /tmp/tmpmhhrmwv0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpmhhrmwv0.php\
    \ on line 41\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which returns\
    \ the sum of the first n integers.\nFor example:\n>>> sum_of_n(3)\n6\n>>> sum_of_n(5)\n\
    15*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfv2w0cd.php:31\n\
    Stack trace:\n#0 /tmp/tmppfv2w0cd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppfv2w0cd.php\
    \ on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\n$nums = array(1, 11, -1, -11, -12);\n\
    print_r(order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv13u523.php:27\n\
    Stack trace:\n#0 /tmp/tmpnv13u523.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnv13u523.php\
    \ on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $val) {\n        $sum[$key] = array_sum(str_split($val));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nvar_dump(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nvar_dump(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(5) {\n  [0]=>\n  int(-1)\n  [1]=>\n  int(1)\n  [2]=>\n  int(-11)\n\
    \  [3]=>\n  int(11)\n  [4]=>\n  int(-12)\n}\narray(0) {\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpwg4sqb0a.php:26\nStack trace:\n#0 /tmp/tmpwg4sqb0a.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwg4sqb0a.php on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$sum = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\tarray_multisort($sum,\
    \ SORT_ASC, $nums);\n\treturn $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ofrxq4b.php:25\n\
    Stack trace:\n#0 /tmp/tmp9ofrxq4b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9ofrxq4b.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1nvz7rq.php:30\n\
    Stack trace:\n#0 /tmp/tmpk1nvz7rq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk1nvz7rq.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n/* Write a function which takes an\
    \ array of integers and returns\nthe sum of the integers that have even indices.\n\
    For example:\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n12\n>>> sum_even_indexed(array(1,\
    \ 3, 5))\n0\n>>> sum_even_indexed(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5cc12qm.php:34\n\
    Stack trace:\n#0 /tmp/tmpt5cc12qm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt5cc12qm.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__aihes1.php:33\n\
    Stack trace:\n#0 /tmp/tmp__aihes1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp__aihes1.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\n$nums = array(1, 11, -1, -11, -12);\n\
    print_r(order_by_points($nums));\n\n/* Write a function which returns the sum\
    \ of the digits of the given integer.\nFor example:\n>>> sum_of_digits(123)\n\
    6\n>>> sum_of_digits(0)\n0\n>>> sum_of_digits(-123)\n6*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cfwn2g1.php:36\n\
    Stack trace:\n#0 /tmp/tmp4cfwn2g1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4cfwn2g1.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n  $sum = array();\n  foreach ($nums as $key => $value)\
    \ {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptolskwrv.php:26\n\
    Stack trace:\n#0 /tmp/tmptolskwrv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptolskwrv.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n\t$arr = array();\n\tforeach ($nums as $key => $value)\
    \ {\n\t\t$arr[$key] = array_sum(str_split($value));\n\t}\n\tasort($arr);\n\t$result\
    \ = array();\n\tforeach ($arr as $key => $value) {\n\t\t$result[] = $nums[$key];\n\
    \t}\n\treturn $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby470xka.php:30\n\
    Stack trace:\n#0 /tmp/tmpby470xka.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpby470xka.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_sum = [];\n    $nums_index = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $nums_sum[] = array_sum(str_split($num));\n\
    \        $nums_index[] = $key;\n    }\n    array_multisort($nums_sum, $nums_index);\n\
    \    $result = [];\n    foreach ($nums_index as $index) {\n        $result[] =\
    \ $nums[$index];\n    }\n    return $result;\n}\n\n$nums = [1, 11, -1, -11, -12];\n\
    print_r(order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bhnmgdo.php:33\n\
    Stack trace:\n#0 /tmp/tmp0bhnmgdo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0bhnmgdo.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach ($nums\
    \ as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n \
    \   }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfu3j987o.php:29\n\
    Stack trace:\n#0 /tmp/tmpfu3j987o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfu3j987o.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\necho '<pre>';\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\necho\
    \ '</pre>';\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => -1\n    [1] => -11\n    [2] => -12\n    [3] =>\
    \ 1\n    [4] => 11\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2ywmstgy.php:37\nStack trace:\n#0 /tmp/tmp2ywmstgy.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2ywmstgy.php on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums = array_map(function($num) {\n        return\
    \ [$num, array_sum(str_split($num))];\n    }, $nums);\n    usort($nums, function($a,\
    \ $b) {\n        if ($a[1] == $b[1]) {\n            return $a[0] - $b[0];\n  \
    \      }\n        return $a[1] - $b[1];\n    });\n    return array_map(function($num)\
    \ {\n        return $num[0];\n    }, $nums);\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphmvta90z.php:33\nStack trace:\n#0 /tmp/tmphmvta90z.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmphmvta90z.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwygmkaxv.php:25\n\
    Stack trace:\n#0 /tmp/tmpwygmkaxv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwygmkaxv.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpixwmya5f.php:27\nStack trace:\n#0 /tmp/tmpixwmya5f.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpixwmya5f.php on line 27\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1nvz7rq.php:30\n\
    Stack trace:\n#0 /tmp/tmpk1nvz7rq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk1nvz7rq.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplopzmrkh.php:37\n\
    Stack trace:\n#0 /tmp/tmplopzmrkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplopzmrkh.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = $value;\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    $result = array();\n    foreach ($sum as $key =>\
    \ $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\
    \n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux47gobk.php:32\n\
    Stack trace:\n#0 /tmp/tmpux47gobk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpux47gobk.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssxrpton.php:26\n\
    Stack trace:\n#0 /tmp/tmpssxrpton.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssxrpton.php\
    \ on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        while ($num != 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\n/* Write a function which returns the number of\nunique characters in a given\
    \ string.\nFor example:\n>>> unique_chars('abcdef')\n6\n>>> unique_chars('aabbcc')\n\
    2\n>>> unique_chars('')\n0*/\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wfty6uu.php:43\n\
    Stack trace:\n#0 /tmp/tmp8wfty6uu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp8wfty6uu.php\
    \ on line 43\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result =\
    \ array_keys($result);\n    $result = array_map(function ($item) use ($nums) {\n\
    \        return $nums[$item];\n    }, $result);\n    return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppcbbngx7.php:37\nStack trace:\n#0 /tmp/tmppcbbngx7.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmppcbbngx7.php on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        foreach (str_split($num) as $digit) {\n\
    \            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n    }\n\
    \    asort($sums);\n    $result = array();\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\n$nums\
    \ = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string\
    \ in /tmp/tmpjhrdzw65.php:16\nStack trace:\n#0 /tmp/tmpjhrdzw65.php(29): order_by_points(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpjhrdzw65.php on line 16\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jn082t3.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jn082t3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jn082t3.php\
    \ on line 25\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\n\
    print_r(order_by_points(array()));\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplbfyhzv7.php:33\nStack trace:\n#0 /tmp/tmplbfyhzv7.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmplbfyhzv7.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $arr[$key] = array_sum(str_split(abs($num)));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplptrhkr9.php:29\n\
    Stack trace:\n#0 /tmp/tmplptrhkr9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplptrhkr9.php\
    \ on line 29\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $nums_arr = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $nums_arr[$key] = $num;\n        $nums_arr[$key] = abs($num);\n\
    \        $nums_arr[$key] = array_sum(str_split($nums_arr[$key]));\n    }\n   \
    \ asort($nums_arr);\n    $nums_arr = array_keys($nums_arr);\n    $nums_arr = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $nums_arr);\n    return $nums_arr;\n\
    }\n\n/* Write a function which returns the sum of the following series:\n1/2 +\
    \ 2/3 + 3/4 + ... + n/n+1\nFor example:\n>>> series_sum(1)\n1.0\n>>> series_sum(2)\n\
    1.5\n>>> series_sum(3)\n1.8333333333333333\n>>> series_sum(4)\n2.083333333333333\n\
    >>> series_sum(5)\n2.283333333333333*/\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjhmgpio.php:44\n\
    Stack trace:\n#0 /tmp/tmpxjhmgpio.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxjhmgpio.php\
    \ on line 44\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function($key) use ($nums) {\n\
    \        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n$nums\
    \ = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdozwrpu.php:37\n\
    Stack trace:\n#0 /tmp/tmpmdozwrpu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmdozwrpu.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $res = [];\n    $sum = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($sum);\n    foreach ($sum as $key => $value) {\n        $res[] = $nums[$key];\n\
    \    }\n    return $res;\n}\n\n/* Write a function which returns the number of\n\
    unique characters in a given string.\nFor example:\n>>> count_unique_characters(\"\
    apple\")\n5\n>>> count_unique_characters(\"\")\n0*/\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds8e8fi4.php:36\n\
    Stack trace:\n#0 /tmp/tmpds8e8fi4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpds8e8fi4.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $sum = array();\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\nprint_r(order_by_points(array(1, 11,\
    \ -1, -11, -12)));\nprint_r(order_by_points(array()));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -1\n    [1] => 1\n    [2] => -11\n    [3] => 11\n\
    \    [4] => -12\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzxlgdic8.php:26\nStack trace:\n#0 /tmp/tmpzxlgdic8.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzxlgdic8.php on line 26\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nprint_r(order_by_points(array(1, 11, -1, -11, -12)));\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu6za078.php:30\n\
    Stack trace:\n#0 /tmp/tmpgu6za078.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgu6za078.php\
    \ on line 30\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Write a function which sorts the given array of integers\nin\
    \ ascending order according to the sum of their digits.\nNote: if there are several\
    \ items with similar sum of their digits,\norder them based on their index in\
    \ original array.\nFor example:\n>>> order_by_points(array(1, 11, -1, -11, -12))\n\
    array(-1, -11, 1, -12, 11)\n>>> order_by_points(array())\narray()*/\nfunction\
    \ order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result =\
    \ array_keys($result);\n    $sorted = [];\n    foreach ($result as $key) {\n \
    \       $sorted[] = $nums[$key];\n    }\n    return $sorted;\n}\n\n$nums = [1,\
    \ 11, -1, -11, -12];\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => -1\n    [2] => 11\n    [3] => -11\n\
    \    [4] => -12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2bwfl_j.php:38\n\
    Stack trace:\n#0 /tmp/tmp_2bwfl_j.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_2bwfl_j.php\
    \ on line 38\n"
  timestamp: 1660220717

language: php
name: HumanEval_114_minSubArraySum
results:
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldc5m1df.php:36\n\
    Stack trace:\n#0 /tmp/tmpldc5m1df.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpldc5m1df.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/*\n * Test\n */\nassert(1 === minSubArraySum(array(2, 3, 4,\
    \ 1, 2, 4)));\nassert(-6 === minSubArraySum(array(-1, -2, -3)));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazqo8n4t.php:28\n\
    Stack trace:\n#0 /tmp/tmpazqo8n4t.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpazqo8n4t.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n/* Given an array of integers nums, find the maximum sum of any non-empty\
    \ sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n\
    15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbmh6ol9.php:35\n\
    Stack trace:\n#0 /tmp/tmpxbmh6ol9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxbmh6ol9.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/*\n * Given an array of integers nums,\
    \ find the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1\n */\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3iehv59.php:44\n\
    Stack trace:\n#0 /tmp/tmpg3iehv59.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpg3iehv59.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/* Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Test\n\
    \ */\nassert(minSubArraySum(array(2, 3, 4, 1, 2, 4)) === 1);\nassert(minSubArraySum(array(-1,\
    \ -2, -3)) === -6);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) === 1) in /tmp/tmpy2jc7rp0.php:27\nStack trace:\n#0 /tmp/tmpy2jc7rp0.php(27):\
    \ assert(false, 'assert(minSubAr...')\n#1 {main}\n  thrown in /tmp/tmpy2jc7rp0.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Test\n\
    \ */\nassert(minSubArraySum(array(2, 3, 4, 1, 2, 4)) === 1);\nassert(minSubArraySum(array(-1,\
    \ -2, -3)) === -6);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) === 1) in /tmp/tmpy2jc7rp0.php:27\nStack trace:\n#0 /tmp/tmpy2jc7rp0.php(27):\
    \ assert(false, 'assert(minSubAr...')\n#1 {main}\n  thrown in /tmp/tmpy2jc7rp0.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    /* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n/* Given an array of integers nums, find the contiguous sub-array (containing\
    \ at least\none number) which has the largest sum and return its sum.\nExample\n\
    >>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n13\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldc5m1df.php:36\n\
    Stack trace:\n#0 /tmp/tmpldc5m1df.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpldc5m1df.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n\
    \        $sum = min($nums[$i], $sum + $nums[$i]);\n        $min = min($min, $sum);\n\
    \    }\n    return $min;\n}\n\n/*\n * Test\n */\nassert(1 === minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));\nassert(-6 === minSubArraySum(array(-1, -2, -3)));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/*\n * Given an array of integers nums, find the maximum sum\
    \ of any non-empty sub-array\n * of nums.\n * Example\n * >>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n * 15\n * >>> maxSubArraySum(array(-1, -2, -3))\n * -1\n */\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . \"\\n\";\necho minSubArraySum(array(-1, -2, -3)) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "92233720368547758079223372036854775807\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp12m8q95u.php:30\nStack trace:\n#0 /tmp/tmp12m8q95u.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp12m8q95u.php on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldc5m1df.php:36\n\
    Stack trace:\n#0 /tmp/tmpldc5m1df.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpldc5m1df.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysjbk03v.php:38\n\
    Stack trace:\n#0 /tmp/tmpysjbk03v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpysjbk03v.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Test\n\
    \ */\nassert(minSubArraySum(array(2, 3, 4, 1, 2, 4)) === 1);\nassert(minSubArraySum(array(-1,\
    \ -2, -3)) === -6);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) === 1) in /tmp/tmpy2jc7rp0.php:27\nStack trace:\n#0 /tmp/tmpy2jc7rp0.php(27):\
    \ assert(false, 'assert(minSubAr...')\n#1 {main}\n  thrown in /tmp/tmpy2jc7rp0.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt619eyg.php:39\n\
    Stack trace:\n#0 /tmp/tmpbt619eyg.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbt619eyg.php\
    \ on line 39\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        $minSum = min($minSum, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    /* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Test\n\
    \ */\nassert(minSubArraySum(array(2, 3, 4, 1, 2, 4)) === 1);\nassert(minSubArraySum(array(-1,\
    \ -2, -3)) === -6);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) === 1) in /tmp/tmpy2jc7rp0.php:27\nStack trace:\n#0 /tmp/tmpy2jc7rp0.php(27):\
    \ assert(false, 'assert(minSubAr...')\n#1 {main}\n  thrown in /tmp/tmpy2jc7rp0.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/* Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbmh6ol9.php:35\n\
    Stack trace:\n#0 /tmp/tmpxbmh6ol9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxbmh6ol9.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = max($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqb0fr0u.php:25\n\
    Stack trace:\n#0 /tmp/tmpwqb0fr0u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwqb0fr0u.php\
    \ on line 25\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/* Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwjchlnn.php:42\n\
    Stack trace:\n#0 /tmp/tmptwjchlnn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptwjchlnn.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n            $left = $i + 1;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = array(2, 3, 4, 1, 2, 4);\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n  \
    \          $sum = 0;\n            $start = $end + 1;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\n\
    echo \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/* Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwjchlnn.php:42\n\
    Stack trace:\n#0 /tmp/tmptwjchlnn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptwjchlnn.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/*\n * Given an array of integers nums, find the maximum sum\
    \ of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1\n */\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $nums[0];\n    $curr_sum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $curr_sum = min($nums[$i], $curr_sum + $nums[$i]);\n\
    \        $min_sum = min($min_sum, $curr_sum);\n    }\n    return $min_sum;\n}\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n/*\n * Given an array of integers,\
    \ find the maximum sum of any non-empty sub-array.\n * Example\n * >>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n * 15\n * >>> maxSubArraySum(array(-1, -2, -3))\n * -1\n */\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n/* Given an array of integers nums, find the maximum sum of any non-empty\
    \ sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n\
    15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        $minSum = min($minSum, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\nfunction candidate(...$args) {\n \
    \   return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Given\
    \ an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1\n */\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro25qqb8.php:38\n\
    Stack trace:\n#0 /tmp/tmpro25qqb8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpro25qqb8.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $nums[0];\n    $curr_sum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $curr_sum = min($nums[$i], $curr_sum + $nums[$i]);\n\
    \        $min_sum = min($min_sum, $curr_sum);\n    }\n    return $min_sum;\n}\n\
    \n/* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysjbk03v.php:38\n\
    Stack trace:\n#0 /tmp/tmpysjbk03v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpysjbk03v.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/* Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwjchlnn.php:42\n\
    Stack trace:\n#0 /tmp/tmptwjchlnn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptwjchlnn.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    /* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Given\
    \ an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n12\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1\n */\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8d13gc5.php:38\n\
    Stack trace:\n#0 /tmp/tmpn8d13gc5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpn8d13gc5.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n/*\n * Given\
    \ an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1\n */\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro25qqb8.php:38\n\
    Stack trace:\n#0 /tmp/tmpro25qqb8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpro25qqb8.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n/* Given an array of integers\
    \ nums, find the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>>\
    \ maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2,\
    \ -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    /* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5mebd1u.php:28\n\
    Stack trace:\n#0 /tmp/tmpt5mebd1u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt5mebd1u.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldc5m1df.php:36\n\
    Stack trace:\n#0 /tmp/tmpldc5m1df.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpldc5m1df.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "92233720368547758079223372036854775807\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpatd5rzo6.php:31\nStack trace:\n#0 /tmp/tmpatd5rzo6.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpatd5rzo6.php on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv_kcti7.php:31\n\
    Stack trace:\n#0 /tmp/tmpyv_kcti7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyv_kcti7.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/*\n * Given an array of integers nums,\
    \ find the maximum sum of any non-empty sub-array\n * of nums.\n * Example\n *\
    \ >>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n * 16\n * >>> maxSubArraySum(array(-1,\
    \ -2, -3))\n * -1\n */\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ynbacwi.php:44\n\
    Stack trace:\n#0 /tmp/tmp7ynbacwi.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7ynbacwi.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n/* Given an array of integers nums, find the maximum sum of any non-empty\
    \ sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n\
    15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        $minSum = min($minSum, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tth1fcz.php:30\n\
    Stack trace:\n#0 /tmp/tmp8tth1fcz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8tth1fcz.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/* Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoi0qv7m.php:36\n\
    Stack trace:\n#0 /tmp/tmpqoi0qv7m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoi0qv7m.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps06nnvva.php:34\n\
    Stack trace:\n#0 /tmp/tmps06nnvva.php(42): test()\n#1 {main}\n  thrown in /tmp/tmps06nnvva.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    /* Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    of nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1,\
    \ -2, -3))\n-1*/\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n/* Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbmh6ol9.php:35\n\
    Stack trace:\n#0 /tmp/tmpxbmh6ol9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxbmh6ol9.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/* Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwjchlnn.php:42\n\
    Stack trace:\n#0 /tmp/tmptwjchlnn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptwjchlnn.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $min_sum) {\n            $min_sum =\
    \ $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min_sum;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\n\
    echo minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysjbk03v.php:38\n\
    Stack trace:\n#0 /tmp/tmpysjbk03v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpysjbk03v.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/* Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\nof nums.\nExample\n>>> maxSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n15\n>>> maxSubArraySum(array(-1, -2, -3))\n-1*/\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwjchlnn.php:42\n\
    Stack trace:\n#0 /tmp/tmptwjchlnn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptwjchlnn.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    print_r(minSubArraySum(array(2, 3, 4, 1, 2, 4)));\nprint_r(minSubArraySum(array(-1,\
    \ -2, -3)));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: -1
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    $right = 0;\n\
    \    while ($right < count($nums)) {\n        $sum += $nums[$right];\n       \
    \ while ($sum >= 0) {\n            $min = min($min, $sum);\n            $sum -=\
    \ $nums[$left];\n            $left++;\n        }\n        $right++;\n    }\n \
    \   return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Undefined array key 6 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 7 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 8 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 9 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 10 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 11 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 12 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 13 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 14 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 15 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 16 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 17 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 18 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 19 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 20 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 21 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 22 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 23 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 24 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 25 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 26 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 27 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 28 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 29 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 30 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 31 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 32 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 33 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 34 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Undefined array key 35 in /tmp/tmphzcvy_ta.php on line 18


    Warning: Un'
  timestamp: 1660220673
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vie9g65.php:37\n\
    Stack trace:\n#0 /tmp/tmp1vie9g65.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vie9g65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($i == 0 || $currentSum\
    \ < $minSum) {\n            $minSum = $currentSum;\n        }\n        if ($currentSum\
    \ > 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldc5m1df.php:36\n\
    Stack trace:\n#0 /tmp/tmpldc5m1df.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpldc5m1df.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhvtvfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmpdhvtvfa2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdhvtvfa2.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq30zzox.php:36\n\
    Stack trace:\n#0 /tmp/tmpoq30zzox.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoq30zzox.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmaar9cwz.php:37\n\
    Stack trace:\n#0 /tmp/tmpmaar9cwz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmaar9cwz.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nprint_r(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));\nprint_r(minSubArraySum(array(-1, -2, -3)));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "92233720368547758079223372036854775807\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpi1jxgh5_.php:31\nStack trace:\n#0 /tmp/tmpi1jxgh5_.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi1jxgh5_.php on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdu285jq.php:38\n\
    Stack trace:\n#0 /tmp/tmphdu285jq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphdu285jq.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\nof nums.\nExample\n>>> minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\n1\n>>> minSubArraySum(array(-1, -2, -3))\n-6*/\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1-6
  timestamp: 1660220655

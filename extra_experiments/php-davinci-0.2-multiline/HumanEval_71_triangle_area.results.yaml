language: php
name: HumanEval_71_triangle_area
results:
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n/* Given a string, return a new\
    \ string that replaces every occurrence of the word \"important\" with \"urgent\"\
    :\nExample:\n>>> replace_important(\"Learn web development at General Assembly\
    \ is important!\")\n\"Learn web development at General Assembly is urgent!\"\n\
    */\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the\
    \ first character that is not repeated anywhere in the string.\nFor example, given\
    \ the string \"abcdabcd\", the function should return 'e'.\nGiven the string \"\
    abcbad\", the function should return 'c'.\nGiven the string \"abcabcabcabc\",\
    \ the function should return null.\nExample:\n>>> first_non_repeating_letter('abcdabcd')\n\
    'e'\n>>> first_non_repeating_letter('abcbad')\n'c'\n>>> first_non_repeating_letter('abcabcabcabc')\n\
    null*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    echo triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\necho triangle_area(1, 2, 2);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    0.97

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif(($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n\t\t$s =\
    \ ($a + $b + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \t\treturn round($area, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return\
    \ the first character that is not repeated anywhere in the string.\nFor example,\
    \ given the string \"abcdab\", the function should return 'c'.\nGiven the string\
    \ \"xyzxyz\", the function should return ''.\nExample:\n>>> first_non_repeating_letter('abcdab')\n\
    'c'\n>>> first_non_repeating_letter('xyzxyz')\n''*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given an array\
    \ of integers. Return an array, where the first element is \nthe count of positives\
    \ numbers and the second element is sum of negative numbers.\nIf the input array\
    \ is empty or null, return an empty array.\nExample:\n>>> count_positives_sum_negatives([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15])\n[10, -65]\n>>> count_positives_sum_negatives([0,\
    \ 2, 3, 0, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14])\n[8, -50]*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c && $s - $a < $b && $s\
    \ - $b < $c && $s - $b < $a && $s - $c < $a && $s - $c < $b) {\n\t\treturn round(sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\t} else {\n\t\treturn -1;\n\t}\n\
    }\n\n/* Given a list of numbers, return the sum of the two smallest numbers in\
    \ the list.\nExample:\n>>> sum_two_smallest_numbers([5, 8, 12, 18, 22])\n13\n\
    >>> sum_two_smallest_numbers([7, 15, 12, 18, 22])\n19\n>>> sum_two_smallest_numbers([25,\
    \ 42, 12, 18, 22])\n30*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\treturn round(sqrt(($a\
    \ + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4, 2);\n\t\
    } else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string of words, return the length\
    \ of the shortest word(s).\nString will never be empty and you do not need to\
    \ account for different data types.\nExample:\n>>> find_short(\"bitcoin take over\
    \ the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out random test\
    \ cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif($a+$b>$c && $a+$c>$b && $b+$c>$a){\n\t\t$p = ($a+$b+$c)/2;\n\t\t\
    $area = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\t\treturn round($area,2);\n\t}\n\t\
    else{\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"<br>\";\n\
    echo triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  if ($s - $a < $c || $s - $b < $c || $s\
    \ - $c < $a) {\n    return -1;\n  }\n  return round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n}\n\n/* Given a string, return the sum of the numbers\
    \ appearing in the string, \nignoring all other characters. A number is a series\
    \ of 1 or more digit chars \nin a row. (Note: Character.isDigit(char) tests if\
    \ a char is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string) converts\
    \ a string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"\
    aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_7g_m0t.php:36\n\
    Stack trace:\n#0 /tmp/tmpp_7g_m0t.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpp_7g_m0t.php\
    \ on line 36\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the first non-repeating character.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    }\n    return -1;\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return a new string with the first and last characters\
    \ \nswapped.\nExample:\n>>> swap_first_last('abcd')\n'dbca'\n>>> swap_first_last('12345')\n\
    '52341'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a string where every character is repeated once.\nExample:\n\
    >>> double_char('The')\n'TThhee'\n>>> double_char('AAbb')\n'AAAAbbbb'\n>>> double_char('Hi-There')\n\
    'HHii--TThheerree'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n  if ($area > 0) {\n    return round($area, 2);\n  } else {\n\
    \    return -1;\n  }\n}\n\n/* Given a string, return the sum of the numbers appearing\
    \ in the string, \nignoring all other characters. A number is a series of 1 or\
    \ more digit chars \nin a row. (Note: Character.isDigit(char) tests if a char\
    \ is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string) converts a\
    \ string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"\
    aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the number of words in the string.\nExample:\n\
    >>> count_words(\"I love PHP\")\n3\n>>> count_words(\"I love PHP, I love PHP too!\"\
    )\n4\n>>> count_words(\"\")\n0*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of words, return the length of the shortest word(s).\nString\
    \ will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c && $s - $b < $c && $s\
    \ - $c < $a) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)),\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho\
    \ '<br>';\necho triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n   \
    \ return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>NAN\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstyr9rpu.php:29\n\
    Stack trace:\n#0 /tmp/tmpstyr9rpu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpstyr9rpu.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n        return round($s, 2);\n    } else {\n        return -1;\n  \
    \  }\n}\necho triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2,\
    \ 10);\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n/* Given a string, return the first\
    \ character that is not repeated anywhere in the string.\nFor example, for the\
    \ input \"apple\", the output should be \"a\".\nExample:\n>>> first_non_repeating_letter('apple')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 1);\necho \"\\n\";\necho triangle_area(1, 1, 1);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 2);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 4);\necho \"\\n\";\necho triangle_area(1, 2, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 6);\necho \"\\n\";\necho triangle_area(1, 2, 7);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 8);\necho \"\\n\";\necho triangle_area(1, 2, 9);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\necho triangle_area(1, 2, 11);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 12);\necho \"\\n\";\necho triangle_area(1, 2, 13);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 14);\necho \"\\n\";\necho triangle_area(1, 2, 15);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 16);\necho \"\\n\";\necho triangle_area(1, 2, 17);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 18);\necho \"\\n\";\necho triangle_area(1, 2, 19);\necho \"\\n\";\necho\n\
    function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp1ttd8e0e.php on line 70

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the number of words in the string.\nExample:\n>>> count_words(\"\
    I love PHP\")\n3\n>>> count_words(\"I love PHP and Java\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the first character that is not repeated\
    \ anywhere in the string.\nFor example, for the input \"apple\", the output should\
    \ be \"a\".\nExample:\n>>> first_non_repeating_letter('apple')\n'a'\n>>> first_non_repeating_letter('stress')\n\
    't'\n>>> first_non_repeating_letter('moonmen')\n'e'*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s -\
    \ $c));\n        return round($area, 2);\n    }\n    return -1;\n}\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the number of words it contains.\nExample:\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n\
    4\n>>> count_words(\"Hello\")\n1*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n\t\t$p =\
    \ ($a + $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \t\treturn round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string of words,\
    \ return the length of the shortest word(s).\nString will never be empty and you\
    \ do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\necho \"<br>\";\necho\
    \ triangle_area(1, 2, 3);\necho \"<br>\";\necho triangle_area(1, 2, 2);\necho\
    \ \"<br>\";\necho triangle_area(1, 2, 1);\necho \"<br>\";\necho triangle_area(1,\
    \ 1, 1);\necho \"<br>\";\necho triangle_area(1, 1, 2);\necho \"<br>\";\necho triangle_area(1,\
    \ 2, 3);\necho \"<br>\";\necho triangle_area(2, 3, 4);\necho \"<br>\";\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(4, 5, 6);\necho \"<br>\";\necho triangle_area(5,\
    \ 6, 7);\necho \"<br>\";\necho triangle_area(6, 7, 8);\necho \"<br>\";\necho triangle_area(7,\
    \ 8, 9);\necho \"<br>\";\necho triangle_area(8, 9, 10);\necho \"<br>\";\necho\
    \ triangle_area(9, 10, 11);\necho \"<br>\";\necho triangle_area(10, 11, 12);\n\
    echo \"<br>\";\necho triangle_area(11, 12, 13);\necho \"<br>\";\necho triangle_area(12,\
    \ 13, 14);\necho \"<br>\";\necho triangle_area(13, 14, 15);\necho \"<br>\";\n\
    echo triangle_area(14, 15, 16);\necho \"<br>\";\necho triangle_area(15, 16, 17);\n\
    echo \"<br>\";\necho triangle_area(16,\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp_k_s730h.php on line 67

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    return $area > 0 ? round($area, 2) : -1;\n}\n\n/*\n *\
    \ Test code\n */\nassert(triangle_area(3, 4, 5) == 6.0);\nassert(triangle_area(1,\
    \ 2, 10) == -1);\nassert(triangle_area(1, 1, 1) == 0.43);\nassert(triangle_area(1,\
    \ 1, 2) == -1);\nassert(triangle_area(1, 2, 2) == 1.0);\nassert(triangle_area(1,\
    \ 2, 3) == -1);\nassert(triangle_area(2, 2, 3) == 1.98);\nassert(triangle_area(2,\
    \ 3, 4) == 2.90);\nassert(triangle_area(3, 4, 5) == 6.00);\nassert(triangle_area(4,\
    \ 5, 6) == 9.92);\nassert(triangle_area(5, 6, 7) == 14.70);\nassert(triangle_area(6,\
    \ 7, 8) == 20.72);\nassert(triangle_area(7, 8, 9) == 27.71);\nassert(triangle_area(8,\
    \ 9, 10) == 35.10);\nassert(triangle_area(9, 10, 11) == 43.79);\nassert(triangle_area(10,\
    \ 11, 12) == 53.39);\nassert(triangle_area(11, 12, 13) == 63.85);\nassert(triangle_area(12,\
    \ 13, 14) == 75.19);\nassert(triangle_area(13, 14, 15) == 87.38);\nassert(triangle_area(14,\
    \ 15, 16) == 100.40);\nassert(triangle_area(15, 16, 17) == 114.25);\nassert(triangle_area(16,\
    \ 17, 18) == 128.92);\nassert(triangle_area(17, 18, 19) == 144.39);\nassert\n\
    function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpk9tqqh33.php
    on line 45

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given\
    \ a string, return the first non-repeating character.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  if ($s - $a < $c && $s - $b < $c && $s\
    \ - $c < $a) {\n    return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)),\
    \ 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a string, return the sum\
    \ of the numbers appearing in the string, \nignoring all other characters. A number\
    \ is a series of 1 or more digit chars \nin a row. (Note: Character.isDigit(char)\
    \ tests if a char is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n\
    >>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyves5zqq.php:38\n\
    Stack trace:\n#0 /tmp/tmpyves5zqq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyves5zqq.php\
    \ on line 38\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the number of words in the string that are\
    \ not \nfollowed by a space and a capital letter.\nExample:\n>>> not_space_capital(\"\
    This is a sentence.\")\n3\n>>> not_space_capital(\"This is a sentence, but not\
    \ the end of the sentence.\")\n5*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the number\
    \ of words in the string.\nExample:\n>>> count_words(\"Hello world\")\n2\n>>>\
    \ count_words(\"Hello world, how are you?\")\n5*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string,\
    \ return the sum of the numbers appearing in the string, \nignoring all other\
    \ characters. A number is a series of 1 or more digit chars \nin a row. (Note:\
    \ Character.isDigit(char) tests if a char is one of the chars \n'0', '1', .. '9'.\
    \ Integer.parseInt(string) converts a string to an int.)\nExample:\n>>> sum_numbers(\"\
    abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\"\
    )\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the first non-repeating character.\nExample:\n>>> first_non_repeating_char('aabbcc')\n\
    'b'\n>>> first_non_repeating_char('abcabc')\n'a'\n>>> first_non_repeating_char('abcabcd')\n\
    'd'\n>>> first_non_repeating_char('abcabcdef')\n'a'\n>>> first_non_repeating_char('abcabcdefg')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefgh')\n'a'\n>>> first_non_repeating_char('abcabcdefghi')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghij')\n'a'\n>>> first_non_repeating_char('abcabcdefghijk')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghijkl')\n'a'\n>>> first_non_repeating_char('abcabcdefghijklm')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghijklmn')\n'a'\n>>> first_non_repeating_char('abcabcdefghijklmno')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghijklmnop')\n'a'\n>>> first_non_repeating_char('abcabcdefghijklmnopq')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghijklmnopqr')\n'a'\n>>> first_non_repeating_char('abcabcdefghijklmnopqrs')\n\
    'a'\n>>> first_non_repeating_char('abcabcdefghij\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmplcfo_sur.php on
    line 22

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string that has transformed based on the input:\n\
    Change case of every character, ie. lower case to upper case, upper case to lower\
    \ case.\nReverse the order of words from the input.\nNote: You will have to handle\
    \ multiple spaces, and leading/trailing spaces.\nFor example:\n\"Example Input\"\
    \ ==> \"iNPUT eXAMPLE\"\nYou may assume the input only contain English alphabet\
    \ and spaces.\n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$p = ($a + $b + $c) / 2;\n\t$area = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\n/* Given a string, return a string where for every char\
    \ in the original, \nthere are two chars.\nExample:\n>>> double_char('The')\n\
    'TThhee'\n>>> double_char('AAbb')\n'AAAAbbbb'\n>>> double_char('Hi-There')\n'HHii--TThheerree'*/\n\
    function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string that has transformed based on the input:\n\
    Change case of every character, ie. lower case to upper case, upper case to lower\
    \ case.\nReverse the order of words from the input.\nNote: You will have to handle\
    \ multiple spaces, and leading/trailing spaces.\nFor example:\n\"Example Input\"\
    \ ==> \"iNPUT eXAMPLE\"\nYou may assume the input only contain English alphabet\
    \ and spaces.\n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the first\
    \ character that does not repeat anywhere in the string.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string,\
    \ return a new string with the first and last characters \nof the original string\
    \ swapped.\nExample:\n>>> swap_first_last('abcd')\n'dbca'\n>>> swap_first_last('12345')\n\
    '52341'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string,\
    \ return the first non-repeating character.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  }\n  return -1;\n}\n\n/* Given a string, return a string with\
    \ the letters in alphabetical order.\nExample:\n>>> alphabet_order(\"hello\")\n\
    \"ehllo\"\n>>> alphabet_order(\"goodbye\")\n\"bdegooy\"*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the first character that is not repeated\
    \ anywhere in the string.\nFor example, given the string \"abcdabcd\", the function\
    \ should return 'e'.\nGiven the string \"abcbad\", the function should return\
    \ 'c'.\nGiven the string \"abcabcabcabc\", the function should return null.\n\
    Example:\n>>> first_non_repeating_letter('abcdabcd')\n'e'\n>>> first_non_repeating_letter('abcbad')\n\
    'c'\n>>> first_non_repeating_letter('abcabcabcabc')\nnull*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the sum\
    \ of the numbers appearing in the string, \nignoring all other characters. A number\
    \ is a series of 1 or more digit chars \nin a row. (Note: Character.isDigit(char)\
    \ tests if a char is one of the chars '0', '1', .. '9'. \nInteger.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n\
    >>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a string, return\
    \ a new string that replaces every occurrence of the word \"important\" with \"\
    urgent\":\nExample:\n>>> replace_important(\"Learn web development at General\
    \ Assembly is important!\")\n\"Learn web development at General Assembly is urgent!\"\
    \n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the sum of the numbers appearing in the string, \nignoring all other\
    \ characters. A number is a series of 1 or more digit chars \nin a row. (Note:\
    \ Character.isDigit(char) tests if a char is one of the chars \n'0', '1', .. '9'.\
    \ Integer.parseInt(string) converts a string to an int.)\nExample:\n>>> sum_numbers(\"\
    abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\"\
    )\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c && $s - $b < $c && $s\
    \ - $c < $a) {\n\t\treturn sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t}\
    \ else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\n\
    echo triangle_area(1, 2, 10);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nNAN\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbsi1rr0.php:30\n\
    Stack trace:\n#0 /tmp/tmpbbsi1rr0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbbsi1rr0.php\
    \ on line 30\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the number of words in the string.\nExample:\n>>> count_words(\"\
    Hello World\")\n2\n>>> count_words(\"Hello World, it's me!\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n\t\t$p =\
    \ ($a + $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \t\treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a string of words,\
    \ return the length of the shortest word(s).\nString will never be empty and you\
    \ do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\treturn $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given a string,\
    \ return the character that appears the most times.\nExample:\n>>> most_common_char('aabbcc')\n\
    'a'\n>>> most_common_char('abbba')\n'b'\n>>> most_common_char('ab1c1d1e1f1g1')\n\
    '1'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n\n/* Given a string, return the sum of the digits 0-9 that appear\
    \ in the string, \nignoring all other characters. Return 0 if there are no digits\
    \ in the string. \n(Note: Character.isDigit(char) tests if a char is one of the\
    \ chars '0', '1', .. '9'. \nInteger.parseInt(string) converts a string to an int.)\n\
    Example:\n>>> sum_digits(\"aa1bc2d3\")\n6\n>>> sum_digits(\"aa11b33\")\n8\n>>>\
    \ sum_digits(\"Chocolate\")\n0*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3 */\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of words, return the length of the shortest word(s).\nString\
    \ will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given\
    \ a string, return the first non-repeating character.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n \
    \   return round($area, 2);\n  }\n  return -1;\n}\n\n/* Given a string, return\
    \ the first character that does not repeat.\nExample:\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating_letter('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy')\n\
    'g'\n>>> first_non_repeating\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmp2orq9goh.php on
    line 21

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\n/* Given a string of words, return the length of the\
    \ shortest word(s).\nString will never be empty and you do not need to account\
    \ for different data types.\nExample:\n>>> find_short(\"bitcoin take over the\
    \ world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out random test\
    \ cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of words, return the length of the shortest word(s).\nString\
    \ will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s > $a && $s > $b && $s > $c) {\n\t\
    \t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn round($area,\
    \ 2);\n\t}\n\treturn -1;\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\n\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the first\
    \ character that is not repeated anywhere in the string.\nFor example, given the\
    \ string \"abcdabcd\", the function should return 'e'.\nGiven the string \"abcbad\"\
    , the function should return 'c'.\nGiven the string \"abcabcabcabc\", the function\
    \ should return null.\nExample:\n>>> first_non_repeating_letter('abcdabcd')\n\
    'e'\n>>> first_non_repeating_letter('abcbad')\n'c'\n>>> first_non_repeating_letter('abcabcabcabc')\n\
    null*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the\
    \ sum of the digits 0-9 that appear in the string, \nignoring all other characters.\
    \ Return 0 if there are no digits in the string. \n(Note: Character.isDigit(char)\
    \ tests if a char is one of the chars '0', '1', .. '9'. \nInteger.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_digits(\"aa1bc2d3\")\n6\n>>>\
    \ sum_digits(\"aa11b33\")\n8\n>>> sum_digits(\"Chocolate\")\n0*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string that has transformed based on the input:\n\
    Change case of every character, ie. lower case to upper case, upper case to lower\
    \ case.\nReverse the order of words from the input.\nNote: You will have to handle\
    \ multiple spaces, and leading/trailing spaces.\nFor example:\n\"Example Input\"\
    \ ==> \"iNPUT eXAMPLE\"\nYou may assume the input only contain English alphabet\
    \ and spaces.\n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the first character that does not repeat.\nExample:\n\
    >>> first_non_repeating(\"aabbcdde\")\n'e'\n>>> first_non_repeating(\"aabbcddee\"\
    )\n'e'\n>>> first_non_repeating(\"aabbcddeee\")\n'e'\n>>> first_non_repeating(\"\
    aabbcddeeeef\")\n'f'\n>>> first_non_repeating(\"aabbcddeeeefg\")\n'f'\n>>> first_non_repeating(\"\
    aabbcddeeeefgg\")\n'f'\n>>> first_non_repeating(\"aabbcddeeeefggg\")\n'f'\n>>>\
    \ first_non_repeating(\"aabbcddeeeefgggg\")\n'f'\n>>> first_non_repeating(\"aabbcddeeeefggggg\"\
    )\n'f'\n>>> first_non_repeating(\"aabbcddeeeefgggggg\")\n'f'\n>>> first_non_repeating(\"\
    aabbcddeeeefggggggg\")\n'f'\n>>> first_non_repeating(\"aabbcddeeeefgggggggg\"\
    )\n'f'\n>>> first_non_repeating(\"aabbcddeeeefggggggggg\")\n'f'\n>>> first_non_repeating(\"\
    aabbcddeeeefgggggggggg\")\n'f'\n>>> first_non_repeating(\"aabbcddeeeefggggggggggg\"\
    )\n'f'\n>>> first_non_repeating(\"aabbcddeeeefgggggggggggg\")\n'f'\n>>> first_non_repeating(\"\
    aabbcddeeeefgg\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmp8kkj1tvn.php on
    line 22

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the sum\
    \ of the digits 0-9 that appear in the string, \nignoring all other characters.\
    \ Return 0 if there are no digits in the string. \n(Note: Character.isDigit(char)\
    \ tests if a char is one of the chars '0', '1', .. '9'. \nInteger.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_digits(\"aa1bc2d3\")\n6\n>>>\
    \ sum_digits(\"aa11b33\")\n8\n>>> sum_digits(\"Chocolate\")\n0*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the sum of the numbers appearing in the\
    \ string, \nignoring all other characters. A number is a series of 1 or more digit\
    \ chars \nin a row. (Note: Character.isDigit(char) tests if a char is one of the\
    \ chars \n'0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)\n\
    Example:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n\
    44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given an array of integers, return\
    \ the sum of the integers that have an \neven index (0, 2, 4, etc.). The input\
    \ array will always have a length of at least 1.\nExample:\n>>> sum_even_indexed([1,\
    \ 2, 3, 4, 5])\n6\n>>> sum_even_indexed([0, 1, 2, 3, 4, 5])\n9*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string with the characters in reverse order.\n\
    Example:\n>>> reverse_string('hello')\n'olleh'\n>>> reverse_string('abcdef')\n\
    'fedcba'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho '<br>';\necho triangle_area(1, 2, 10);\necho '<br>';\n\
    echo triangle_area(1, 2, 3);\necho '<br>';\necho triangle_area(1, 2, 2);\necho\
    \ '<br>';\necho triangle_area(1, 2, 1);\necho '<br>';\necho triangle_area(1, 1,\
    \ 1);\necho '<br>';\necho triangle_area(1, 1, 2);\necho '<br>';\necho triangle_area(1,\
    \ 2, 3);\necho '<br>';\necho triangle_area(1, 2, 4);\necho '<br>';\necho triangle_area(1,\
    \ 2, 5);\necho '<br>';\necho triangle_area(1, 2, 6);\necho '<br>';\necho triangle_area(1,\
    \ 2, 7);\necho '<br>';\necho triangle_area(1, 2, 8);\necho '<br>';\necho triangle_area(1,\
    \ 2, 9);\necho '<br>';\necho triangle_area(1, 2, 10);\necho '<br>';\necho triangle_area(1,\
    \ 2, 11);\necho '<br>';\necho triangle_area(1, 2, 12);\necho '<br>';\necho triangle_area(1,\
    \ 2, 13);\necho '<br>';\necho triangle_area(1, 2, 14);\necho '<br>';\necho triangle_area(1,\
    \ 2, 15);\necho '<br>';\necho triangle_area(1, 2, 16);\necho '<br>';\necho triangle_area(1,\
    \ 2,\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp63q2yqg_.php on line 64

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a+$b>$c && $a+$c>$b && $b+$c>$a) {\n\t\t$p = ($a+$b+$c)/2;\n\t\
    \t$s = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\t\treturn round($s, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given an array of integers, return the sum of the two largest values.\nExample:\n\
    >>> sum_of_two_largest([1, 2, 3])\n5\n>>> sum_of_two_largest([10, 5, 4, 3, -1])\n\
    14*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the number of words in the string.\nExample:\n>>> count_words(\"Hello\
    \ world\")\n2\n>>> count_words(\"Hello world, I am here\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return a\
    \ new string where the first and last characters\nhave been exchanged.\nExample:\n\
    >>> front_back('code')\n'eodc'\n>>> front_back('a')\n'a'\n>>> front_back('ab')\n\
    'ba'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n  if ($area > 0) {\n    return round($area, 2);\n  } else {\n\
    \    return -1;\n  }\n}\n\n/* Given a string, return the number of words in the\
    \ string.\nExample:\n>>> count_words(\"I am a code monkey\")\n3\n>>> count_words(\"\
    I would like to work for Google\")\n5*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\necho triangle_area(3, 4, 5);\necho\
    \ \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n \
    \   return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a string of words\
    \ separated by spaces, return the length of the longest word.\nExample:\n>>> longest_word(\"\
    I love dogs\")\n4\n>>> longest_word(\"fun&!! time\")\n5*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n\t\t$p =\
    \ ($a + $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \t\treturn round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the number of words in the string.\nExample:\n>>> count_words(\"Hello\
    \ world\")\n2\n>>> count_words(\"Hello world, I am here\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a > 0 && $s - $b > 0 && $s -\
    \ $c > 0) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5);\necho \"\\\
    n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(1, 2, 3);\n\
    echo \"\\n\";\necho triangle_area(1, 2, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 1);\necho \"\\n\";\necho triangle_area(1, 1, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 1);\necho \"\\n\";\necho triangle_area(2, 1, 1);\necho \"\\n\";\necho triangle_area(2,\
    \ 2, 1);\necho \"\\n\";\necho triangle_area(2, 1, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 2);\necho \"\\n\";\necho triangle_area(2, 2, 2);\necho \"\\n\";\necho triangle_area(2,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(2, 3, 2);\necho \"\\n\";\necho triangle_area(3,\
    \ 2, 2);\necho \"\\n\";\necho triangle_area(3, 3, 2);\necho \"\\n\";\necho triangle_area(3,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(2, 3, 3);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 3);\necho \"\\n\";\necho triangle_area(3, 3, 4);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(4, 3, 3);\necho \"\\n\";\necho triangle_area(4,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(4, 3, 4);\necho \"\\n\";\necho triangle_area(3,\n\
    function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp9e0_3ct2.php on line 70

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the sum of the numbers appearing in the string, \nignoring all other\
    \ characters. A number is a series of 1 or more digit chars \nin a row. (Note:\
    \ Character.isDigit(char) tests if a char is one of the chars \n'0', '1', .. '9'.\
    \ Integer.parseInt(string) converts a string to an int.)\nExample:\n>>> sum_numbers(\"\
    abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\"\
    )\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the sum\
    \ of the numbers appearing in the string, \nignoring all other characters. A number\
    \ is a series of 1 or more digit chars \nin a row. (Note: Character.isDigit(char)\
    \ tests if a char is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n\
    >>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2,\
    \ 10);\necho \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a > 0 && $s - $b > 0 && $s -\
    \ $c > 0) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"<br>\"\
    ;\necho triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the sum\
    \ of the numbers appearing in the string, \nignoring all other characters. A number\
    \ is a series of 1 or more digit chars \nin a row. (Note: Character.isDigit(char)\
    \ tests if a char is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string)\
    \ converts a string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n\
    >>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given\
    \ a string of words, return the length of the shortest word(s).\nString will never\
    \ be empty and you do not need to account for different data types.\nExample:\n\
    >>> find_short(\"bitcoin take over the world maybe who knows perhaps\")\n3\n>>>\
    \ find_short(\"turns out random test cases are easier than writing out basic ones\"\
    )\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the sum of the numbers appearing in the string, \nignoring\
    \ all other characters. A number is a series of 1 or more digit chars \nin a row.\
    \ (Note: Character.isDigit(char) tests if a char is one of the chars \n'0', '1',\
    \ .. '9'. Integer.parseInt(string) converts a string to an int.)\nExample:\n>>>\
    \ sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"\
    7 11\")\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\n/* Given a string of digits, return the number that\
    \ the digits represent. \nDo not convert the string of digits into an integer,\
    \ keep it as a string of digits.\nExample:\n>>> string_to_number(\"1234\")\n1234\n\
    >>> string_to_number(\"605\" )\n605\n>>> string_to_number(\"1405\")\n1405\n>>>\
    \ string_to_number(\"-7\"  )\n-7*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of digits, return the number with digits reversed.\nExample:\n\
    >>> reverse_number(12345)\n54321\n>>> reverse_number(12213)\n31221\n>>> reverse_number(12000)\n\
    21\n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho triangle_area(1, 2, 10);\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\necho triangle_area(3, 4, 5);\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a > 0 && $s - $b > 0 && $s -\
    \ $c > 0) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\n\
    echo triangle_area(1, 2, 10) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the sum of the numbers appearing in the string, \nignoring\
    \ all other characters. A number is a series of 1 or more digit chars \nin a row.\
    \ (Note: Character.isDigit(char) tests if a char is one of the chars \n'0', '1',\
    \ .. '9'. Integer.parseInt(string) converts a string to an int.)\nExample:\n>>>\
    \ sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"\
    7 11\")\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    }\n    return -1;\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of digits, return the number with digits reversed.\nExample:\n\
    >>> reverse_number(12345)\n54321\n>>> reverse_number(12213)\n31221\n>>> reverse_number(12000)\n\
    21 # Note that zeros get dropped!\n*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c || $s - $b < $c || $s\
    \ - $c < $a) {\n\t\treturn -1;\n\t}\n\treturn round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n}\n\n/* Given a string, return the number of words\
    \ in the string.\nExample:\n>>> count_words(\"Hello World\")\n2\n>>> count_words(\"\
    Hello World, how are you?\")\n5*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua2vk8_z.php:31\n\
    Stack trace:\n#0 /tmp/tmpua2vk8_z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpua2vk8_z.php\
    \ on line 31\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string,\
    \ return the first character that does not repeat anywhere in the string.\nExample:\n\
    >>> first_non_repeating(\"aabbccdde\")\n'e'\n>>> first_non_repeating(\"aabbcad\"\
    )\n'd'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n     \
    \   $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n\n/* Given a string, return the sum of the numbers appearing\
    \ in the string, \nignoring all other characters. A number is a series of 1 or\
    \ more digit chars \nin a row. (Note: Character.isDigit(char) tests if a char\
    \ is one of the chars \n'0', '1', .. '9'. Integer.parseInt(string) converts a\
    \ string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"\
    aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\necho triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1,\
    \ 2, 10);\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string,\
    \ return the sum of the numbers appearing in the string, \nignoring all other\
    \ characters. A number is a series of 1 or more digit chars \nin a row. (Note:\
    \ Character.isDigit(char) tests if a char is one of the chars \n'0', '1', .. '9'.\
    \ Integer.parseInt(string) converts a string to an int.)\nExample:\n>>> sum_numbers(\"\
    abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\"\
    )\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2,\
    \ 10);\necho \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given\
    \ a string of words, return the length of the shortest word(s).\nString will never\
    \ be empty and you do not need to account for different data types.\nExample:\n\
    >>> find_short(\"bitcoin take over the world maybe who knows perhaps\")\n3\n>>>\
    \ find_short(\"turns out random test cases are easier than writing out basic ones\"\
    )\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n \
    \   return round($area, 2);\n  }\n  return -1;\n}\n\n/* Given a string of words,\
    \ return the length of the shortest word(s).\nString will never be empty and you\
    \ do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\n/* Given a string, return the sum of the numbers appearing\
    \ in the string, \nignoring all other characters. A number is a series of 1 or\
    \ more digit chars \nin a row. (Note: Character.isDigit(char) tests if a char\
    \ is one of the chars '0', '1', .. '9'. \nInteger.parseInt(string) converts a\
    \ string to an int.)\nExample:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"\
    aa11b33\")\n44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\treturn $area;\n}\n\necho triangle_area(3, 4, 5);\necho \"\\\
    n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\n\n/* Given a string of words,\
    \ return the length of the shortest word(s).\nString will never be empty and you\
    \ do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nNAN\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hizqg_g.php:36\n\
    Stack trace:\n#0 /tmp/tmp_hizqg_g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_hizqg_g.php\
    \ on line 36\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $p = ($a + $b + $c) / 2;\n    if ($p - $a > 0 && $p - $b > 0 && $p\
    \ - $c > 0) {\n        return round(sqrt($p * ($p - $a) * ($p - $b) * ($p - $c)),\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n\n/* Given a string of words,\
    \ return the length of the shortest word(s).\nString will never be empty and you\
    \ do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c || $s - $b < $c || $s\
    \ - $c < $a) {\n\t\treturn -1;\n\t}\n\treturn round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-1\n-1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_afn3gtd.php:26\n\
    Stack trace:\n#0 /tmp/tmp_afn3gtd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_afn3gtd.php\
    \ on line 26\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n  return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the first character that is not repeated anywhere in\
    \ the string.\nFor example, given the string \"abcdabcd\", the function should\
    \ return 'e'.\nGiven the string \"abcbad\", the function should return 'c'.\n\
    Given the string \"abcabcabcabc\", the function should return null.\nExample:\n\
    >>> first_non_repeating_letter('abcdabcd')\n'e'\n>>> first_non_repeating_letter('abcbad')\n\
    'c'\n>>> first_non_repeating_letter('abcabcabcabc')\nnull*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string with the first and last characters \nswapped.\n\
    Example:\n>>> swap_first_last('abcd')\n'dbca'\n>>> swap_first_last('12345')\n\
    '52341'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 1);\necho \"\\n\";\necho triangle_area(3, 4, 6);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 7);\necho \"\\n\";\necho triangle_area(3, 4, 8);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 9);\necho \"\\n\";\necho triangle_area(3, 4, 10);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 11);\necho \"\\n\";\necho triangle_area(3, 4, 12);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 13);\necho \"\\n\";\necho triangle_area(3, 4, 14);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 15);\necho \"\\n\";\necho triangle_area(3, 4, 16);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 17);\necho \"\\n\";\necho triangle_area(3, 4, 18);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 19);\necho \"\\n\";\necho triangle_area(3, 4, 20);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 21);\necho \"\\n\";\necho triangle_area(3, 4, 22);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 23);\necho \"\\n\";\necho triangle_area(3, 4, 24);\n\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    -1

    0.97

    0.43

    5.33

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1'
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a number n. Return the sum of the first n odd numbers.\nExample:\n>>>\
    \ sum_odd_numbers(5)\n9\n*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the number\
    \ of words in the string.\nExample:\n>>> count_words(\"Hello World\")\n2\n>>>\
    \ count_words(\"Hello World, how are you?\")\n5*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a number, return\
    \ the sum of all the multiples of 3 and 5 that are\nsmaller than the given number.\n\
    Example:\n>>> sum_of_multiples(10)\n23\n*/\nfunction candidate(...$args) {\n \
    \   return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string where the first and last chars have been\
    \ exchanged.\nExample:\n>>> front_back('code')\n'eodc'\n>>> front_back('a')\n\
    'a'\n>>> front_back('ab')\n'ba'*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the number of words it contains.\nExample:\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, my name is John\")\n5*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n  return $area > 0 ? round($area, 2) : -1;\n}\n\n/* Given a string,\
    \ return the first non-repeating character.\nExample:\n>>> first_non_repeating_char('aabbcc')\n\
    'b'\n>>> first_non_repeating_char('aabbccddeeff')\n'g'*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return a new string with the first and last characters \nswapped.\n\
    Example:\n>>> swap_first_last('abcd')\n'dbca'\n>>> swap_first_last('12345')\n\
    '52341'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\n/* Given a string, return the first non-repeating character.\
    \ \nIf there is no non-repeating character, return null.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    null*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string\
    \ of words, return the length of the shortest word(s).\nString will never be empty\
    \ and you do not need to account for different data types.\nExample:\n>>> find_short(\"\
    bitcoin take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns\
    \ out random test cases are easier than writing out basic ones\")\n3*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  if ($s - $a < $c && $s - $b < $c && $s\
    \ - $c < $a) {\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  }\
    \ else {\n    return -1;\n  }\n}\n\n/* Given a string, return the first non-repeating\
    \ character in the string.\nExample:\n>>> first_non_repeating_letter('a')\n'a'\n\
    >>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s > $a && $s > $b && $s > $c) {\n\t\
    \t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn round($area,\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string, return the first\
    \ character that does not repeat itself.\nExample:\n>>> first_non_repeating_letter('a')\n\
    'a'\n>>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n        return round($s, 2);\n    } else {\n        return -1;\n  \
    \  }\n}\n\n/* Given a string of words, return the length of the shortest word(s).\n\
    String will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2,\
    \ 10);\necho \"\\n\";\necho triangle_area(3, 4, 6);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 7);\necho \"\\n\";\necho triangle_area(3, 4, 8);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 9);\necho \"\\n\";\necho triangle_area(3, 4, 10);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 11);\necho \"\\n\";\necho triangle_area(3, 4, 12);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 13);\necho \"\\n\";\necho triangle_area(3, 4, 14);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 15);\necho \"\\n\";\necho triangle_area(3, 4, 16);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 17);\necho \"\\n\";\necho triangle_area(3, 4, 18);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 19);\necho \"\\n\";\necho triangle_area(3, 4, 20);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 21);\necho \"\\n\";\necho triangle_area(3, 4, 22);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 23);\necho \"\\n\";\necho triangle_area(3, 4, 24);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 25);\necho \"\\n\";\necho triangle_area(3, 4, 26);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 27);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    5.33

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a list of\
    \ numbers, return the sum of the two largest numbers.\nExample:\n>>> sum_of_two_largest([1,\
    \ 2, 3])\n5\n>>> sum_of_two_largest([10, 2, 3, 4])\n14*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return the sum of the numbers appearing in the string, \nignoring all other\
    \ characters. A number is a series of 1 or more digit chars \nin a row. (Note:\
    \ Character.isDigit(char) tests if a char is one of the chars \n'0', '1', .. '9'.\
    \ Integer.parseInt(string) converts a string to an int.)\nExample:\n>>> sum_numbers(\"\
    abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"7 11\"\
    )\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a > 0 && $s - $b > 0 && $s -\
    \ $c > 0) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\"\
    ;\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\necho\
    \ triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 3);\n\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1'
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n        return round($s, 2);\n    } else {\n        return -1;\n  \
    \  }\n}\n\n/* Given a string, return true if it is a palindrome. Otherwise return\
    \ false.\nExample:\n>>> is_palindrome('racecar')\nTrue\n>>> is_palindrome('hello')\n\
    False*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string of words, return the length of the shortest word(s).\nString\
    \ will never be empty and you do not need to account for different data types.\n\
    Example:\n>>> find_short(\"bitcoin take over the world maybe who knows perhaps\"\
    )\n3\n>>> find_short(\"turns out random test cases are easier than writing out\
    \ basic ones\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the sum of the numbers appearing in the\
    \ string, \nignoring all other characters. A number is a series of 1 or more digit\
    \ chars \nin a row. (Note: Character.isDigit(char) tests if a char is one of the\
    \ chars \n'0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)\n\
    Example:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n\
    44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the number of words in the string.\nExample:\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, my name is John\")\n5*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t}\n\treturn -1;\n}\n\n/* Given a string, return the character\
    \ that appears the most times in the string.\nExample:\n>>> max_char('abcccccccd')\n\
    'c'\n>>> max_char('apple 1231111')\n'1'*/\nfunction candidate(...$args) {\n  \
    \  return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2,\
    \ 10);\necho \"\\n\";\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n \
    \   return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a\
    \ string of words, return the length of the shortest word(s).\nString will never\
    \ be empty and you do not need to account for different data types.\nExample:\n\
    >>> find_short(\"bitcoin take over the world maybe who knows perhaps\")\n3\n>>>\
    \ find_short(\"turns out random test cases are easier than writing out basic ones\"\
    )\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the sum of the numbers appearing in the string, \nignoring\
    \ all other characters. A number is a series of 1 or more digit chars \nin a row.\
    \ (Note: Character.isDigit(char) tests if a char is one of the chars \n'0', '1',\
    \ .. '9'. Integer.parseInt(string) converts a string to an int.)\nExample:\n>>>\
    \ sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"\
    7 11\")\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the number of words in the string.\nExample:\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, how are you?\")\n5\n*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return a string where every character is repeated\
    \ once.\nExample:\n>>> double_char('The')\n'TThhee'\n>>> double_char('AAbb')\n\
    'AAAAbbbb'\n>>> double_char('Hi-There')\n'HHii--TThheerree'*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n \
    \   return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\n/* Given a\
    \ string, return the sum of the numbers appearing in the string, \nignoring all\
    \ other characters. A number is a series of 1 or more digit chars \nin a row.\
    \ (Note: Character.isDigit(char) tests if a char is one of the chars \n'0', '1',\
    \ .. '9'. Integer.parseInt(string) converts a string to an int.)\nExample:\n>>>\
    \ sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n44\n>>> sum_numbers(\"\
    7 11\")\n18*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    echo triangle_area(3, 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\n\
    echo \"<br>\";\necho triangle_area(1, 2, 3);\necho \"<br>\";\necho triangle_area(4,\
    \ 5, 6);\necho \"<br>\";\necho triangle_area(7, 8, 9);\necho \"<br>\";\necho triangle_area(10,\
    \ 11, 12);\necho \"<br>\";\necho triangle_area(13, 14, 15);\necho \"<br>\";\n\
    echo triangle_area(16, 17, 18);\necho \"<br>\";\necho triangle_area(19, 20, 21);\n\
    echo \"<br>\";\necho triangle_area(22, 23, 24);\necho \"<br>\";\necho triangle_area(25,\
    \ 26, 27);\necho \"<br>\";\necho triangle_area(28, 29, 30);\necho \"<br>\";\n\
    echo triangle_area(31, 32, 33);\necho \"<br>\";\necho triangle_area(34, 35, 36);\n\
    echo \"<br>\";\necho triangle_area(37, 38, 39);\necho \"<br>\";\necho triangle_area(40,\
    \ 41, 42);\necho \"<br>\";\necho triangle_area(43, 44, 45);\necho \"<br>\";\n\
    echo triangle_area(46, 47, 48);\necho \"<br>\";\necho triangle_area(49, 50, 51);\n\
    echo \"<br>\";\necho triangle_area(52, 53, 54);\necho \"<br>\";\necho triangle_area(55,\
    \ 56, 57);\necho \"<br>\";\necho triangle_area(58, 59, 60);\necho \"<br>\";\n\
    echo triangle_area(61, 62, 63);\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1<br>-1<br>9.92<br>26.83<br>51.52<br>84<br>124.27<br>172.34<br>228.2<br>291.85<br>363.3<br>442.54<br>529.57<br>624.4<br>727.03<br>837.45<br>955.66<br>1081.67<br>1215.47<br>1357.06<br>1506.45<br>1663.63
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n        return round($s, 2);\n    } else {\n        return -1;\n  \
    \  }\n}\n\n/* Given a string, return the sum of the numbers appearing in the string,\
    \ \nignoring all other characters. A number is a series of 1 or more digit chars\
    \ \nin a row. (Note: Character.isDigit(char) tests if a char is one of the chars\
    \ '0', '1', .. '9'. \nInteger.parseInt(string) converts a string to an int.)\n\
    Example:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n\
    44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c && $s - $b < $c && $s\
    \ - $c < $a) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)),\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string of words, return\
    \ the length of the shortest word(s).\nString will never be empty and you do not\
    \ need to account for different data types.\nExample:\n>>> find_short(\"bitcoin\
    \ take over the world maybe who knows perhaps\")\n3\n>>> find_short(\"turns out\
    \ random test cases are easier than writing out basic ones\")\n3*/\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1ti9944.php:34\n\
    Stack trace:\n#0 /tmp/tmps1ti9944.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps1ti9944.php\
    \ on line 34\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  }\n  return -1;\n}\n\n/* Given a string, return the sum of\
    \ the digits 0-9 that appear in the string, \nignoring all other characters. Return\
    \ 0 if there are no digits in the string.\nExample:\n>>> sum_digits(\"aa1bc2d3\"\
    )\n6\n>>> sum_digits(\"aa11b33\")\n8\n>>> sum_digits(\"Chocolate\")\n0*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6<br>-1
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a +\
    \ $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return\
    \ round($s, 2);\n  }\n  return -1;\n}\n\n/* Given a string, return the number\
    \ of vowels in the string.\nExample:\n>>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"\
    world\")\n3*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\
    \treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/* Given a string,\
    \ return a new string that has transformed based on the input:\nChange case of\
    \ every character, ie. lower case to upper case, upper case to lower case.\nReverse\
    \ the order of words from the input.\nNote: You will have to handle multiple spaces,\
    \ and leading/trailing spaces.\nFor example:\n\"Example Input\" ==> \"iNPUT eXAMPLE\"\
    \nYou may assume the input only contain English alphabet and spaces.\n*/\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a +\
    \ $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\t\
    return round($s, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n \
    \   } else {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return triangle_area(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n  $s = ($a + $b + $c) / 2;\n  if ($s - $a > 0 && $s - $b > 0 && $s -\
    \ $c > 0) {\n    return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \  } else {\n    return -1;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    /* Given a string, return the sum of the digits 0-9 that appear in the string,\
    \ \nignoring all other characters. Return 0 if there are no digits in the string.\
    \ \n(Note: Character.isDigit(char) tests if a char is one of the chars '0', '1',\
    \ .. '9'. \nInteger.parseInt(string) converts a string to an int.)\nExample:\n\
    >>> sum_digits(\"aa1bc2d3\")\n6\n>>> sum_digits(\"aa11b33\")\n8\n>>> sum_digits(\"\
    Chocolate\")\n0*/\nfunction candidate(...$args) {\n    return triangle_area(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 10) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p =\
    \ ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n        return round($area, 2);\n    } else {\n        return -1;\n \
    \   }\n}\n\n/* Given a string, return the sum of the numbers appearing in the\
    \ string, \nignoring all other characters. A number is a series of 1 or more digit\
    \ chars \nin a row. (Note: Character.isDigit(char) tests if a char is one of the\
    \ chars \n'0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)\n\
    Example:\n>>> sum_numbers(\"abc123xyz\")\n123\n>>> sum_numbers(\"aa11b33\")\n\
    44\n>>> sum_numbers(\"7 11\")\n18*/\nfunction candidate(...$args) {\n    return\
    \ triangle_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 3) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* Given the lengths of the three sides of a triangle. Return the\
    \ area of\nthe triangle rounded to 2 decimal points if the three sides form a\
    \ valid triangle. \nOtherwise return -1\nThree sides make a valid triangle when\
    \ the sum of any two sides is greater \nthan the third side.\nExample:\n>>> triangle_area(3,\
    \ 4, 5)\n6.0\n>>> triangle_area(1, 2, 10)\n-1*/\nfunction triangle_area($a, $b,\
    \ $c) {\n    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return triangle_area(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660220778

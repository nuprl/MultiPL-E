language: php
name: HumanEval_84_solve
results:
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk62rel69.php:29\n\
    Stack trace:\n#0 /tmp/tmpk62rel69.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk62rel69.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0grr5w5v.php:25\n\
    Stack trace:\n#0 /tmp/tmp0grr5w5v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0grr5w5v.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary_array = str_split($binary);\n    $sum = 0;\n    foreach ($binary_array\
    \ as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws8c137w.php:33\n\
    Stack trace:\n#0 /tmp/tmpws8c137w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpws8c137w.php\
    \ on line 33\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0mlqa9i.php:28\n\
    Stack trace:\n#0 /tmp/tmpg0mlqa9i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg0mlqa9i.php\
    \ on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpfzwik1v2.php:29\nStack trace:\n#0 /tmp/tmpfzwik1v2.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfzwik1v2.php on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $digit){\n\
    \        $sum += $digit;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho\
    \ \"<br>\";\necho solve(150);\necho \"<br>\";\necho solve(147);\necho \"<br>\"\
    ;\necho solve(0);\necho \"<br>\";\necho solve(1);\necho \"<br>\";\necho solve(2);\n\
    echo \"<br>\";\necho solve(3);\necho \"<br>\";\necho solve(4);\necho \"<br>\"\
    ;\necho solve(5);\necho \"<br>\";\necho solve(6);\necho \"<br>\";\necho solve(7);\n\
    echo \"<br>\";\necho solve(8);\necho \"<br>\";\necho solve(9);\necho \"<br>\"\
    ;\necho solve(10);\necho \"<br>\";\necho solve(11);\necho \"<br>\";\necho solve(12);\n\
    echo \"<br>\";\necho solve(13);\necho \"<br>\";\necho solve(14);\necho \"<br>\"\
    ;\necho solve(15);\necho \"<br>\";\necho solve(16);\necho \"<br>\";\necho solve(17);\n\
    echo \"<br>\";\necho solve(18);\necho \"<br>\";\necho solve(19);\necho \"<br>\"\
    ;\necho solve(20);\necho \"<br>\";\necho solve(21);\necho \"<br>\";\necho solve(22);\n\
    echo \"<br>\";\necho solve(23);\necho \"<br>\";\necho solve(24);\necho \"<br>\"\
    ;\necho solve(25);\necho \"<br>\";\necho solve(26);\necho \"<br>\";\necho solve(27);\n\
    echo \"<br>\";\necho solve(28);\necho \"<br>\";\necho solve(29);\necho \"<br>\"\
    ;\necho solve(30);\necho \"<br>\";\necho solve(31);\necho \"<br>\";\necho solve(32);\n\
    echo \"<br>\";\necho solve(33);\necho \"<br>\";\necho solve(34);\necho \"<br\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "1", expecting "," or ";" in /tmp/tmpfxoo0zos.php
    on line 106

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c9odpk1.php:23\n\
    Stack trace:\n#0 /tmp/tmp8c9odpk1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8c9odpk1.php\
    \ on line 23\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3d05_5d.php:31\n\
    Stack trace:\n#0 /tmp/tmpy3d05_5d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy3d05_5d.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9ysxh1p.php:29\n\
    Stack trace:\n#0 /tmp/tmpl9ysxh1p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl9ysxh1p.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \n/*\n    ---- TESTE ----\n*/\n\necho solve(1000);\necho \"\\n\";\necho solve(150);\n\
    echo \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp3u65w31a.php:34\nStack trace:\n#0 /tmp/tmp3u65w31a.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3u65w31a.php on line 34\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $digit){\n\
    \        $sum += $digit;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi57i_2e8.php:31\n\
    Stack trace:\n#0 /tmp/tmpi57i_2e8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi57i_2e8.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \n/*\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp_kh6bojt.php on
    line 19

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $key\
    \ => $value){\n        $sum += $value;\n    }\n    return $sum;\n}\n\n/*\n   \
    \ ----TESTE----\n*/\n\necho solve(1000);\necho \"<br>\";\necho solve(150);\necho\
    \ \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66_h85nd.php:39\n\
    Stack trace:\n#0 /tmp/tmp66_h85nd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp66_h85nd.php\
    \ on line 39\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk62rel69.php:29\n\
    Stack trace:\n#0 /tmp/tmpk62rel69.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk62rel69.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \n/*\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp_kh6bojt.php on
    line 19

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \n/*\n    ---- TESTE ----\n*/\n\necho solve(1000);\necho \"\\n\";\necho solve(150);\n\
    echo \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp3u65w31a.php:34\nStack trace:\n#0 /tmp/tmp3u65w31a.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3u65w31a.php on line 34\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  return $bin;\n}\n\necho solve(1000);\necho \"\\n\";\necho solve(150);\necho\
    \ \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmperjz7rds.php:31\nStack trace:\n#0 /tmp/tmperjz7rds.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmperjz7rds.php on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(147);\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_ldch7j.php:25\n\
    Stack trace:\n#0 /tmp/tmpk_ldch7j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk_ldch7j.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0j5d662.php:25\n\
    Stack trace:\n#0 /tmp/tmpr0j5d662.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr0j5d662.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qaj1j47.php:26\n\
    Stack trace:\n#0 /tmp/tmp1qaj1j47.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1qaj1j47.php\
    \ on line 26\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  return $bin;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpra7ucrpw.php:28\nStack trace:\n#0 /tmp/tmpra7ucrpw.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpra7ucrpw.php on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $bin = decbin($N);\n\
    \    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n    }\n\
    \    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfs0laga.php:31\n\
    Stack trace:\n#0 /tmp/tmppfs0laga.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppfs0laga.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho\
    \ solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc2z876g.php:32\n\
    Stack trace:\n#0 /tmp/tmpxc2z876g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxc2z876g.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $num){\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun01ebqq.php:30\n\
    Stack trace:\n#0 /tmp/tmpun01ebqq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpun01ebqq.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3d05_5d.php:31\n\
    Stack trace:\n#0 /tmp/tmpy3d05_5d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy3d05_5d.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum\
    \ += $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw8sxunr.php:28\n\
    Stack trace:\n#0 /tmp/tmptw8sxunr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptw8sxunr.php\
    \ on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $result = '';\n    while\
    \ ($N > 0) {\n        $result = ($N % 2) . $result;\n        $N = (int)($N / 2);\n\
    \    }\n    return $result;\n}\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyl98di1.php:29\n\
    Stack trace:\n#0 /tmp/tmpfyl98di1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfyl98di1.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d0etkc6.php:29\n\
    Stack trace:\n#0 /tmp/tmp9d0etkc6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9d0etkc6.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpktbdo3q5.php:28\nStack trace:\n#0 /tmp/tmpktbdo3q5.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpktbdo3q5.php on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uidmfje.php:33\n\
    Stack trace:\n#0 /tmp/tmp0uidmfje.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0uidmfje.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrh_fvdg.php:31\n\
    Stack trace:\n#0 /tmp/tmplrh_fvdg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplrh_fvdg.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9ysxh1p.php:29\n\
    Stack trace:\n#0 /tmp/tmpl9ysxh1p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl9ysxh1p.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $total = 0;\n    foreach($binary as $num){\n\
    \        $total += $num;\n    }\n    return $total;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dqbl3bi.php:33\n\
    Stack trace:\n#0 /tmp/tmp4dqbl3bi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4dqbl3bi.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk62rel69.php:29\n\
    Stack trace:\n#0 /tmp/tmpk62rel69.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk62rel69.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c9odpk1.php:23\n\
    Stack trace:\n#0 /tmp/tmp8c9odpk1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8c9odpk1.php\
    \ on line 23\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d0etkc6.php:29\n\
    Stack trace:\n#0 /tmp/tmp9d0etkc6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9d0etkc6.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $result = \"\";\n    while($N\
    \ > 0) {\n        $result = ($N % 2) . $result;\n        $N = floor($N / 2);\n\
    \    }\n    return $result;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4smk1a_n.php:32\nStack trace:\n#0 /tmp/tmp4smk1a_n.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4smk1a_n.php on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfircmgbj.php:30\n\
    Stack trace:\n#0 /tmp/tmpfircmgbj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfircmgbj.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    $binary = str_split($binary);\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpng05wfys.php:29\n\
    Stack trace:\n#0 /tmp/tmpng05wfys.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpng05wfys.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum\
    \ += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3urp_mq4.php:29\n\
    Stack trace:\n#0 /tmp/tmp3urp_mq4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3urp_mq4.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(147);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94q9idk9.php:29\n\
    Stack trace:\n#0 /tmp/tmp94q9idk9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp94q9idk9.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_kju_q.php:30\n\
    Stack trace:\n#0 /tmp/tmpmn_kju_q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmn_kju_q.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uidmfje.php:33\n\
    Stack trace:\n#0 /tmp/tmp0uidmfje.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0uidmfje.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d0etkc6.php:29\n\
    Stack trace:\n#0 /tmp/tmp9d0etkc6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9d0etkc6.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $b){\n\
    \        $sum += $b;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5g0lz9g0.php:33\n\
    Stack trace:\n#0 /tmp/tmp5g0lz9g0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5g0lz9g0.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c9odpk1.php:23\n\
    Stack trace:\n#0 /tmp/tmp8c9odpk1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8c9odpk1.php\
    \ on line 23\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(147);\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_ldch7j.php:25\n\
    Stack trace:\n#0 /tmp/tmpk_ldch7j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk_ldch7j.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk6sx9mk.php:32\n\
    Stack trace:\n#0 /tmp/tmpyk6sx9mk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyk6sx9mk.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho \"<br>\"\
    ;\necho solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfx3x10u.php:34\n\
    Stack trace:\n#0 /tmp/tmpjfx3x10u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjfx3x10u.php\
    \ on line 34\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $bin){\n\
    \        $sum += $bin;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7pnk1uv.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7pnk1uv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp7pnk1uv.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum\
    \ += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvkwmobh.php:31\n\
    Stack trace:\n#0 /tmp/tmptvkwmobh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptvkwmobh.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  return $bin;\n}\n\necho solve(1000);\necho \"\\n\";\necho solve(150);\necho\
    \ \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmperjz7rds.php:31\nStack trace:\n#0 /tmp/tmperjz7rds.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmperjz7rds.php on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpktbdo3q5.php:28\nStack trace:\n#0 /tmp/tmpktbdo3q5.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpktbdo3q5.php on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpfzwik1v2.php:29\nStack trace:\n#0 /tmp/tmpfzwik1v2.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfzwik1v2.php on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $bin){\n\
    \        $sum += $bin;\n    }\n    return $sum;\n}\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9h_0almt.php:30\n\
    Stack trace:\n#0 /tmp/tmp9h_0almt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9h_0almt.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3d05_5d.php:31\n\
    Stack trace:\n#0 /tmp/tmpy3d05_5d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy3d05_5d.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9hhbfay.php:24\n\
    Stack trace:\n#0 /tmp/tmpk9hhbfay.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk9hhbfay.php\
    \ on line 24\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk62rel69.php:29\n\
    Stack trace:\n#0 /tmp/tmpk62rel69.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk62rel69.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho \"\\n\";\necho solve(150);\n\
    echo \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpmqgrel6d.php:30\nStack trace:\n#0 /tmp/tmpmqgrel6d.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmqgrel6d.php on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $result = '';\n    while\
    \ ($N > 0) {\n        $result = ($N % 2) . $result;\n        $N = floor($N / 2);\n\
    \    }\n    return $result;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgs_r0go.php:29\n\
    Stack trace:\n#0 /tmp/tmpwgs_r0go.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwgs_r0go.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsx237p1d.php:33\n\
    Stack trace:\n#0 /tmp/tmpsx237p1d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsx237p1d.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    \n/*\n    ---- TESTE ----\n*/\n\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpt70_q18i.php:33\nStack trace:\n#0 /tmp/tmpt70_q18i.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt70_q18i.php on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\necho solve(1000);\necho \"\\n\";\necho solve(150);\n\
    echo \"\\n\";\necho solve(147);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpj0bhgx0y.php:31\nStack trace:\n#0 /tmp/tmpj0bhgx0y.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj0bhgx0y.php on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $number = decbin($N);\n\
    \    return $number;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpsus4_yto.php:27\nStack trace:\n#0 /tmp/tmpsus4_yto.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsus4_yto.php on line 27\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf0lky50.php:29\n\
    Stack trace:\n#0 /tmp/tmpmf0lky50.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmf0lky50.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpfzwik1v2.php:29\nStack trace:\n#0 /tmp/tmpfzwik1v2.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfzwik1v2.php on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $b){\n\
    \        $sum += $b;\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphr_gkcd7.php:31\n\
    Stack trace:\n#0 /tmp/tmphr_gkcd7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphr_gkcd7.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $digit){\n\
    \        $sum += $digit;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $b){\n\
    \        $sum += $b;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycbyrlsb.php:30\n\
    Stack trace:\n#0 /tmp/tmpycbyrlsb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpycbyrlsb.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4zmx5n8.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4zmx5n8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4zmx5n8.php\
    \ on line 24\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(147);\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_ldch7j.php:25\n\
    Stack trace:\n#0 /tmp/tmpk_ldch7j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk_ldch7j.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm02bl902.php:30\n\
    Stack trace:\n#0 /tmp/tmpm02bl902.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm02bl902.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvbkj8u.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvbkj8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvbkj8u.php\
    \ on line 28\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\necho solve(1000);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_kju_q.php:30\n\
    Stack trace:\n#0 /tmp/tmpmn_kju_q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmn_kju_q.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3f0n742.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3f0n742.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3f0n742.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $b){\n\
    \        $sum += $b;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0g0tfxpz.php:29\n\
    Stack trace:\n#0 /tmp/tmp0g0tfxpz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0g0tfxpz.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk6sx9mk.php:32\n\
    Stack trace:\n#0 /tmp/tmpyk6sx9mk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyk6sx9mk.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe33quu5v.php:30\n\
    Stack trace:\n#0 /tmp/tmpe33quu5v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe33quu5v.php\
    \ on line 30\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho\
    \ solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc2z876g.php:32\n\
    Stack trace:\n#0 /tmp/tmpxc2z876g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxc2z876g.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $number){\n\
    \        $sum += $number;\n    }\n    return $sum;\n}\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08ad_jwh.php:32\n\
    Stack trace:\n#0 /tmp/tmp08ad_jwh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp08ad_jwh.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0grr5w5v.php:25\n\
    Stack trace:\n#0 /tmp/tmp0grr5w5v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0grr5w5v.php\
    \ on line 25\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n  $bin = decbin($N);\n  $sum\
    \ = 0;\n  for ($i = 0; $i < strlen($bin); $i++) {\n    $sum += $bin[$i];\n  }\n\
    \  return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmhtqb9o.php:29\n\
    Stack trace:\n#0 /tmp/tmpqmhtqb9o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqmhtqb9o.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $result = '';\n    while($N\
    \ > 0) {\n        $result = ($N % 2) . $result;\n        $N = (int)($N / 2);\n\
    \    }\n    return $result;\n}\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98683r5c.php:29\n\
    Stack trace:\n#0 /tmp/tmp98683r5c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp98683r5c.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0mlqa9i.php:28\n\
    Stack trace:\n#0 /tmp/tmpg0mlqa9i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg0mlqa9i.php\
    \ on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  return $bin;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpra7ucrpw.php:28\nStack trace:\n#0 /tmp/tmpra7ucrpw.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpra7ucrpw.php on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    return decbin($N);\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c9odpk1.php:23\n\
    Stack trace:\n#0 /tmp/tmp8c9odpk1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8c9odpk1.php\
    \ on line 23\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $result = \"\";\n    while\
    \ ($N > 0) {\n        $result = ($N % 2) . $result;\n        $N = floor($N / 2);\n\
    \    }\n    return $result;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxr3gxjfx.php:33\nStack trace:\n#0 /tmp/tmpxr3gxjfx.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxr3gxjfx.php on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk62rel69.php:29\n\
    Stack trace:\n#0 /tmp/tmpk62rel69.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk62rel69.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $digit){\n\
    \        $sum += $digit;\n    }\n    return $sum;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmpb43rcfrm.php on
    line 25

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $num){\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nprint_r(solve(1000));\n\
    print_r(solve(150));\nprint_r(solve(147));\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnolzbkym.php:33\n\
    Stack trace:\n#0 /tmp/tmpnolzbkym.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnolzbkym.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $number){\n\
    \        $sum += $number;\n    }\n    return $sum;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmp_pbjmkqw.php on
    line 25

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0mlqa9i.php:28\n\
    Stack trace:\n#0 /tmp/tmpg0mlqa9i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg0mlqa9i.php\
    \ on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm02bl902.php:30\n\
    Stack trace:\n#0 /tmp/tmpm02bl902.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm02bl902.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum\
    \ += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvkwmobh.php:31\n\
    Stack trace:\n#0 /tmp/tmptvkwmobh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptvkwmobh.php\
    \ on line 31\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  return $bin;\n}\n\necho solve(1000);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hxvvxfu.php:26\n\
    Stack trace:\n#0 /tmp/tmp7hxvvxfu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7hxvvxfu.php\
    \ on line 26\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin as $b){\n        $sum\
    \ += $b;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9ysxh1p.php:29\n\
    Stack trace:\n#0 /tmp/tmpl9ysxh1p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl9ysxh1p.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpktbdo3q5.php:28\nStack trace:\n#0 /tmp/tmpktbdo3q5.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpktbdo3q5.php on line 28\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\n\
    echo solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4c860iv.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4c860iv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj4c860iv.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $sum = 0;\n    $binary\
    \ = decbin($N);\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum\
    \ += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhqsb_z9.php:30\n\
    Stack trace:\n#0 /tmp/tmpfhqsb_z9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfhqsb_z9.php\
    \ on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $bin = decbin($N);\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++) {\n        $sum += $bin[$i];\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnk0pvfa.php:31\n\
    Stack trace:\n#0 /tmp/tmplnk0pvfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplnk0pvfa.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi98570_g.php:29\n\
    Stack trace:\n#0 /tmp/tmpi98570_g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi98570_g.php\
    \ on line 29\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111010001001011010010011\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjqkiwa75.php:27\nStack trace:\n#0 /tmp/tmpjqkiwa75.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjqkiwa75.php on line 27\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $binary = str_split($binary);\n    $sum = 0;\n    foreach($binary as $value){\n\
    \        $sum += $value;\n    }\n    return $sum;\n}\n\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uidmfje.php:33\n\
    Stack trace:\n#0 /tmp/tmp0uidmfje.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0uidmfje.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    return $binary;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111101000<br>10010110<br>10010011<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp4l_wigdc.php:30\nStack trace:\n#0 /tmp/tmp4l_wigdc.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4l_wigdc.php on line 30\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given a positive integer N, return the total sum of its digits\
    \ in binary.\nExample\n>>> solve(1000)\n\"1\"\n>>> solve(150)\n\"110\"\n>>> solve(147)\n\
    \"1100\"\nVariables:\n@N integer\nConstraints: 0 \u2264 N \u2264 10000.\nOutput:\n\
    a string of binary number*/\nfunction solve($N) {\n    $binary = decbin($N);\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum +=\
    \ $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\necho solve(150);\n\
    echo solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21elwmj.php:31\n\
    Stack trace:\n#0 /tmp/tmpb21elwmj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb21elwmj.php\
    \ on line 31\n"
  timestamp: 1660220838

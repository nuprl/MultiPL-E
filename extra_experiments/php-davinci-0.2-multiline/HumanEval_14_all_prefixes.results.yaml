language: php
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $result[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $result;\n}\n\n/* Return array of all suffixes from\
    \ shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes = array();\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\n/* Return array of all suffixes\
    \ from shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\n/* Return array of all suffixes\
    \ from shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 1; $i <= strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i);\n    }\n    return $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 1; $i <= strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i);\n    }\n    return $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    $len = strlen($string);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $prefixes[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $prefixes;\n}\n\n/* Return array of all suffixes\
    \ from shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i);\n\
    \t}\n\treturn $prefixes;\n}\n\n/* Return array of all suffixes from shortest to\
    \ longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\"\
    , \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n\n/* Return array of all suffixes from shortest to longest of the\
    \ input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes = array();\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\n/* Return array of all suffixes\
    \ from shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes = array();\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\n/* Return array of all suffixes\
    \ from shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    for ($i = 1; $i <= strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i);\n    }\n    return $result;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $result = array();\n    $len = strlen($string);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $result[] = substr($string, 0, $i\
    \ + 1);\n    }\n    return $result;\n}\n\n/* Return array of all suffixes from\
    \ shortest to longest of the input string\n>>> all_suffixes(\"abc\")\narray(\"\
    c\", \"bc\", \"abc\")*/\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n\n/* Return array of all suffixes from shortest to longest of the input string\n\
    >>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* Return array of all prefixes from shortest to longest of the\
    \ input string\n>>> all_prefixes(\"abc\")\narray(\"a\", \"ab\", \"abc\")*/\nfunction\
    \ all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n\n/* Return array of all suffixes from shortest to longest of\
    \ the input string\n>>> all_suffixes(\"abc\")\narray(\"c\", \"bc\", \"abc\")*/\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716

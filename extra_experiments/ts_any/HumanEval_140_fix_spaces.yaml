name: HumanEval_140_fix_spaces
language: ts
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"\
  ),\"Example\");\n  assert.deepEqual(candidate(\"Mudasir Hanif \"),\"Mudasir_Hanif_\"\
  );\n  assert.deepEqual(candidate(\"Yellow Yellow  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\"\
  );\n  assert.deepEqual(candidate(\"Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"\
  \   Exa 1 2 2 mple\"),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["    let newText = text.replace(/\\s/g, \"_\");\n    let newText2 =\
    \ newText.replace(/__/g, \"-\");\n    return newText2;\n}\n", "    let result\
    \ = text.replace(/\\s/g, \"_\");\n    result = result.replace(/__/g, \"-\");\n\
    \    return result;\n}\n", "    let result = text.replace(/\\s/g, \"_\");\n  \
    \  result = result.replace(/__/g, \"-\");\n    return result;\n}\n", "    let\
    \ result = text.replace(/\\s/g, '_');\n    result = result.replace(/_+/g, '-');\n\
    \    return result;\n}\n", "    let result = text.replace(/\\s/g, \"_\");\n  \
    \  let result2 = result.replace(/__/g, \"-\");\n    return result2;\n}\nconsole.log(fix_spaces(\"\
    \ Example\"));\nconsole.log(fix_spaces(\" Example 1\"));\nconsole.log(fix_spaces(\"\
    \ Example 2\"));\nconsole.log(fix_spaces(\" Example 3\"));\n", "    let newText\
    \ = text.replace(/\\s/g, '_');\n    let newText2 = newText.replace(/__/g, '-');\n\
    \    return newText2;\n}\n", "    let newText = text.replace(/\\s/g, \"_\");\n\
    \    let newText2 = newText.replace(/_{2,}/g, \"-\");\n    return newText2;\n\
    }\n", "    let result = \"\";\n    let counter = 0;\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] == \" \") {\n            counter++;\n          \
    \  if (counter == 1) {\n                result += \"_\";\n            }\n    \
    \        else if (counter == 2) {\n                result += \"_\";\n        \
    \    }\n            else if (counter > 2) {\n                result += \"-\";\n\
    \            }\n        }\n        else {\n            result += text[i];\n  \
    \          counter = 0;\n        }\n    }\n    return result;\n}\n", "    let\
    \ newText = text.replace(/\\s/g, '_');\n    let newText2 = newText.replace(/__/g,\
    \ '-');\n    return newText2;\n}\n", "    let result = text.replace(/\\s/g, '_');\n\
    \    let result2 = result.replace(/__/g, '-');\n    return result2;\n}\n", " \
    \   let result = text.replace(/\\s/g, '_');\n    result = result.replace(/__/g,\
    \ '-');\n    return result;\n}\n", "    let result = text.replace(/\\s/g, '_');\n\
    \    result = result.replace(/__/g, '-');\n    return result;\n}\n", "    let\
    \ result = text.replace(/\\s/g, '_');\n    let result2 = result.replace(/__/g,\
    \ '-');\n    return result2;\n}\n", "    let result = text.replace(/\\s/g, '_');\n\
    \    result = result.replace(/_+/g, '-');\n    return result;\n}\n", "    let\
    \ newText = text.replace(/ /g, '_');\n    let newText1 = newText.replace(/__/g,\
    \ '-');\n    return newText1;\n}\n", "    let res = text.replace(/\\s/g, '_');\n\
    \    res = res.replace(/__/g, '-');\n    return res;\n}\n", "    let result =\
    \ text.replace(/\\s/g, '_');\n    result = result.replace(/__/g, '-');\n    return\
    \ result;\n}\n", "    let newText = text.replace(/\\s/g, '_');\n    let newText2\
    \ = newText.replace(/__/g, '-');\n    return newText2;\n}\n", "    let result\
    \ = text.replace(/\\s/g, \"_\");\n    result = result.replace(/__/g, \"-\");\n\
    \    return result;\n}\n", "    let result = text.replace(/\\s/g, \"_\");\n  \
    \  let result2 = result.replace(/__/g, \"-\");\n    return result2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_153_Strongest_Extension
language: ts
prompt: "//You will be given the name of a class (a string) and an array of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ array.\n// For example, if you are given \"Slices\" as the class and an array\
  \ of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  // return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"my_class\"\
  , [\"AA\", \"Be\", \"CC\"])\n// \"my_class.AA\"\nfunction Strongest_Extension(class_name:\
  \ any, extensions: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = Strongest_Extension;\n  assert.deepEqual(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let extension = extensions[i];\n        let strength = 0;\n     \
    \   for (let j = 0; j < extension.length; j++) {\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = \"\";\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = \"\";\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                extension_strength++;\n\
    \            } else if (extensions[i][j] >= 'a' && extensions[i][j] <= 'z') {\n\
    \                extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongestExtension = extensions[0];\n    let strongestExtensionStrength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extensionStrength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extensionStrength++;\n            } else {\n                extensionStrength--;\n\
    \            }\n        }\n        if (extensionStrength > strongestExtensionStrength)\
    \ {\n            strongestExtensionStrength = extensionStrength;\n           \
    \ strongestExtension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongestExtension;\n}\n", "    let strongest_extension = \"\";\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongestExtension = \"\";\n    let strongestStrength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongestStrength) {\n            strongestStrength = strength;\n\
    \            strongestExtension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongestExtension;\n}\n", "    let strongest_extension:\
    \ any = \"\";\n    let strongest_extension_strength: any = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n   \
    \         if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n       \
    \         extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    for (let i = 1; i < extensions.length; i++) {\n        if (extensions[i].length\
    \ - extensions[i].toLowerCase().length > strongest.length - strongest.toLowerCase().length)\
    \ {\n            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = \"\";\n    let strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n   \
    \     let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            } else {\n                sm++;\n           \
    \ }\n        }\n        if (cap - sm > strength) {\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ any = {\n        name: \"\",\n        strength: 0\n    };\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let strength: number = 0;\n      \
    \  for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest.strength) {\n            strongest.name = extensions[i];\n\
    \            strongest.strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest_extension: string = \"\"\
    ;\n    let strongest_strength: number = 0;\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j: number = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        name:\
    \ \"\",\n        strength: 0\n    };\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest.strength) {\n            strongest.name = extensions[i];\n     \
    \       strongest.strength = cap - sm;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest_extension: any = \"\";\n\
    \    let strongest_extension_strength: any = 0;\n    for (let i: number = 0; i\
    \ < extensions.length; i++) {\n        let extension_strength: number = 0;\n \
    \       for (let j: number = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: number = 0;\n    let\
    \ strongest_extension: string = \"\";\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let upper: number = 0;\n        let lower: number = 0;\n   \
    \     for (let j: number = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                upper++;\n\
    \            } else {\n                lower++;\n            }\n        }\n  \
    \      if (upper - lower > strongest) {\n            strongest = upper - lower;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest = \"\";\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = \"\";\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n\
    \        strength: -Infinity,\n        name: \"\"\n    };\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: any = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest.strength) {\n            strongest.strength = strength;\n\
    \            strongest.name = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest: any = {\n        name:\
    \ \"\",\n        strength: 0\n    };\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest.strength) {\n    \
    \        strongest.name = extensions[i];\n            strongest.strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n", "  \
    \  let strongest: any = {};\n    let strength: any = 0;\n    let strongest_extension:\
    \ any = \"\";\n    for (let i: any = 0; i < extensions.length; i++) {\n      \
    \  for (let j: any = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strongest.cap += 1;\n\
    \            } else {\n                strongest.sm += 1;\n            }\n   \
    \     }\n        if (strongest.cap - strongest.sm > strength) {\n            strength\
    \ = strongest.cap - strongest.sm;\n            strongest_extension = extensions[i];\n\
    \        }\n        strongest.cap = 0;\n        strongest.sm = 0;\n    }\n   \
    \ return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return `${class_name}.${strongest_extension}`;\n\
    }\n", "    let strongest: any = {\n        name: \"\",\n        strength: 0\n\
    \    };\n    extensions.forEach((extension: any) => {\n        let strength: any\
    \ = extension.match(/[A-Z]/g).length - extension.match(/[a-z]/g).length;\n   \
    \     if (strength > strongest.strength) {\n            strongest.name = extension;\n\
    \            strongest.strength = strength;\n        }\n    });\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: any = \"\";\n    let strongest_extension_strength:\
    \ any = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n      \
    \  let extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return `${class_name}.${strongest_extension}`;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let current_extension\
    \ = extensions[i];\n        let current_extension_strength = 0;\n        for (let\
    \ j = 0; j < current_extension.length; j++) {\n            let current_char =\
    \ current_extension[j];\n            if (current_char.toUpperCase() === current_char)\
    \ {\n                current_extension_strength++;\n            } else {\n   \
    \             current_extension_strength--;\n            }\n        }\n      \
    \  if (current_extension_strength > strongest_extension_strength) {\n        \
    \    strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = \"\";\n    let strongest_extension_strength = 0;\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension_strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength +=\
    \ 1;\n            } else {\n                extension_strength -= 1;\n       \
    \     }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return `${class_name}.${strongest_extension}`;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_strength = 0;\n    let\
    \ strength = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: any = {\n        name: \"\",\n        strength: 0\n    };\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strongest.strength < strength) {\n            strongest.name\
    \ = extensions[i];\n            strongest.strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest.name;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: any = \"\
    \";\n    let strongest_extension_strength: any = 0;\n    let current_extension_strength:\
    \ any = 0;\n    let current_extension_cap: any = 0;\n    let current_extension_sm:\
    \ any = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n      \
    \  current_extension_cap = 0;\n        current_extension_sm = 0;\n        for\
    \ (let j: number = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                current_extension_cap++;\n\
    \            } else {\n                current_extension_sm++;\n            }\n\
    \        }\n        current_extension_strength = current_extension_cap - current_extension_sm;\n\
    \        if (current_extension_strength > strongest_extension_strength) {\n  \
    \          strongest_extension_strength = current_extension_strength;\n      \
    \      strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: string = \"\";\n    let strongest_extension_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: any = {\n        strength: 0,\n        name: \"\"\n    };\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength: any\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest.strength) {\n            strongest.strength\
    \ = strength;\n            strongest.name = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest.name;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: any = \"\";\n    let strongest_extension_strength:\
    \ any = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n      \
    \  let extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strength = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let current_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ current_strength++;\n            } else {\n                current_strength--;\n\
    \            }\n        }\n        if (current_strength > strength) {\n      \
    \      strength = current_strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strength = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n \
    \       for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: any = \"\";\n    let strongest_strength: any = 0;\n   \
    \ for (let i: number = 0; i < extensions.length; i++) {\n        let extension:\
    \ any = extensions[i];\n        let strength: any = 0;\n        for (let j: number\
    \ = 0; j < extension.length; j++) {\n            let letter: any = extension[j];\n\
    \            if (letter.toUpperCase() === letter) {\n                strength\
    \ += 1;\n            } else {\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = \"\";\n    let strongest_extension_strength = 0;\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let current_extension = extensions[i];\n\
    \        let current_extension_strength = 0;\n        for (let j = 0; j < current_extension.length;\
    \ j++) {\n            if (current_extension[j] === current_extension[j].toUpperCase())\
    \ {\n                current_extension_strength++;\n            } else {\n   \
    \             current_extension_strength--;\n            }\n        }\n      \
    \  if (current_extension_strength > strongest_extension_strength) {\n        \
    \    strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: any = {\n        name: \"\",\n        strength: 0\n    };\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let cap: number =\
    \ 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest.strength) {\n       \
    \     strongest.name = extensions[i];\n            strongest.strength = cap -\
    \ sm;\n        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_extension = extensions[i];\n        let current_extension_strength\
    \ = 0;\n        for (let j = 0; j < current_extension.length; j++) {\n       \
    \     let current_letter = current_extension[j];\n            if (current_letter.toUpperCase()\
    \ === current_letter) {\n                current_extension_strength++;\n     \
    \       } else {\n                current_extension_strength--;\n            }\n\
    \        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    extensions.forEach(extension => {\n    \
    \    let strength = 0;\n        for (let i = 0; i < extension.length; i++) {\n\
    \            if (extension[i] === extension[i].toUpperCase()) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                extension_strength++;\n\
    \            } else if (extensions[i][j] >= 'a' && extensions[i][j] <= 'z') {\n\
    \                extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = 0;\n    let strongest_extension = '';\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let extension = extensions[i];\n    \
    \    let cap = 0;\n        let sm = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                cap++;\n            } else {\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if (strength\
    \ > strongest) {\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }\n", "    let strongest_extension: any = extensions[0];\n    let strongest_strength:\
    \ any = 0;\n    for (let i: any = 0; i < extensions.length; i++) {\n        let\
    \ extension: any = extensions[i];\n        let strength: any = 0;\n        for\
    \ (let j: any = 0; j < extension.length; j++) {\n            let char: any = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongestStrength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongestStrength) {\n     \
    \       strongestStrength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongestExtension: string = \"\";\n    let strongestExtensionStrength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extensionStrength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        extensionStrength++;\n            } else {\n                extensionStrength--;\n\
    \            }\n        }\n        if (extensionStrength > strongestExtensionStrength)\
    \ {\n            strongestExtensionStrength = extensionStrength;\n           \
    \ strongestExtension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongestExtension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength: number =\
    \ 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n     \
    \       if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n         \
    \       extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = {\n        name: \"\",\n        strength: 0\n\
    \    };\n    for (let i = 0; i < extensions.length; i++) {\n        let cap: number\
    \ = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest.strength) {\n       \
    \     strongest.name = extensions[i];\n            strongest.strength = cap -\
    \ sm;\n        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n",
  "    let strongest: any = {\n        strength: 0,\n        name: \"\"\n    };\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength: any\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest.strength) {\n            strongest.strength\
    \ = strength;\n            strongest.name = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest.name;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strength: any = {};\n    let strongest:\
    \ any = {};\n    for (let i = 0; i < extensions.length; i++) {\n        let cap:\
    \ any = 0;\n        let sm: any = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        strength[extensions[i]] = cap - sm;\n    }\n \
    \   let max: any = 0;\n    for (let i = 0; i < extensions.length; i++) {\n   \
    \     if (strength[extensions[i]] > max) {\n            max = strength[extensions[i]];\n\
    \        }\n    }\n    for (let i = 0; i < extensions.length; i++) {\n       \
    \ if (strength[extensions[i]] === max) {\n            strongest = extensions[i];\n\
    \            break;\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n", "    let strongest: any = extensions[0];\n    let strongest_strength: any\
    \ = 0;\n    for (let i: any = 0; i < extensions.length; i++) {\n        let strength:\
    \ any = 0;\n        for (let j: any = 0; j < extensions[i].length; j++) {\n  \
    \          if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n      \
    \          strength++;\n            } else {\n                strength--;\n  \
    \          }\n        }\n        if (strength > strongest_strength) {\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongestExtension: string = extensions[0];\n    let strongestStrength: number\
    \ = 0;\n    extensions.forEach((extension: string) => {\n        let strength:\
    \ number = 0;\n        for (let i: number = 0; i < extension.length; i++) {\n\
    \            if (extension[i] === extension[i].toUpperCase()) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongestStrength) {\n            strongestStrength\
    \ = strength;\n            strongestExtension = extension;\n        }\n    });\n\
    \    return class_name + \".\" + strongestExtension;\n}\n", "    let strongest_extension:\
    \ any = \"\";\n    let strongest_extension_strength: any = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n   \
    \         if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n       \
    \         extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let extension of extensions) {\n        let extension_strength\
    \ = 0;\n        for (let letter of extension) {\n            if (letter.toUpperCase()\
    \ === letter) {\n                extension_strength += 1;\n            } else\
    \ {\n                extension_strength -= 1;\n            }\n        }\n    \
    \    if (extension_strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strength = 0;\n    let strongest_extension = \"\";\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n \
    \       for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ any = \"\";\n    let strongest_extension_strength: any = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n   \
    \         if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n       \
    \         extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        strength:\
    \ 0,\n        name: \"\"\n    };\n    extensions.forEach((extension: any) => {\n\
    \        let strength: any = extension.split(\"\").reduce((acc: any, curr: any)\
    \ => {\n            if (curr === curr.toUpperCase()) {\n                acc.CAP++;\n\
    \            } else {\n                acc.SM++;\n            }\n            return\
    \ acc;\n        }, {\n            CAP: 0,\n            SM: 0\n        });\n  \
    \      if (strength.CAP - strength.SM > strongest.strength) {\n            strongest.strength\
    \ = strength.CAP - strength.SM;\n            strongest.name = extension;\n   \
    \     }\n    });\n    return `${class_name}.${strongest.name}`;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char == char.toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        strength:\
    \ 0,\n        name: \"\"\n    };\n    extensions.forEach((extension: any) => {\n\
    \        let strength: any = extension.match(/[A-Z]/g).length - extension.match(/[a-z]/g).length;\n\
    \        if (strength > strongest.strength) {\n            strongest.strength\
    \ = strength;\n            strongest.name = extension;\n        }\n    });\n \
    \   return `${class_name}.${strongest.name}`;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension: string = extensions[i];\n\
    \        let extension_strength: number = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char: string = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strength = 0;\n    let strongest_extension = \"\";\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n \
    \       for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = extensions[0];\n    let strongest_strength: any\
    \ = 0;\n    for (let i: any = 0; i < extensions.length; i++) {\n        let strength:\
    \ any = 0;\n        for (let j: any = 0; j < extensions[i].length; j++) {\n  \
    \          if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n      \
    \          strength++;\n            } else {\n                strength--;\n  \
    \          }\n        }\n        if (strength > strongest_strength) {\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_strength = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n     \
    \   for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        strength:\
    \ 0,\n        name: \"\"\n    };\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let extension: any = extensions[i];\n        let strength: any =\
    \ 0;\n        for (let j = 0; j < extension.length; j++) {\n            let char:\
    \ any = extension[j];\n            if (char === char.toUpperCase()) {\n      \
    \          strength++;\n            } else {\n                strength--;\n  \
    \          }\n        }\n        if (strength > strongest.strength) {\n      \
    \      strongest.strength = strength;\n            strongest.name = extension;\n\
    \        }\n    }\n    return `${class_name}.${strongest.name}`;\n}\n", "    let\
    \ strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strength = 0;\n    extensions.forEach(ext => {\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let i = 0; i < ext.length; i++) {\n       \
    \     if (ext[i] === ext[i].toUpperCase()) {\n                cap++;\n       \
    \     } else {\n                sm++;\n            }\n        }\n        if (cap\
    \ - sm > strength) {\n            strength = cap - sm;\n            strongest\
    \ = ext;\n        }\n    });\n    return class_name + \".\" + strongest;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let strength = 0;\n\
    \        for (let j = 0; j < extension.length; j++) {\n            let char =\
    \ extension[j];\n            if (char.toUpperCase() === char) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest\
    \ = extension;\n            strongest_strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest;\n}\n", "    let strongest_extension:\
    \ any = \"\";\n    let strongest_extension_strength: any = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let strength: number = 0;\n\
    \        for (let j: number = 0; j < extensions[i].length; j++) {\n          \
    \  if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n              \
    \  strength++;\n            } else {\n                strength--;\n          \
    \  }\n        }\n        if (strength > strongest_extension_strength) {\n    \
    \        strongest_extension_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = extensions[0];\n    let strongest_strength: any\
    \ = 0;\n    for (let i: any = 0; i < extensions.length; i++) {\n        let strength:\
    \ any = 0;\n        for (let j: any = 0; j < extensions[i].length; j++) {\n  \
    \          if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n      \
    \          strength++;\n            } else {\n                strength--;\n  \
    \          }\n        }\n        if (strength > strongest_strength) {\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: any = \"\";\n    let strongest_extension_strength: any\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let extension = extensions[i];\n        let strength = 0;\n     \
    \   for (let j = 0; j < extension.length; j++) {\n            let char = extension[j];\n\
    \            if (char.match(/[A-Z]/)) {\n                strength++;\n       \
    \     } else if (char.match(/[a-z]/)) {\n                strength--;\n       \
    \     }\n        }\n        if (strength > strongest_strength) {\n           \
    \ strongest = extension;\n            strongest_strength = strength;\n       \
    \ }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let current_extension:\
    \ string = extensions[i];\n        let current_extension_strength: number = 0;\n\
    \        for (let j: number = 0; j < current_extension.length; j++) {\n      \
    \      let current_letter: string = current_extension[j];\n            if (current_letter\
    \ === current_letter.toUpperCase()) {\n                current_extension_strength++;\n\
    \            } else {\n                current_extension_strength--;\n       \
    \     }\n        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest_extension: any = \"\";\n\
    \    let strongest_extension_strength: any = 0;\n    for (let extension of extensions)\
    \ {\n        let extension_strength: any = 0;\n        for (let letter of extension)\
    \ {\n            if (letter.match(/[A-Z]/)) {\n                extension_strength++;\n\
    \            } else if (letter.match(/[a-z]/)) {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_strength = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let\
    \ sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n        \
    \    if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n            \
    \    cap++;\n            } else {\n                sm++;\n            }\n    \
    \    }\n        let strength = cap - sm;\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = \"\";\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = {\n        name: \"\",\n        strength: 0\n\
    \    };\n    for (let i = 0; i < extensions.length; i++) {\n        let cap: number\
    \ = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest.strength) {\n       \
    \     strongest.name = extensions[i];\n            strongest.strength = cap -\
    \ sm;\n        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n",
  "    let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = {\n        name: \"\",\n        strength: 0\n\
    \    };\n    for (let i = 0; i < extensions.length; i++) {\n        let cap: number\
    \ = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        let strength: number = cap - sm;\n        if (strength\
    \ > strongest.strength) {\n            strongest.name = extensions[i];\n     \
    \       strongest.strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest: any = 0;\n    let strongest_extension:\
    \ any = \"\";\n    for (let i: any = 0; i < extensions.length; i++) {\n      \
    \  let cap: any = 0;\n        let sm: any = 0;\n        for (let j: any = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ any = {\n        name: \"\",\n        strength: 0\n    };\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let cap: number = 0;\n        let\
    \ sm: number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            } else {\n                sm++;\n           \
    \ }\n        }\n        let strength: number = cap - sm;\n        if (strength\
    \ > strongest.strength) {\n            strongest.name = extensions[i];\n     \
    \       strongest.strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest_extension = \"\";\n    let\
    \ strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let extension = extensions[i];\n        let strength = 0;\n     \
    \   for (let j = 0; j < extension.length; j++) {\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest = extension;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = -Infinity;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = {\n        name:\
    \ \"\",\n        strength: 0\n    };\n    extensions.forEach(extension => {\n\
    \        let strength = extension.split(\"\").reduce((acc, curr) => {\n      \
    \      if (curr.toUpperCase() === curr) {\n                acc.cap++;\n      \
    \      } else {\n                acc.sm++;\n            }\n            return\
    \ acc;\n        }, { cap: 0, sm: 0 });\n        if (strength.cap - strength.sm\
    \ > strongest.strength) {\n            strongest.name = extension;\n         \
    \   strongest.strength = strength.cap - strength.sm;\n        }\n    });\n   \
    \ return `${class_name}.${strongest.name}`;\n}\n", "    let strongest: any = {\n\
    \        strength: 0,\n        name: \"\"\n    };\n    extensions.forEach((extension:\
    \ any) => {\n        let strength: any = extension.replace(/[^A-Z]/g, \"\").length\
    \ - extension.replace(/[^a-z]/g, \"\").length;\n        if (strength > strongest.strength)\
    \ {\n            strongest.strength = strength;\n            strongest.name =\
    \ extension;\n        }\n    });\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest: any = \"\";\n    let strongest_strength:\
    \ any = 0;\n    for (let i: any = 0; i < extensions.length; i++) {\n        let\
    \ strength: any = 0;\n        for (let j: any = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest: any = {\n        name: \"\",\n        strength: 0\n    };\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n  \
    \      let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest.strength) {\n       \
    \     strongest.name = extensions[i];\n            strongest.strength = cap -\
    \ sm;\n        }\n    }\n    return `${class_name}.${strongest.name}`;\n}\n",
  "    let strongest = 0;\n    let strongest_extension = \"\";\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n \
    \       for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest) {\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength += 1;\n            } else {\n                extension_strength\
    \ -= 1;\n            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongestExtension = '';\n  \
    \  let strongestStrength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        const extension = extensions[i];\n        let strength = 0;\n   \
    \     for (let j = 0; j < extension.length; j++) {\n            const char = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongestStrength) {\n            strongestStrength =\
    \ strength;\n            strongestExtension = extension;\n        }\n    }\n \
    \   return `${class_name}.${strongestExtension}`;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let max = 0;\n    let max_ext = \"\
    \";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            } else {\n                sm++;\n           \
    \ }\n        }\n        if (cap - sm > max) {\n            max = cap - sm;\n \
    \           max_ext = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + max_ext;\n}\n", "    let strongest = extensions[0];\n    let strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n     \
    \           cap++;\n            } else {\n                sm++;\n            }\n\
    \        }\n        if (cap - sm > strength) {\n            strength = cap - sm;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension: any = \"\";\n    let\
    \ strongest_extension_strength: any = 0;\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength: number = 0;\n        for (let j: number\
    \ = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                extension_strength++;\n \
    \           } else {\n                extension_strength--;\n            }\n \
    \       }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest: number = 0;\n    let strongest_extension:\
    \ string = \"\";\n    for (let i: number = 0; i < extensions.length; i++) {\n\
    \        let strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ any = \"\";\n    let strongest_extension_strength: any = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n   \
    \         if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n       \
    \         extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        strength:\
    \ 0,\n        name: \"\"\n    };\n    for (let i: number = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j: number = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest.strength) {\n    \
    \        strongest.strength = strength;\n            strongest.name = extensions[i];\n\
    \        }\n    }\n    return `${class_name}.${strongest.name}`;\n}\n", "    let\
    \ strongest: any = extensions[0];\n    let strongest_strength: any = 0;\n    for\
    \ (let i: any = 0; i < extensions.length; i++) {\n        let extension: any =\
    \ extensions[i];\n        let strength: any = 0;\n        for (let j: any = 0;\
    \ j < extension.length; j++) {\n            let char: any = extension[j];\n  \
    \          if (char.toUpperCase() === char) {\n                strength++;\n \
    \           } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest = extension;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        name:\
    \ \"\",\n        strength: 0\n    };\n    extensions.forEach((extension: any)\
    \ => {\n        let strength: any = extension.split(\"\").reduce((acc: any, curr:\
    \ any) => {\n            if (curr.toUpperCase() === curr) {\n                acc.cap++;\n\
    \            } else {\n                acc.sm++;\n            }\n            return\
    \ acc;\n        }, { cap: 0, sm: 0 });\n        strength = strength.cap - strength.sm;\n\
    \        if (strength > strongest.strength) {\n            strongest.name = extension;\n\
    \            strongest.strength = strength;\n        }\n    });\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest: number = 0;\n    let strongest_extension: string = '';\n\
    \    for (let i: number = 0; i < extensions.length; i++) {\n        let cap: number\
    \ = 0;\n        let sm: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest) {\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest:\
    \ any = extensions[0];\n    let strongest_strength: any = 0;\n    for (let i:\
    \ any = 0; i < extensions.length; i++) {\n        let strength: any = 0;\n   \
    \     for (let j: any = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let extension of extensions)\
    \ {\n        let strength = 0;\n        for (let char of extension) {\n      \
    \      if (char.match(/[A-Z]/)) {\n                strength++;\n            }\
    \ else if (char.match(/[a-z]/)) {\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_extension_strength) {\n         \
    \   strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength += 1;\n            } else {\n                extension_strength\
    \ -= 1;\n            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: any = {\n        strength: 0,\n        name: \"\"\n    };\n\
    \    extensions.forEach((extension: any) => {\n        let strength: any = extension.match(/[A-Z]/g).length\
    \ - extension.match(/[a-z]/g).length;\n        if (strength > strongest.strength)\
    \ {\n            strongest.strength = strength;\n            strongest.name =\
    \ extension;\n        }\n    });\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest: any = {\n        strength: 0,\n        name: \"\"\n\
    \    };\n    extensions.forEach((extension: any) => {\n        let strength: any\
    \ = extension.match(/[A-Z]/g).length - extension.match(/[a-z]/g).length;\n   \
    \     if (strength > strongest.strength) {\n            strongest.strength = strength;\n\
    \            strongest.name = extension;\n        }\n    });\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest_extension: any = {\n        name: '',\n        strength:\
    \ 0\n    };\n    extensions.forEach((extension: any) => {\n        let strength:\
    \ any = extension.split('').reduce((acc: any, curr: any) => {\n            if\
    \ (curr === curr.toUpperCase()) {\n                acc.cap++;\n            } else\
    \ {\n                acc.sm++;\n            }\n            return acc;\n     \
    \   }, { cap: 0, sm: 0 });\n        if (strength.cap - strength.sm > strongest_extension.strength)\
    \ {\n            strongest_extension.name = extension;\n            strongest_extension.strength\
    \ = strength.cap - strength.sm;\n        }\n    });\n    return `${class_name}.${strongest_extension.name}`;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n         \
    \       strength++;\n            } else {\n                strength--;\n     \
    \       }\n        }\n        if (strength > strongest_strength) {\n         \
    \   strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let extension of extensions)\
    \ {\n        let strength = 0;\n        for (let char of extension) {\n      \
    \      if (char.match(/[A-Z]/)) {\n                strength += 1;\n          \
    \  } else if (char.match(/[a-z]/)) {\n                strength -= 1;\n       \
    \     }\n        }\n        if (strength > strongest_extension_strength) {\n \
    \           strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strength = 0;\n    let strongest = \"\"\
    ;\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n \
    \       let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            } else {\n                sm++;\n           \
    \ }\n        }\n        if (cap - sm > strength) {\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest_extension: string\
    \ = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i:\
    \ number = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n   \
    \         if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n       \
    \         extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let current_extension\
    \ = extensions[i];\n        let current_extension_strength = 0;\n        for (let\
    \ j = 0; j < current_extension.length; j++) {\n            let current_char =\
    \ current_extension[j];\n            if (current_char === current_char.toUpperCase())\
    \ {\n                current_extension_strength++;\n            } else {\n   \
    \             current_extension_strength--;\n            }\n        }\n      \
    \  if (current_extension_strength > strongest_extension_strength) {\n        \
    \    strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n    let\
    \ strength = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ current = extensions[i];\n        let current_strength = 0;\n        for (let\
    \ j = 0; j < current.length; j++) {\n            if (current[j] == current[j].toUpperCase())\
    \ {\n                current_strength++;\n            } else {\n             \
    \   current_strength--;\n            }\n        }\n        if (current_strength\
    \ > strength) {\n            strength = current_strength;\n            strongest\
    \ = current;\n        }\n    }\n    return class_name + \".\" + strongest;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: any = {\n        name:\
    \ '',\n        strength: 0\n    };\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: any = 0;\n        let sm: any = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                cap++;\n            } else\
    \ {\n                sm++;\n            }\n        }\n        if (cap - sm > strongest.strength)\
    \ {\n            strongest.name = extensions[i];\n            strongest.strength\
    \ = cap - sm;\n        }\n    }\n    return class_name + '.' + strongest.name;\n\
    }\n", "    let strongest_extension: any = \"\";\n    let strongest_extension_strength:\
    \ any = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n      \
    \  let extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let extension_strength\
    \ = 0;\n        for (let char of extension) {\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest: any = \"\";\n    let strongest_strength: any = 0;\n    for (let\
    \ i: any = 0; i < extensions.length; i++) {\n        let strength: any = 0;\n\
    \        for (let j: any = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            let char = extension[j];\n\
    \            if (char == char.toUpperCase()) {\n                cap++;\n     \
    \       } else {\n                sm++;\n            }\n        }\n        let\
    \ strength = cap - sm;\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = \"\";\n    let strongest_extension_strength = 0;\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension_strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: any = {\n        name: \"\",\n        strength: 0\n\
    \    };\n    for (let i = 0; i < extensions.length; i++) {\n        let cap: number\
    \ = 0;\n        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strongest.strength) {\n       \
    \     strongest.name = extensions[i];\n            strongest.strength = cap -\
    \ sm;\n        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        let extension = extensions[i];\n\
    \        for (let j = 0; j < extension.length; j++) {\n            if (extension[j]\
    \ === extension[j].toUpperCase()) {\n                extension_strength++;\n \
    \           } else {\n                extension_strength--;\n            }\n \
    \       }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    let current_extension_strength:\
    \ number = 0;\n    let current_extension_name: string = \"\";\n    let current_extension_upper_case_count:\
    \ number = 0;\n    let current_extension_lower_case_count: number = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        current_extension_name =\
    \ extensions[i];\n        current_extension_upper_case_count = 0;\n        current_extension_lower_case_count\
    \ = 0;\n        for (let j = 0; j < current_extension_name.length; j++) {\n  \
    \          if (current_extension_name[j] === current_extension_name[j].toUpperCase())\
    \ {\n                current_extension_upper_case_count++;\n            } else\
    \ {\n                current_extension_lower_case_count++;\n            }\n  \
    \      }\n        current_extension_strength = current_extension_upper_case_count\
    \ - current_extension_lower_case_count;\n        if (current_extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = current_extension_strength;\n            strongest_extension = current_extension_name;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: any = \"\";\n    let strongest_extension_strength:\
    \ any = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n      \
    \  let extension_strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i: number\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength: number =\
    \ 0;\n        for (let j: number = 0; j < extensions[i].length; j++) {\n     \
    \       if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n         \
    \       extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

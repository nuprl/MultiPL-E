name: HumanEval_34_unique
language: ts
prompt: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3,\
  \ 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2,\
  \ 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
completions: ["    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return Array.from(new Set(l));\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.sort().filter(function(item, pos, ary) {\n        return !pos ||\
    \ item != ary[pos - 1];\n    });\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   let unique = [];\n    for (let i = 0; i < l.length; i++) {\n        if (unique.indexOf(l[i])\
    \ == -1) {\n            unique.push(l[i]);\n        }\n    }\n    return unique;\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "  return l.filter((e, i) => l.indexOf(e)\
    \ === i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.sort().filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l.filter((e, i) => l.indexOf(e) === i);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i);\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((x,\
    \ i, a) => a.indexOf(x) == i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort();\n}\n", "    return l.sort().filter(function(item, pos, ary) {\n\
    \        return !pos || item != ary[pos - 1];\n    });\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.sort().filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    var u = {}, a = [];\n    for (var i\
    \ = 0, l = l.length; i < l; ++i) {\n        if (u.hasOwnProperty(l[i])) {\n  \
    \          continue;\n        }\n        a.push(l[i]);\n        u[l[i]] = 1;\n\
    \    }\n    return a;\n}\n", "    return l.sort().filter(function(item, pos, ary)\
    \ {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.sort().filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l.sort().filter(function(item, pos, ary) {\n        return !pos ||\
    \ item != ary[pos - 1];\n    });\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "  return\
    \ l.filter((x, i, a) => a.indexOf(x) == i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort();\n}\n", "    return Array.from(new Set(l));\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "  \
    \  return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((e, i) => l.indexOf(e) === i).sort();\n}\n", "    return l.sort().filter(function(e,\
    \ i, a) {\n        return i == 0 || e != a[i - 1];\n    });\n}\n", "    return\
    \ l.filter((val, i, self) => self.indexOf(val) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) ===\
    \ i).sort((a, b) => a - b);\n}\n", "  return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return [...new Set(l)];\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    let result = [];\n    for (let i = 0; i < l.length;\
    \ i++) {\n        if (result.indexOf(l[i]) === -1) {\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return Array.from(new Set(l));\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.sort().filter(function(item, pos, ary) {\n        return !pos || item != ary[pos\
    \ - 1];\n    });\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((x, i, a) => a.indexOf(x) == i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((elem, index, self)\
    \ => {\n        return index === self.indexOf(elem);\n    });\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.sort().filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return Array.from(new Set(l));\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return Array.from(new Set(l));\n}\n", "    return l.filter((v, i, a)\
    \ => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "  \
    \  return l.filter((e, i) => l.indexOf(e) === i);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    let result = [];\n    for (let\
    \ i = 0; i < l.length; i++) {\n        if (result.indexOf(l[i]) === -1) {\n  \
    \          result.push(l[i]);\n        }\n    }\n    return result;\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((e, i) => l.indexOf(e) === i).sort();\n}\n", "    return [...new\
    \ Set(l)];\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.sort().filter(function(item, pos, ary) {\n        return !pos || item != ary[pos\
    \ - 1];\n    });\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return Array.from(new Set(l));\n}\n", "  return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return [...new Set(l)];\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "  \
    \  return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.sort().filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((e, i) => l.indexOf(e) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i);\n}\n", "    let result\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (result.indexOf(l[i])\
    \ === -1) {\n            result.push(l[i]);\n        }\n    }\n    return result;\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) =>\
    \ a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.filter((e, i) => l.indexOf(e) === i);\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort();\n}\n", "    return l.sort().filter(function(item, pos, ary) {\n\
    \        return !pos || item != ary[pos - 1];\n    });\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort();\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

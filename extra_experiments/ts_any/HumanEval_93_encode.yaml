name: HumanEval_93_encode
language: ts
prompt: "//Write a function that takes a message, and encodes in such a \n// way that\
  \ it swaps case of all letters, replaces all vowels in \n// the message with the\
  \ letter that appears 2 places ahead of that \n// vowel in the english alphabet.\
  \ \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n// \"TGST\"\
  \n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction encode(message:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encode;\n  assert.deepEqual(candidate(\"TEST\"),\"\
  tgst\");\n  assert.deepEqual(candidate(\"Mudasir\"),\"mWDCSKR\");\n  assert.deepEqual(candidate(\"\
  YES\"),\"ygs\");\n  assert.deepEqual(candidate(\"This is a message\"),\"tHKS KS\
  \ C MGSSCGG\");\n  assert.deepEqual(candidate(\"I DoNt KnOw WhAt tO WrItE\"),\"\
  k dQnT kNqW wHcT Tq wRkTg\");\n}\n\ntest();"
completions: ["    let encodedMessage = \"\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        let char = message[i];\n        if (char === char.toUpperCase())\
    \ {\n            encodedMessage += char.toLowerCase();\n        } else {\n   \
    \         encodedMessage += char.toUpperCase();\n        }\n    }\n    return\
    \ encodedMessage;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    let vowels = \"aeiou\";\n    let encodedMessage = \"\";\n    for (let i =\
    \ 0; i < message.length; i++) {\n        let char = message[i];\n        let charIndex\
    \ = alphabet.indexOf(char.toLowerCase());\n        if (charIndex === -1) {\n \
    \           encodedMessage += char;\n        } else {\n            let newCharIndex\
    \ = charIndex + 2;\n            if (newCharIndex > 25) {\n                newCharIndex\
    \ -= 26;\n            }\n            let newChar = alphabet[newCharIndex];\n \
    \           if (vowels.indexOf(newChar) !== -1) {\n                newChar = newChar.toUpperCase();\n\
    \            }\n            encodedMessage += newChar;\n        }\n    }\n   \
    \ return encodedMessage;\n}\n", "    let encodedMessage = \"\";\n    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i = 0; i < message.length; i++)\
    \ {\n        let char = message[i];\n        let charIndex = alphabet.indexOf(char.toLowerCase());\n\
    \        if (charIndex === -1) {\n            encodedMessage += char;\n      \
    \  } else {\n            let newCharIndex = charIndex + 2;\n            if (newCharIndex\
    \ > 25) {\n                newCharIndex -= 26;\n            }\n            let\
    \ newChar = alphabet[newCharIndex];\n            if (char === char.toUpperCase())\
    \ {\n                newChar = newChar.toUpperCase();\n            }\n       \
    \     encodedMessage += newChar;\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let newMessage: string = '';\n    let vowels: string = 'aeiou';\n \
    \   let alphabet: string = 'abcdefghijklmnopqrstuvwxyz';\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        if (vowels.indexOf(message[i]) !==\
    \ -1) {\n            let index: number = alphabet.indexOf(message[i]);\n     \
    \       newMessage += alphabet[index + 2];\n        } else if (message[i] ===\
    \ message[i].toUpperCase()) {\n            newMessage += message[i].toLowerCase();\n\
    \        } else {\n            newMessage += message[i].toUpperCase();\n     \
    \   }\n    }\n    return newMessage;\n}\nconsole.log(encode('This is a message'));\n",
  "    let result: string = \"\";\n    let vowels: string = \"aeiou\";\n    let alphabet:\
    \ string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number = 0; i < message.length;\
    \ i++) {\n        if (vowels.indexOf(message[i]) !== -1) {\n            let index:\
    \ number = alphabet.indexOf(message[i]);\n            result += alphabet[index\
    \ + 2];\n        } else if (message[i] === message[i].toUpperCase()) {\n     \
    \       result += message[i].toLowerCase();\n        } else {\n            result\
    \ += message[i].toUpperCase();\n        }\n    }\n    return result;\n}\nconsole.log(encode(\"\
    test\"));\nconsole.log(encode(\"This is a message\"));\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let encodedMessage = \"\";\n    for (let\
    \ i = 0; i < message.length; i++) {\n        let char = message[i];\n        if\
    \ (vowels.includes(char.toLowerCase())) {\n            let index = vowels.indexOf(char.toLowerCase());\n\
    \            if (index === vowels.length - 1) {\n                index = -1;\n\
    \            }\n            if (char === char.toUpperCase()) {\n             \
    \   encodedMessage += vowels[index + 2].toUpperCase();\n            } else {\n\
    \                encodedMessage += vowels[index + 2];\n            }\n       \
    \ } else {\n            if (char === char.toUpperCase()) {\n                encodedMessage\
    \ += char.toLowerCase();\n            } else {\n                encodedMessage\
    \ += char.toUpperCase();\n            }\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let encodedMessage = '';\n    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let vowels = 'aeiou';\n    for (let i = 0; i < message.length; i++) {\n \
    \       let letter = message[i];\n        if (letter === letter.toUpperCase())\
    \ {\n            encodedMessage += letter.toLowerCase();\n        } else {\n \
    \           encodedMessage += letter.toUpperCase();\n        }\n        if (vowels.includes(letter))\
    \ {\n            let index = alphabet.indexOf(letter);\n            encodedMessage\
    \ += alphabet[index + 2];\n        }\n    }\n    return encodedMessage;\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let encoded = \"\";\n\
    \    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (vowels.includes(char.toLowerCase())) {\n            let index = vowels.indexOf(char.toLowerCase());\n\
    \            if (index + 2 > 4) {\n                encoded += vowels[index + 2\
    \ - 5].toUpperCase();\n            } else {\n                encoded += vowels[index\
    \ + 2].toUpperCase();\n            }\n        } else {\n            encoded +=\
    \ char.toUpperCase();\n        }\n    }\n    return encoded;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    for (let i: number = 0; i < message.length; i++) {\n        if (message[i]\
    \ === message[i].toUpperCase()) {\n            encodedMessage += message[i].toLowerCase();\n\
    \        } else {\n            encodedMessage += message[i].toUpperCase();\n \
    \       }\n    }\n    for (let i: number = 0; i < encodedMessage.length; i++)\
    \ {\n        if (encodedMessage[i] === \"a\") {\n            encodedMessage =\
    \ encodedMessage.replace(\"a\", \"c\");\n        } else if (encodedMessage[i]\
    \ === \"e\") {\n            encodedMessage = encodedMessage.replace(\"e\", \"\
    g\");\n        } else if (encodedMessage[i] === \"i\") {\n            encodedMessage\
    \ = encodedMessage.replace(\"i\", \"k\");\n        } else if (encodedMessage[i]\
    \ === \"o\") {\n            encodedMessage = encodedMessage.replace(\"o\", \"\
    q\");\n        } else if (encodedMessage[i] === \"u\") {\n            encodedMessage\
    \ = encodedMessage.replace(\"u\", \"w\");\n        }\n    }\n    return encodedMessage;\n\
    }\nconsole.log(encode(\"test\"));\nconsole.log(encode(\"This is a message\"));\n",
  "    let encodedMessage: string = \"\";\n    let vowels: string = \"aeiou\";\n \
    \   let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        if (vowels.indexOf(message[i]) !==\
    \ -1) {\n            let index: number = alphabet.indexOf(message[i]);\n     \
    \       encodedMessage += alphabet[index + 2];\n        } else {\n           \
    \ encodedMessage += message[i];\n        }\n    }\n    return encodedMessage;\n\
    }\nconsole.log(encode(\"test\"));\nconsole.log(encode(\"This is a message\"));\n",
  "    let result = \"\";\n    for (let i = 0; i < message.length; i++) {\n      \
    \  let char = message[i];\n        if (char.match(/[a-z]/i)) {\n            let\
    \ code = char.charCodeAt(0);\n            if (code >= 65 && code <= 90) {\n  \
    \              code += 32;\n            } else if (code >= 97 && code <= 122)\
    \ {\n                code -= 32;\n            }\n            char = String.fromCharCode(code);\n\
    \        }\n        result += char;\n    }\n    return result;\n}\n", "    let\
    \ vowels = ['a', 'e', 'i', 'o', 'u'];\n    let encodedMessage = '';\n    for (let\
    \ i = 0; i < message.length; i++) {\n        if (message[i] === message[i].toUpperCase())\
    \ {\n            encodedMessage += message[i].toLowerCase();\n        } else {\n\
    \            encodedMessage += message[i].toUpperCase();\n        }\n    }\n \
    \   for (let i = 0; i < encodedMessage.length; i++) {\n        if (vowels.includes(encodedMessage[i]))\
    \ {\n            let index = vowels.indexOf(encodedMessage[i]);\n            if\
    \ (index === 4) {\n                encodedMessage = encodedMessage.replace(encodedMessage[i],\
    \ vowels[0]);\n            } else {\n                encodedMessage = encodedMessage.replace(encodedMessage[i],\
    \ vowels[index + 1]);\n            }\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let result: string = \"\";\n    let vowels: string = \"aeiou\";\n \
    \   let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        let letter: string = message[i];\n\
    \        if (vowels.indexOf(letter) != -1) {\n            let index: number =\
    \ alphabet.indexOf(letter);\n            result += alphabet[index + 2];\n    \
    \    } else if (alphabet.indexOf(letter) != -1) {\n            let index: number\
    \ = alphabet.indexOf(letter);\n            result += alphabet[index + 2];\n  \
    \      } else {\n            result += letter;\n        }\n    }\n    return result;\n\
    }\nconsole.log(encode(\"test\"));\nconsole.log(encode(\"This is a message\"));\n",
  "    let newMessage: string = \"\";\n    let vowels: string = \"aeiou\";\n    let\
    \ alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number =\
    \ 0; i < message.length; i++) {\n        if (message[i] === message[i].toUpperCase())\
    \ {\n            newMessage += message[i].toLowerCase();\n        } else {\n \
    \           newMessage += message[i].toUpperCase();\n        }\n    }\n    for\
    \ (let i: number = 0; i < newMessage.length; i++) {\n        for (let j: number\
    \ = 0; j < vowels.length; j++) {\n            if (newMessage[i] === vowels[j])\
    \ {\n                let index: number = alphabet.indexOf(newMessage[i]);\n  \
    \              newMessage = newMessage.replace(newMessage[i], alphabet[index +\
    \ 2]);\n            }\n        }\n    }\n    return newMessage;\n}\nconsole.log(encode(\"\
    test\"));\nconsole.log(encode(\"This is a message\"));\n", "    let encodedMessage\
    \ = \"\";\n    const vowels = \"aeiou\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        if (vowels.includes(message[i])) {\n            encodedMessage\
    \ += String.fromCharCode(message[i].charCodeAt(0) + 2);\n        } else {\n  \
    \          encodedMessage += String.fromCharCode(message[i].charCodeAt(0) - 32);\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage =\
    \ \"\";\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let alphabetUpper\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (let i = 0; i < message.length; i++)\
    \ {\n        if (alphabet.indexOf(message[i]) != -1) {\n            encodedMessage\
    \ += alphabet[(alphabet.indexOf(message[i]) + 2) % 26];\n        } else if (alphabetUpper.indexOf(message[i])\
    \ != -1) {\n            encodedMessage += alphabetUpper[(alphabetUpper.indexOf(message[i])\
    \ + 2) % 26];\n        } else {\n            encodedMessage += message[i];\n \
    \       }\n    }\n    return encodedMessage;\n}\n", "    let alphabet: string\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    let vowels: string = \"aeiou\";\n   \
    \ let encodedMessage: string = \"\";\n    for (let i: number = 0; i < message.length;\
    \ i++) {\n        if (alphabet.indexOf(message[i]) === -1) {\n            encodedMessage\
    \ += message[i];\n        } else if (vowels.indexOf(message[i]) === -1) {\n  \
    \          if (message[i] === \"z\") {\n                encodedMessage += \"b\"\
    ;\n            } else if (message[i] === \"Z\") {\n                encodedMessage\
    \ += \"B\";\n            } else {\n                encodedMessage += alphabet[alphabet.indexOf(message[i])\
    \ + 2];\n            }\n        } else {\n            if (message[i] === \"u\"\
    ) {\n                encodedMessage += \"a\";\n            } else if (message[i]\
    \ === \"U\") {\n                encodedMessage += \"A\";\n            } else {\n\
    \                encodedMessage += alphabet[alphabet.indexOf(message[i]) + 2];\n\
    \            }\n        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage\
    \ = \"\";\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i\
    \ = 0; i < message.length; i++) {\n        let letter = message[i];\n        let\
    \ index = alphabet.indexOf(letter.toLowerCase());\n        if (index === -1) {\n\
    \            encodedMessage += letter;\n        } else {\n            let newIndex\
    \ = index + 2;\n            if (newIndex > 25) {\n                newIndex -=\
    \ 26;\n            }\n            let newLetter = alphabet[newIndex];\n      \
    \      if (letter === letter.toUpperCase()) {\n                newLetter = newLetter.toUpperCase();\n\
    \            }\n            encodedMessage += newLetter;\n        }\n    }\n \
    \   return encodedMessage;\n}\n", "    let encodedMessage = \"\";\n    for (let\
    \ i = 0; i < message.length; i++) {\n        if (message[i] === message[i].toUpperCase())\
    \ {\n            encodedMessage += message[i].toLowerCase();\n        } else {\n\
    \            encodedMessage += message[i].toUpperCase();\n        }\n    }\n \
    \   return encodedMessage;\n}\n", "    let vowels = \"aeiou\";\n    let newMessage\
    \ = \"\";\n    for (let i = 0; i < message.length; i++) {\n        let letter\
    \ = message[i];\n        if (vowels.includes(letter.toLowerCase())) {\n      \
    \      let index = vowels.indexOf(letter.toLowerCase());\n            let newIndex\
    \ = index + 2;\n            if (newIndex > 4) {\n                newIndex = newIndex\
    \ - 5;\n            }\n            if (letter === letter.toUpperCase()) {\n  \
    \              newMessage += vowels[newIndex].toUpperCase();\n            } else\
    \ {\n                newMessage += vowels[newIndex];\n            }\n        }\
    \ else {\n            if (letter === letter.toUpperCase()) {\n               \
    \ newMessage += letter.toLowerCase();\n            } else {\n                newMessage\
    \ += letter.toUpperCase();\n            }\n        }\n    }\n    return newMessage;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_23_strlen
language: ts
prompt: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
  abc\")\n// 3\nfunction strlen(string: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
  \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
  ),9);\n}\n\ntest();"
completions: ["    if (typeof string !== \"string\") {\n        throw new Error(\"\
    strlen() expects a string\");\n    }\n    return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "    return string.length;\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"Error: input is not a string\";\n    }\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"ERROR: Input is not a string.\";\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ parameter must be a string\");\n    }\n    return string.length;\n}\n", "  \
    \  if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (string\
    \ === \"\") {\n        return 0;\n    }\n    else {\n        return 1 + strlen(string.slice(1));\n\
    \    }\n}\n", "    if (string === undefined) {\n        return undefined;\n  \
    \  }\n    if (typeof string !== \"string\") {\n        return undefined;\n   \
    \ }\n    return string.length;\n}\n", "    return string.length;\n}\n", "    if\
    \ (typeof string === \"string\") {\n        return string.length;\n    }\n   \
    \ else {\n        return \"Invalid input\";\n    }\n}\n", "    if (typeof string\
    \ !== \"string\") {\n        throw new Error(\"strlen: input must be a string\"\
    );\n    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: invalid argument\");\n    }\n    return\
    \ string.length;\n}\n", "    if (typeof string !== \"string\") {\n        throw\
    \ new Error(\"Argument must be a string\");\n    }\n    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  if (string === \"\") {\n        return 0;\n    } else {\n        return 1 +\
    \ strlen(string.substring(1));\n    }\n}\n", "    return string.length;\n}\n",
  "    return string.length;\n}\n", "    if (string === null || string === undefined)\
    \ {\n        return 0;\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string === \"string\"\
    ) {\n        return string.length;\n    }\n    else {\n        return \"Error:\
    \ argument is not a string\";\n    }\n}\n", "    return string.length;\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        return \"ERROR: Input is not a string\";\n\
    \    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    if (string === \"\") {\n        return\
    \ 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n    }\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"Argument must\
    \ be a string\");\n    }\n    return string.length;\n}\n", "    if (string ===\
    \ null || string === undefined) {\n        return null;\n    }\n    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ return string.length;\n}\n", "    if (typeof string === \"string\") {\n    \
    \    return string.length;\n    }\n    else {\n        throw new Error(\"strlen:\
    \ invalid input\");\n    }\n}\n", "    return string.length;\n}\n", "    if (string\
    \ === \"\") {\n        return 0;\n    }\n    return 1 + strlen(string.substring(1));\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return null;\n}\n", "    if (typeof string !== \"string\") {\n   \
    \     return undefined;\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (string === \"\") {\n        return 0;\n    } else {\n        return\
    \ 1 + strlen(string.substring(1));\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  if (typeof string === \"string\") {\n        return string.length;\n    }\n\
    \    return 0;\n}\n", "    return string.length;\n}\n", "    if (typeof string\
    \ !== \"string\") {\n        throw new Error(\"strlen() expects a string\");\n\
    \    }\n    return string.length;\n}\n", "    return string.length;\n}\n", " \
    \   if (string === \"\") {\n        return 0;\n    }\n    else {\n        return\
    \ 1 + strlen(string.slice(1));\n    }\n}\n", "    if (string === \"\") {\n   \
    \     return 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    if (string === \"\") {\n        return 0;\n    } else {\n \
    \       return 1 + strlen(string.substring(1));\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    else {\n        return \"ERROR: Input is not a string\";\n    }\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    if (typeof string !== \"string\") {\n \
    \       throw new Error(\"strlen: argument must be a string\");\n    }\n    return\
    \ string.length;\n}\n", "    if (typeof string !== \"string\") {\n        throw\
    \ new Error(\"Invalid type\");\n    }\n    return string.length;\n}\n", "    if\
    \ (typeof string === \"string\") {\n        return string.length;\n    }\n   \
    \ else {\n        return \"Invalid input\";\n    }\n}\n", "    if (string ===\
    \ \"\") {\n        return 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    return string.length;\n}\n", "    return string.length;\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (string\
    \ === undefined) {\n        return undefined;\n    } else if (typeof string !==\
    \ \"string\") {\n        return undefined;\n    } else {\n        return string.length;\n\
    \    }\n}\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"\
    strlen: argument must be a string\");\n    }\n    return string.length;\n}\n",
  "    return string.length;\n}\n", "    if (typeof string === \"string\") {\n   \
    \     return string.length;\n    }\n    return undefined;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if(typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ if (string === \"\") {\n        return 0;\n    }\n    else {\n        return\
    \ 1 + strlen(string.slice(1));\n    }\n}\n", "    return string.length;\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ string\");\n    }\n    return string.length;\n}\n", "    if (typeof string !==\
    \ \"string\") {\n        throw new Error(\"strlen: argument must be a string\"\
    );\n    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen only accepts strings\");\n    }\n    return\
    \ string.length;\n}\n", "    if (typeof string !== \"string\") {\n        throw\
    \ new Error(\"strlen: argument must be a string\");\n    }\n    return string.length;\n\
    }\n", "    if (string === null || string === undefined) {\n        return null;\n\
    \    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    if (typeof string !== \"string\") {\n \
    \       throw new Error(\"strlen: argument must be a string\");\n    }\n    return\
    \ string.length;\n}\n", "    if (typeof string !== \"string\") {\n        return\
    \ \"\";\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (string === \"\") {\n        return 0;\n    } else {\n        return\
    \ 1 + strlen(string.substring(1));\n    }\n}\n", "    if (string === \"\") {\n\
    \        return 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return undefined;\n}\n", "    return string.length;\n}\n", "    if\
    \ (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    if (typeof string\
    \ !== \"string\") {\n        throw new Error(\"strlen: expected a string\");\n\
    \    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"Argument must be a string\");\n    }\n    return\
    \ string.length;\n}\n", "    if (typeof string !== \"string\") {\n        throw\
    \ new Error(\"strlen: argument must be a string\");\n    }\n    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string === \"string\"\
    ) {\n        return string.length;\n    }\n    else {\n        return \"Error:\
    \ Input is not a string\";\n    }\n}\n", "    return string.length;\n}\n", " \
    \   if (typeof string === \"string\") {\n        return string.length;\n    }\n\
    \    else {\n        return \"Invalid input\";\n    }\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"Not a string\";\n    }\n}\n", "    return string.length;\n}\n", " \
    \   if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"Error: argument is not a string\";\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return \"ERROR: Input is not a string\";\n}\n", "    return string.length;\n\
    }\n", "    if (string === \"\") {\n        return 0;\n    } else {\n        return\
    \ 1 + strlen(string.substring(1));\n    }\n}\n", "    if (typeof string !== \"\
    string\") {\n        throw new Error(\"strlen: argument must be a string\");\n\
    \    }\n    return string.length;\n}\n", "    return string.length;\n}\n", " \
    \   return string.length;\n}\n", "    if (string === \"\") {\n        return 0;\n\
    \    } else {\n        return 1 + strlen(string.substring(1));\n    }\n}\n", " \
    \   return string.length;\n}\n", "    if (typeof string === \"string\") {\n  \
    \      return string.length;\n    }\n    else {\n        return \"Invalid input\"\
    ;\n    }\n}\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"\
    strlen: argument must be a string\");\n    }\n    return string.length;\n}\n",
  "    return string.length;\n}\n", "    if (typeof string === \"string\") {\n   \
    \     return string.length;\n    }\n    return 0;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return \"\";\n}\n", "    if (typeof string === \"string\") {\n   \
    \     return string.length;\n    }\n    else {\n        return \"Error: Input\
    \ must be a string.\";\n    }\n}\n", "    if (string === null || string === undefined)\
    \ {\n        return null;\n    }\n    return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "    if (string === \"\") {\n        return 0;\n    }\
    \ else {\n        return 1 + strlen(string.substring(1));\n    }\n}\n", "    if\
    \ (typeof string !== \"string\") {\n        throw new Error(\"strlen expects a\
    \ string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  return string.length;\n}\n", "    if (typeof string !== \"string\") {\n   \
    \     throw new Error(\"strlen: argument must be a string\");\n    }\n    return\
    \ string.length;\n}\n", "    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return 0;\n}\n", "    if (typeof string === \"string\") {\n      \
    \  return string.length;\n    }\n    else {\n        return \"Invalid input\"\
    ;\n    }\n}\n", "    if (string === null || string === undefined) {\n        return\
    \ 0;\n    }\n    return string.length;\n}\n", "    if (typeof string === \"string\"\
    ) {\n        return string.length;\n    }\n    else {\n        return \"Error:\
    \ Input is not a string.\";\n    }\n}\n", "    return string.length;\n}\n", " \
    \   if (typeof string !== \"string\") {\n        throw new Error(\"strlen: input\
    \ is not a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"strlen: argument must be a string\");\n    }\n\
    \    return string.length;\n}\n", "    return string.length;\n}\n", "    if (typeof\
    \ string === \"string\") {\n        return string.length;\n    }\n    else {\n\
    \        return \"ERROR: Input is not a string\";\n    }\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    return undefined;\n}\n", "    if (typeof string === \"string\") {\n\
    \        return string.length;\n    }\n    else {\n        return \"Error: Invalid\
    \ input\";\n    }\n}\n", "    if (typeof string !== \"string\") {\n        throw\
    \ new Error(\"strlen: argument must be a string\");\n    }\n    return string.length;\n\
    }\n", "    if (string === \"\") {\n        return 0;\n    } else {\n        return\
    \ 1 + strlen(string.substring(1));\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ return string.length;\n}\n", "    return string.length;\n}\n", "    if (string\
    \ === \"\") {\n        return 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    else {\n        return \"Invalid input\";\n    }\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        return \"Error: input\
    \ is not a string\";\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string === \"string\") {\n        return string.length;\n    }\n    else {\n\
    \        return \"Not a string\";\n    }\n}\n", "    if (string === null || string\
    \ === undefined) {\n        return null;\n    }\n    return string.length;\n}\n",
  "    if (string === null || string === undefined) {\n        return undefined;\n\
    \    }\n    return string.length;\n}\n", "    if (typeof string !== \"string\"\
    ) {\n        throw new Error(\"Invalid argument\");\n    }\n    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    if (typeof string === \"string\"\
    ) {\n        return string.length;\n    }\n    else {\n        return \"Invalid\
    \ input\";\n    }\n}\n", "    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ return string.length;\n}\n", "    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"ERROR: Please input a string\";\n    }\n}\n", "    if (typeof string\
    \ === \"string\") {\n        return string.length;\n    }\n    else {\n      \
    \  return \"ERROR: strlen() expects a string\";\n    }\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string === \"string\") {\n        return string.length;\n\
    \    }\n    else {\n        return \"Invalid input\";\n    }\n}\n", "    if (string\
    \ === \"\") {\n        return 0;\n    }\n    else {\n        return 1 + strlen(string.slice(1));\n\
    \    }\n}\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"\
    strlen: argument must be a string\");\n    }\n    return string.length;\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    if (typeof\
    \ string !== \"string\") {\n        throw new Error(\"strlen: argument must be\
    \ a string\");\n    }\n    return string.length;\n}\n", "    if (string === \"\
    \") {\n        return 0;\n    } else {\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    return string.length;\n}\n", "    if (typeof string !== \"\
    string\") {\n        throw new Error(\"strlen: argument must be a string\");\n\
    \    }\n    return string.length;\n}\n", "    if (typeof string === \"string\"\
    ) {\n        return string.length;\n    }\n    else {\n        return \"Error:\
    \ Input is not a string.\";\n    }\n}\n", "    if (string === null || string ===\
    \ undefined) {\n        return null;\n    }\n    return string.length;\n}\n",
  "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen: argument\
    \ must be a string\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (typeof string !== \"string\") {\n        throw new Error(\"strlen:\
    \ argument must be a string\");\n    }\n    return string.length;\n}\n", "   \
    \ if (typeof string !== \"string\") {\n        throw new TypeError(\"strlen: string\
    \ expected\");\n    }\n    return string.length;\n}\n", "    return string.length;\n\
    }\n", "    if (string === \"\") {\n        return 0;\n    }\n    else {\n    \
    \    return 1 + strlen(string.substring(1));\n    }\n}\n", "    if (typeof string\
    \ !== \"string\") {\n        throw new Error(\"strlen() expects a string\");\n\
    \    }\n    return string.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

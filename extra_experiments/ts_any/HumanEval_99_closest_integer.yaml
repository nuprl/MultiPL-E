name: HumanEval_99_closest_integer
language: ts
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["    return Math.round(value);\n}\n", "    return Math.round(value);\n\
    }\n", "  return Math.round(value);\n}\n", "    let num: number = Number(value);\n\
    \    let floor: number = Math.floor(num);\n    let ceil: number = Math.ceil(num);\n\
    \    let diff_floor: number = num - floor;\n    let diff_ceil: number = ceil -\
    \ num;\n    if (diff_floor < diff_ceil) {\n        return floor;\n    } else {\n\
    \        return ceil;\n    }\n}\n", "    return Math.round(value);\n}\n", "  \
    \  let num = Number(value);\n    let num1 = Math.floor(num);\n    let num2 = Math.ceil(num);\n\
    \    if (num1 === num2) {\n        return num1;\n    }\n    if (num - num1 < num2\
    \ - num) {\n        return num1;\n    }\n    return num2;\n}\n", "  return Math.round(value);\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "    return Math.round(value);\n}\n", "    return Math.round(value);\n\
    }\n", "    return Math.round(value);\n}\n", "    return Math.round(value);\n}\n",
  "    if (typeof value === \"string\") {\n        return Math.round(parseFloat(value));\n\
    \    }\n    return Math.round(value);\n}\n", "  return Math.round(value);\n}\n",
  "    return Math.round(value);\n}\n", "    return Math.round(value);\n}\n", "  \
    \  if (typeof value !== \"string\") {\n        return \"Please enter a string\"\
    ;\n    }\n    let num = parseFloat(value);\n    let num1 = Math.ceil(num);\n \
    \   let num2 = Math.floor(num);\n    let num3 = Math.round(num);\n    if (num1\
    \ - num === 0.5) {\n        return num3;\n    } else if (num1 - num < 0.5) {\n\
    \        return num1;\n    } else {\n        return num2;\n    }\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(10));\n",
  "    let num = Number(value);\n    let floor = Math.floor(num);\n    let ceil =\
    \ Math.ceil(num);\n    let diff1 = num - floor;\n    let diff2 = ceil - num;\n\
    \    if (diff1 < diff2) {\n        return floor;\n    } else if (diff1 > diff2)\
    \ {\n        return ceil;\n    } else {\n        return ceil;\n    }\n}\n", " \
    \ return Math.round(value);\n}\n", "  return Math.round(value);\n}\n", "    return\
    \ Math.round(value);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

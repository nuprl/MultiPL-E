name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n    return sorted;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    let arr1 = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\").length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length);\n    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let\
    \ i = 0; i < arr1.length; i++) {\n        let index = arr2.indexOf(arr1[i]);\n\
    \        arr3.push(arr[index]);\n        arr2[index] = -1;\n    }\n    return\
    \ arr3;\n}\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n    return sorted;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBinary\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBinary\
    \ === bBinary) {\n            return a - b;\n        }\n        return aBinary\
    \ - bBinary;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBinary === bBinary) {\n            return a - b;\n        }\n  \
    \      return aBinary - bBinary;\n    });\n    return sorted;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x =>\
    \ x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let result: any =\
    \ [];\n    let arrOnes: any = [];\n    let arrZeros: any = [];\n    let arrNegative:\
    \ any = [];\n    let arrPositive: any = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            arrNegative.push(arr[i]);\n \
    \       } else {\n            arrPositive.push(arr[i]);\n        }\n    }\n  \
    \  arrNegative.sort(function (a, b) {\n        return a - b;\n    });\n    arrPositive.sort(function\
    \ (a, b) {\n        return a - b;\n    });\n    for (let i = 0; i < arrPositive.length;\
    \ i++) {\n        let count = 0;\n        let binary = arrPositive[i].toString(2);\n\
    \        for (let j = 0; j < binary.length; j++) {\n            if (binary[j]\
    \ === '1') {\n                count++;\n            }\n        }\n        arrOnes.push(count);\n\
    \    }\n    for (let i = 0; i < arrNegative.length; i++) {\n        let count\
    \ = 0;\n        let binary = arrNegative[i].toString(2);\n        for (let j =\
    \ 0; j < binary.length; j++) {\n            if (binary[j] === '1') {\n       \
    \         count++;\n            }\n        }\n        arrZeros.push(count);\n\
    \    }\n    arrOnes.sort(function (a, b) {\n        return a - b;\n    });\n \
    \   arrZeros.sort(function (a, b) {\n        return a - b;\n    });\n    for (let\
    \ i = 0; i < arrOnes.length; i++) {\n        for (let j = 0; j < arrPositive.length;\
    \ j++) {\n            let count = 0;\n            let binary = arrPositive[j].toString(2);\n\
    \            for (let k = 0; k < binary.length; k++) {\n                if (binary[k]\
    \ === '1') {\n                    count++;\n                }\n            }\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n   \
    \ let arr2 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let i = 0; i <\
    \ arr1.length; i++) {\n        arr3.push(arr[arr2.indexOf(arr1[i])]);\n      \
    \  arr2[arr2.indexOf(arr1[i])] = -1;\n    }\n    return arr3;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n    return sorted;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    let arr1 = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\").length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length);\n    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let\
    \ i = 0; i < arr1.length; i++) {\n        let index = arr2.indexOf(arr1[i]);\n\
    \        arr3.push(arr[index]);\n        arr2[index] = -1;\n    }\n    return\
    \ arr3;\n}\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n    return sorted;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBinary\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBinary\
    \ === bBinary) {\n            return a - b;\n        }\n        return aBinary\
    \ - bBinary;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBinary === bBinary) {\n            return a - b;\n        }\n  \
    \      return aBinary - bBinary;\n    });\n    return sorted;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x =>\
    \ x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let result: any =\
    \ [];\n    let arrOnes: any = [];\n    let arrZeros: any = [];\n    let arrNegative:\
    \ any = [];\n    let arrPositive: any = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            arrNegative.push(arr[i]);\n \
    \       } else {\n            arrPositive.push(arr[i]);\n        }\n    }\n  \
    \  arrNegative.sort(function (a, b) {\n        return a - b;\n    });\n    arrPositive.sort(function\
    \ (a, b) {\n        return a - b;\n    });\n    for (let i = 0; i < arrPositive.length;\
    \ i++) {\n        let count = 0;\n        let binary = arrPositive[i].toString(2);\n\
    \        for (let j = 0; j < binary.length; j++) {\n            if (binary[j]\
    \ === '1') {\n                count++;\n            }\n        }\n        arrOnes.push(count);\n\
    \    }\n    for (let i = 0; i < arrNegative.length; i++) {\n        let count\
    \ = 0;\n        let binary = arrNegative[i].toString(2);\n        for (let j =\
    \ 0; j < binary.length; j++) {\n            if (binary[j] === '1') {\n       \
    \         count++;\n            }\n        }\n        arrZeros.push(count);\n\
    \    }\n    arrOnes.sort(function (a, b) {\n        return a - b;\n    });\n \
    \   arrZeros.sort(function (a, b) {\n        return a - b;\n    });\n    for (let\
    \ i = 0; i < arrOnes.length; i++) {\n        for (let j = 0; j < arrPositive.length;\
    \ j++) {\n            let count = 0;\n            let binary = arrPositive[j].toString(2);\n\
    \            for (let k = 0; k < binary.length; k++) {\n                if (binary[k]\
    \ === '1') {\n                    count++;\n                }\n            }\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n   \
    \ let arr2 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let i = 0; i <\
    \ arr1.length; i++) {\n        arr3.push(arr[arr2.indexOf(arr1[i])]);\n      \
    \  arr2[arr2.indexOf(arr1[i])] = -1;\n    }\n    return arr3;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    let sorted = arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n    return sorted;\n\
    }\n", "    let arr1: any = [];\n    let arr2: any = [];\n    let arr3: any = [];\n\
    \    let arr4: any = [];\n    let arr5: any = [];\n    let arr6: any = [];\n \
    \   let arr7: any = [];\n    let arr8: any = [];\n    let arr9: any = [];\n  \
    \  let arr10: any = [];\n    let arr11: any = [];\n    let arr12: any = [];\n\
    \    let arr13: any = [];\n    let arr14: any = [];\n    let arr15: any = [];\n\
    \    let arr16: any = [];\n    let arr17: any = [];\n    let arr18: any = [];\n\
    \    let arr19: any = [];\n    let arr20: any = [];\n    let arr21: any = [];\n\
    \    let arr22: any = [];\n    let arr23: any = [];\n    let arr24: any = [];\n\
    \    let arr25: any = [];\n    let arr26: any = [];\n    let arr27: any = [];\n\
    \    let arr28: any = [];\n    let arr29: any = [];\n    let arr30: any = [];\n\
    \    let arr31: any = [];\n    let arr32: any = [];\n    let arr33: any = [];\n\
    \    let arr34: any = [];\n    let arr35: any = [];\n    let arr36: any = [];\n\
    \    let arr37: any = [];\n    let arr38: any = [];\n    let arr39: any = [];\n\
    \    let arr40: any = [];\n    let arr41: any = [];\n    let arr42: any = [];\n\
    \    let arr43: any = [];\n    let arr44: any = [];\n    let arr45: any = [];\n\
    \    let arr46: any = [];\n    let arr47: any = [];\n    let arr48: any = [];\n\
    \    let arr49: any = [];\n    let arr50: any = [];\n    let arr51: any = [];\n\
    \    let arr52: any = [];\n    let arr53: any = [];\n    let arr54: any = [];\n\
    \    let arr55: any = [];\n    let arr56: any = [];\n    let arr57: any =", " \
    \   return arr.sort((a, b) => {\n        let aOnes = countOnes(a);\n        let\
    \ bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(function (a) {\n        return a.toString(2).split('').filter(function\
    \ (b) {\n            return b === '1';\n        }).length;\n    });\n    let arr2\
    \ = arr.map(function (a) {\n        return a.toString(2).split('').filter(function\
    \ (b) {\n            return b === '1';\n        }).length;\n    });\n    arr1.sort(function\
    \ (a, b) {\n        return a - b;\n    });\n    let arr3 = [];\n    for (let i\
    \ = 0; i < arr1.length; i++) {\n        arr3.push(arr[arr2.indexOf(arr1[i])]);\n\
    \        arr2[arr2.indexOf(arr1[i])] = -1;\n    }\n    return arr3;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let sorted\
    \ = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n    return\
    \ sorted;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        if (a < 0 || b <\
    \ 0) return a - b;\n        return (a.toString(2).match(/1/g) || []).length -\
    \ (b.toString(2).match(/1/g) || []).length || a - b;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 =\
    \ a.toString(2).split('').filter(x => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n\
    \        }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        if (aBin.split('').filter(x => x === '1').length === bBin.split('').filter(x\
    \ => x === '1').length) {\n            return a - b;\n        }\n        return\
    \ aBin.split('').filter(x => x === '1').length - bBin.split('').filter(x => x\
    \ === '1').length;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       arr1.push(arr[i]);\n        } else if (arr[i] == 0) {\n            arr2.push(arr[i]);\n\
    \        } else {\n            arr3.push(arr[i]);\n        }\n    }\n    arr1.sort(function\
    \ (a, b) {\n        return b - a;\n    });\n    arr2.sort(function (a, b) {\n\
    \        return a - b;\n    });\n    arr3.sort(function (a, b) {\n        return\
    \ a - b;\n    });\n    return arr1.concat(arr2, arr3);\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = (a >>> 0).toString(2).split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = (b >>> 0).toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n  \
    \  });\n}\n", "    let ones = arr.map(x => x.toString(2).split('').filter(y =>\
    \ y === '1').length);\n    let sorted = arr.sort((a, b) => {\n        if (ones[arr.indexOf(a)]\
    \ === ones[arr.indexOf(b)]) {\n            return a - b;\n        }\n        return\
    \ ones[arr.indexOf(a)] - ones[arr.indexOf(b)];\n    });\n    return sorted;\n\
    }\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(x => x === '1').length);\n  \
    \  let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a, b) => a[0] -\
    \ b[0]);\n    return arr3.map(x => x[1]);\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x => x\
    \ === '1').length;\n        let b1 = b.toString(2).split('').filter(x => x ===\
    \ '1').length;\n        return a1 - b1 || a - b;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x == '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x == '1').length;\n  \
    \      return aBin - bBin || a - b;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   let aOnes = a.toString(2).match(/1/g) || [];\n        let bOnes = b.toString(2).match(/1/g)\
    \ || [];\n        if (aOnes.length === bOnes.length) {\n            return a -\
    \ b;\n        }\n        return aOnes.length - bOnes.length;\n    });\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    \
    \    if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(y => y === '1').length);\n  \
    \  let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b)\
    \ => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(y => y == '1').length);\n   \
    \ let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a, b) => a[0] -\
    \ b[0]);\n    return arr3.map(x => x[1]);\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = bBin.split(\"\").filter(x => x ===\
    \ \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   let aBin = a.toString(2).split('').filter(x => x === '1').length;\n      \
    \  let bBin = b.toString(2).split('').filter(x => x === '1').length;\n       \
    \ if (aBin === bBin) {\n            return a - b;\n        }\n        return aBin\
    \ - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin =\
    \ a.toString(2).split('').filter(x => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBin === bBin) {\n            return a -\
    \ b;\n        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let a1 = a.toString(2).split('').filter(x => x === '1').length;\n     \
    \   let b1 = b.toString(2).split('').filter(x => x === '1').length;\n        if\
    \ (a1 === b1) {\n            return a - b;\n        }\n        return a1 - b1;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split('').filter(x =>\
    \ x === '1').length;\n    const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x\
    \ => x.split('').filter(y => y == '1').length);\n    let arr3 = arr2.map((x, i)\
    \ => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let\
    \ arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    let aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    let bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       arr1.push(arr[i]);\n        } else if (arr[i] === 0) {\n            arr2.push(arr[i]);\n\
    \        } else {\n            arr3.push(arr[i]);\n        }\n    }\n    arr1.sort((a,\
    \ b) => a - b);\n    arr2.sort((a, b) => a - b);\n    arr3.sort((a, b) => {\n\
    \        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let b1 = b.toString(2).split('').filter(x => x === '1').length;\n      \
    \  if (a1 === b1) {\n            return a - b;\n        } else {\n           \
    \ return a1 - b1;\n        }\n    });\n    return arr1.concat(arr2).concat(arr3);\n\
    }\n", "    return arr.sort((a, b) => {\n        let a_ones = (a >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b_ones = (b >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (a_ones === b_ones) {\n            return\
    \ a - b;\n        }\n        return a_ones - b_ones;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    arr1.sort((a, b) => a - b);\n    arr2.sort((a, b)\
    \ => b - a);\n    let arr3 = [];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr1[i] === arr2[i]) {\n            arr3.push(arr[i]);\n        }\n\
    \    }\n    return arr3;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n        let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let a_ones = a.toString(2).match(/1/g) ? a.toString(2).match(/1/g).length\
    \ : 0;\n        let b_ones = b.toString(2).match(/1/g) ? b.toString(2).match(/1/g).length\
    \ : 0;\n        return a_ones - b_ones || a - b;\n    });\n}\n", "    let arr1\
    \ = [];\n    let arr2 = [];\n    for (let i = 0; i < arr.length; i++) {\n    \
    \    if (arr[i] < 0) {\n            arr1.push(arr[i]);\n        } else {\n   \
    \         arr2.push(arr[i]);\n        }\n    }\n    arr1.sort((a, b) => a - b);\n\
    \    arr2.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      } else {\n            return a1 - b1;\n        }\n    });\n    return arr1.concat(arr2);\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n", "    let\
    \ arr1 = arr.map(x => {\n        return {\n            val: x,\n            bin:\
    \ x.toString(2),\n        };\n    });\n    arr1.sort((a, b) => {\n        return\
    \ a.bin.split('').filter(x => x === '1').length - b.bin.split('').filter(x =>\
    \ x === '1').length;\n    });\n    return arr1.map(x => x.val);\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBin === bBin) {\n            return a -\
    \ b;\n        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes > bOnes)\
    \ {\n            return 1;\n        } else if (aOnes < bOnes) {\n            return\
    \ -1;\n        } else {\n            return a - b;\n        }\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2).split('').filter(x => x == '1').length);\n    let\
    \ arr2 = arr.map(x => x.toString(2).split('').filter(x => x == '1').length);\n\
    \    arr1.sort((a, b) => a - b);\n    arr2.sort((a, b) => b - a);\n    let arr3\
    \ = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr1[i] == arr2[i])\
    \ {\n            arr3.push(arr[i]);\n        }\n    }\n    let arr4 = [];\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        if (arr1[i] != arr2[i]) {\n\
    \            arr4.push(arr[i]);\n        }\n    }\n    let arr5 = [];\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr1[i] == arr2[i]) {\n    \
    \        arr5.push(arr3[i]);\n        } else {\n            arr5.push(arr4[i]);\n\
    \        }\n    }\n    return arr5;\n}\n", "    let sorted = arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n    return sorted;\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        arr3.push(arr[arr1.indexOf(arr2[i])]);\n\
    \    }\n    return arr3;\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n  \
    \      let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n        let b1 = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n        if (a1 === b1) {\n            return a - b;\n        }\n  \
    \      return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n    \
    \    let a1 = a.toString(2).split('').filter(x => x === '1').length;\n       \
    \ let b1 = b.toString(2).split('').filter(x => x === '1').length;\n        if\
    \ (a1 === b1) {\n            return a - b;\n        }\n        return a1 - b1;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n  \
    \  });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n",
  "    let arr1 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr3 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr4 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr5 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr6 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr7 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr8 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr9 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr10 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr11 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr12 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr13 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr14 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \    let arr15 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \   ", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).match(/1/g) || [];\n        let bOnes\
    \ = b.toString(2).match(/1/g) || [];\n        if (aOnes.length === bOnes.length)\
    \ {\n            return a - b;\n        }\n        return aOnes.length - bOnes.length;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin - bBin === 0 ? a - b : aBin - bBin;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n   ", "    return arr.sort((a, b) => {\n        let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        let\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        if (a < 0 || b < 0) {\n            return a - b;\n        }\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const b1 = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return a1 - b1 || a - b;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr2 = [];\n    let arr3 = [];\n    let arr4 = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       arr2.push(arr[i]);\n        } else {\n            arr3.push(arr[i]);\n\
    \        }\n    }\n    arr3.sort(function (a, b) {\n        let a1 = a.toString(2).split('').filter(function\
    \ (x) {\n            return x === '1';\n        }).length;\n        let b1 = b.toString(2).split('').filter(function\
    \ (x) {\n            return x === '1';\n        }).length;\n        if (a1 ===\
    \ b1) {\n            return a - b;\n        } else {\n            return a1 -\
    \ b1;\n        }\n    });\n    arr4 = arr3.concat(arr2);\n    return arr4;\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let sorted = arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n    return sorted;\n}\n", "  return arr.sort((a, b) =>\
    \ {\n    let aOnes = a.toString(2).split(\"1\").length - 1;\n    let bOnes = b.toString(2).split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        if (a < 0 ||\
    \ b < 0) {\n            return a - b;\n        }\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        if (aBin.match(/1/g) === null && bBin.match(/1/g) === null) {\n     \
    \       return a - b;\n        } else if (aBin.match(/1/g) === null) {\n     \
    \       return -1;\n        } else if (bBin.match(/1/g) === null) {\n        \
    \    return 1;\n        } else if (aBin.match(/1/g).length === bBin.match(/1/g).length)\
    \ {\n            return a - b;\n        } else {\n            return aBin.match(/1/g).length\
    \ - bBin.match(/1/g).length;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        if (a < 0 || b < 0) {\n            return a - b;\n        }\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).match(/1/g)\
    \ || [];\n        let b1 = b.toString(2).match(/1/g) || [];\n        return a1.length\
    \ - b1.length || a - b;\n    });\n}\n", "    const arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr4 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr5 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr6 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr7 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr8 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr9 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr10 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr11 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr12 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr13 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr14 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    const arr15 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n   ", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr2.length; i++) {\n        arr3.push(arr[arr1.indexOf(arr2[i])]);\n\
    \    }\n    return arr3;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        return aBinary - bBinary || a - b;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));\n", "    return arr.sort((a, b) => {\n        let onesA = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let onesB = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (onesA === onesB) {\n            return a\
    \ - b;\n        }\n        return onesA - onesB;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        return aBinary - bBinary || a - b;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    let arr1 = arr.map(x => x.toString(2));\n    let arr2\
    \ = arr1.map(x => x.split('').filter(y => y === '1').length);\n    let arr3 =\
    \ arr2.map((x, i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b) => a[0] -\
    \ b[0]);\n    let arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    let sorted = arr.sort((a, b) => {\n        let aOnes =\
    \ a.toString(2).split(\"\").filter(x => x === \"1\").length;\n        let bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n    return sorted;\n}\n", "    return arr.sort((a, b) => {\n       \
    \ let aOnes = a.toString(2).match(/1/g).length;\n        let bOnes = b.toString(2).match(/1/g).length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let a1 = a.toString(2).split('').filter(x => x === '1').length;\n     \
    \   let b1 = b.toString(2).split('').filter(x => x === '1').length;\n        return\
    \ a1 - b1 || a - b;\n    });\n}\n", "    return arr.sort((a, b) => {\n       \
    \ let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    let arr1: any = [];\n    let\
    \ arr2: any = [];\n    let arr3: any = [];\n    let arr4: any = [];\n    let arr5:\
    \ any = [];\n    let arr6: any = [];\n    let arr7: any = [];\n    let arr8: any\
    \ = [];\n    let arr9: any = [];\n    let arr10: any = [];\n    let arr11: any\
    \ = [];\n    let arr12: any = [];\n    let arr13: any = [];\n    let arr14: any\
    \ = [];\n    let arr15: any = [];\n    let arr16: any = [];\n    let arr17: any\
    \ = [];\n    let arr18: any = [];\n    let arr19: any = [];\n    let arr20: any\
    \ = [];\n    let arr21: any = [];\n    let arr22: any = [];\n    let arr23: any\
    \ = [];\n    let arr24: any = [];\n    let arr25: any = [];\n    let arr26: any\
    \ = [];\n    let arr27: any = [];\n    let arr28: any = [];\n    let arr29: any\
    \ = [];\n    let arr30: any = [];\n    let arr31: any = [];\n    let arr32: any\
    \ = [];\n    let arr33: any = [];\n    let arr34: any = [];\n    let arr35: any\
    \ = [];\n    let arr36: any = [];\n    let arr37: any = [];\n    let arr38: any\
    \ = [];\n    let arr39: any = [];\n    let arr40: any = [];\n    let arr41: any\
    \ = [];\n    let arr42: any = [];\n    let arr43: any = [];\n    let arr44: any\
    \ = [];\n    let arr45: any = [];\n    let arr46: any = [];\n    let arr47: any\
    \ = [];\n    let arr48: any = [];\n    let arr49: any = [];\n    let arr50: any\
    \ = [];\n    let arr51: any = [];\n    let arr52: any = [];\n    let arr53: any\
    \ = [];\n    let arr54: any = [];\n    let arr55: any = [];\n    let arr56: any\
    \ = [];\n    let arr57: any =", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n   ", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n  \
    \      const aOnes = aBin.split('').filter(x => x === '1').length;\n        const\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1: any = [];\n    let arr2: any = [];\n    let arr3:\
    \ any = [];\n    let arr4: any = [];\n    let arr5: any = [];\n    let arr6: any\
    \ = [];\n    let arr7: any = [];\n    let arr8: any = [];\n    let arr9: any =\
    \ [];\n    let arr10: any = [];\n    let arr11: any = [];\n    let arr12: any\
    \ = [];\n    let arr13: any = [];\n    let arr14: any = [];\n    let arr15: any\
    \ = [];\n    let arr16: any = [];\n    let arr17: any = [];\n    let arr18: any\
    \ = [];\n    let arr19: any = [];\n    let arr20: any = [];\n    let arr21: any\
    \ = [];\n    let arr22: any = [];\n    let arr23: any = [];\n    let arr24: any\
    \ = [];\n    let arr25: any = [];\n    let arr26: any = [];\n    let arr27: any\
    \ = [];\n    let arr28: any = [];\n    let arr29: any = [];\n    let arr30: any\
    \ = [];\n    let arr31: any = [];\n    let arr32: any = [];\n    let arr33: any\
    \ = [];\n    let arr34: any = [];\n    let arr35: any = [];\n    let arr36: any\
    \ = [];\n    let arr37: any = [];\n    let arr38: any = [];\n    let arr39: any\
    \ = [];\n    let arr40: any = [];\n    let arr41: any = [];\n    let arr42: any\
    \ = [];\n    let arr43: any = [];\n    let arr44: any = [];\n    let arr45: any\
    \ = [];\n    let arr46: any = [];\n    let arr47: any = [];\n    let arr48: any\
    \ = [];\n    let arr49: any = [];\n    let arr50: any = [];\n    let arr51: any\
    \ = [];\n    let arr52: any = [];\n    let arr53: any = [];\n    let arr54: any\
    \ = [];\n    let arr55: any = [];\n    let arr56: any = [];\n    let arr57: any\
    \ =", "    let arr1 = arr.map(x => {\n        let count = 0;\n        let str\
    \ = x.toString(2);\n        for (let i = 0; i < str.length; i++) {\n         \
    \   if (str[i] === '1') {\n                count++;\n            }\n        }\n\
    \        return {\n            count: count,\n            value: x\n        }\n\
    \    });\n    arr1.sort((a, b) => {\n        if (a.count === b.count) {\n    \
    \        return a.value - b.value;\n        }\n        return a.count - b.count;\n\
    \    });\n    return arr1.map(x => x.value);\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       return aBin - bBin || a - b;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) || [];\n        let bOnes = bBin.match(/1/g)\
    \ || [];\n        if (aOnes.length === bOnes.length) {\n            return a -\
    \ b;\n        }\n        return aOnes.length - bOnes.length;\n    });\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n      \
    \  let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let result: any =\
    \ [];\n    let binary: any = [];\n    let ones: any = [];\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        binary.push(arr[i].toString(2));\n        ones.push(binary[i].split(\"\
    1\").length - 1);\n    }\n    let sortedOnes = ones.sort((a, b) => a - b);\n \
    \   for (let i = 0; i < sortedOnes.length; i++) {\n        for (let j = 0; j <\
    \ ones.length; j++) {\n            if (sortedOnes[i] === ones[j]) {\n        \
    \        result.push(arr[j]);\n                ones[j] = -1;\n               \
    \ break;\n            }\n        }\n    }\n    return result;\n}\n", "    let\
    \ arr2 = arr.map(x => x.toString(2));\n    let arr3 = arr2.map(x => x.split('').filter(x\
    \ => x == '1').length);\n    let arr4 = arr3.map((x, i) => [x, arr[i]]);\n   \
    \ let arr5 = arr4.sort((a, b) => a[0] - b[0]);\n    let arr6 = arr5.map(x => x[1]);\n\
    \    return arr6;\n}\n", "    return arr.sort((a, b) => {\n        let aBin =\
    \ a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n        let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n  \
    \      let aOnes = aBinary.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x == '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x == '1').length;\n        if (aBin == bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n    return sorted;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let a1 = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \        let b1 = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \        if (a1 === b1) {\n            return a - b;\n        }\n        return\
    \ a1 - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => {\n        return {\n           \
    \ value: x,\n            ones: x.toString(2).split('').filter(x => x === '1').length\n\
    \        }\n    })\n    arr1.sort((a, b) => {\n        if (a.ones === b.ones)\
    \ {\n            return a.value - b.value\n        }\n        return a.ones -\
    \ b.ones\n    })\n    return arr1.map(x => x.value)\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g);\n        let bOnes = bBin.match(/1/g);\n\
    \        if (aOnes && bOnes) {\n            if (aOnes.length === bOnes.length)\
    \ {\n                return a - b;\n            }\n            return aOnes.length\
    \ - bOnes.length;\n        }\n        if (aOnes) {\n            return -1;\n \
    \       }\n        if (bOnes) {\n            return 1;\n        }\n        return\
    \ a - b;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 === b1 ? a - b : a1 - b1;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n     \
    \   const bBinary = b.toString(2);\n        const aOnes = aBinary.match(/1/g)\
    \ ? aBinary.match(/1/g).length : 0;\n        const bOnes = bBinary.match(/1/g)\
    \ ? bBinary.match(/1/g).length : 0;\n        if (aOnes === bOnes) {\n        \
    \    return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", " \
    \   let arr1 = arr.map(x => {\n        return {\n            num: x,\n       \
    \     ones: x.toString(2).split('').filter(x => x === '1').length\n        }\n\
    \    })\n    arr1.sort((a, b) => {\n        if (a.ones === b.ones) {\n       \
    \     return a.num - b.num\n        } else {\n            return a.ones - b.ones\n\
    \        }\n    })\n    return arr1.map(x => x.num)\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n   \
    \ let arr2 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    arr1.sort((a, b) => a - b);\n    arr2.sort((a, b) => b - a);\n    let arr3\
    \ = arr1.map(x => arr2.indexOf(x));\n    return arr3.map(x => arr[x]);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_114_minSubArraySum
language: ts
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n\
  // 1\n// >>> minSubArraySum([-1, -2, -3])\n// -6\nfunction minSubArraySum(nums:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = minSubArraySum;\n  assert.deepEqual(candidate([2,\
  \ 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1, -2, -3]),-6);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["    let minSum = Infinity;\n    let sum = 0;\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n        if (sum > 0) {\n            sum\
    \ = 0;\n        }\n    }\n    return minSum;\n}\nconsole.log(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1, -2, -3]));", "    let minSum\
    \ = nums[0];\n    let currentSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++) {\n        currentSum = Math.min(currentSum + nums[i], nums[i]);\n    \
    \    minSum = Math.min(minSum, currentSum);\n    }\n    return minSum;\n}\n",
  "  let minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    sum += nums[i];\n    if (sum < minSum) {\n      minSum = sum;\n    }\n\
    \    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n", "  let\
    \ minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    sum += nums[i];\n    if (sum < minSum) {\n      minSum = sum;\n    }\n\
    \    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n\nconsole.log(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1, -2, -3]));", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n        if (sum > 0) {\n            sum = 0;\n        }\n    }\n \
    \   return minSum;\n}\nconsole.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1,\
    \ -2, -3]));", "    let minSum = nums[0];\n    let currentSum = nums[0];\n   \
    \ for (let i = 1; i < nums.length; i++) {\n        currentSum = Math.min(currentSum\
    \ + nums[i], nums[i]);\n        minSum = Math.min(minSum, currentSum);\n    }\n\
    \    return minSum;\n}\n", "    let minSum = Infinity;\n    let sum = 0;\n   \
    \ for (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n        if\
    \ (sum < minSum) {\n            minSum = sum;\n        }\n        if (sum > 0)\
    \ {\n            sum = 0;\n        }\n    }\n    return minSum;\n}\n", "    let\
    \ minSum = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n        if (sum > 0) {\n            sum = 0;\n        }\n\
    \    }\n    return minSum;\n}\nconsole.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    console.log(minSubArraySum([-1, -2, -3]));", "    let minSum = Infinity;\n   \
    \ let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n\
    \        if (sum < minSum) {\n            minSum = sum;\n        }\n        if\
    \ (sum > 0) {\n            sum = 0;\n        }\n    }\n    return minSum;\n}\n\
    console.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1,\
    \ -2, -3]));", "  let minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i\
    \ < nums.length; i++) {\n    sum += nums[i];\n    if (sum < minSum) {\n      minSum\
    \ = sum;\n    }\n    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return minSum;\n\
    }\n", "    let minSum = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n        if (sum > 0) {\n            sum = 0;\n        }\n\
    \    }\n    return minSum;\n}\nconsole.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    console.log(minSubArraySum([-1, -2, -3]));", "  let minSum = Infinity;\n  let\
    \ sum = 0;\n  let start = 0;\n  let end = 0;\n  while (start < nums.length) {\n\
    \    if (sum < minSum) {\n      minSum = sum;\n    }\n    if (sum < 0) {\n   \
    \   sum = 0;\n      start = end;\n    }\n    sum += nums[end];\n    end++;\n \
    \ }\n  return minSum;\n}\n", "  let minSum = Infinity;\n  let sum = 0;\n  let\
    \ start = 0;\n  let end = 0;\n  while (start < nums.length) {\n    if (sum < minSum)\
    \ {\n      minSum = sum;\n    }\n    if (sum < 0) {\n      sum = 0;\n      start\
    \ = end;\n    }\n    sum += nums[end];\n    end++;\n  }\n  return minSum;\n}\n",
  "  let minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    sum += nums[i];\n    if (sum < minSum) {\n      minSum = sum;\n    }\n\
    \    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n", "  let\
    \ minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    sum += nums[i];\n    if (sum < minSum) {\n      minSum = sum;\n    }\n\
    \    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n\nconsole.log(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1, -2, -3]));", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n        if (sum > 0) {\n            sum = 0;\n        }\n    }\n \
    \   return minSum;\n}\nconsole.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1,\
    \ -2, -3]));", "    let minSum = Infinity;\n    let sum = 0;\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n        if (sum > 0) {\n          \
    \  sum = 0;\n        }\n    }\n    return minSum;\n}\nconsole.log(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1, -2, -3]));", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n        if (sum > 0) {\n            sum = 0;\n        }\n    }\n \
    \   return minSum;\n}\n", "    let minSum = Infinity;\n    let sum = 0;\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n        }\n        if (sum > 0) {\n\
    \            sum = 0;\n        }\n    }\n    return minSum;\n}\nconsole.log(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1, -2, -3]));", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n        if (sum > 0) {\n            sum = 0;\n        }\n    }\n \
    \   return minSum;\n}\nconsole.log(minSubArraySum([2, 3, 4, 1, 2, 4]));\nconsole.log(minSubArraySum([-1,\
    \ -2, -3]));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

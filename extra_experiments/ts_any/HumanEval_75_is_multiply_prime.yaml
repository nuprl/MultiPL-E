name: HumanEval_75_is_multiply_prime
language: ts
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["    let result: boolean = false;\n    let prime: number[] = [];\n \
    \   for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n      \
    \      prime.push(i);\n        }\n    }\n    for (let i: number = 0; i < prime.length;\
    \ i++) {\n        for (let j: number = 0; j < prime.length; j++) {\n         \
    \   for (let k: number = 0; k < prime.length; k++) {\n                if (prime[i]\
    \ * prime[j] * prime[k] == a) {\n                    result = true;\n        \
    \        }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let primeNumbers = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            primeNumbers.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    let isMultiplyPrime = false;\n    for\
    \ (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let prime: number[] = [];\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime.length; i++) {\n    \
    \    for (let j: number = 0; j < prime.length; j++) {\n            for (let k:\
    \ number = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] == a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplied: number[] = [];\n    let primeNumbersMultipliedSum: number\
    \ = 0;\n    let primeNumbersMultipliedSum2: number = 0;\n    let primeNumbersMultipliedSum3:\
    \ number = 0;\n    let primeNumbersMultipliedSum4: number = 0;\n    let primeNumbersMultipliedSum5:\
    \ number = 0;\n    let primeNumbersMultipliedSum6: number = 0;\n    let primeNumbersMultipliedSum7:\
    \ number = 0;\n    let primeNumbersMultipliedSum8: number = 0;\n    let primeNumbersMultipliedSum9:\
    \ number = 0;\n    let primeNumbersMultipliedSum10: number = 0;\n    let primeNumbersMultipliedSum11:\
    \ number = 0;\n    let primeNumbersMultipliedSum12: number = 0;\n    let primeNumbersMultipliedSum13:\
    \ number = 0;\n    let primeNumbersMultipliedSum14: number = 0;\n    let primeNumbersMultipliedSum15:\
    \ number = 0;\n    let primeNumbersMultipliedSum16: number = 0;\n    let primeNumbersMultipliedSum17:\
    \ number = 0;\n    let primeNumbersMultipliedSum18: number = 0;\n    let primeNumbersMultipliedSum19:\
    \ number = 0;\n    let primeNumbersMultipliedSum20: number = 0;\n    let primeNumbersMultipliedSum21:\
    \ number = 0;\n    let primeNumbersMultipliedSum22: number = 0;\n    let primeNumbersMultipliedSum23:\
    \ number = 0;\n    let primeNumbersMultipliedSum24: number = 0;\n    let primeNumbersMultipliedSum25:\
    \ number = 0;\n    let primeNumbersMultipliedSum26: number = 0;\n    let primeNumbersMultipliedSum27:\
    \ number = 0;\n    let primeNumbersMultipliedSum28: number = 0;\n    let primeNumbersMultipliedSum29:\
    \ number = 0;\n    let primeNumbersMultipliedSum30: number = 0;\n    let primeNumbersMultipliedSum31:\
    \ number = 0;\n    let primeNumbersMultipliedSum32: number = 0;\n", "    let prime\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let result = [];\n    for (let i = 0; i < prime.length;\
    \ i++) {\n        if (a % prime[i] == 0) {\n            result.push(prime[i]);\n\
    \        }\n    }\n    if (result.length == 3) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let arr: number[] = [];\n    let result: boolean = false;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            arr.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < arr.length; i++) {\n      \
    \  for (let j: number = i + 1; j < arr.length; j++) {\n            for (let k:\
    \ number = j + 1; k < arr.length; k++) {\n                if (arr[i] * arr[j]\
    \ * arr[k] == a) {\n                    result = true;\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersMultiply:\
    \ number[] = [];\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiply.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiply.length; i++) {\n        if\
    \ (primeNumbersMultiply[i] === a) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    if (a\
    \ < 100) {\n        for (let i = 2; i < a; i++) {\n            if (a % i == 0)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime = true;\n\
    \    let prime_numbers = [];\n    for (let i = 2; i < a; i++) {\n        for (let\
    \ j = 2; j < i; j++) {\n            if (i % j == 0) {\n                prime =\
    \ false;\n                break;\n            }\n        }\n        if (prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        prime = true;\n  \
    \  }\n    let result = false;\n    for (let i = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j = 0; j < prime_numbers.length; j++) {\n            for\
    \ (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    result =\
    \ true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersMultiply: number[]\
    \ = [];\n    let counter: number = 0;\n    for (let i: number = 2; i < 100; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                counter++;\n            }\n        }\n        if (counter\
    \ === 0) {\n            primeNumbers.push(i);\n        }\n        counter = 0;\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiply.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiply.length; i++) {\n        if\
    \ (primeNumbersMultiply[i] === a) {\n            result = true;\n        }\n \
    \   }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j === 0) {\n                isPrime = false;\n          \
    \  }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n \
    \       }\n        isPrime = true;\n    }\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let count: number = 0;\n    for (let i\
    \ = 0; i < prime.length; i++) {\n        if (a % prime[i] == 0) {\n          \
    \  count++;\n        }\n    }\n    if (count == 3) {\n        return true;\n \
    \   }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(31));\nconsole.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\n\
    console.log(is_multiply_prime(34));\nconsole.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\n\
    console.log(is_multiply_prime(37));\nconsole.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\n\
    console.log(is_multiply_prime(40));\nconsole.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\n\
    console.log(is_multiply_prime(43));\nconsole.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\n\
    console.log(is_multiply_prime(46));\nconsole.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\n\
    console.log(is_multiply_prime(49));\nconsole.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\n\
    console.log(is_multiply_prime(52));\nconsole.log(is_multiply_prime(53));\nconsole.log(is_multiply_prime(54",
  "    let result: boolean = false;\n    let count: number = 0;\n    let prime: number\
    \ = 0;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n\
    \            count++;\n            prime = i;\n        }\n    }\n    if (count\
    \ == 1) {\n        result = true;\n    }\n    return result;\n}\n", "    let is_prime\
    \ = true;\n    let is_multiply_prime = false;\n    let prime_numbers = [];\n \
    \   let prime_numbers_multiply = [];\n    for (let i = 2; i < a; i++) {\n    \
    \    for (let j = 2; j < i; j++) {\n            if (i % j == 0) {\n          \
    \      is_prime = false;\n                break;\n            }\n        }\n \
    \       if (is_prime) {\n            prime_numbers.push(i);\n        }\n     \
    \   is_prime = true;\n    }\n    for (let i = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j = 0; j < prime_numbers.length; j++) {\n            for\
    \ (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    prime_numbers_multiply.push(prime_numbers[i]);\n\
    \                    prime_numbers_multiply.push(prime_numbers[j]);\n        \
    \            prime_numbers_multiply.push(prime_numbers[k]);\n                \
    \    is_multiply_prime = true;\n                }\n            }\n        }\n\
    \    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    counter++;\n               \
    \ }\n            }\n        }\n    }\n    if (counter > 0) {\n        result =\
    \ true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let prime: number[] = [];\n    let prime2:\
    \ number[] = [];\n    let prime3: number[] = [];\n    let prime4: number[] = [];\n\
    \    let prime5: number[] = [];\n    let prime6: number[] = [];\n    let prime7:\
    \ number[] = [];\n    let prime8: number[] = [];\n    let prime9: number[] = [];\n\
    \    let prime10: number[] = [];\n    let prime11: number[] = [];\n    let prime12:\
    \ number[] = [];\n    let prime13: number[] = [];\n    let prime14: number[] =\
    \ [];\n    let prime15: number[] = [];\n    let prime16: number[] = [];\n    let\
    \ prime17: number[] = [];\n    let prime18: number[] = [];\n    let prime19: number[]\
    \ = [];\n    let prime20: number[] = [];\n    let prime21: number[] = [];\n  \
    \  let prime22: number[] = [];\n    let prime23: number[] = [];\n    let prime24:\
    \ number[] = [];\n    let prime25: number[] = [];\n    let prime26: number[] =\
    \ [];\n    let prime27: number[] = [];\n    let prime28: number[] = [];\n    let\
    \ prime29: number[] = [];\n    let prime30: number[] = [];\n    let prime31: number[]\
    \ = [];\n    let prime32: number[] = [];\n    let prime33: number[] = [];\n  \
    \  let prime34: number[] = [];\n    let prime35: number[] = [];\n    let prime36:\
    \ number[] = [];\n    let prime37: number[] = [];\n    let prime38: number[] =\
    \ [];\n    let prime39: number[] = [];\n    let prime40: number[] = [];\n    let\
    \ prime41: number[] = [];\n    let prime42: number[] = [];\n    let prime43: number[]\
    \ = [];\n    let prime44: number[] = [];\n    let prime45: number[] = [];\n  \
    \  let prime46: number[] = [];\n    let prime47: number[] = [];\n    let prime48:\
    \ number[] = [];\n    let prime49: number[] = [];\n    let prime50: number[] =\
    \ [];\n    let prime", "    let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result = [];\n\
    \    for (let i = 0; i < prime.length; i++) {\n        if (a % prime[i] == 0)\
    \ {\n            result.push(prime[i]);\n        }\n    }\n    if (result.length\
    \ == 3) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let prime_numbers_count = 0;\n    for (let i = 0; i <\
    \ prime_numbers.length; i++) {\n        if (a % prime_numbers[i] == 0) {\n   \
    \         prime_numbers_count++;\n        }\n    }\n    if (prime_numbers_count\
    \ == 3) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime: number[] = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let prime_num: number[] = [];\n    let result: boolean\
    \ = false;\n    for (let i: number = 0; i < prime.length; i++) {\n        if (a\
    \ % prime[i] == 0) {\n            prime_num.push(prime[i]);\n        }\n    }\n\
    \    if (prime_num.length == 3) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let arr: number[] = [];\n    let\
    \ arr2: number[] = [];\n    let arr3: number[] = [];\n    let arr4: number[] =\
    \ [];\n    let arr5: number[] = [];\n    let arr6: number[] = [];\n    let arr7:\
    \ number[] = [];\n    let arr8: number[] = [];\n    let arr9: number[] = [];\n\
    \    let arr10: number[] = [];\n    let arr11: number[] = [];\n    let arr12:\
    \ number[] = [];\n    let arr13: number[] = [];\n    let arr14: number[] = [];\n\
    \    let arr15: number[] = [];\n    let arr16: number[] = [];\n    let arr17:\
    \ number[] = [];\n    let arr18: number[] = [];\n    let arr19: number[] = [];\n\
    \    let arr20: number[] = [];\n    let arr21: number[] = [];\n    let arr22:\
    \ number[] = [];\n    let arr23: number[] = [];\n    let arr24: number[] = [];\n\
    \    let arr25: number[] = [];\n    let arr26: number[] = [];\n    let arr27:\
    \ number[] = [];\n    let arr28: number[] = [];\n    let arr29: number[] = [];\n\
    \    let arr30: number[] = [];\n    let arr31: number[] = [];\n    let arr32:\
    \ number[] = [];\n    let arr33: number[] = [];\n    let arr34: number[] = [];\n\
    \    let arr35: number[] = [];\n    let arr36: number[] = [];\n    let arr37:\
    \ number[] = [];\n    let arr38: number[] = [];\n    let arr39: number[] = [];\n\
    \    let arr40: number[] = [];\n    let arr41: number[] = [];\n    let arr42:\
    \ number[] = [];\n    let arr43: number[] = [];\n    let arr44: number[] = [];\n\
    \    let arr45: number[] = [];\n    let arr46: number[] = [];\n    let arr47:\
    \ number[] = [];\n    let arr48: number[] = [];\n    let arr49: number[] = [];\n\
    \    let arr50: number[] = [];\n    let arr51: number[] = [];\n    let", "   \
    \ let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let result = [];\n    for (let i = 0;\
    \ i < prime.length; i++) {\n        if (a % prime[i] == 0) {\n            result.push(prime[i]);\n\
    \        }\n    }\n    if (result.length == 3) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let isMultiplyPrime = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i = 2; i < a; i++) {\n        for (let j = 2; j\
    \ < i; j++) {\n            if (i % j === 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n\
    \    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    isMultiplyPrime = true;\n                }\n \
    \           }\n        }\n    }\n    return isMultiplyPrime;\n}\n", "    let result:\
    \ boolean = false;\n    let primes: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primes.push(i);\n   \
    \     }\n    }\n    for (let i: number = 0; i < primes.length; i++) {\n      \
    \  for (let j: number = 0; j < primes.length; j++) {\n            for (let k:\
    \ number = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] === a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result =\
    \ true;\n    let primeNumbers: number[] = [];\n    for (let i = 2; i < a; i++)\
    \ {\n        let isPrime = true;\n        for (let j = 2; j < i; j++) {\n    \
    \        if (i % j == 0) {\n                isPrime = false;\n               \
    \ break;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i = 0; i < primeNumbers.length; i++) {\n     \
    \   for (let j = 0; j < primeNumbers.length; j++) {\n            for (let k =\
    \ 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] == a) {\n                    result = true;\n            \
    \        break;\n                }\n                else {\n                 \
    \   result = false;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime: number[]\
    \ = [];\n    let isPrime: boolean = true;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j\
    \ == 0) {\n                isPrime = false;\n                break;\n        \
    \    }\n        }\n        if (isPrime) {\n            prime.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    let result: boolean = false;\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        for (let j: number = 0;\
    \ j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let arr: number[] = [];\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (a % i == 0) {\n            arr.push(i);\n        }\n\
    \    }\n    if (arr.length == 2) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for (let i: number\
    \ = 0; i < prime.length; i++) {\n        for (let j: number = 0; j < prime.length;\
    \ j++) {\n            for (let k: number = 0; k < prime.length; k++) {\n     \
    \           if (prime[i] * prime[j] * prime[k] == a) {\n                    result\
    \ = true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let result: boolean = false;\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let prime_numbers_counter: number = 0;\n\
    \    let prime_numbers_multiplication: number = 1;\n    let prime_numbers_multiplication_counter:\
    \ number = 0;\n    let prime_numbers_multiplication_array: number[] = [];\n  \
    \  for (let i: number = 0; i < prime_numbers_length; i++) {\n        if (a % prime_numbers[i]\
    \ == 0) {\n            prime_numbers_counter++;\n            prime_numbers_multiplication\
    \ *= prime_numbers[i];\n            prime_numbers_multiplication_array.push(prime_numbers[i]);\n\
    \        }\n    }\n    if (prime_numbers_counter == 3 && prime_numbers_multiplication\
    \ == a) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primes: number[] = [];\n \
    \   for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n      \
    \      primes.push(i);\n        }\n    }\n    for (let i: number = 0; i < primes.length;\
    \ i++) {\n        for (let j: number = 0; j < primes.length; j++) {\n        \
    \    for (let k: number = 0; k < primes.length; k++) {\n                if (primes[i]\
    \ * primes[j] * primes[k] == a) {\n                    return true;\n        \
    \        }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied:\
    \ number[] = [];\n    for (let i: number = 2; i < 100; i++) {\n        let isPrime:\
    \ boolean = true;\n        for (let j: number = 2; j < i; j++) {\n           \
    \ if (i % j === 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiplied.length; i++) {\n        if\
    \ (primeNumbersMultiplied[i] === a) {\n            result = true;\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let counter:\
    \ number = 0;\n    let arr: number[] = [];\n    if (typeof a === \"number\") {\n\
    \        for (let i: number = 2; i < a; i++) {\n            for (let j: number\
    \ = 2; j < i; j++) {\n                if (i % j === 0) {\n                   \
    \ isPrime = false;\n                }\n            }\n            if (isPrime)\
    \ {\n                arr.push(i);\n            }\n            isPrime = true;\n\
    \        }\n        for (let i: number = 0; i < arr.length; i++) {\n         \
    \   for (let j: number = 0; j < arr.length; j++) {\n                for (let k:\
    \ number = 0; k < arr.length; k++) {\n                    if (arr[i] * arr[j]\
    \ * arr[k] === a) {\n                        isMultiply = true;\n            \
    \            counter++;\n                    }\n                }\n          \
    \  }\n        }\n        if (counter === 1) {\n            return isMultiply;\n\
    \        } else {\n            return false;\n        }\n    } else {\n      \
    \  return \"Please enter a number\";\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime: number[] = [];\n    let prime_multiply: number[] = [];\n    let prime_multiply_sum:\
    \ number = 0;\n    for (let i: number = 2; i < a; i++) {\n        let isPrime:\
    \ boolean = true;\n        for (let j: number = 2; j < i; j++) {\n           \
    \ if (i % j == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            prime.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime.length; i++) {\n    \
    \    for (let j: number = 0; j < prime.length; j++) {\n            for (let k:\
    \ number = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] == a) {\n                    prime_multiply.push(prime[i]);\n   \
    \                 prime_multiply.push(prime[j]);\n                    prime_multiply.push(prime[k]);\n\
    \                }\n            }\n        }\n    }\n    for (let i: number =\
    \ 0; i < prime_multiply.length; i++) {\n        prime_multiply_sum += prime_multiply[i];\n\
    \    }\n    if (prime_multiply_sum == a) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "  \
    \  let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    result = true;\n           \
    \         counter++;\n                }\n            }\n        }\n    }\n   \
    \ if (counter === 0) {\n        result = false;\n    }\n    return result;\n}\n\
    console.log(is_multiply_prime(30));\n", "    let result = true;\n    let prime\
    \ = [];\n    for (let i = 2; i < a; i++) {\n        let isPrime = true;\n    \
    \    for (let j = 2; j < i; j++) {\n            if (i % j == 0) {\n          \
    \      isPrime = false;\n                break;\n            }\n        }\n  \
    \      if (isPrime) {\n            prime.push(i);\n        }\n    }\n    for (let\
    \ i = 0; i < prime.length; i++) {\n        for (let j = 0; j < prime.length; j++)\
    \ {\n            for (let k = 0; k < prime.length; k++) {\n                if\
    \ (prime[i] * prime[j] * prime[k] == a) {\n                    result = true;\n\
    \                    return result;\n                }\n                else {\n\
    \                    result = false;\n                }\n            }\n     \
    \   }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let isPrime = true;\n    let primeNumbers = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            primeNumbers.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    let isMultiply = false;\n    for (let\
    \ i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    isMultiply = true;\n                }\n            }\n  \
    \      }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength = primeNumbers.length;\n\
    \    let result = false;\n    for (let i = 0; i < primeNumbersLength; i++) {\n\
    \        for (let j = 0; j < primeNumbersLength; j++) {\n            for (let\
    \ k = 0; k < primeNumbersLength; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: boolean = true;\n    let prime1: boolean = true;\n    let prime2:\
    \ boolean = true;\n    let prime3: boolean = true;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (a % i == 0) {\n            prime = false;\n     \
    \   }\n    }\n    for (let i: number = 2; i < a / 2; i++) {\n        if ((a /\
    \ 2) % i == 0) {\n            prime1 = false;\n        }\n    }\n    for (let\
    \ i: number = 2; i < a / 3; i++) {\n        if ((a / 3) % i == 0) {\n        \
    \    prime2 = false;\n        }\n    }\n    for (let i: number = 2; i < a / 5;\
    \ i++) {\n        if ((a / 5) % i == 0) {\n            prime3 = false;\n     \
    \   }\n    }\n    if (prime && prime1 && prime2 && prime3) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiply: number[] = [];\n    let counter: number = 0;\n    let\
    \ counter2: number = 0;\n    let counter3: number = 0;\n    let counter4: number\
    \ = 0;\n    let counter5: number = 0;\n    let counter6: number = 0;\n    let\
    \ counter7: number = 0;\n    let counter8: number = 0;\n    let counter9: number\
    \ = 0;\n    let counter10: number = 0;\n    let counter11: number = 0;\n    let\
    \ counter12: number = 0;\n    let counter13: number = 0;\n    let counter14: number\
    \ = 0;\n    let counter15: number = 0;\n    let counter16: number = 0;\n    let\
    \ counter17: number = 0;\n    let counter18: number = 0;\n    let counter19: number\
    \ = 0;\n    let counter20: number = 0;\n    let counter21: number = 0;\n    let\
    \ counter22: number = 0;\n    let counter23: number = 0;\n    let counter24: number\
    \ = 0;\n    let counter25: number = 0;\n    let counter26: number = 0;\n    let\
    \ counter27: number = 0;\n    let counter28: number = 0;\n    let counter29: number\
    \ = 0;\n    let counter30: number = 0;\n    let counter31: number = 0;\n    let\
    \ counter32: number = 0;\n    let counter33: number = 0;\n    let counter34: number\
    \ = 0;\n    let counter35: number = 0;\n    let counter36: number = 0;\n    let\
    \ counter37: number = 0;\n    let counter38: number = 0;\n    let counter39: number\
    \ = 0;\n    let counter40: number = 0;\n    let counter41: number = 0;\n    let\
    \ counter42: number = 0;\n    let counter43: number = 0;\n    let counter44: number\
    \ = 0;\n    let counter45: number = 0;\n    let counter46: number = 0;\n    let\
    \ counter47: number = 0;\n    let counter48: number = 0;\n", "    let isPrime\
    \ = true;\n    let isMultiplyPrime = false;\n    let primeNumbers = [];\n    let\
    \ primeNumbersMultiplied = 1;\n    for (let i = 2; i < a; i++) {\n        for\
    \ (let j = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i = 0; i < primeNumbers.length; i++) {\n        if (a % primeNumbers[i]\
    \ === 0) {\n            primeNumbersMultiplied *= primeNumbers[i];\n        }\n\
    \    }\n    if (primeNumbersMultiplied === a) {\n        isMultiplyPrime = true;\n\
    \    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength = primeNumbers.length;\n\
    \    let isMultiplyPrime = false;\n    for (let i = 0; i < primeNumbersLength;\
    \ i++) {\n        for (let j = 0; j < primeNumbersLength; j++) {\n           \
    \ for (let k = 0; k < primeNumbersLength; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    let primeNumbersMultiplied: number[] = [];\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                primeNumbersMultiplied.push(primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k]);\n            }\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbersMultiplied.length; i++) {\n        if (primeNumbersMultiplied[i]\
    \ === a) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    \nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers: number[] = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let prime_numbers_multiply: number[] = [];\n    let prime_numbers_multiply_string:\
    \ string = \"\";\n    let prime_numbers_multiply_string_2: string = \"\";\n  \
    \  let prime_numbers_multiply_string_3: string = \"\";\n    let prime_numbers_multiply_string_4:\
    \ string = \"\";\n    let prime_numbers_multiply_string_5: string = \"\";\n  \
    \  let prime_numbers_multiply_string_6: string = \"\";\n    let prime_numbers_multiply_string_7:\
    \ string = \"\";\n    let prime_numbers_multiply_string_8: string = \"\";\n  \
    \  let prime_numbers_multiply_string_9: string = \"\";\n    let prime_numbers_multiply_string_10:\
    \ string = \"\";\n    let prime_numbers_multiply_string_11: string = \"\";\n \
    \   let prime_numbers_multiply_string_12: string = \"\";\n    let prime_numbers_multiply_string_13:\
    \ string = \"\";\n    let prime_numbers_multiply_string_14: string = \"\";\n \
    \   let prime_numbers_multiply_string_15: string = \"\";\n    let prime_numbers_multiply_string_16:\
    \ string = \"\";\n    let prime_numbers_multiply_string_17: string = \"\";\n \
    \   let prime_numbers_multiply_string_18: string = \"\";\n    let prime_numbers_multiply_string_19:\
    \ string = \"\";\n    let prime_numbers_multiply_string_20: string = \"\";\n \
    \   let prime_numbers_multiply_string_21: string = \"\";\n    let prime_numbers_multiply_string_22:",
  "    let result: boolean = false;\n    let prime: number[] = [];\n    let prime_multiply:\
    \ number[] = [];\n    let i: number = 2;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n\
    \    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let\
    \ r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number\
    \ = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n\
    \    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n   \
    \ let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let\
    \ ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh:\
    \ number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number\
    \ = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number =\
    \ 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n\
    \    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n \
    \   let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n  \
    \  let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n   \
    \ let aaa: number = 0;\n    let bbb: number = 0;\n    let ccc: number = 0;\n \
    \   let ddd: number = 0;\n    let eee: number = 0;\n    let fff: number = 0;\n\
    \    let ggg: number =", "    let isPrime = true;\n    let isMultiply = false;\n\
    \    let counter = 0;\n    let primeNumbers = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            primeNumbers.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                    counter++;\n                }\n            }\n\
    \        }\n    }\n    if (counter === 0) {\n        return false;\n    }\n  \
    \  return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = false;\n    let is_multiply_prime: boolean = false;\n    let prime_numbers:\
    \ number[] = [];\n    let prime_numbers_multiply: number[] = [];\n    let prime_numbers_multiply_result:\
    \ number = 1;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n\
    \    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let\
    \ r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number\
    \ = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n\
    \    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n   \
    \ let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let\
    \ ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh:\
    \ number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number\
    \ = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number =\
    \ 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n\
    \    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n \
    \   let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n  \
    \  let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n   \
    \ let aaa: number = 0;\n    let bbb: number = 0;\n    let ccc: number", "    let\
    \ result: boolean = false;\n    let counter: number = 0;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n    \
    \    }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean\
    \ = false;\n    let arr: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (a % i == 0) {\n            arr.push(i);\n        }\n    }\n \
    \   if (arr.length == 2) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < 100; i++) {\n        if (isPrime(i)) {\n    \
    \        primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let isPrime = true;\n    let isMultiply\
    \ = false;\n    let primeNumbers = [];\n    let primeNumbersMultiply = [];\n \
    \   let primeNumbersMultiplySum = 0;\n    let primeNumbersSum = 0;\n    if (a\
    \ < 100) {\n        for (let i = 2; i < a; i++) {\n            for (let j = 2;\
    \ j < i; j++) {\n                if (i % j === 0) {\n                    isPrime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (isPrime) {\n                primeNumbers.push(i);\n            }\n\
    \            isPrime = true;\n        }\n        for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n            for (let j = 0; j < primeNumbers.length; j++) {\n      \
    \          for (let k = 0; k < primeNumbers.length; k++) {\n                 \
    \   if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n       \
    \                 primeNumbersMultiply.push(primeNumbers[i]);\n              \
    \          primeNumbersMultiply.push(primeNumbers[j]);\n                     \
    \   primeNumbersMultiply.push(primeNumbers[k]);\n                        isMultiply\
    \ = true;\n                    }\n                }\n            }\n        }\n\
    \        for (let i = 0; i < primeNumbers.length; i++) {\n            primeNumbersSum\
    \ += primeNumbers[i];\n        }\n        for (let i = 0; i < primeNumbersMultiply.length;\
    \ i++) {\n            primeNumbersMultiplySum += primeNumbersMultiply[i];\n  \
    \      }\n        if (primeNumbersSum === primeNumbersMultiplySum) {\n       \
    \     return isMultiply;\n        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [];\n    let is_prime: boolean = true;\n    let\
    \ is_multiply_prime: boolean = false;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied: number[]\
    \ = [];\n    let primeNumbersMultipliedSum: number = 0;\n    let primeNumbersMultipliedSum2:\
    \ number = 0;\n    let primeNumbersMultipliedSum3: number = 0;\n    let primeNumbersMultipliedSum4:\
    \ number = 0;\n    let primeNumbersMultipliedSum5: number = 0;\n    let primeNumbersMultipliedSum6:\
    \ number = 0;\n    let primeNumbersMultipliedSum7: number = 0;\n    let primeNumbersMultipliedSum8:\
    \ number = 0;\n    let primeNumbersMultipliedSum9: number = 0;\n    let primeNumbersMultipliedSum10:\
    \ number = 0;\n    let primeNumbersMultipliedSum11: number = 0;\n    let primeNumbersMultipliedSum12:\
    \ number = 0;\n    let primeNumbersMultipliedSum13: number = 0;\n    let primeNumbersMultipliedSum14:\
    \ number = 0;\n    let primeNumbersMultipliedSum15: number = 0;\n    let primeNumbersMultipliedSum16:\
    \ number = 0;\n    let primeNumbersMultipliedSum17: number = 0;\n    let primeNumbersMultipliedSum18:\
    \ number = 0;\n    let primeNumbersMultipliedSum19: number = 0;\n    let primeNumbersMultipliedSum20:\
    \ number = 0;\n    let primeNumbersMultipliedSum21: number = 0;\n    let primeNumbersMultipliedSum22:\
    \ number = 0;\n    let primeNumbersMultipliedSum23: number = 0;\n    let primeNumbersMultipliedSum24:\
    \ number = 0;\n    let primeNumbersMultipliedSum25: number = 0;\n    let primeNumbersMultipliedSum26:\
    \ number = 0;\n    let primeNumbersMultipliedSum27: number = 0;\n    let primeNumbersMultipliedSum28:\
    \ number = 0;\n    let primeNumbersMultipliedSum29: number = 0;\n    let primeNumbersMultipliedSum30:\
    \ number = 0;\n    let primeNumbersMultipliedSum31: number = 0;\n    let primeNumbersMultipliedSum32:\
    \ number = 0;\n", "    let isPrime: boolean = true;\n    let primeNumbers: number[]\
    \ = [];\n    let primeNumbersMultiply: number = 1;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if\
    \ (i % j === 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        if (a % primeNumbers[i] === 0) {\n            primeNumbersMultiply\
    \ *= primeNumbers[i];\n        }\n    }\n    if (primeNumbersMultiply === a) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n \
    \   let primeNumbers: number[] = [];\n    let primeNumbersMultiplied: number =\
    \ 1;\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number =\
    \ 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime =\
    \ false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             primeNumbersMultiplied = primeNumbers[i] * primeNumbers[j] * primeNumbers[k];\n\
    \                if (primeNumbersMultiplied === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    for\
    \ (let i: number = 2; i < 100; i++) {\n        for (let j: number = 2; j < i;\
    \ j++) {\n            if (i % j == 0) {\n                isPrime = false;\n  \
    \              break;\n            }\n        }\n        if (isPrime) {\n    \
    \        primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n  \
    \  for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j:\
    \ number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] == a) {\n                    isMultiply =\
    \ true;\n                }\n            }\n        }\n    }\n    return isMultiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime = true;\n    let isMultiplyPrime\
    \ = false;\n    let primeNumbers = [];\n    let primeNumbersMultiplied = 1;\n\
    \    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++) {\n  \
    \          if (i % j === 0) {\n                isPrime = false;\n            \
    \    break;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        if (a % primeNumbers[i] === 0) {\n            primeNumbersMultiplied\
    \ *= primeNumbers[i];\n        }\n    }\n    if (primeNumbersMultiplied === a)\
    \ {\n        isMultiplyPrime = true;\n    }\n    return isMultiplyPrime;\n}\n\
    console.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    let isMultiplyPrime: boolean = false;\n    for (let i: number = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiplyPrime = true;\n                }\n        \
    \    }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = false;\n    let prime_numbers: number[] = [];\n   \
    \ let prime_numbers_multiply: number[] = [];\n    let is_multiply_prime: boolean\
    \ = false;\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime\
    \ = false;\n                break;\n            } else {\n                is_prime\
    \ = true;\n            }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n    \
    \                prime_numbers_multiply.push(prime_numbers[i], prime_numbers[j],\
    \ prime_numbers[k]);\n                    is_multiply_prime = true;\n        \
    \        }\n            }\n        }\n    }\n    if (is_multiply_prime) {\n  \
    \      return prime_numbers_multiply;\n    } else {\n        return is_multiply_prime;\n\
    \    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean =\
    \ false;\n    let prime_numbers: number[] = [];\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n    \
    \                result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < 100; i++) {\n        let isPrime: boolean = true;\n     \
    \   for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n   \
    \             isPrime = false;\n                break;\n            }\n      \
    \  }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n \
    \   }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_count = 0;\n\
    \    let prime_numbers_sum = 0;\n    let prime_numbers_sum_count = 0;\n    let\
    \ prime_numbers_sum_count_count = 0;\n    let prime_numbers_sum_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count = 0;\n    let prime_numbers_sum_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count = 0;\n \
    \   let prime_numbers_sum_count_count_count_count_count_count_count = 0;\n   \
    \ let prime_numbers_sum_count_count_count_count_count_count_count_count = 0;\n\
    \    let prime_numbers_sum_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let prime_numbers_sum", "    let primeNumbers: number[] = [];\n  \
    \  for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n       \
    \     primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0; i <\
    \ primeNumbers.length; i++) {\n        for (let j: number = i + 1; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = j + 1; k < primeNumbers.length; k++)\
    \ {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] ===\
    \ a) {\n                    return true;\n                }\n            }\n \
    \       }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime = [];\n    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n\
    \        for (let j = 2; j < i; j++) {\n            if (i % j == 0) {\n      \
    \          isPrime = false;\n                break;\n            }\n        }\n\
    \        if (isPrime) {\n            prime.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    let result = true;\n    for (let i = 0; i < prime.length;\
    \ i++) {\n        for (let j = i + 1; j < prime.length; j++) {\n            for\
    \ (let k = j + 1; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] == a) {\n                    result = true;\n                   \
    \ return result;\n                }\n                else {\n                \
    \    result = false;\n                }\n            }\n        }\n    }\n   \
    \ return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result =\
    \ false;\n    let primeNumbers = [];\n    for (let i = 2; i < a; i++) {\n    \
    \    if (isPrime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    result = true;\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\n", "    let i: number = 2;\n  \
    \  let j: number = 2;\n    let k: number = 2;\n    let x: number = a;\n    let\
    \ y: number = a;\n    let z: number = a;\n    let count: number = 0;\n    let\
    \ count2: number = 0;\n    let count3: number = 0;\n    let count4: number = 0;\n\
    \    let count5: number = 0;\n    let count6: number = 0;\n    let count7: number\
    \ = 0;\n    let count8: number = 0;\n    let count9: number = 0;\n    let count10:\
    \ number = 0;\n    let count11: number = 0;\n    let count12: number = 0;\n  \
    \  let count13: number = 0;\n    let count14: number = 0;\n    let count15: number\
    \ = 0;\n    let count16: number = 0;\n    let count17: number = 0;\n    let count18:\
    \ number = 0;\n    let count19: number = 0;\n    let count20: number = 0;\n  \
    \  let count21: number = 0;\n    let count22: number = 0;\n    let count23: number\
    \ = 0;\n    let count24: number = 0;\n    let count25: number = 0;\n    let count26:\
    \ number = 0;\n    let count27: number = 0;\n    let count28: number = 0;\n  \
    \  let count29: number = 0;\n    let count30: number = 0;\n    let count31: number\
    \ = 0;\n    let count32: number = 0;\n    let count33: number = 0;\n    let count34:\
    \ number = 0;\n    let count35: number = 0;\n    let count36: number = 0;\n  \
    \  let count37: number = 0;\n    let count38: number = 0;\n    let count39: number\
    \ = 0;\n    let count40: number = 0;\n    let count41: number = 0;\n    let count42:\
    \ number = 0;\n    let count43: number = 0;\n    let count44: number = 0;\n  \
    \  let count45: number = 0;\n    let count46: number = 0", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiply:\
    \ number[] = [];\n    let counter: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        primeNumbersMultiply.push(primeNumbers[i], primeNumbers[j], primeNumbers[k]);\n\
    \                    counter++;\n                }\n            }\n        }\n\
    \    }\n    if (counter === 1) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primes: number[] = [];\n \
    \   let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primes.push(i);\n        }\n        isPrime = true;\n    }\n\
    \    for (let i: number = 0; i < primes.length; i++) {\n        for (let j: number\
    \ = 0; j < primes.length; j++) {\n            for (let k: number = 0; k < primes.length;\
    \ k++) {\n                if (primes[i] * primes[j] * primes[k] == a) {\n    \
    \                return true;\n                }\n            }\n        }\n \
    \   }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let counter: number = 0;\n    for (let i:\
    \ number = 0; i < prime_numbers_length; i++) {\n        if (a % prime_numbers[i]\
    \ === 0) {\n            counter++;\n        }\n    }\n    if (counter === 3) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let arr = [];\n    for (let i = 2; i < a; i++) {\n        if (a % i == 0) {\n\
    \            arr.push(i);\n        }\n    }\n    let arr2 = [];\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        let count = 0;\n        for (let j =\
    \ 2; j < arr[i]; j++) {\n            if (arr[i] % j == 0) {\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            arr2.push(arr[i]);\n\
    \        }\n    }\n    if (arr2.length == 3) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(25));\nconsole.log(is_multiply_prime(49));\nconsole.log(is_multiply_prime(50));\n\
    \n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersMultiply:\
    \ number[] = [];\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiply.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ if (primeNumbersMultiply.indexOf(a) > -1) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_num: number[] = [];\n  \
    \  let result: boolean = false;\n    for (let i: number = 0; i < prime.length;\
    \ i++) {\n        if (a % prime[i] == 0) {\n            prime_num.push(prime[i]);\n\
    \        }\n    }\n    if (prime_num.length == 3) {\n        result = true;\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ is_prime = true;\n    let is_multiply_prime = false;\n    let prime_numbers:\
    \ number[] = [];\n    let prime_numbers_multiply: number[] = [];\n    let multiply_prime_number:\
    \ number = 1;\n    for (let i = 2; i < a; i++) {\n        for (let j = 2; j <\
    \ i; j++) {\n            if (i % j == 0) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n\
    \    for (let i = 0; i < prime_numbers.length; i++) {\n        for (let j = 0;\
    \ j < prime_numbers.length; j++) {\n            for (let k = 0; k < prime_numbers.length;\
    \ k++) {\n                multiply_prime_number = prime_numbers[i] * prime_numbers[j]\
    \ * prime_numbers[k];\n                if (multiply_prime_number == a) {\n   \
    \                 is_multiply_prime = true;\n                    prime_numbers_multiply.push(prime_numbers[i]);\n\
    \                    prime_numbers_multiply.push(prime_numbers[j]);\n        \
    \            prime_numbers_multiply.push(prime_numbers[k]);\n                \
    \    break;\n                }\n            }\n        }\n    }\n    if (is_multiply_prime)\
    \ {\n        console.log(`${a} = ${prime_numbers_multiply[0]} * ${prime_numbers_multiply[1]}\
    \ * ${prime_numbers_multiply[2]}`);\n    }\n    return is_multiply_prime;\n}\n\
    console.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(100));\nconsole.log(is_multiply_prime(120));\n\
    console.log(is_multiply_prime(150));\nconsole.log(is_multiply_prime(180));\nconsole",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let counter: number = 0;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        if (a % prime[i]\
    \ === 0) {\n            counter++;\n        }\n    }\n    if (counter === 3) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ==\
    \ 0) {\n            prime = false;\n            break;\n        }\n    }\n   \
    \ return prime;\n}\n", "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < prime.length; i++)\
    \ {\n        for (let j: number = 0; j < prime.length; j++) {\n            for\
    \ (let k: number = 0; k < prime.length; k++) {\n                if (prime[i] *\
    \ prime[j] * prime[k] == a) {\n                    result = true;\n          \
    \      }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n    \
    \    if (is_prime(i)) {\n            prime.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        for (let j: number = 0;\
    \ j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             return true;\n                }\n            }\n        }\n    }\n\
    \    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let x = true;\n\
    \    let y = 0;\n    let z = 0;\n    let w = 0;\n    for (let i = 2; i < a; i++)\
    \ {\n        if (a % i == 0) {\n            y = i;\n            break;\n     \
    \   }\n    }\n    for (let i = 2; i < a; i++) {\n        if (a % i == 0 && i !=\
    \ y) {\n            z = i;\n            break;\n        }\n    }\n    for (let\
    \ i = 2; i < a; i++) {\n        if (a % i == 0 && i != y && i != z) {\n      \
    \      w = i;\n            break;\n        }\n    }\n    if (y * z * w == a) {\n\
    \        return x;\n    }\n    else {\n        return !x;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n    \
    \    if (is_prime(i)) {\n            prime.push(i);\n        }\n    }\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < prime.length; i++)\
    \ {\n        for (let j: number = 0; j < prime.length; j++) {\n            for\
    \ (let k: number = 0; k < prime.length; k++) {\n                if (prime[i] *\
    \ prime[j] * prime[k] == a) {\n                    result = true;\n          \
    \      }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < 100; i++)\
    \ {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n        }\n\
    \    }\n    let prime_numbers_multiply: number[] = [];\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                prime_numbers_multiply.push(prime_numbers[i] * prime_numbers[j]\
    \ * prime_numbers[k]);\n            }\n        }\n    }\n    for (let i: number\
    \ = 0; i < prime_numbers_multiply.length; i++) {\n        if (prime_numbers_multiply[i]\
    \ === a) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    console.log(is_multiply_prime(30));\n", "    let arr: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n            arr.push(i);\n\
    \        }\n    }\n    if (arr.length == 2) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n    \
    \    let isPrime: boolean = true;\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                isPrime = false;\n       \
    \         break;\n            }\n        }\n        if (isPrime) {\n         \
    \   prime.push(i);\n        }\n    }\n    let result: boolean = false;\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        for (let j: number = 0;\
    \ j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime = true;\n    let isMultiply = false;\n    let primeNumbers: number[]\
    \ = [];\n    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    for\
    \ (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    isMultiply = true;\n                    break;\n        \
    \        }\n            }\n        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let prime_numbers: number[] = [];\n    let\
    \ prime_numbers_product: number = 1;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        is_prime = true;\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j == 0) {\n                is_prime = false;\n          \
    \  }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = i + 1; j < prime_numbers.length; j++) {\n  \
    \          for (let k: number = j + 1; k < prime_numbers.length; k++) {\n    \
    \            if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \        }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n  \
    \  return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiplyPrime: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let primeNumbersMultiplied: number = 1;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n \
    \           if (i % j === 0) {\n                isPrime = false;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             primeNumbersMultiplied = primeNumbers[i] * primeNumbers[j] * primeNumbers[k];\n\
    \                if (primeNumbersMultiplied === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: any = false;\n   \
    \ let prime: any = [];\n    for (let i: number = 2; i < 100; i++) {\n        if\
    \ (is_prime(i)) {\n            prime.push(i);\n        }\n    }\n    for (let\
    \ i: number = 0; i < prime.length; i++) {\n        for (let j: number = 0; j <\
    \ prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_count: number\
    \ = 0;\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ if (a % prime_numbers[i] == 0) {\n            prime_numbers_count++;\n     \
    \   }\n    }\n    if (prime_numbers_count == 3) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ===\
    \ 0) {\n            isPrime = false;\n            break;\n        }\n    }\n \
    \   return isPrime;\n}", "    let isPrime = true;\n    for (let i = 2; i < a;\
    \ i++) {\n        if (a % i === 0) {\n            isPrime = false;\n         \
    \   break;\n        }\n    }\n    if (isPrime) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = false;\n    for (let i = 2; i < a; i++) {\n        if (a % i\
    \ == 0) {\n            isPrime = true;\n        }\n    }\n    return isPrime;\n\
    }\n", "    if (a % 2 === 0) {\n        if (a % 3 === 0) {\n            if (a %\
    \ 5 === 0) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let arr: number[]\
    \ = [];\n    let result: boolean = false;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (a % i == 0) {\n            arr.push(i);\n        }\n   \
    \ }\n    if (arr.length == 2) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    if (a === 0) {\n        return\
    \ false;\n    }\n    if (a === 1) {\n        return true;\n    }\n    for (let\
    \ i = 2; i < a; i++) {\n        if (a % i === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let prime_numbers: number[] =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let prime_factors: number[] = [];\n    let i: number\
    \ = 0;\n    while (a > 1) {\n        if (a % prime_numbers[i] == 0) {\n      \
    \      prime_factors.push(prime_numbers[i]);\n            a = a / prime_numbers[i];\n\
    \        }\n        else {\n            i++;\n        }\n    }\n    if (prime_factors.length\
    \ == 3) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n\
    \    let prime_numbers_counter: number = 0;\n    let is_multiply_prime: boolean\
    \ = false;\n    let i: number = 0;\n    while (i < prime_numbers_length) {\n \
    \       if (a % prime_numbers[i] == 0) {\n            prime_numbers_counter++;\n\
    \            a = a / prime_numbers[i];\n            i = 0;\n        }\n      \
    \  else {\n            i++;\n        }\n    }\n    if (prime_numbers_counter ==\
    \ 3) {\n        is_multiply_prime = true;\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(", "    let prime: number[] =\
    \ [];\n    let prime_multiply: number[] = [];\n    let i: number;\n    let j:\
    \ number;\n    let k: number;\n    let l: number;\n    let m: number;\n    let\
    \ n: number;\n    let o: number;\n    let p: number;\n    let q: number;\n   \
    \ let r: number;\n    let s: number;\n    let t: number;\n    let u: number;\n\
    \    let v: number;\n    let w: number;\n    let x: number;\n    let y: number;\n\
    \    let z: number;\n    let aa: number;\n    let ab: number;\n    let ac: number;\n\
    \    let ad: number;\n    let ae: number;\n    let af: number;\n    let ag: number;\n\
    \    let ah: number;\n    let ai: number;\n    let aj: number;\n    let ak: number;\n\
    \    let al: number;\n    let am: number;\n    let an: number;\n    let ao: number;\n\
    \    let ap: number;\n    let aq: number;\n    let ar: number;\n    let as: number;\n\
    \    let at: number;\n    let au: number;\n    let av: number;\n    let aw: number;\n\
    \    let ax: number;\n    let ay: number;\n    let az: number;\n    let ba: number;\n\
    \    let bb: number;\n    let bc: number;\n    let bd: number;\n    let be: number;\n\
    \    let bf: number;\n    let bg: number;\n    let bh: number;\n    let bi: number;\n\
    \    let bj: number;\n    let bk: number;\n    let bl: number;\n    let bm: number;\n\
    \    let bn: number;\n    let bo: number;\n    let bp: number;\n    let bq: number;\n\
    \    let br: number;\n    let bs: number;\n    let bt: number;\n    let bu: number;\n\
    \    let bv: number;\n    let bw: number;", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength:\
    \ number = primeNumbers.length;\n    let counter: number = 0;\n    for (let i:\
    \ number = 0; i < primeNumbersLength; i++) {\n        if (a % primeNumbers[i]\
    \ === 0) {\n            counter++;\n        }\n    }\n    if (counter === 3) {\n\
    \        result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplied: number[] = [];\n    for (let i: number = 2; i < 100;\
    \ i++) {\n        if (isPrime(i)) {\n            primeNumbers.push(i);\n     \
    \   }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n  \
    \      for (let j: number = 0; j < primeNumbers.length; j++) {\n            for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiplied.length; i++) {\n        if\
    \ (primeNumbersMultiplied[i] === a) {\n            result = true;\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    let result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n \
    \       let is_prime: boolean = true;\n        for (let j: number = 2; j < i;\
    \ j++) {\n            if (i % j == 0) {\n                is_prime = false;\n \
    \               break;\n            }\n        }\n        if (is_prime) {\n  \
    \          prime_numbers.push(i);\n        }\n    }\n    let is_multiply_prime:\
    \ boolean = false;\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n    \
    \                is_multiply_prime = true;\n                    break;\n     \
    \           }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n\
    \    for (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j\
    \ < i; j++) {\n            if (i % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] == a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let i: number = 2;\n    let count:\
    \ number = 0;\n    while (i <= a) {\n        if (a % i == 0) {\n            a\
    \ = a / i;\n            count++;\n        }\n        else {\n            i++;\n\
    \        }\n    }\n    if (count == 3) {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \      }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n   \
    \ for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            prime.push(i);\n        }\n    }\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n      \
    \  if (a % i === 0) {\n            isPrime = false;\n            break;\n    \
    \    }\n    }\n    if (isPrime) {\n        return true;\n    } else {\n      \
    \  return false;\n    }\n}\n", "    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiply: number[] = [];\n    let isPrime: boolean = true;\n   \
    \ for (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i;\
    \ j++) {\n            if (i % j == 0) {\n                isPrime = false;\n  \
    \          }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n    \
    \                primeNumbersMultiply.push(primeNumbers[i], primeNumbers[j], primeNumbers[k]);\n\
    \                }\n            }\n        }\n    }\n    if (primeNumbersMultiply.length\
    \ == 0) {\n        return false;\n    } else {\n        return primeNumbersMultiply;\n\
    \    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[]\
    \ = [];\n    let isPrime: boolean = true;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j\
    \ === 0) {\n                isPrime = false;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    let isMultiplyPrime: boolean = false;\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiplyPrime = true;\n                }\n        \
    \    }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let isMultiply = false;\n    let primeNumbers = [];\n\
    \    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++) {\n  \
    \          if (i % j === 0) {\n                isPrime = false;\n            \
    \    break;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let isMultiply = false;\n    let counter = 0;\n  \
    \  let primeNumbers = [];\n    for (let i = 2; i < a; i++) {\n        for (let\
    \ j = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    isMultiply = true;\n                    counter++;\n\
    \                }\n            }\n        }\n    }\n    if (counter > 0) {\n\
    \        return isMultiply;\n    } else {\n        return isMultiply;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime = false;\n    let\
    \ prime_numbers = [];\n    for (let i = 2; i < a; i++) {\n        for (let j =\
    \ 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime =\
    \ false;\n                break;\n            } else {\n                is_prime\
    \ = true;\n            }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    let is_multiply = false;\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers.length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let isMultiplyPrime: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    let primeNumbersMultiplied: number = 1;\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             primeNumbersMultiplied = primeNumbers[i] * primeNumbers[j] * primeNumbers[k];\n\
    \                if (primeNumbersMultiplied === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\n", "    let isPrime = true;\n    let primeNumbers = [];\n    for (let i = 2;\
    \ i < a; i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j\
    \ === 0) {\n                isPrime = false;\n                break;\n       \
    \     }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    let isMultiplyPrime = false;\n\
    \    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    isMultiplyPrime = true;\n                }\n \
    \           }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiply: number[] = [];\n    let primeNumbersMultiplyString: string\
    \ = \"\";\n    let primeNumbersString: string = \"\";\n    let aString: string\
    \ = a.toString();\n    let aStringLength: number = aString.length;\n    let aStringLengthMinusOne:\
    \ number = aStringLength - 1;\n    let aStringLengthMinusTwo: number = aStringLength\
    \ - 2;\n    let aStringLengthMinusThree: number = aStringLength - 3;\n    let\
    \ aStringLengthMinusFour: number = aStringLength - 4;\n    let aStringLengthMinusFive:\
    \ number = aStringLength - 5;\n    let aStringLengthMinusSix: number = aStringLength\
    \ - 6;\n    let aStringLengthMinusSeven: number = aStringLength - 7;\n    let\
    \ aStringLengthMinusEight: number = aStringLength - 8;\n    let aStringLengthMinusNine:\
    \ number = aStringLength - 9;\n    let aStringLengthMinusTen: number = aStringLength\
    \ - 10;\n    let aStringLengthMinusEleven: number = aStringLength - 11;\n    let\
    \ aStringLengthMinusTwelve: number = aStringLength - 12;\n    let aStringLengthMinusThirteen:\
    \ number = aStringLength - 13;\n    let aStringLengthMinusFourteen: number = aStringLength\
    \ - 14;\n    let aStringLengthMinusFifteen: number = aStringLength - 15;\n   \
    \ let aStringLengthMinusSixteen: number = aStringLength - 16;\n    let aStringLengthMinusSeventeen:\
    \ number = aStringLength - 17;\n    let aStringLengthMinusEighteen: number = aStringLength\
    \ - 18;\n    let aStringLengthMinusNineteen: number = aStringLength - 19;\n  \
    \  let aStringLengthMinusTwenty: number = aStringLength - 20;\n    let aStringLengthMinusTwentyOne:\
    \ number = aStringLength - 21;\n    let aStringLengthMinusTwentyTwo: number =\
    \ aStringLength - 22;\n    let aStringLengthMinusTwentyThree: number = aStringLength\
    \ - 23;\n", "    let prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_count\
    \ = 0;\n    for (let i = 0; i < prime_numbers.length; i++) {\n        if (a %\
    \ prime_numbers[i] == 0) {\n            prime_numbers_count++;\n        }\n  \
    \  }\n    if (prime_numbers_count == 3) {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(60));\nconsole.log(is_multiply_prime(70));\n\
    console.log(is_multiply_prime(80));\nconsole.log(is_multiply_prime(90));\nconsole.log(is_multiply_prime(100));\n\
    console.log(is_multiply_prime(110));\nconsole.log(is_multiply_prime(120));\nconsole.log(is_multiply_prime(130));\n\
    console.log(is_multiply_prime(140));\nconsole.log(is_multiply_prime(150));\nconsole.log(is_multiply_prime(160));\n\
    console.log(is_multiply_prime(170));\nconsole.log(is_multiply_prime(180));\nconsole.log(is_multiply_prime(190));\n\
    console.log(is_multiply_prime(200));\nconsole.log(is_multiply_prime(210));\nconsole.log(is_multiply_prime(220));\n\
    console.log(is_multiply_prime(230));\nconsole.log(is_multiply_prime(240));\nconsole.log(is_multiply_prime(250));\n\
    console.log(is_", "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n\
    \        if (a % i === 0) {\n            isPrime = false;\n            break;\n\
    \        }\n    }\n    return isPrime;\n}", "    let prime: number[] = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    let result: boolean = false;\n    for (let i: number = 0;\
    \ i < prime.length; i++) {\n        for (let j: number = 0; j < prime.length;\
    \ j++) {\n            for (let k: number = 0; k < prime.length; k++) {\n     \
    \           if (prime[i] * prime[j] * prime[k] == a) {\n                    result\
    \ = true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: any = [];\n    let\
    \ is_prime: any = [];\n    let is_multiply: any = [];\n    for (let i = 2; i <\
    \ a; i++) {\n        if (a % i == 0) {\n            result.push(i);\n        }\n\
    \    }\n    for (let i = 0; i < result.length; i++) {\n        let count: number\
    \ = 0;\n        for (let j = 2; j < result[i]; j++) {\n            if (result[i]\
    \ % j == 0) {\n                count++;\n            }\n        }\n        if\
    \ (count == 0) {\n            is_prime.push(result[i]);\n        }\n    }\n  \
    \  for (let i = 0; i < is_prime.length; i++) {\n        for (let j = i + 1; j\
    \ < is_prime.length; j++) {\n            for (let k = j + 1; k < is_prime.length;\
    \ k++) {\n                if (is_prime[i] * is_prime[j] * is_prime[k] == a) {\n\
    \                    is_multiply.push(is_prime[i], is_prime[j], is_prime[k]);\n\
    \                }\n            }\n        }\n    }\n    if (is_multiply.length\
    \ > 0) {\n        return true;\n    }\n    else {\n        return false;\n   \
    \ }\n}\nconsole.log(is_multiply_prime(30));\n", "    let result = false;\n   \
    \ let primeNumbers = [];\n    for (let i = 2; i < a; i++) {\n        if (isPrime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    result = true;\n                }\n            }\n      \
    \  }\n    }\n    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let arr = [];\n    for (let i = 0; i <\
    \ prime.length; i++) {\n        if (a % prime[i] == 0) {\n            arr.push(prime[i]);\n\
    \        }\n    }\n    if (arr.length == 3) {\n        return true;\n    }\n \
    \   else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ == a) {\n                    result = true;\n                }\n           \
    \ }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [];\n    let is_prime: boolean = true;\n    let\
    \ is_multiply_prime: boolean = false;\n    let result: number = 0;\n    for (let\
    \ i: number = 2; i < 100; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                is_prime = false;\n      \
    \          break;\n            }\n        }\n        if (is_prime) {\n       \
    \     prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n   \
    \ for (let i: number = 0; i < prime_numbers.length; i++) {\n        for (let j:\
    \ number = 0; j < prime_numbers.length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers.length; k++) {\n                result = prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k];\n                if (result == a) {\n\
    \                    is_multiply_prime = true;\n                    break;\n \
    \               }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime = true;\n    let i =\
    \ 2;\n    while (i < a) {\n        if (a % i == 0) {\n            prime = false;\n\
    \            break;\n        }\n        i++;\n    }\n    return prime;\n}\n",
  "    let isPrime = true;\n    let isMultiply = false;\n    let primeNumbers = [];\n\
    \    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++) {\n  \
    \          if (i % j === 0) {\n                isPrime = false;\n            \
    \    break;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let count: number = 0;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i == 0) {\n            count++;\n      \
    \  }\n    }\n    if (count == 3) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[]\
    \ = [];\n    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean =\
    \ false;\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime =\
    \ false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = i + 1; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = j + 1; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    isMultiplyPrime\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let count: number = 0;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i == 0) {\n            count++;\n      \
    \  }\n    }\n    if (count == 3) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[]\
    \ = [];\n    let result: boolean = false;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n    \
    \    }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n \
    \       for (let j: number = 0; j < primeNumbers.length; j++) {\n            for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let i: number = 2;\n    let prime: number = 1;\n    let count: number = 0;\n\
    \    while (i <= a) {\n        if (a % i == 0) {\n            let j: number =\
    \ 2;\n            let isPrime: boolean = true;\n            while (j < i) {\n\
    \                if (i % j == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n            if (isPrime) {\n                prime = prime * i;\n       \
    \         count++;\n            }\n        }\n        i++;\n    }\n    if (count\
    \ == 3 && prime == a) {\n        return true;\n    }\n    else {\n        return\
    \ false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiply: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let primeNumbersMultiply: number[] = [];\n    let primeNumbersMultiplyString:\
    \ string = \"\";\n    let primeNumbersString: string = \"\";\n    let primeNumbersMultiplyString2:\
    \ string = \"\";\n    let primeNumbersString2: string = \"\";\n    let primeNumbersMultiplyString3:\
    \ string = \"\";\n    let primeNumbersString3: string = \"\";\n    let primeNumbersMultiplyString4:\
    \ string = \"\";\n    let primeNumbersString4: string = \"\";\n    let primeNumbersMultiplyString5:\
    \ string = \"\";\n    let primeNumbersString5: string = \"\";\n    let primeNumbersMultiplyString6:\
    \ string = \"\";\n    let primeNumbersString6: string = \"\";\n    let primeNumbersMultiplyString7:\
    \ string = \"\";\n    let primeNumbersString7: string = \"\";\n    let primeNumbersMultiplyString8:\
    \ string = \"\";\n    let primeNumbersString8: string = \"\";\n    let primeNumbersMultiplyString9:\
    \ string = \"\";\n    let primeNumbersString9: string = \"\";\n    let primeNumbersMultiplyString10:\
    \ string = \"\";\n    let primeNumbersString10: string = \"\";\n    let primeNumbersMultiplyString11:\
    \ string = \"\";\n    let primeNumbersString11: string = \"\";\n    let primeNumbersMultiplyString12:\
    \ string = \"\";\n    let primeNumbersString12: string = \"\";\n    let primeNumbersMultiplyString13:\
    \ string = \"\";\n    let primeNumbersString13: string = \"\";\n    let primeNumbersMultiplyString14:\
    \ string = \"\";\n    let primeNumbersString14: string = \"\";\n    let primeNumbersMultiplyString15:\
    \ string = \"\";\n    let primeNumbersString15: string = \"\";\n    let primeNumbersMultiplyString16:\
    \ string = \"\";\n    let primeNumbersString16: string = \"\";\n    let primeNumbersMultiplyString17:\
    \ string = \"\";\n    let primeNumbersString17: string = \"\";\n    let primeNumbersMultiplyString18",
  "    let primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \      }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    let primeNumbersMultiply: number[]\
    \ = [];\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n       \
    \ for (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiply.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiply.length; i++) {\n        if\
    \ (primeNumbersMultiply[i] === a) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime\
    \ = true;\n    let prime_num = [];\n    for (let i = 2; i < a; i++) {\n      \
    \  for (let j = 2; j < i; j++) {\n            if (i % j == 0) {\n            \
    \    prime = false;\n                break;\n            }\n        }\n      \
    \  if (prime) {\n            prime_num.push(i);\n        }\n        prime = true;\n\
    \    }\n    for (let i = 0; i < prime_num.length; i++) {\n        for (let j =\
    \ 0; j < prime_num.length; j++) {\n            for (let k = 0; k < prime_num.length;\
    \ k++) {\n                if (prime_num[i] * prime_num[j] * prime_num[k] == a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime",
  "    let is_prime = true;\n    let prime_numbers = [];\n    for (let i = 2; i <\
    \ a; i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n                break;\n            }\n\
    \        }\n        if (is_prime) {\n            prime_numbers.push(i);\n    \
    \    }\n        is_prime = true;\n    }\n    let result = false;\n    for (let\
    \ i = 0; i < prime_numbers.length; i++) {\n        for (let j = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k = 0; k < prime_numbers.length; k++) {\n     \
    \           if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n\
    \                    result = true;\n                }\n            }\n      \
    \  }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let prime: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n   \
    \     if (is_prime(i)) {\n            prime.push(i);\n        }\n    }\n    let\
    \ count: number = 0;\n    for (let i: number = 0; i < prime.length; i++) {\n \
    \       for (let j: number = 0; j < prime.length; j++) {\n            for (let\
    \ k: number = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] == a) {\n                    count++;\n                }\n      \
    \      }\n        }\n    }\n    if (count > 0) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ===\
    \ 0) {\n            isPrime = false;\n            break;\n        }\n    }\n \
    \   if (isPrime) {\n        return true;\n    }\n    else {\n        return false;\n\
    \    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean =\
    \ false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for (let i = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n \
    \                   result = true;\n                }\n            }\n       \
    \ }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \   let arr: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[]\
    \ = [];\n    let arr4: number[] = [];\n    let arr5: number[] = [];\n    let arr6:\
    \ number[] = [];\n    let arr7: number[] = [];\n    let arr8: number[] = [];\n\
    \    let arr9: number[] = [];\n    let arr10: number[] = [];\n    let arr11: number[]\
    \ = [];\n    let arr12: number[] = [];\n    let arr13: number[] = [];\n    let\
    \ arr14: number[] = [];\n    let arr15: number[] = [];\n    let arr16: number[]\
    \ = [];\n    let arr17: number[] = [];\n    let arr18: number[] = [];\n    let\
    \ arr19: number[] = [];\n    let arr20: number[] = [];\n    let arr21: number[]\
    \ = [];\n    let arr22: number[] = [];\n    let arr23: number[] = [];\n    let\
    \ arr24: number[] = [];\n    let arr25: number[] = [];\n    let arr26: number[]\
    \ = [];\n    let arr27: number[] = [];\n    let arr28: number[] = [];\n    let\
    \ arr29: number[] = [];\n    let arr30: number[] = [];\n    let arr31: number[]\
    \ = [];\n    let arr32: number[] = [];\n    let arr33: number[] = [];\n    let\
    \ arr34: number[] = [];\n    let arr35: number[] = [];\n    let arr36: number[]\
    \ = [];\n    let arr37: number[] = [];\n    let arr38: number[] = [];\n    let\
    \ arr39: number[] = [];\n    let arr40: number[] = [];\n    let arr41: number[]\
    \ = [];\n    let arr42: number[] = [];\n    let arr43: number[] = [];\n    let\
    \ arr44: number[] = [];\n    let arr45: number[] = [];\n    let arr46: number[]\
    \ = [];\n    let arr47: number[] = [];\n    let arr48: number[] = [];\n    let\
    \ arr49: number[] = [];\n    let arr50: number[] = [];\n    let arr51: number[]\
    \ = [];\n    let", "    let arr: number[] = [];\n    let count: number = 0;\n\
    \    let result: boolean = false;\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (a % i == 0) {\n            arr.push(i);\n        }\n    }\n    for\
    \ (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = 2;\
    \ j < arr[i]; j++) {\n            if (arr[i] % j == 0) {\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            result = true;\n\
    \        }\n        else {\n            result = false;\n        }\n    }\n  \
    \  return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n\
    \    let prime_numbers_counter: number = 0;\n    let prime_numbers_multiplication:\
    \ number = 1;\n    let is_multiply_prime: boolean = false;\n    for (let i: number\
    \ = 0; i < prime_numbers_length; i++) {\n        if (a % prime_numbers[i] == 0)\
    \ {\n            prime_numbers_counter++;\n            prime_numbers_multiplication\
    \ *= prime_numbers[i];\n        }\n    }\n    if (prime_numbers_counter == 3 &&\
    \ prime_numbers_multiplication == a) {\n        is_multiply_prime = true;\n  \
    \  }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(31));\nconsole.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\n\
    console.log(is_multiply_prime(34));\nconsole.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\n\
    console.log(is_multiply_prime(37));\nconsole.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\n\
    console.log(is_multiply_prime(40));\nconsole.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\n\
    console.log(is_multiply_prime(43));\nconsole.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\n\
    console.log(is_multiply_prime(46));\nconsole.log(is_", "    let prime: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for (let i: number\
    \ = 0; i < prime.length; i++) {\n        for (let j: number = 0; j < prime.length;\
    \ j++) {\n            for (let k: number = 0; k < prime.length; k++) {\n     \
    \           if (prime[i] * prime[j] * prime[k] == a) {\n                    result\
    \ = true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let prime_numbers_length = prime_numbers.length;\n    let prime_numbers_counter\
    \ = 0;\n    let prime_numbers_multiplication = 1;\n    let prime_numbers_multiplication_counter\
    \ = 0;\n    let prime_numbers_multiplication_array = [];\n    for (let i = 0;\
    \ i < prime_numbers_length; i++) {\n        if (a % prime_numbers[i] == 0) {\n\
    \            prime_numbers_counter++;\n            prime_numbers_multiplication_array.push(prime_numbers[i]);\n\
    \            prime_numbers_multiplication *= prime_numbers[i];\n            prime_numbers_multiplication_counter++;\n\
    \        }\n    }\n    if (prime_numbers_counter == 3 && prime_numbers_multiplication\
    \ == a) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersCounter: number = 0;\n\
    \    let primeNumbersMultiplication: number = 1;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \            primeNumbersCounter++;\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbersCounter; i++) {\n        primeNumbersMultiplication *=\
    \ primeNumbers[i];\n        if (primeNumbersMultiplication === a) {\n        \
    \    result = true;\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime = [];\n    for (let i = 2; i < a; i++) {\n        if (is_prime(i)) {\n\
    \            prime.push(i);\n        }\n    }\n    let result = [];\n    for (let\
    \ i = 0; i < prime.length; i++) {\n        for (let j = 0; j < prime.length; j++)\
    \ {\n            for (let k = 0; k < prime.length; k++) {\n                if\
    \ (prime[i] * prime[j] * prime[k] == a) {\n                    result.push(prime[i],\
    \ prime[j], prime[k]);\n                }\n            }\n        }\n    }\n \
    \   if (result.length > 0) {\n        return true;\n    }\n    else {\n      \
    \  return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        if (a % prime[i] == 0)\
    \ {\n            result = true;\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime\
    \ = true;\n    let isMultiplyPrime = false;\n    let counter = 0;\n    for (let\
    \ i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++) {\n            if\
    \ (i % j == 0) {\n                isPrime = false;\n                break;\n \
    \           }\n        }\n        if (isPrime) {\n            if (a % i == 0)\
    \ {\n                counter++;\n            }\n        }\n        isPrime = true;\n\
    \    }\n    if (counter == 3) {\n        isMultiplyPrime = true;\n    }\n    return\
    \ isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime\
    \ = true;\n    let isMultiplyPrime = false;\n    let primeNumbers: number[] =\
    \ [];\n    let primeNumbersMultiply: number[] = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            primeNumbers.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiplyPrime\
    \ = true;\n                    primeNumbersMultiply.push(primeNumbers[i]);\n \
    \                   primeNumbersMultiply.push(primeNumbers[j]);\n            \
    \        primeNumbersMultiply.push(primeNumbers[k]);\n                }\n    \
    \        }\n        }\n    }\n    if (isMultiplyPrime) {\n        return primeNumbersMultiply;\n\
    \    } else {\n        return isMultiplyPrime;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let isPrime: boolean = true;\n    let primeNumbers:\
    \ number[] = [];\n    let primeNumbersMultiply: number[] = [];\n    let primeNumbersMultiplyResult:\
    \ number = 1;\n    let primeNumbersMultiplyResultString: string = \"\";\n    let\
    \ primeNumbersMultiplyResultStringArray: string[] = [];\n    let primeNumbersMultiplyResultStringArrayLength:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter2: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter3: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter4: number = 0;\n  \
    \  let primeNumbersMultiplyResultStringArrayLengthCounter5: number = 0;\n    let\
    \ primeNumbersMultiplyResultStringArrayLengthCounter6: number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter7:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter8: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter9: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter10: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter11: number = 0;\n \
    \   let primeNumbersMultiplyResultStringArrayLengthCounter12: number = 0;\n  \
    \  let primeNumbersMultiplyResultStringArrayLengthCounter13: number = 0;\n   \
    \ let primeNumbersMultiplyResultStringArrayLengthCounter14: number = 0;\n    let\
    \ primeNumbersMultiplyResultStringArrayLengthCounter15: number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter16:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter17: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter18: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter19: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter20: number = 0;\n \
    \   let primeNumbersMultiplyResultStringArrayLengthCounter21: number = 0;\n  \
    \  let primeNumbersMultiplyResultString", "    let result: boolean = false;\n\
    \    let primeNumbers: any[] = [];\n    let primeNumbersMultiplied: any[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n     \
    \       primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = i + 1; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = j + 1; k < primeNumbers.length; k++)\
    \ {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] ===\
    \ a) {\n                    primeNumbersMultiplied.push(primeNumbers[i], primeNumbers[j],\
    \ primeNumbers[k]);\n                    result = true;\n                }\n \
    \           }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_num: number[] = [];\n    let\
    \ result: boolean = false;\n    for (let i: number = 0; i < prime.length; i++)\
    \ {\n        if (a % prime[i] == 0) {\n            prime_num.push(prime[i]);\n\
    \        }\n    }\n    if (prime_num.length == 3) {\n        result = true;\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    let result:\
    \ boolean = false;\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n             \
    \   isPrime = false;\n                break;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    if (a ===\
    \ 1) {\n        return false;\n    }\n    for (let i = 2; i < a; i++) {\n    \
    \    if (a % i === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let isPrime = true;\n    let isMultiply = false;\n    let\
    \ primeNumbers = [];\n    let multiplyNumbers = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        if (isPrime) {\n            primeNumbers.push(i);\n      \
    \  }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    multiplyNumbers.push(primeNumbers[i],\
    \ primeNumbers[j], primeNumbers[k]);\n                    isMultiply = true;\n\
    \                }\n            }\n        }\n    }\n    if (isMultiply) {\n \
    \       return multiplyNumbers;\n    } else {\n        return isMultiply;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime = (num: number)\
    \ => {\n        for (let i = 2; i < num; i++) {\n            if (num % i === 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    let prime_numbers: number[] = [];\n    for (let i = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n        }\n\
    \    }\n    let result: boolean = false;\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers.length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    result =\
    \ true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime = true;\n    let\
    \ is_multiply_prime = false;\n    let prime_numbers = [];\n    for (let i = 2;\
    \ i < a; i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j\
    \ == 0) {\n                is_prime = false;\n                break;\n       \
    \     }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n        is_prime = true;\n    }\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers.length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ counter: number = 0;\n    let primeNumbers: number[] = [];\n    for (let i:\
    \ number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n \
    \           if (i % j === 0) {\n                isPrime = false;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 counter++;\n                }\n            }\n        }\n  \
    \  }\n    if (counter > 0) {\n        isMultiply = true;\n    }\n    return isMultiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime: number[] = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let result: boolean = false;\n    for (let i: number = 0; i <\
    \ prime.length; i++) {\n        for (let j: number = 0; j < prime.length; j++)\
    \ {\n            for (let k: number = 0; k < prime.length; k++) {\n          \
    \      if (prime[i] * prime[j] * prime[k] == a) {\n                    result\
    \ = true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersMultiply: number[]\
    \ = [];\n    let primeNumbersMultiplyResult: number = 1;\n    let primeNumbersMultiplyResultString:\
    \ string = '';\n    let primeNumbersMultiplyResultStringArray: string[] = [];\n\
    \    let primeNumbersMultiplyResultStringArrayLength: number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter2: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter3: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter4: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter5: number = 0;\n  \
    \  let primeNumbersMultiplyResultStringArrayLengthCounter6: number = 0;\n    let\
    \ primeNumbersMultiplyResultStringArrayLengthCounter7: number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter8:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter9: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter10: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter11: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter12: number = 0;\n \
    \   let primeNumbersMultiplyResultStringArrayLengthCounter13: number = 0;\n  \
    \  let primeNumbersMultiplyResultStringArrayLengthCounter14: number = 0;\n   \
    \ let primeNumbersMultiplyResultStringArrayLengthCounter15: number = 0;\n    let\
    \ primeNumbersMultiplyResultStringArrayLengthCounter16: number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter17:\
    \ number = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter18: number\
    \ = 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter19: number =\
    \ 0;\n    let primeNumbersMultiplyResultStringArrayLengthCounter20: number = 0;\n\
    \    let primeNumbersMultiplyResultStringArrayLengthCounter21: number = 0;\n \
    \   let primeNumbersMultiplyResultStringArrayLengthCounter22: number = 0;\n",
  "    let prime: number[] = [];\n    let isPrime: boolean = true;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n \
    \           if (i % j == 0) {\n                isPrime = false;\n            \
    \    break;\n            }\n        }\n        if (isPrime) {\n            prime.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    let result: boolean = false;\n\
    \    let count: number = 0;\n    let num: number = 0;\n    for (let i: number\
    \ = 0; i < prime.length; i++) {\n        for (let j: number = 0; j < prime.length;\
    \ j++) {\n            for (let k: number = 0; k < prime.length; k++) {\n     \
    \           num = prime[i] * prime[j] * prime[k];\n                if (num ==\
    \ a) {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    if (count > 0) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime: any = [];\n\
    \    let isPrime: boolean = true;\n    for (let i: number = 2; i <= a; i++) {\n\
    \        for (let j: number = 2; j <= i; j++) {\n            if (i !== j && i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            prime.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    let result: any = [];\n    for (let i: number = 0; i < prime.length;\
    \ i++) {\n        for (let j: number = 0; j < prime.length; j++) {\n         \
    \   for (let k: number = 0; k < prime.length; k++) {\n                if (prime[i]\
    \ * prime[j] * prime[k] === a) {\n                    result.push(prime[i]);\n\
    \                    result.push(prime[j]);\n                    result.push(prime[k]);\n\
    \                }\n            }\n        }\n    }\n    if (result.length > 0)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let is_multiply_prime: boolean = false;\n\
    \    for (let i: number = 0; i < prime_numbers_length; i++) {\n        for (let\
    \ j: number = 0; j < prime_numbers_length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers_length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\n\nconsole.log(is_multiply_prime(30));\n", "    let isPrime = true;\n    let\
    \ isMultiply = false;\n    let primeNumbers = [];\n    let primeNumbersMultiply\
    \ = [];\n    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    for\
    \ (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    isMultiply = true;\n                    primeNumbersMultiply.push(primeNumbers[i],\
    \ primeNumbers[j], primeNumbers[k]);\n                    break;\n           \
    \     }\n            }\n        }\n    }\n    if (isMultiply) {\n        return\
    \ primeNumbersMultiply;\n    } else {\n        return isMultiply;\n    }\n}\n\
    console.log(is_multiply_prime(30));\n", "    let is_prime = true;\n    let is_multiply_prime\
    \ = false;\n    let prime_numbers: number[] = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                is_prime = false;\n                break;\n            }\n  \
    \      }\n        if (is_prime) {\n            prime_numbers.push(i);\n      \
    \  }\n        is_prime = true;\n    }\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers.length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [];\n    let isPrime: boolean = true;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if\
    \ (i % j === 0) {\n                isPrime = false;\n            }\n        }\n\
    \        if (isPrime) {\n            primeNumbers.push(i);\n        }\n      \
    \  isPrime = true;\n    }\n    let isMultiplyPrime: boolean = false;\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    isMultiplyPrime = true;\n  \
    \              }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let prime_numbers_length = prime_numbers.length;\n    let counter\
    \ = 0;\n    for (let i = 0; i < prime_numbers_length; i++) {\n        if (a %\
    \ prime_numbers[i] === 0) {\n            counter++;\n        }\n    }\n    if\
    \ (counter === 3) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime = true;\n\
    \    let arr = [];\n    for (let i = 2; i < a; i++) {\n        if (a % i == 0)\
    \ {\n            isPrime = true;\n            for (let j = 2; j < i; j++) {\n\
    \                if (i % j == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n            }\n            if (isPrime)\
    \ {\n                arr.push(i);\n            }\n        }\n    }\n    if (arr.length\
    \ == 3) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[]\
    \ = [];\n    let counter: number = 0;\n    let isPrime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                isPrime = false;\n       \
    \     }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n    \
    \                counter++;\n                }\n            }\n        }\n   \
    \ }\n    if (counter > 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime =\
    \ true;\n    let counter = 0;\n    for (let i = 2; i < a; i++) {\n        if (a\
    \ % i == 0) {\n            isPrime = false;\n            break;\n        }\n \
    \   }\n    if (isPrime) {\n        counter++;\n    }\n    return counter;\n}\n\
    console.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n  \
    \  let isMultiplyPrime: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    let primeNumbersMultiplied: number = 1;\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             primeNumbersMultiplied = primeNumbers[i] * primeNumbers[j] * primeNumbers[k];\n\
    \                if (primeNumbersMultiplied === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\n\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime", "    let\
    \ prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length = prime_numbers.length;\n\
    \    let result: any = [];\n    for (let i = 0; i < prime_numbers_length; i++)\
    \ {\n        if (a % prime_numbers[i] === 0) {\n            result.push(prime_numbers[i]);\n\
    \            a = a / prime_numbers[i];\n            i = -1;\n        }\n    }\n\
    \    if (result.length === 3) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime = [];\n\
    \    let result = [];\n    for (let i = 2; i <= a; i++) {\n        if (is_prime(i))\
    \ {\n            prime.push(i);\n        }\n    }\n    for (let i = 0; i < prime.length;\
    \ i++) {\n        for (let j = 0; j < prime.length; j++) {\n            for (let\
    \ k = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j] * prime[k]\
    \ === a) {\n                    result.push(prime[i], prime[j], prime[k]);\n \
    \               }\n            }\n        }\n    }\n    if (result.length ===\
    \ 0) {\n        return false;\n    } else {\n        return result;\n    }\n}\n\
    console.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n     \
    \       primeNumbers.push(i);\n        }\n    }\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n\n\
    console.log(is_multiply_prime(30));\n", "    let i: number;\n    let j: number;\n\
    \    let k: number;\n    let count: number = 0;\n    for (i = 2; i < a; i++) {\n\
    \        if (a % i == 0) {\n            for (j = 2; j < i; j++) {\n          \
    \      if (i % j == 0) {\n                    count++;\n                }\n  \
    \          }\n            if (count == 0) {\n                for (k = 2; k < a;\
    \ k++) {\n                    if (a % k == 0) {\n                        for (j\
    \ = 2; j < k; j++) {\n                            if (k % j == 0) {\n        \
    \                        count++;\n                            }\n           \
    \             }\n                        if (count == 0) {\n                 \
    \           for (j = 2; j < a; j++) {\n                                if (a %\
    \ j == 0) {\n                                    for (k = 2; k < j; k++) {\n \
    \                                       if (j % k == 0) {\n                  \
    \                          count++;\n                                        }\n\
    \                                    }\n                                    if\
    \ (count == 0) {\n                                        return true;\n     \
    \                               }\n                                }\n       \
    \                     }\n                        }\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [];\n    let is_prime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                is_prime = false;\n      \
    \          break;\n            }\n        }\n        if (is_prime) {\n       \
    \     prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n   \
    \ let is_multiply_prime: boolean = false;\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n \
    \           for (let k: number = 0; k < prime_numbers.length; k++) {\n       \
    \         if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n\
    \                    is_multiply_prime = true;\n                    break;\n \
    \               }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied: number[]\
    \ = [];\n    let primeNumbersMultipliedSum: number = 0;\n    let primeNumbersMultipliedSum2:\
    \ number = 0;\n    let primeNumbersMultipliedSum3: number = 0;\n    let primeNumbersMultipliedSum4:\
    \ number = 0;\n    let primeNumbersMultipliedSum5: number = 0;\n    let primeNumbersMultipliedSum6:\
    \ number = 0;\n    let primeNumbersMultipliedSum7: number = 0;\n    let primeNumbersMultipliedSum8:\
    \ number = 0;\n    let primeNumbersMultipliedSum9: number = 0;\n    let primeNumbersMultipliedSum10:\
    \ number = 0;\n    let primeNumbersMultipliedSum11: number = 0;\n    let primeNumbersMultipliedSum12:\
    \ number = 0;\n    let primeNumbersMultipliedSum13: number = 0;\n    let primeNumbersMultipliedSum14:\
    \ number = 0;\n    let primeNumbersMultipliedSum15: number = 0;\n    let primeNumbersMultipliedSum16:\
    \ number = 0;\n    let primeNumbersMultipliedSum17: number = 0;\n    let primeNumbersMultipliedSum18:\
    \ number = 0;\n    let primeNumbersMultipliedSum19: number = 0;\n    let primeNumbersMultipliedSum20:\
    \ number = 0;\n    let primeNumbersMultipliedSum21: number = 0;\n    let primeNumbersMultipliedSum22:\
    \ number = 0;\n    let primeNumbersMultipliedSum23: number = 0;\n    let primeNumbersMultipliedSum24:\
    \ number = 0;\n    let primeNumbersMultipliedSum25: number = 0;\n    let primeNumbersMultipliedSum26:\
    \ number = 0;\n    let primeNumbersMultipliedSum27: number = 0;\n    let primeNumbersMultipliedSum28:\
    \ number = 0;\n    let primeNumbersMultipliedSum29: number = 0;\n    let primeNumbersMultipliedSum30:\
    \ number = 0;\n    let primeNumbersMultipliedSum31: number = 0;\n    let primeNumbersMultipliedSum32:\
    \ number = 0;\n", "    let is_prime = (num: number) => {\n        if (num ===\
    \ 1) {\n            return false;\n        }\n        for (let i = 2; i < num;\
    \ i++) {\n            if (num % i === 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n    }\n    let prime_numbers =\
    \ [];\n    for (let i = 1; i < a; i++) {\n        if (is_prime(i)) {\n       \
    \     prime_numbers.push(i);\n        }\n    }\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers.length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let count: number = 0;\n    for (let i: number = 2; i < a; i++) {\n     \
    \   for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n   \
    \             is_prime = false;\n                break;\n            }\n     \
    \   }\n        if (is_prime) {\n            if (a % i == 0) {\n              \
    \  count++;\n            }\n        }\n        is_prime = true;\n    }\n    if\
    \ (count == 3) {\n        is_multiply_prime = true;\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\nconsole.log",
  "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ===\
    \ 0) {\n            isPrime = false;\n            break;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbers2: number[] = [];\n    let primeNumbers3: number[] = [];\n    let\
    \ primeNumbers4: number[] = [];\n    let primeNumbers5: number[] = [];\n    let\
    \ primeNumbers6: number[] = [];\n    let primeNumbers7: number[] = [];\n    let\
    \ primeNumbers8: number[] = [];\n    let primeNumbers9: number[] = [];\n    let\
    \ primeNumbers10: number[] = [];\n    let primeNumbers11: number[] = [];\n   \
    \ let primeNumbers12: number[] = [];\n    let primeNumbers13: number[] = [];\n\
    \    let primeNumbers14: number[] = [];\n    let primeNumbers15: number[] = [];\n\
    \    let primeNumbers16: number[] = [];\n    let primeNumbers17: number[] = [];\n\
    \    let primeNumbers18: number[] = [];\n    let primeNumbers19: number[] = [];\n\
    \    let primeNumbers20: number[] = [];\n    let primeNumbers21: number[] = [];\n\
    \    let primeNumbers22: number[] = [];\n    let primeNumbers23: number[] = [];\n\
    \    let primeNumbers24: number[] = [];\n    let primeNumbers25: number[] = [];\n\
    \    let primeNumbers26: number[] = [];\n    let primeNumbers27: number[] = [];\n\
    \    let primeNumbers28: number[] = [];\n    let primeNumbers29: number[] = [];\n\
    \    let primeNumbers30: number[] = [];\n    let primeNumbers31: number[] = [];\n\
    \    let primeNumbers32: number[] = [];\n    let primeNumbers33: number[] = [];\n\
    \    let primeNumbers34: number[] = [];\n    let primeNumbers35: number[] = [];\n\
    \    let primeNumbers36: number[] = [];\n    let primeNumbers37: number[] = [];\n\
    \    let primeNumbers38: number[] = [];\n    let primeNumbers39: number[] = [];\n\
    \    let primeNumbers40: number[] = [];\n    let primeNumbers41: number[] = [];\n\
    \    let primeNumbers42: number[] = [];\n    let primeNumbers43: number[] = [];\n\
    \    let primeNumbers44: number[] = [];\n    let primeNumbers45: number[] = [];\n\
    \    let primeNumbers46: number[]", "    let result: boolean = false;\n    let\
    \ arr: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (a\
    \ % i == 0) {\n            arr.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < arr.length; i++) {\n        for (let j: number = 0; j < arr.length;\
    \ j++) {\n            for (let k: number = 0; k < arr.length; k++) {\n       \
    \         if (arr[i] * arr[j] * arr[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    for\
    \ (i = 0; i < prime.length; i++) {\n        for (j = 0; j < prime.length; j++)\
    \ {\n            for (k = 0; k < prime.length; k++) {\n                if (prime[i]\
    \ * prime[j] * prime[k] == a) {\n                    result = true;\n        \
    \        }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let prime: number[] = [];\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime.length; i++) {\n    \
    \    for (let j: number = 0; j < prime.length; j++) {\n            for (let k:\
    \ number = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] == a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primes: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < primes.length; i++) {\n        for (let j: number\
    \ = 0; j < primes.length; j++) {\n            for (let k: number = 0; k < primes.length;\
    \ k++) {\n                if (primes[i] * primes[j] * primes[k] == a) {\n    \
    \                result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ prime: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (a % i == 0) {\n            prime.push(i);\n        }\n    }\n    if (prime.length\
    \ == 2) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let i: number = 2;\n    let prime:\
    \ number = 1;\n    let count: number = 0;\n    let result: boolean = false;\n\
    \    while (i <= a) {\n        if (a % i == 0) {\n            prime = i;\n   \
    \         a = a / i;\n            i = 2;\n            count++;\n        }\n  \
    \      else {\n            i++;\n        }\n    }\n    if (count == 3) {\n   \
    \     result = true;\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        for (let j: number = 0;\
    \ j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

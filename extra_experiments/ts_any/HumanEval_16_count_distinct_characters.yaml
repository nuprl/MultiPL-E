name: HumanEval_16_count_distinct_characters
language: ts
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
completions: ["    let count = 0;\n    let array = string.split(\"\");\n    let array2\
    \ = [];\n    for (let i = 0; i < array.length; i++) {\n        if (array2.indexOf(array[i].toLowerCase())\
    \ == -1) {\n            array2.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let result = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i]);\n\
    \    }\n    return char_set.size;\n}\n", "    let count = 0;\n    let char: any;\n\
    \    for (let i = 0; i < string.length; i++) {\n        char = string.charAt(i);\n\
    \        if (string.indexOf(char) == i) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    let result = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i]);\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let result\
    \ = string.toLowerCase().split('').filter((item, pos, self) => {\n        return\
    \ self.indexOf(item) == pos;\n    });\n    return result.length;\n}\n", "    let\
    \ count: number = 0;\n    let characters: string[] = string.split(\"\");\n   \
    \ for (let i = 0; i < characters.length; i++) {\n        if (characters.indexOf(characters[i])\
    \ == i) {\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string.charAt(i))) {\n            char_set.add(string.charAt(i));\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    for (let i =\
    \ 0; i < characters.length; i++) {\n        if (characters.indexOf(characters[i])\
    \ === i) {\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string.charAt(i))) {\n            char_set.add(string.charAt(i));\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let set\
    \ = new Set(string.toLowerCase());\n    return set.size;\n}\n", "    let count\
    \ = 0;\n    let array = string.split(\"\");\n    let newArray = [];\n    for (let\
    \ i = 0; i < array.length; i++) {\n        if (newArray.indexOf(array[i].toLowerCase())\
    \ == -1) {\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let array\
    \ = string.split(\"\");\n    let array2 = [];\n    for (let i = 0; i < array.length;\
    \ i++) {\n        if (array2.indexOf(array[i].toLowerCase()) == -1) {\n      \
    \      array2.push(array[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "    let count = 0;\n    let arr = string.split('');\n\
    \    let newArr = [];\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (newArr.indexOf(arr[i].toLowerCase()) === -1) {\n            newArr.push(arr[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string.charAt(i).toLowerCase())) {\n     \
    \       char_set.add(string.charAt(i).toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let string_lower = string.toLowerCase();\n\
    \    let string_array = string_lower.split(\"\");\n    let string_set = new Set(string_array);\n\
    \    return string_set.size;\n}\n", "    var count = 0;\n    var char: any;\n\
    \    for (var i = 0; i < string.length; i++) {\n        char = string.charAt(i);\n\
    \        if (string.indexOf(char) == i) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    let result = [];\n    let count = 0;\n  \
    \  for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i])\
    \ == -1) {\n            result.push(string[i]);\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n", "    let result = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let count = 0;\n    let char_set =\
    \ new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string.charAt(i).toLowerCase()))\
    \ {\n            char_set.add(string.charAt(i).toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

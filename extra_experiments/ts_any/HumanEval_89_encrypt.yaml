name: HumanEval_89_encrypt
language: ts
prompt: "//Create a function encrypt that takes a string as an argument and\n// returns\
  \ a string encrypted with the alphabet being rotated. \n// The alphabet should be\
  \ rotated in a manner such that the letters \n// shift down by two multiplied to\
  \ two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
  asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
  et\")\n// \"ix\"\nfunction encrypt(s: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"\
  lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"\
  gf\"),\"kj\");\n  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
  faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
  ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
  a\"),\"e\");\n}\n\ntest();"
completions: ["    let result = '';\n    for (let i = 0; i < s.length; i++) {\n  \
    \      let c = s[i];\n        if (c.match(/[a-z]/i)) {\n            let code =\
    \ s.charCodeAt(i);\n            if ((code >= 65) && (code <= 77)) {\n        \
    \        c = String.fromCharCode(code + 13);\n            } else if ((code >=\
    \ 78) && (code <= 90)) {\n                c = String.fromCharCode(code - 13);\n\
    \            } else if ((code >= 97) && (code <= 109)) {\n                c =\
    \ String.fromCharCode(code + 13);\n            } else if ((code >= 110) && (code\
    \ <= 122)) {\n                c = String.fromCharCode(code - 13);\n          \
    \  }\n        }\n        result += c;\n    }\n    return result;\n}\n", "    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let result = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        let c = s[i];\n        let index =\
    \ alphabet.indexOf(c);\n        let newIndex = index + 2;\n        if (newIndex\
    \ >= alphabet.length) {\n            newIndex = newIndex - alphabet.length;\n\
    \        }\n        result += alphabet[newIndex];\n    }\n    return result;\n\
    }\n", "    let result: string = \"\";\n    for (let i = 0; i < s.length; i++)\
    \ {\n        let code: number = s.charCodeAt(i);\n        if (code >= 65 && code\
    \ <= 90) {\n            code = code + 2;\n            if (code > 90) {\n     \
    \           code = code - 26;\n            }\n        } else if (code >= 97 &&\
    \ code <= 122) {\n            code = code + 2;\n            if (code > 122) {\n\
    \                code = code - 26;\n            }\n        }\n        result +=\
    \ String.fromCharCode(code);\n    }\n    return result;\n}\n", "    let result:\
    \ string = \"\";\n    for (let i = 0; i < s.length; i++) {\n        let c: number\
    \ = s.charCodeAt(i);\n        if (c >= 65 && c <= 90) {\n            result +=\
    \ String.fromCharCode((c - 65 + 2 * 2) % 26 + 65);\n        } else if (c >= 97\
    \ && c <= 122) {\n            result += String.fromCharCode((c - 97 + 2 * 2) %\
    \ 26 + 97);\n        } else {\n            result += s.charAt(i);\n        }\n\
    \    }\n    return result;\n}\n", "    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let result: string = \"\";\n    for (let i: number = 0; i < s.length; i++)\
    \ {\n        let index: number = alphabet.indexOf(s[i]);\n        let newIndex:\
    \ number = index + 2 * 2;\n        if (newIndex > 25) {\n            newIndex\
    \ = newIndex - 26;\n        }\n        result += alphabet[newIndex];\n    }\n\
    \    return result;\n}\nconsole.log(encrypt(\"hi\"));\nconsole.log(encrypt(\"\
    asdfghjkl\"));\nconsole.log(encrypt(\"gf\"));\nconsole.log(encrypt(\"et\"));\n",
  "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let newAlphabet = alphabet.slice(2)\
    \ + alphabet.slice(0, 2);\n    let newS = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        let index = alphabet.indexOf(s[i]);\n        newS += newAlphabet[index];\n\
    \    }\n    return newS;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let encrypted = \"\";\n    for (let i = 0; i < s.length; i++) {\n     \
    \   let index = alphabet.indexOf(s[i]);\n        encrypted += alphabet[(index\
    \ + 2 * 2) % 26];\n    }\n    return encrypted;\n}\n", "    let alphabet: string\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    let result: string = \"\";\n    for (let\
    \ i: number = 0; i < s.length; i++) {\n        let index: number = alphabet.indexOf(s[i]);\n\
    \        let newIndex: number = (index + 2) * 2;\n        if (newIndex > 25) {\n\
    \            newIndex = newIndex - 26;\n        }\n        result += alphabet[newIndex];\n\
    \    }\n    return result;\n}\nconsole.log(encrypt(\"hi\"));\nconsole.log(encrypt(\"\
    asdfghjkl\"));\nconsole.log(encrypt(\"gf\"));\nconsole.log(encrypt(\"et\"));\n",
  "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let result = \"\";\n  \
    \  for (let i = 0; i < s.length; i++) {\n        let index = alphabet.indexOf(s[i]);\n\
    \        result += alphabet[(index + 2) * 2];\n    }\n    return result;\n}\n",
  "    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let result: string\
    \ = \"\";\n    for (let i: number = 0; i < s.length; i++) {\n        let index:\
    \ number = alphabet.indexOf(s[i]);\n        let newIndex: number = (index + 2)\
    \ * 2;\n        if (newIndex > 25) {\n            newIndex = newIndex - 26;\n\
    \        }\n        result += alphabet[newIndex];\n    }\n    return result;\n\
    }\nconsole.log(encrypt(\"hi\"));\nconsole.log(encrypt(\"asdfghjkl\"));\nconsole.log(encrypt(\"\
    gf\"));\nconsole.log(encrypt(\"et\"));\n", "    let result: string = \"\";\n \
    \   for (let i = 0; i < s.length; i++) {\n        let code: number = s.charCodeAt(i);\n\
    \        if (code >= 97 && code <= 109) {\n            result += String.fromCharCode(code\
    \ + 2);\n        } else if (code >= 110 && code <= 122) {\n            result\
    \ += String.fromCharCode(code - 24);\n        } else {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\nconsole.log(encrypt(\"hi\"));\n\
    console.log(encrypt(\"asdfghjkl\"));\nconsole.log(encrypt(\"gf\"));\nconsole.log(encrypt(\"\
    et\"));\n", "    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let\
    \ encryptedString: string = \"\";\n    for (let i: number = 0; i < s.length; i++)\
    \ {\n        let index: number = alphabet.indexOf(s[i]);\n        let newIndex:\
    \ number = index + 2 * 2;\n        if (newIndex > 25) {\n            newIndex\
    \ = newIndex - 26;\n        }\n        encryptedString += alphabet[newIndex];\n\
    \    }\n    return encryptedString;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let result = \"\";\n    for (let i = 0; i < s.length; i++) {\n        let\
    \ c = s[i];\n        let index = alphabet.indexOf(c);\n        let newIndex =\
    \ index * 2;\n        if (newIndex >= alphabet.length) {\n            newIndex\
    \ = newIndex % alphabet.length;\n        }\n        result += alphabet[newIndex];\n\
    \    }\n    return result;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    let encrypted = \"\";\n    for (let i = 0; i < s.length; i++) {\n     \
    \   let index = alphabet.indexOf(s[i]);\n        let newIndex = index + 2 * 2;\n\
    \        if (newIndex > 25) {\n            newIndex = newIndex - 26;\n       \
    \ }\n        encrypted += alphabet[newIndex];\n    }\n    return encrypted;\n\
    }\n", "    let result = \"\";\n    for (let i = 0; i < s.length; i++) {\n    \
    \    let c = s[i];\n        if (c.match(/[a-z]/i)) {\n            let code = s.charCodeAt(i);\n\
    \            if ((code >= 65) && (code <= 90))\n                c = String.fromCharCode(((code\
    \ - 65 + 2) % 26) + 65);\n            else if ((code >= 97) && (code <= 122))\n\
    \                c = String.fromCharCode(((code - 97 + 2) % 26) + 97);\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\n", "    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    let result = \"\";\n    for (let i =\
    \ 0; i < s.length; i++) {\n        let c = s[i];\n        let index = alphabet.indexOf(c);\n\
    \        let newIndex = index + 2;\n        if (newIndex >= alphabet.length) {\n\
    \            newIndex = newIndex - alphabet.length;\n        }\n        result\
    \ += alphabet[newIndex];\n    }\n    return result;\n}\n", "    let alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n    let encrypted = \"\";\n    for (let i =\
    \ 0; i < s.length; i++) {\n        let index = alphabet.indexOf(s[i]);\n     \
    \   if (index === -1) {\n            encrypted += s[i];\n        } else {\n  \
    \          encrypted += alphabet[(index + 2) % 26];\n        }\n    }\n    return\
    \ encrypted;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let\
    \ newAlphabet = \"\";\n    let newString = \"\";\n    let index = 0;\n    let\
    \ newIndex = 0;\n    for (let i = 0; i < alphabet.length; i++) {\n        newIndex\
    \ = i + 2;\n        if (newIndex > 25) {\n            newIndex = newIndex - 26;\n\
    \        }\n        newAlphabet += alphabet[newIndex];\n    }\n    for (let i\
    \ = 0; i < s.length; i++) {\n        index = alphabet.indexOf(s[i]);\n       \
    \ newString += newAlphabet[index];\n    }\n    return newString;\n}\n", "    let\
    \ alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let newAlphabet: string\
    \ = \"\";\n    let newString: string = \"\";\n    for (let i: number = 0; i <\
    \ alphabet.length; i++) {\n        if (i < alphabet.length - 2) {\n          \
    \  newAlphabet += alphabet[i + 2];\n        } else {\n            newAlphabet\
    \ += alphabet[i - 24];\n        }\n    }\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        newString += newAlphabet[alphabet.indexOf(s[i])];\n    }\n \
    \   return newString;\n}\nconsole.log(encrypt(\"hi\"));\nconsole.log(encrypt(\"\
    asdfghjkl\"));\nconsole.log(encrypt(\"gf\"));\nconsole.log(encrypt(\"et\"));\n",
  "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let newAlphabet = \"\"\
    ;\n    let newString = \"\";\n    for (let i = 0; i < alphabet.length; i++) {\n\
    \        if (i < alphabet.length - 2) {\n            newAlphabet += alphabet[i\
    \ + 2];\n        } else {\n            newAlphabet += alphabet[i - 24];\n    \
    \    }\n    }\n    for (let i = 0; i < s.length; i++) {\n        newString +=\
    \ newAlphabet[alphabet.indexOf(s[i])];\n    }\n    return newString;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_118_get_closest_vowel
language: ts
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel(word:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
  yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
  easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
  ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
  most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
  ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
  anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
  Above\"),\"o\");\n}\n\ntest();"
completions: ["    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let closestVowel\
    \ = \"\";\n    let closestVowelIndex = -1;\n    for (let i = word.length - 1;\
    \ i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            closestVowel\
    \ = word[i];\n            closestVowelIndex = i;\n            break;\n       \
    \ }\n    }\n    if (closestVowelIndex === -1) {\n        return \"\";\n    }\n\
    \    for (let i = closestVowelIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ === -1) {\n            return closestVowel;\n        }\n    }\n    return \"\
    \";\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArray = word.split('');\n\
    \    let wordArrayReverse = wordArray.reverse();\n    let wordArrayReverseLength\
    \ = wordArrayReverse.length;\n    let closestVowel = '';\n    let closestVowelIndex\
    \ = 0;\n    let closestVowelIndexFromEnd = 0;\n    let closestVowelIndexFromStart\
    \ = 0;\n    let closestVowelIndexFromStartPlusOne = 0;\n    let closestVowelIndexFromStartPlusTwo\
    \ = 0;\n    let closestVowelIndexFromStartPlusThree = 0;\n    let closestVowelIndexFromStartPlusFour\
    \ = 0;\n    let closestVowelIndexFromStartPlusFive = 0;\n    let closestVowelIndexFromStartPlusSix\
    \ = 0;\n    let closestVowelIndexFromStartPlusSeven = 0;\n    let closestVowelIndexFromStartPlusEight\
    \ = 0;\n    let closestVowelIndexFromStartPlusNine = 0;\n    let closestVowelIndexFromStartPlusTen\
    \ = 0;\n    let closestVowelIndexFromStartPlusEleven = 0;\n    let closestVowelIndexFromStartPlusTwelve\
    \ = 0;\n    let closestVowelIndexFromStartPlusThirteen = 0;\n    let closestVowelIndexFromStartPlusFourteen\
    \ = 0;\n    let closestVowelIndexFromStartPlusFifteen = 0;\n    let closestVowelIndexFromStartPlusSixteen\
    \ = 0;\n    let closestVowelIndexFromStartPlusSeventeen = 0;\n    let closestVowelIndexFromStartPlusEighteen\
    \ = 0;\n    let closestVowelIndexFromStartPlusNineteen = 0;\n    let closestVowelIndexFromStartPlusTwenty\
    \ = 0;\n    let closestVowelIndexFromStartPlusTwentyOne = 0;\n    let closestVowelIndexFromStartPlusTwentyTwo\
    \ = 0;\n    let closestVowelIndexFromStartPlusTwentyThree = 0;\n    let closestVowelIndexFromStartPlusTwentyFour\
    \ = 0;\n    let closestVowelIndexFromStartPlusTwentyFive = 0;\n    let closestVowelIndexFrom",
  "    let vowels = \"aeiou\";\n    let closest_vowel = \"\";\n    let closest_vowel_index\
    \ = 0;\n    let closest_vowel_distance = 0;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) != -1) {\n            if (i == 0)\
    \ {\n                if (vowels.indexOf(word[i + 1]) == -1) {\n              \
    \      closest_vowel = word[i];\n                    closest_vowel_index = i;\n\
    \                    closest_vowel_distance = 1;\n                }\n        \
    \    } else if (i == word.length - 1) {\n                if (vowels.indexOf(word[i\
    \ - 1]) == -1) {\n                    closest_vowel = word[i];\n             \
    \       closest_vowel_index = i;\n                    closest_vowel_distance =\
    \ 1;\n                }\n            } else {\n                if (vowels.indexOf(word[i\
    \ - 1]) == -1 && vowels.indexOf(word[i + 1]) == -1) {\n                    closest_vowel\
    \ = word[i];\n                    closest_vowel_index = i;\n                 \
    \   closest_vowel_distance = 1;\n                }\n            }\n        }\n\
    \    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let closest_vowel = \"\";\n    let closest_vowel_index =\
    \ word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ != -1) {\n            if (i < closest_vowel_index) {\n                closest_vowel_index\
    \ = i;\n                closest_vowel = word[i];\n            }\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let result = \"\";\n    let index = word.length - 1;\n \
    \   let isConsonant = true;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            if (!isConsonant) {\n                result = word[index];\n\
    \                break;\n            }\n            isConsonant = false;\n   \
    \     } else {\n            isConsonant = true;\n        }\n        index--;\n\
    \    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let wordArr = word.split(\"\");\n    let result = \"\";\n    for\
    \ (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ !== -1) {\n            result = wordArr[i];\n            break;\n        }\n\
    \    }\n    return result;\n}\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
    FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
    ab\"));", "    let vowels = \"aeiouAEIOU\";\n    let result = \"\";\n    let index\
    \ = word.length - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            result = word[index];\n            index--;\n         \
    \   break;\n        }\n        index--;\n    }\n    if (index < 0) {\n       \
    \ return \"\";\n    }\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
    \ >= 0) {\n            return result;\n        }\n        index--;\n    }\n  \
    \  return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let closestVowel = \"\
    \";\n    let closestVowelIndex = word.length;\n    for (let i = word.length -\
    \ 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) !== -1) {\n     \
    \       for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
    \ !== -1) {\n                    if (i - j < closestVowelIndex) {\n          \
    \              closestVowelIndex = i - j;\n                        closestVowel\
    \ = word[j];\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n", "    let vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    let word_array = word.split('');\n    let vowel_index = -1;\n\
    \    let vowel_letter = '';\n    for (let i = word_array.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word_array[i]) >= 0) {\n            vowel_index\
    \ = i;\n            vowel_letter = word_array[i];\n            break;\n      \
    \  }\n    }\n    if (vowel_index == -1) {\n        return '';\n    }\n    for\
    \ (let i = vowel_index - 1; i >= 0; i--) {\n        if (vowels.indexOf(word_array[i])\
    \ < 0) {\n            return vowel_letter;\n        }\n    }\n    return '';\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr\
    \ = word.split(\"\");\n    let vowelIndex = 0;\n    let vowel = \"\";\n    let\
    \ vowelArr = [];\n    let closestVowel = \"\";\n    let closestVowelIndex = 0;\n\
    \    let closestVowelArr = [];\n    let closestVowelArrIndex = 0;\n    let consonantIndex\
    \ = 0;\n    let consonantArr = [];\n    let consonantArrIndex = 0;\n    let consonant\
    \ = \"\";\n    let closestConsonant = \"\";\n    let closestConsonantIndex = 0;\n\
    \    let closestConsonantArr = [];\n    let closestConsonantArrIndex = 0;\n  \
    \  let closestVowelConsonant = \"\";\n    let closestVowelConsonantIndex = 0;\n\
    \    let closestVowelConsonantArr = [];\n    let closestVowelConsonantArrIndex\
    \ = 0;\n    let closestVowelConsonantArrIndex2 = 0;\n    let closestVowelConsonantArrIndex3\
    \ = 0;\n    let closestVowelConsonantArrIndex4 = 0;\n    let closestVowelConsonantArrIndex5\
    \ = 0;\n    let closestVowelConsonantArrIndex6 = 0;\n    let closestVowelConsonantArrIndex7\
    \ = 0;\n    let closestVowelConsonantArrIndex8 = 0;\n    let closestVowelConsonantArrIndex9\
    \ = 0;\n    let closestVowelConsonantArrIndex10 = 0;\n    let closestVowelConsonantArrIndex11\
    \ = 0;\n    let closestVowelConsonantArrIndex12 = 0;\n    let closestVowelConsonantArrIndex13\
    \ = 0;\n    let closestVowelConsonantArrIndex14 = 0;\n    let closestVowelConsonantArrIndex15\
    \ = 0;\n    let closestVowelConsonantArrIndex16 = 0;\n    let closestVowelConsonantArrIndex17\
    \ = 0", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr\
    \ = word.split(\"\");\n    let vowelIndex = 0;\n    let vowel = \"\";\n    for\
    \ (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ !== -1) {\n            vowelIndex = i;\n            vowel = wordArr[i];\n  \
    \          break;\n        }\n    }\n    for (let i = vowelIndex; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(wordArr[i]) === -1) {\n            return vowel;\n\
    \        }\n    }\n    return \"\";\n}\n", "    let vowels = ['a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U'];\n    let result = '';\n    let distance = word.length;\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            if (i > 0 && i < word.length - 1) {\n                if\
    \ (vowels.indexOf(word[i - 1]) == -1 && vowels.indexOf(word[i + 1]) == -1) {\n\
    \                    if (i < distance) {\n                        distance = i;\n\
    \                        result = word[i];\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return result;\n}\n", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArray\
    \ = word.split(\"\");\n    let result = \"\";\n    for (let i = wordArray.length\
    \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i]) != -1) {\n\
    \            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArray[j])\
    \ != -1) {\n                    result = wordArray[j];\n                    break;\n\
    \                }\n            }\n            break;\n        }\n    }\n    return\
    \ result;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArray\
    \ = word.split('');\n    let index = wordArray.length - 1;\n    let vowelIndex\
    \ = 0;\n    while (index >= 0) {\n        if (vowels.indexOf(wordArray[index])\
    \ !== -1) {\n            vowelIndex = index;\n            break;\n        }\n\
    \        index--;\n    }\n    if (vowelIndex === 0) {\n        return '';\n  \
    \  }\n    index = vowelIndex - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(wordArray[index])\
    \ === -1) {\n            return wordArray[vowelIndex];\n        }\n        index--;\n\
    \    }\n    return '';\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n \
    \   let wordArray = word.split('');\n    let closestVowel = '';\n    let vowelIndex\
    \ = 0;\n    let consonantIndex = 0;\n    let vowelFound = false;\n    let consonantFound\
    \ = false;\n    for (let i = wordArray.length - 1; i >= 0; i--) {\n        if\
    \ (vowels.indexOf(wordArray[i]) !== -1) {\n            vowelFound = true;\n  \
    \          vowelIndex = i;\n        }\n        if (vowels.indexOf(wordArray[i])\
    \ === -1 && vowelFound) {\n            consonantFound = true;\n            consonantIndex\
    \ = i;\n            break;\n        }\n    }\n    if (vowelFound && consonantFound)\
    \ {\n        closestVowel = wordArray[vowelIndex];\n    }\n    return closestVowel;\n\
    }\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
    FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
    ab\"));\n", "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let\
    \ closestDistance = word.length;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) > -1) {\n            let distance = word.length\
    \ - i;\n            if (distance < closestDistance) {\n                closestDistance\
    \ = distance;\n                closestVowel = word[i];\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let closest = \"\";\n    let closestIndex = word.length;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n\
    \            if (i > 0 && i < word.length - 1) {\n                if (vowels.indexOf(word[i\
    \ - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if\
    \ (i < closestIndex) {\n                        closest = word[i];\n         \
    \               closestIndex = i;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    let vowels =\
    \ \"aeiouAEIOU\";\n    let closest_vowel = \"\";\n    let closest_vowel_index\
    \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ != -1) {\n            if (i < closest_vowel_index) {\n                closest_vowel\
    \ = word[i];\n                closest_vowel_index = i;\n            }\n      \
    \  }\n    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    let wordArray = word.split(\"\");\n    let index\
    \ = wordArray.length - 1;\n    let vowelIndex = 0;\n    let vowel = \"\";\n  \
    \  let consonant = false;\n    let consonantIndex = 0;\n    while (index >= 0)\
    \ {\n        if (vowels.indexOf(wordArray[index]) >= 0) {\n            vowelIndex\
    \ = index;\n            vowel = wordArray[index];\n            if (consonant)\
    \ {\n                return vowel;\n            }\n        } else {\n        \
    \    consonantIndex = index;\n            consonant = true;\n            if (vowelIndex\
    \ > 0) {\n                return vowel;\n            }\n        }\n        index--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let wordArray = word.split(\"\");\n    let wordArrayReverse = wordArray.reverse();\n\
    \    let wordArrayReverseLength = wordArrayReverse.length;\n    let vowelIndex\
    \ = 0;\n    let vowel = \"\";\n    let vowelIndexArray = [];\n    for (let i =\
    \ 0; i < wordArrayReverseLength; i++) {\n        if (vowels.indexOf(wordArrayReverse[i])\
    \ > -1) {\n            vowelIndex = i;\n            vowelIndexArray.push(vowelIndex);\n\
    \        }\n    }\n    if (vowelIndexArray.length > 0) {\n        vowelIndex =\
    \ vowelIndexArray[0];\n        vowel = wordArrayReverse[vowelIndex];\n    }\n\
    \    return vowel;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

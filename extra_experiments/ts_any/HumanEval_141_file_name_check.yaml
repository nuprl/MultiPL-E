name: HumanEval_141_file_name_check
language: ts
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check(file_name: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = file_name_check;\n  assert.deepEqual(candidate(\"\
  example.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"1example.dll\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"\
  K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"MY16FILE3.exe\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  /this_is_valid.dll\"),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txtexe\"),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let number_of_digits = 0;\n    let is_valid = true;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            number_of_digits++;\n\
    \        }\n    }\n    if (number_of_digits > 3) {\n        is_valid = false;\n\
    \    }\n    if (file_name.indexOf('.') !== file_name.lastIndexOf('.')) {\n   \
    \     is_valid = false;\n    }\n    if (file_name_without_extension.length ===\
    \ 0) {\n        is_valid = false;\n    }\n    if (!(file_name_without_extension[0]\
    \ >= 'a' && file_name_without_extension[0] <= 'z') && !(file_name_without_extension[0]\
    \ >= 'A' && file_name_without_extension[0] <= 'Z')) {\n        is_valid = false;\n\
    \    }\n    if (!(extension === 'txt' || extension === 'exe' || extension ===\
    \ 'dll')) {\n        is_valid = false;\n    }\n    if (is_valid) {\n        return\
    \ 'Yes';\n    }\n    else {\n        return 'No';\n    }\n}\nconsole.log(file_name_check(\"\
    example.txt\"));\nconsole.log(file_name_check(\"1example.dll\"));\n", "    let\
    \ result: string = \"No\";\n    let file_name_array: string[] = file_name.split(\"\
    .\");\n    let file_name_array_length: number = file_name_array.length;\n    let\
    \ file_name_array_first_element: string = file_name_array[0];\n    let file_name_array_first_element_length:\
    \ number = file_name_array_first_element.length;\n    let file_name_array_last_element:\
    \ string = file_name_array[file_name_array_length - 1];\n    let file_name_array_last_element_length:\
    \ number = file_name_array_last_element.length;\n    let file_name_array_first_element_first_character:\
    \ string = file_name_array_first_element[0];\n    let file_name_array_first_element_first_character_code:\
    \ number = file_name_array_first_element_first_character.charCodeAt(0);\n    let\
    \ file_name_array_first_element_last_character: string = file_name_array_first_element[file_name_array_first_element_length\
    \ - 1];\n    let file_name_array_first_element_last_character_code: number = file_name_array_first_element_last_character.charCodeAt(0);\n\
    \    let file_name_array_last_element_first_character: string = file_name_array_last_element[0];\n\
    \    let file_name_array_last_element_first_character_code: number = file_name_array_last_element_first_character.charCodeAt(0);\n\
    \    let file_name_array_last_element_last_character: string = file_name_array_last_element[file_name_array_last_element_length\
    \ - 1];\n    let file_name_array_last_element_last_character_code: number = file_name_array_last_element_last_character.charCodeAt(0);\n\
    \    let file_name_array_first_element_first_character_code_range_start: number\
    \ = 65;\n    let file_name_array_first", "    let file_name_array = file_name.split('.');\n\
    \    let file_name_array_length = file_name_array.length;\n    let file_name_array_first_element\
    \ = file_name_array[0];\n    let file_name_array_first_element_length = file_name_array_first_element.length;\n\
    \    let file_name_array_second_element = file_name_array[1];\n    let file_name_array_second_element_length\
    \ = file_name_array_second_element.length;\n    let file_name_array_second_element_array\
    \ = file_name_array_second_element.split('');\n    let file_name_array_second_element_array_length\
    \ = file_name_array_second_element_array.length;\n    let file_name_array_second_element_array_first_element\
    \ = file_name_array_second_element_array[0];\n    let file_name_array_second_element_array_first_element_length\
    \ = file_name_array_second_element_array_first_element.length;\n    let file_name_array_second_element_array_second_element\
    \ = file_name_array_second_element_array[1];\n    let file_name_array_second_element_array_second_element_length\
    \ = file_name_array_second_element_array_second_element.length;\n    let file_name_array_second_element_array_third_element\
    \ = file_name_array_second_element_array[2];\n    let file_name_array_second_element_array_third_element_length\
    \ = file_name_array_second_element_array_third_element.length;\n    let file_name_array_second_element_array_fourth_element\
    \ = file_name_array_second_element_array[3];\n    let file_name_array_second_element_array_fourth_element_length\
    \ = file_name_array_second_element_array_fourth_element.length;\n    let file_name_array_second_element_array_fifth_element\
    \ = file_name_array_second_element_array[4", "    let file_name_arr = file_name.split(\"\
    .\");\n    let file_name_arr_1 = file_name_arr[0];\n    let file_name_arr_2 =\
    \ file_name_arr[1];\n    let file_name_arr_1_arr = file_name_arr_1.split(\"\"\
    );\n    let file_name_arr_1_arr_1 = file_name_arr_1_arr[0];\n    let file_name_arr_1_arr_2\
    \ = file_name_arr_1_arr[1];\n    let file_name_arr_1_arr_3 = file_name_arr_1_arr[2];\n\
    \    let file_name_arr_1_arr_4 = file_name_arr_1_arr[3];\n    let file_name_arr_1_arr_5\
    \ = file_name_arr_1_arr[4];\n    let file_name_arr_1_arr_6 = file_name_arr_1_arr[5];\n\
    \    let file_name_arr_1_arr_7 = file_name_arr_1_arr[6];\n    let file_name_arr_1_arr_8\
    \ = file_name_arr_1_arr[7];\n    let file_name_arr_1_arr_9 = file_name_arr_1_arr[8];\n\
    \    let file_name_arr_1_arr_10 = file_name_arr_1_arr[9];\n    let file_name_arr_1_arr_11\
    \ = file_name_arr_1_arr[10];\n    let file_name_arr_1_arr_12 = file_name_arr_1_arr[11];\n\
    \    let file_name_arr_1_arr_13 = file_name_arr_1_arr[12];\n    let file_name_arr_1_arr_14\
    \ = file_name_arr_1_arr[13];\n    let file_name_arr_1_arr_15 = file_name_arr_1_arr[14];\n\
    \    let file_name_arr_1_arr_16 = file_name_arr_1_arr[15];\n", "    let result:\
    \ string = \"No\";\n    let count: number = 0;\n    let dot: number = 0;\n   \
    \ let dot_index: number = 0;\n    let extension: string = \"\";\n    let valid_extensions:\
    \ string[] = [\"txt\", \"exe\", \"dll\"];\n    let valid_extension: boolean =\
    \ false;\n    let valid_name: boolean = false;\n    let valid_name_char: boolean\
    \ = false;\n    let valid_name_char_count: number = 0;\n    let valid_name_char_index:\
    \ number = 0;\n    let valid_name_char_index_found: boolean = false;\n    let\
    \ valid_name_char_index_found_count: number = 0;\n    let valid_name_char_index_found_count_max:\
    \ number = 0;\n    let valid_name_char_index_found_count_max_index: number = 0;\n\
    \    let valid_name_char_index_found_count_max_index_found: boolean = false;\n\
    \    let valid_name_char_index_found_count_max_index_found_count: number = 0;\n\
    \    let valid_name_char_index_found_count_max_index_found_count_max: number =\
    \ 0;\n    let valid_name_char_index_found_count_max_index_found_count_max_index:\
    \ number = 0;\n    let valid_name_char_index_found_count_max_index_found_count_max_index_found:\
    \ boolean = false;\n    let valid_name_char_index_found_count_max_index_found_count_max_index_found_count:\
    \ number = 0;\n    let valid_name_char_index_found_count_max_index_found_count_max_index_found_count_max:\
    \ number = 0;\n    let valid_name_char_index_found_count_max_index_found_count_max_index_found_count_max_index:\
    \ number = 0;\n    let valid_name_char_index_found_count_max_index_found_count_max_index_found_count_max_index_found:\
    \ boolean = false;", "    let file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n\
    \    if (file_name_regex.test(file_name)) {\n        return \"Yes\";\n    } else\
    \ {\n        return \"No\";\n    }\n}\n", "    let file_name_arr = file_name.split(\"\
    .\");\n    let file_name_arr_1 = file_name_arr[0];\n    let file_name_arr_2 =\
    \ file_name_arr[1];\n    let file_name_arr_1_arr = file_name_arr_1.split(\"\"\
    );\n    let file_name_arr_1_arr_num = [];\n    let file_name_arr_1_arr_letter\
    \ = [];\n    let file_name_arr_1_arr_letter_upper = [];\n    let file_name_arr_1_arr_letter_lower\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower = [];\n    let file_name_arr_1_arr_letter_upper_lower_num\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_txt = [];\n    let\
    \ file_name_arr_1_arr_letter_upper_lower_num_exe = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_dll\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll = [];\n\
    \    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot = [];\n  \
    \  let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot_empty = [];\n\
    \    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot_empty_num\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot_empty_num_txt\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot_empty_num_exe\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_num_txt_exe_dll_dot_empty_num_dll\
    \ = [];\n    let file_name_arr_1_arr_letter_upper_lower_", "    let result = \"\
    No\";\n    let count = 0;\n    let dot = 0;\n    let dot_index = 0;\n    let file_name_length\
    \ = file_name.length;\n    let file_name_substring_before_dot = \"\";\n    let\
    \ file_name_substring_after_dot = \"\";\n    let file_name_substring_after_dot_length\
    \ = 0;\n    let file_name_substring_after_dot_txt = \"\";\n    let file_name_substring_after_dot_exe\
    \ = \"\";\n    let file_name_substring_after_dot_dll = \"\";\n    let file_name_substring_after_dot_txt_length\
    \ = 0;\n    let file_name_substring_after_dot_exe_length = 0;\n    let file_name_substring_after_dot_dll_length\
    \ = 0;\n    for (let i = 0; i < file_name_length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot++;\n            dot_index = i;\n  \
    \      }\n    }\n    if (count <= 3 && dot == 1) {\n        file_name_substring_before_dot\
    \ = file_name.substring(0, dot_index);\n        file_name_substring_after_dot\
    \ = file_name.substring(dot_index + 1, file_name_length);\n        file_name_substring_after_dot_length\
    \ = file_name_substring_after_dot.length;\n        file_name_substring_after_dot_txt\
    \ = file_name_substring_after_dot.substring(0, 3);\n        file_name_substring_after_dot_exe\
    \ = file_name_substring_after_dot.substring(0, 3);\n        file_name_substring_after_dot_dll\
    \ = file_name_substring_after_dot.substring(0, 3);\n        file_name_substring_after_dot_txt_length\
    \ = file", "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (name.length ==\
    \ 0 || (name[0] < 'a' || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n\
    \        return \"No\";\n    }\n    if (extension != 'txt' && extension != 'exe'\
    \ && extension != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\n", "    let file_name_array = file_name.split(\".\");\n    let file_name_before_dot\
    \ = file_name_array[0];\n    let file_name_after_dot = file_name_array[1];\n \
    \   let file_name_before_dot_array = file_name_before_dot.split(\"\");\n    let\
    \ file_name_before_dot_array_length = file_name_before_dot_array.length;\n   \
    \ let file_name_after_dot_array = file_name_after_dot.split(\"\");\n    let file_name_after_dot_array_length\
    \ = file_name_after_dot_array.length;\n    let file_name_after_dot_array_length_check\
    \ = 0;\n    let file_name_before_dot_array_length_check = 0;\n    let file_name_before_dot_array_length_check_2\
    \ = 0;\n    let file_name_before_dot_array_length_check_3 = 0;\n    let file_name_after_dot_array_length_check_2\
    \ = 0;\n    let file_name_after_dot_array_length_check_3 = 0;\n    let file_name_after_dot_array_length_check_4\
    \ = 0;\n    let file_name_after_dot_array_length_check_5 = 0;\n    let file_name_after_dot_array_length_check_6\
    \ = 0;\n    let file_name_after_dot_array_length_check_7 = 0;\n    let file_name_after_dot_array_length_check_8\
    \ = 0;\n    let file_name_after_dot_array_length_check_9 = 0;\n    let file_name_after_dot_array_length_check_10\
    \ = 0;\n    let file_name_after_dot_array_length_check_11 = 0;\n    let file_name_after_dot_array_length_check_12\
    \ = 0;\n    let file_name_after_dot_array_length_check_13 = 0;\n    let file_name_after_dot_array_length_check_14\
    \ = 0;\n   ", "    let file_name_split = file_name.split(\".\");\n    let file_name_first\
    \ = file_name_split[0];\n    let file_name_second = file_name_split[1];\n    let\
    \ file_name_first_split = file_name_first.split(\"\");\n    let file_name_second_split\
    \ = file_name_second.split(\"\");\n    let file_name_first_split_length = file_name_first_split.length;\n\
    \    let file_name_second_split_length = file_name_second_split.length;\n    let\
    \ file_name_first_split_length_counter = 0;\n    let file_name_second_split_length_counter\
    \ = 0;\n    let file_name_first_split_length_counter_2 = 0;\n    let file_name_second_split_length_counter_2\
    \ = 0;\n    let file_name_first_split_length_counter_3 = 0;\n    let file_name_second_split_length_counter_3\
    \ = 0;\n    let file_name_first_split_length_counter_4 = 0;\n    let file_name_second_split_length_counter_4\
    \ = 0;\n    let file_name_first_split_length_counter_5 = 0;\n    let file_name_second_split_length_counter_5\
    \ = 0;\n    let file_name_first_split_length_counter_6 = 0;\n    let file_name_second_split_length_counter_6\
    \ = 0;\n    let file_name_first_split_length_counter_7 = 0;\n    let file_name_second_split_length_counter_7\
    \ = 0;\n    let file_name_first_split_length_counter_8 = 0;\n    let file_name_second_split_length_counter_8\
    \ = 0;\n    let file_name_first_split_length_counter_9 = 0;\n    let file_name_second_split_length_counter_9\
    \ = 0;\n    let file_name_first_split_length_counter_10 = 0;\n    let file_name_second_split_length_counter_10\
    \ = 0", "    let file_name_arr = file_name.split(\".\");\n    let file_name_arr_len\
    \ = file_name_arr.length;\n    let file_name_arr_len_1 = file_name_arr[0].length;\n\
    \    let file_name_arr_len_2 = file_name_arr[1].length;\n    let file_name_arr_len_3\
    \ = file_name_arr[2].length;\n    let file_name_arr_len_4 = file_name_arr[3].length;\n\
    \    let file_name_arr_len_5 = file_name_arr[4].length;\n    let file_name_arr_len_6\
    \ = file_name_arr[5].length;\n    let file_name_arr_len_7 = file_name_arr[6].length;\n\
    \    let file_name_arr_len_8 = file_name_arr[7].length;\n    let file_name_arr_len_9\
    \ = file_name_arr[8].length;\n    let file_name_arr_len_10 = file_name_arr[9].length;\n\
    \    let file_name_arr_len_11 = file_name_arr[10].length;\n    let file_name_arr_len_12\
    \ = file_name_arr[11].length;\n    let file_name_arr_len_13 = file_name_arr[12].length;\n\
    \    let file_name_arr_len_14 = file_name_arr[13].length;\n    let file_name_arr_len_15\
    \ = file_name_arr[14].length;\n    let file_name_arr_len_16 = file_name_arr[15].length;\n\
    \    let file_name_arr_len_17 = file_name_arr[16].length;\n    let file_name_arr_len_18\
    \ = file_name_arr[17].length;\n    let file_name_arr_len_19 = file_name_arr[18].length;\n\
    \    let file_name_arr_len_20 = file_name_arr[19].length;\n    let file_name_arr_len_21\
    \ = file_name", "    let file_name_arr = file_name.split(\".\");\n    let file_name_arr_1\
    \ = file_name_arr[0];\n    let file_name_arr_2 = file_name_arr[1];\n    let file_name_arr_1_arr\
    \ = file_name_arr_1.split(\"\");\n    let file_name_arr_1_arr_1 = file_name_arr_1_arr[0];\n\
    \    let file_name_arr_1_arr_2 = file_name_arr_1_arr[1];\n    let file_name_arr_1_arr_3\
    \ = file_name_arr_1_arr[2];\n    let file_name_arr_1_arr_4 = file_name_arr_1_arr[3];\n\
    \    let file_name_arr_1_arr_5 = file_name_arr_1_arr[4];\n    let file_name_arr_1_arr_6\
    \ = file_name_arr_1_arr[5];\n    let file_name_arr_1_arr_7 = file_name_arr_1_arr[6];\n\
    \    let file_name_arr_1_arr_8 = file_name_arr_1_arr[7];\n    let file_name_arr_1_arr_9\
    \ = file_name_arr_1_arr[8];\n    let file_name_arr_1_arr_10 = file_name_arr_1_arr[9];\n\
    \    let file_name_arr_1_arr_11 = file_name_arr_1_arr[10];\n    let file_name_arr_1_arr_12\
    \ = file_name_arr_1_arr[11];\n    let file_name_arr_1_arr_13 = file_name_arr_1_arr[12];\n\
    \    let file_name_arr_1_arr_14 = file_name_arr_1_arr[13];\n    let file_name_arr_1_arr_15\
    \ = file_name_arr_1_arr[14];\n    let file_name_arr_1_arr_16 = file_name_arr_1_arr[15];\n",
  "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension =\
    \ false;\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if\
    \ (file_name_after_dot === valid_extensions[i]) {\n            valid_extension\
    \ = true;\n        }\n    }\n    if (file_name_before_dot.length === 0 || file_name_before_dot.length\
    \ > 3 || !valid_extension) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n", "    let file_name_arr = file_name.split(\".\");\n    let file_name_arr_1\
    \ = file_name_arr[0];\n    let file_name_arr_2 = file_name_arr[1];\n    let file_name_arr_1_arr\
    \ = file_name_arr_1.split(\"\");\n    let file_name_arr_1_arr_count = 0;\n   \
    \ let file_name_arr_1_arr_count_1 = 0;\n    let file_name_arr_1_arr_count_2 =\
    \ 0;\n    let file_name_arr_1_arr_count_3 = 0;\n    let file_name_arr_1_arr_count_4\
    \ = 0;\n    let file_name_arr_1_arr_count_5 = 0;\n    let file_name_arr_1_arr_count_6\
    \ = 0;\n    let file_name_arr_1_arr_count_7 = 0;\n    let file_name_arr_1_arr_count_8\
    \ = 0;\n    let file_name_arr_1_arr_count_9 = 0;\n    let file_name_arr_1_arr_count_10\
    \ = 0;\n    let file_name_arr_1_arr_count_11 = 0;\n    let file_name_arr_1_arr_count_12\
    \ = 0;\n    let file_name_arr_1_arr_count_13 = 0;\n    let file_name_arr_1_arr_count_14\
    \ = 0;\n    let file_name_arr_1_arr_count_15 = 0;\n    let file_name_arr_1_arr_count_16\
    \ = 0;\n    let file_name_arr_1_arr_count_17 = 0;\n    let file_name_arr_1_arr_count_18\
    \ = 0;\n    let file_name_arr_1_arr_count_19 = 0;\n    let file_name_arr_1_arr_count_20\
    \ = 0;\n    let file_name_arr_1_arr_count_21 = 0;\n    let file_name_arr_1_arr_count_22\
    \ =", "    let file_name_arr = file_name.split('.');\n    let file_name_arr_first\
    \ = file_name_arr[0];\n    let file_name_arr_second = file_name_arr[1];\n    let\
    \ count = 0;\n    let count_dot = 0;\n    let count_letter = 0;\n    let count_digit\
    \ = 0;\n    let count_letter_first = 0;\n    let count_letter_second = 0;\n  \
    \  let count_letter_third = 0;\n    let count_letter_fourth = 0;\n    let count_letter_fifth\
    \ = 0;\n    let count_letter_sixth = 0;\n    let count_letter_seventh = 0;\n \
    \   let count_letter_eighth = 0;\n    let count_letter_ninth = 0;\n    let count_letter_tenth\
    \ = 0;\n    let count_letter_eleventh = 0;\n    let count_letter_twelfth = 0;\n\
    \    let count_letter_thirteenth = 0;\n    let count_letter_fourteenth = 0;\n\
    \    let count_letter_fifteenth = 0;\n    let count_letter_sixteenth = 0;\n  \
    \  let count_letter_seventeenth = 0;\n    let count_letter_eighteenth = 0;\n \
    \   let count_letter_nineteenth = 0;\n    let count_letter_twentieth = 0;\n  \
    \  let count_letter_twenty_first = 0;\n    let count_letter_twenty_second = 0;\n\
    \    let count_letter_twenty_third = 0;\n    let count_letter_twenty_fourth =\
    \ 0;\n    let count_letter_twenty_fifth = 0;\n    let count_letter_twenty_sixth\
    \ = 0;\n    let count_letter_twenty_seventh = 0;\n    let count_letter_twenty_eighth\
    \ = 0;\n    let count_letter_twenty_ninth = 0;\n    let count_letter_thirtieth\
    \ = 0;\n    let count_letter_thirty_first = 0;\n    let count_letter_thirty_second\
    \ = 0;\n    let count_letter_thirty_third = 0;", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_extension = file_name.substring(dot_index + 1);\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    if (file_extension !== 'txt' &&\
    \ file_extension !== 'exe' && file_extension !== 'dll') {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    let file_name_array = file_name.split(\"\
    .\");\n    let file_name_array_length = file_name_array.length;\n    let file_name_array_first_length\
    \ = file_name_array[0].length;\n    let file_name_array_second_length = file_name_array[1].length;\n\
    \    let file_name_array_first_char = file_name_array[0].charAt(0);\n    let file_name_array_second_char\
    \ = file_name_array[1].charAt(0);\n    let file_name_array_first_char_code = file_name_array_first_char.charCodeAt(0);\n\
    \    let file_name_array_second_char_code = file_name_array_second_char.charCodeAt(0);\n\
    \    let file_name_array_first_char_code_lower = file_name_array_first_char_code\
    \ + 32;\n    let file_name_array_second_char_code_lower = file_name_array_second_char_code\
    \ + 32;\n    let file_name_array_first_char_code_upper = file_name_array_first_char_code\
    \ - 32;\n    let file_name_array_second_char_code_upper = file_name_array_second_char_code\
    \ - 32;\n    let file_name_array_first_char_code_lower_char = String.fromCharCode(file_name_array_first_char_code_lower);\n\
    \    let file_name_array_second_char_code_lower_char = String.fromCharCode(file_name_array_second_char_code_lower);\n\
    \    let file_name_array_first_char_code_upper_char = String.fromCharCode(file_name_array_first_char_code_upper);\n\
    \    let file_name_array_second_char_code_upper_char = String.fromCharCode(file_name_array_second_char_code_upper);\n\
    \    let file_name_array_first_char_code_lower_char_code = file_name_array_first_char_code_lower_char",
  "    let file_name_array = file_name.split(\".\");\n    let file_name_array_length\
    \ = file_name_array.length;\n    let file_name_array_first_element = file_name_array[0];\n\
    \    let file_name_array_second_element = file_name_array[1];\n    let file_name_array_first_element_length\
    \ = file_name_array_first_element.length;\n    let file_name_array_second_element_length\
    \ = file_name_array_second_element.length;\n    let file_name_array_first_element_first_char\
    \ = file_name_array_first_element[0];\n    let file_name_array_first_element_first_char_code\
    \ = file_name_array_first_element_first_char.charCodeAt(0);\n    let file_name_array_first_element_first_char_code_lower_case\
    \ = file_name_array_first_element_first_char_code >= 97 && file_name_array_first_element_first_char_code\
    \ <= 122;\n    let file_name_array_first_element_first_char_code_upper_case =\
    \ file_name_array_first_element_first_char_code >= 65 && file_name_array_first_element_first_char_code\
    \ <= 90;\n    let file_name_array_first_element_first_char_code_valid = file_name_array_first_element_first_char_code_lower_case\
    \ || file_name_array_first_element_first_char_code_upper_case;\n    let file_name_array_first_element_first_char_code_valid_length\
    \ = file_name_array_first_element_length > 0;\n    let file_name_array_second_element_valid\
    \ = file_name_array_second_element === \"txt\" || file_name_array_second_element\
    \ === \"exe\" || file_name_array_second_element === \"dll\";\n    let file_name_array_second_element_valid_length\
    \ = file_name_array_second_element_length > 0;\n    let file_name_array_", " \
    \   let count = 0;\n    let dot = false;\n    let file_type = false;\n    for\
    \ (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] == '.') {\n\
    \            dot = true;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] == '.'\
    \ && file_name[i + 1] == 't' && file_name[i + 2] == 'x' && file_name[i + 3] ==\
    \ 't') {\n            file_type = true;\n        }\n        if (file_name[i] ==\
    \ '.' && file_name[i + 1] == 'e' && file_name[i + 2] == 'x' && file_name[i + 3]\
    \ == 'e') {\n            file_type = true;\n        }\n        if (file_name[i]\
    \ == '.' && file_name[i + 1] == 'd' && file_name[i + 2] == 'l' && file_name[i\
    \ + 3] == 'l') {\n            file_type = true;\n        }\n    }\n    if (count\
    \ > 3 || dot == false || file_type == false) {\n        return \"No\";\n    }\n\
    \    else {\n        return \"Yes\";\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

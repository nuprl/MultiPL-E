name: HumanEval_95_check_dict_case
language: ts
prompt: "//Given an object, return true if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return false.\n// The function should\
  \ return false is the given object is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict: any):\
  \ any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = check_dict_case;\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"b\": \"banana\"}),true);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["    let lower: boolean = true;\n    let upper: boolean = true;\n  \
    \  for (let key in dict) {\n        if (key.toLowerCase() !== key) {\n       \
    \     lower = false;\n        }\n        if (key.toUpperCase() !== key) {\n  \
    \          upper = false;\n        }\n    }\n    return lower || upper;\n}\n",
  "    if (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let\
    \ lowerCase = true;\n    let upperCase = true;\n    for (let key in dict) {\n\
    \        if (key.toLowerCase() !== key) {\n            lowerCase = false;\n  \
    \      }\n        if (key.toUpperCase() !== key) {\n            upperCase = false;\n\
    \        }\n    }\n    return lowerCase || upperCase;\n}\n", "    let keys = Object.keys(dict);\n\
    \    let lower = keys.every(key => key === key.toLowerCase());\n    let upper\
    \ = keys.every(key => key === key.toUpperCase());\n    return lower || upper;\n\
    }\n", "    let keys = Object.keys(dict);\n    let lowerCase = keys.every(key =>\
    \ key === key.toLowerCase());\n    let upperCase = keys.every(key => key === key.toUpperCase());\n\
    \    return lowerCase || upperCase;\n}\n", "    let keys = Object.keys(dict);\n\
    \    let isUpper = keys[0] === keys[0].toUpperCase();\n    let isLower = keys[0]\
    \ === keys[0].toLowerCase();\n    if (isUpper || isLower) {\n        for (let\
    \ i = 1; i < keys.length; i++) {\n            if (isUpper && keys[i] !== keys[i].toUpperCase())\
    \ {\n                return false;\n            }\n            if (isLower &&\
    \ keys[i] !== keys[i].toLowerCase()) {\n                return false;\n      \
    \      }\n        }\n        return true;\n    }\n    return false;\n}\n", " \
    \   if (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let\
    \ lower: boolean = true;\n    let upper: boolean = true;\n    for (let key in\
    \ dict) {\n        if (key.toLowerCase() !== key) {\n            lower = false;\n\
    \        }\n        if (key.toUpperCase() !== key) {\n            upper = false;\n\
    \        }\n    }\n    return lower || upper;\n}\n", "    let keys = Object.keys(dict);\n\
    \    let result = true;\n    if (keys.length === 0) {\n        return false;\n\
    \    }\n    for (let i = 0; i < keys.length; i++) {\n        if (keys[i] === keys[i].toUpperCase())\
    \ {\n            for (let j = 0; j < keys.length; j++) {\n                if (keys[j]\
    \ !== keys[j].toUpperCase()) {\n                    result = false;\n        \
    \        }\n            }\n        } else if (keys[i] === keys[i].toLowerCase())\
    \ {\n            for (let j = 0; j < keys.length; j++) {\n                if (keys[j]\
    \ !== keys[j].toLowerCase()) {\n                    result = false;\n        \
    \        }\n            }\n        } else {\n            result = false;\n   \
    \     }\n    }\n    return result;\n}\n", "    let lowerCase = true;\n    let\
    \ upperCase = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lowerCase = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upperCase = false;\n        }\n    }\n    return lowerCase\
    \ || upperCase;\n}\n", "    let keys = Object.keys(dict);\n    let lowerCase =\
    \ keys.every(key => key === key.toLowerCase());\n    let upperCase = keys.every(key\
    \ => key === key.toUpperCase());\n    return lowerCase || upperCase;\n}\n", " \
    \   let lowerCase = true;\n    let upperCase = true;\n    for (let key in dict)\
    \ {\n        if (key.toLowerCase() !== key) {\n            lowerCase = false;\n\
    \        }\n        if (key.toUpperCase() !== key) {\n            upperCase =\
    \ false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n", "    let\
    \ keys = Object.keys(dict);\n    let values = Object.values(dict);\n    let upper\
    \ = [];\n    let lower = [];\n    for (let i = 0; i < keys.length; i++) {\n  \
    \      if (keys[i] === keys[i].toUpperCase()) {\n            upper.push(keys[i]);\n\
    \        } else {\n            lower.push(keys[i]);\n        }\n    }\n    if\
    \ (upper.length === keys.length || lower.length === keys.length) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_dict_case({\"\
    a\": \"apple\", \"b\": \"banana\"}));\nconsole.log(check_dict_case({\"a\": \"\
    apple\", \"A\": \"banana\", \"B\": \"banana\"}));\nconsole.log(check_dict_case({\"\
    a\": \"apple\", 8: \"banana\", \"a\": \"apple\"}));\nconsole.log(check_dict_case({\"\
    Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}));\nconsole.log(check_dict_case({\"\
    STATE\": \"NC\", \"ZIP\": \"12345\"}));\n", "    let keys = Object.keys(dict);\n\
    \    if (keys.length == 0) {\n        return false;\n    }\n    let lowerCase\
    \ = keys.every(key => key.toLowerCase() == key);\n    let upperCase = keys.every(key\
    \ => key.toUpperCase() == key);\n    return lowerCase || upperCase;\n}\n", " \
    \   if (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let\
    \ is_lower = Object.keys(dict)[0] === Object.keys(dict)[0].toLowerCase();\n  \
    \  for (let key in dict) {\n        if (is_lower && key !== key.toLowerCase())\
    \ {\n            return false;\n        }\n        if (!is_lower && key !== key.toUpperCase())\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  let result: boolean = true;\n    let lowerCase: boolean = false;\n    let upperCase:\
    \ boolean = false;\n    if (Object.keys(dict).length === 0) {\n        return\
    \ false;\n    }\n    for (let key in dict) {\n        if (key.toLowerCase() ===\
    \ key) {\n            lowerCase = true;\n        }\n        if (key.toUpperCase()\
    \ === key) {\n            upperCase = true;\n        }\n    }\n    if (lowerCase\
    \ === true && upperCase === true) {\n        result = false;\n    }\n    return\
    \ result;\n}\n", "    let keys = Object.keys(dict);\n    let isLower = keys[0]\
    \ === keys[0].toLowerCase();\n    for (let key of keys) {\n        if (isLower\
    \ && key !== key.toLowerCase()) {\n            return false;\n        }\n    \
    \    if (!isLower && key !== key.toUpperCase()) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    let isUpper = false;\n    let\
    \ isLower = false;\n    for (let key in dict) {\n        if (key.toUpperCase()\
    \ === key) {\n            isUpper = true;\n        } else if (key.toLowerCase()\
    \ === key) {\n            isLower = true;\n        } else {\n            return\
    \ false;\n        }\n    }\n    return isUpper || isLower;\n}\n", "    let keys\
    \ = Object.keys(dict);\n    let upperCase = keys.every(key => key === key.toUpperCase());\n\
    \    let lowerCase = keys.every(key => key === key.toLowerCase());\n    return\
    \ upperCase || lowerCase;\n}\n", "    let keys = Object.keys(dict);\n    let lower_case\
    \ = keys.every(key => key === key.toLowerCase());\n    let upper_case = keys.every(key\
    \ => key === key.toUpperCase());\n    return lower_case || upper_case;\n}\n",
  "    let lower = true;\n    let upper = true;\n    for (let key in dict) {\n   \
    \     if (key.toLowerCase() !== key) {\n            lower = false;\n        }\n\
    \        if (key.toUpperCase() !== key) {\n            upper = false;\n      \
    \  }\n    }\n    return lower || upper;\n}\n", "    let lowerCaseKeys = Object.keys(dict).filter(key\
    \ => key.toLowerCase() === key);\n    let upperCaseKeys = Object.keys(dict).filter(key\
    \ => key.toUpperCase() === key);\n    return lowerCaseKeys.length === Object.keys(dict).length\
    \ || upperCaseKeys.length === Object.keys(dict).length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

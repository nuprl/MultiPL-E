name: HumanEval_69_search
language: ts
prompt: "//You are given a non-empty array of positive integers. Return the greatest\
  \ integer that is greater than \n// zero, and has a frequency greater than or equal\
  \ to the value of the integer itself. \n// The frequency of an integer is the number\
  \ of times it appears in the array.\n// If no such a value exist, return -1.\n//\
  \ Examples:\n// >>> search([4, 1, 2, 2, 3, 1])\n// 2\n// >>> search([1, 2, 2, 3,\
  \ 3, 3, 4, 4, 4])\n// 3\n// >>> search([5, 5, 4, 4, 4])\n// -1\nfunction search(lst:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = search;\n  assert.deepEqual(candidate([5, 5, 5, 5,\
  \ 1]),1);\n  assert.deepEqual(candidate([4, 1, 4, 1, 4, 4]),4);\n  assert.deepEqual(candidate([3,\
  \ 3]),-1);\n  assert.deepEqual(candidate([8, 8, 8, 8, 8, 8, 8, 8]),8);\n  assert.deepEqual(candidate([2,\
  \ 3, 3, 2, 2]),2);\n  assert.deepEqual(candidate([2, 7, 8, 8, 4, 8, 7, 3, 9, 6,\
  \ 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1]),1);\n  assert.deepEqual(candidate([3, 2,\
  \ 8, 2]),2);\n  assert.deepEqual(candidate([6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10]),1);\n\
  \  assert.deepEqual(candidate([8, 8, 3, 6, 5, 6, 4]),-1);\n  assert.deepEqual(candidate([6,\
  \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9]),1);\n\
  \  assert.deepEqual(candidate([1, 9, 10, 1, 3]),1);\n  assert.deepEqual(candidate([6,\
  \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10]),5);\n\
  \  assert.deepEqual(candidate([1]),1);\n  assert.deepEqual(candidate([8, 8, 10,\
  \ 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5]),4);\n  assert.deepEqual(candidate([2,\
  \ 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10]),2);\n  assert.deepEqual(candidate([1,\
  \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3]),1);\n  assert.deepEqual(candidate([9, 2, 4,\
  \ 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10,\
  \ 9, 4]),4);\n  assert.deepEqual(candidate([2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6,\
  \ 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7]),4);\n  assert.deepEqual(candidate([9, 8, 6,\
  \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1]),2);\n  assert.deepEqual(candidate([5,\
  \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8]),-1);\n  assert.deepEqual(candidate([10]),-1);\n\
  \  assert.deepEqual(candidate([9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2]),2);\n  assert.deepEqual(candidate([5,\
  \ 4, 10, 2, 1, 1, 10, 3, 6, 1, 8]),1);\n  assert.deepEqual(candidate([7, 9, 9, 9,\
  \ 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6]),1);\n  assert.deepEqual(candidate([3,\
  \ 10, 10, 9, 2]),-1);\n}\n\ntest();"
completions: ["    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max)\
    \ {\n            count++;\n        }\n    }\n    if (count >= max) {\n       \
    \ return max;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let obj = {};\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (obj[lst[i]]) {\n            obj[lst[i]]\
    \ += 1;\n        } else {\n            obj[lst[i]] = 1;\n        }\n    }\n  \
    \  for (let key in obj) {\n        if (obj[key] >= key && key > result) {\n  \
    \          result = key;\n        }\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n\
    \            if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (count >= lst[i] && lst[i] > result) {\n            result\
    \ = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let count = 0;\n    let max =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j <\
    \ lst.length; j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n\
    \            }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n  \
    \          max = lst[i];\n            result = max;\n        }\n        count\
    \ = 0;\n    }\n    return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let max = 0;\n    let maxCount = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        let count = 0;\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] == lst[j]) {\n                count++;\n    \
    \        }\n        }\n        if (count >= lst[i] && count >= maxCount) {\n \
    \           max = lst[i];\n            maxCount = count;\n        }\n    }\n \
    \   if (max == 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let\
    \ dict: any = {};\n    let max: number = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (let i: number = max;\
    \ i > 0; i--) {\n        if (dict[i] >= i) {\n            return i;\n        }\n\
    \    }\n    return -1;\n}\n", "    let freq: any = {};\n    let max: any = 0;\n\
    \    let maxFreq: any = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n        if (freq[lst[i]] >= lst[i]\
    \ && lst[i] > maxFreq) {\n            max = lst[i];\n            maxFreq = freq[lst[i]];\n\
    \        }\n    }\n    return max;\n}\n", "    let count: any = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (count[lst[i]]) {\n            count[lst[i]]\
    \ += 1;\n        } else {\n            count[lst[i]] = 1;\n        }\n    }\n\
    \    let max: number = 0;\n    for (let key in count) {\n        if (count[key]\
    \ >= key && key > max) {\n            max = key;\n        }\n    }\n    if (max\
    \ === 0) {\n        return -1;\n    } else {\n        return max;\n    }\n}\n",
  "    let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let freq\
    \ = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else {\n  \
    \          freq[lst[i]] = 1;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    return max;\n}\n", "    let result = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > result) {\n            result = lst[i];\n            count = 1;\n        }\
    \ else if (lst[i] === result) {\n            count++;\n        }\n    }\n    return\
    \ count >= result ? result : -1;\n}\n", "    let dict = {};\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]]\
    \ += 1;\n        } else {\n            dict[lst[i]] = 1;\n        }\n    }\n \
    \   let max = 0;\n    for (let key in dict) {\n        if (dict[key] >= key &&\
    \ key > max) {\n            max = key;\n        }\n    }\n    if (max > 0) {\n\
    \        return max;\n    } else {\n        return -1;\n    }\n}\n", "    let\
    \ counts = {};\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        let num = lst[i];\n        counts[num] = counts[num] ? counts[num] +\
    \ 1 : 1;\n        if (counts[num] >= num && num > max) {\n            max = num;\n\
    \        }\n    }\n    return max > 0 ? max : -1;\n}\n", "    let max = -1;\n\
    \    let freq = 0;\n    let dict = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n        } else\
    \ {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let key in dict)\
    \ {\n        if (dict[key] >= key && key > max) {\n            max = key;\n  \
    \          freq = dict[key];\n        }\n    }\n    return max;\n}\n", "    let\
    \ count: number = 0;\n    let max: number = 0;\n    let maxCount: number = 0;\n\
    \    for (let i: number = 0; i < lst.length; i++) {\n        for (let j: number\
    \ = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n         \
    \       count++;\n            }\n        }\n        if (count >= lst[i] && count\
    \ > maxCount) {\n            max = lst[i];\n            maxCount = count;\n  \
    \      }\n        count = 0;\n    }\n    if (max == 0) {\n        return -1;\n\
    \    }\n    return max;\n}\n", "    let result = -1;\n    let max = 0;\n    let\
    \ obj = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (obj[lst[i]])\
    \ {\n            obj[lst[i]] += 1;\n        } else {\n            obj[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] >=\
    \ key && key > max) {\n            max = key;\n            result = key;\n   \
    \     }\n    }\n    return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let max = -1;\n    let count = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n       \
    \     if (lst[i] == lst[j]) {\n                count++;\n            }\n     \
    \   }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return max;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let count: number = 0;\n    let max: number = 0;\n \
    \   let maxCount: number = 0;\n    let maxIndex: number = 0;\n    for (let i:\
    \ number = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n          \
    \  max = lst[i];\n        }\n    }\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            maxCount++;\n            maxIndex\
    \ = i;\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        if (lst[i] == lst[maxIndex]) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let\
    \ max = -1;\n    let count = 0;\n    let maxCount = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \            maxCount = 1;\n        } else if (lst[i] == max) {\n            maxCount++;\n\
    \        }\n    }\n    if (maxCount >= max) {\n        return max;\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    let count = 0;\n    let max = 0;\n\
    \    let maxCount = 0;\n    let result = -1;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max)\
    \ {\n            maxCount++;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ === lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && count >= maxCount) {\n            result = lst[i];\n   \
    \     }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let freq = {};\n    let max = -1;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]\
    \ += 1;\n        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]\
    \ && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    let count = 0;\n    let max = 0;\n    let maxCount = 0;\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < lst.length; i++) {\n        count\
    \ = 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i]) {\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                maxIndex = i;\n            }\n        }\n    }\n \
    \   if (maxCount == 0) {\n        return -1;\n    }\n    return lst[maxIndex];\n\
    }\n", "    let result: any = -1;\n    let counter: any = 0;\n    let max: any\
    \ = 0;\n    let maxCounter: any = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n \
    \           maxCounter++;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ === lst[j]) {\n                counter++;\n            }\n        }\n      \
    \  if (counter >= lst[i] && counter >= maxCounter) {\n            result = lst[i];\n\
    \        }\n        counter = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let count = 0;\n    let max = 0;\n    let maxCount =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j <\
    \ lst.length; j++) {\n            if (lst[i] == lst[j]) {\n                count++;\n\
    \            }\n        }\n        if (count >= lst[i] && count > maxCount) {\n\
    \            max = lst[i];\n            maxCount = count;\n        }\n       \
    \ count = 0;\n    }\n    if (max == 0) {\n        return -1;\n    }\n    return\
    \ max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ dict: any = {};\n    let max: number = 0;\n    let result: number = -1;\n  \
    \  for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i] in dict)\
    \ {\n            dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in dict) {\n        if (dict[key] >=\
    \ key && key > max) {\n            max = key;\n            result = key;\n   \
    \     }\n    }\n    return result;\n}\n", "    let count = 0;\n    let max = 0;\n\
    \    let result = -1;\n    for (let i = 0; i < lst.length; i++) {\n        for\
    \ (let j = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n \
    \               count++;\n            }\n        }\n        if (lst[i] > max &&\
    \ count >= lst[i]) {\n            max = lst[i];\n            result = max;\n \
    \       }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let result: any = -1;\n    let count: any = 0;\n    let\
    \ max: any = 0;\n    let maxCount: any = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        result = max;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let max = -1;\n    let count = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n   \
    \         if (lst[i] == lst[j]) {\n                count++;\n            }\n \
    \       }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return max;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let count: number = 0;\n    let max: number = 0;\n \
    \   let maxCount: number = 0;\n    let maxIndex: number = 0;\n    for (let i:\
    \ number = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n          \
    \  max = lst[i];\n        }\n    }\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            maxCount++;\n            maxIndex\
    \ = i;\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        if (lst[i] == lst[maxIndex]) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let max = Math.max(...lst);\n    let count = 0;\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n    \
    \        count++;\n        }\n    }\n    if (count >= max) {\n        return max;\n\
    \    } else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3,\
    \ 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in dict) {\n        if (dict[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let obj = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (obj[lst[i]]) {\n            obj[lst[i]] += 1;\n        } else\
    \ {\n            obj[lst[i]] = 1;\n        }\n    }\n    let max = 0;\n    for\
    \ (let key in obj) {\n        if (obj[key] >= key && key > max) {\n          \
    \  max = key;\n        }\n    }\n    if (max === 0) {\n        return -1;\n  \
    \  } else {\n        return max;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3,\
    \ 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in dict) {\n        if (dict[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let max\
    \ = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let\
    \ result = -1;\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n       \
    \     if (lst[i] === lst[j]) {\n                count++;\n            }\n    \
    \    }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \            result = max;\n        }\n        count = 0;\n    }\n    return result;\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let dict: any\
    \ = {};\n    let max: number = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] in dict) {\n            dict[lst[i]]++;\n       \
    \ } else {\n            dict[lst[i]] = 1;\n        }\n        if (dict[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n", "   \
    \ let result: any = -1;\n    let count: any = 0;\n    let max: any = 0;\n    let\
    \ maxCount: any = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n   \
    \     if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n \
    \           maxCount++;\n        }\n    }\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        for (let j: number = 0; j < lst.length; j++) {\n           \
    \ if (lst[i] == lst[j]) {\n                count++;\n            }\n        }\n\
    \        if (count >= lst[i] && count >= maxCount) {\n            result = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let frequency: any = {};\n    let max: number = 0;\n \
    \   let maxFreq: number = 0;\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]++;\n    \
    \    } else {\n            frequency[lst[i]] = 1;\n        }\n        if (frequency[lst[i]]\
    \ > maxFreq) {\n            maxFreq = frequency[lst[i]];\n            max = lst[i];\n\
    \        }\n    }\n    if (maxFreq >= max) {\n        return max;\n    } else\
    \ {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));", "    let count: any = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (count[lst[i]]) {\n            count[lst[i]] += 1;\n        }\
    \ else {\n            count[lst[i]] = 1;\n        }\n    }\n    let max: number\
    \ = 0;\n    for (let key in count) {\n        if (count[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    if (max == 0) {\n        return\
    \ -1;\n    } else {\n        return max;\n    }\n}\n", "    let dic = {};\n  \
    \  let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (dic[lst[i]])\
    \ {\n            dic[lst[i]] += 1;\n        } else {\n            dic[lst[i]]\
    \ = 1;\n        }\n        if (dic[lst[i]] >= lst[i] && lst[i] > max) {\n    \
    \        max = lst[i];\n        }\n    }\n    return max > 0 ? max : -1;\n}\n",
  "    let freq = {};\n    let max = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else\
    \ {\n            freq[lst[i]] = 1;\n        }\n        if (lst[i] > max) {\n \
    \           max = lst[i];\n        }\n    }\n    for (let i = max; i > 0; i--)\
    \ {\n        if (freq[i] >= i) {\n            return i;\n        }\n    }\n  \
    \  return -1;\n}\n", "    let max = Math.max(...lst);\n    let count = 0;\n  \
    \  for (let i = 1; i <= max; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[j] == i) {\n                count++;\n            }\n\
    \        }\n        if (count >= i) {\n            return i;\n        }\n    \
    \    count = 0;\n    }\n    return -1;\n}\nconsole.log(search([4, 1, 2, 2, 3,\
    \ 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in dict) {\n        if (dict[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let max\
    \ = 0;\n    let maxFrequency = 0;\n    let frequency = 0;\n    let maxFrequencyValue\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i < max;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[j]\
    \ == i) {\n                frequency++;\n            }\n        }\n        if\
    \ (frequency >= i && frequency > maxFrequency) {\n            maxFrequency = frequency;\n\
    \            maxFrequencyValue = i;\n        }\n        frequency = 0;\n    }\n\
    \    if (maxFrequencyValue == 0) {\n        return -1;\n    }\n    return maxFrequencyValue;\n\
    }\n", "    let frequency = {};\n    let max = -1;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]] += 1;\n\
    \        } else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    for\
    \ (let key in frequency) {\n        if (frequency[key] >= key && key > max) {\n\
    \            max = key;\n        }\n    }\n    return max;\n}\n", "    let max\
    \ = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n         \
    \   count++;\n        }\n    }\n    if (count >= max) {\n        return max;\n\
    \    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2,\
    \ 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n      \
    \  } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in freq) {\n        if (freq[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let result\
    \ = -1;\n    let freq = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && lst[i] > freq) {\n            freq = lst[i];\n         \
    \   result = freq;\n        }\n        count = 0;\n    }\n    return result;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    let freq = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n            maxFreq\
    \ = freq[lst[i]];\n        }\n    }\n    return max;\n}\n", "    let result: any\
    \ = -1;\n    let count: any = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        for (let j: number = 0; j < lst.length; j++) {\n           \
    \ if (lst[i] == lst[j]) {\n                count++;\n            }\n        }\n\
    \        if (count >= lst[i] && lst[i] > result) {\n            result = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let max = 0;\n    let maxCount = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        let count = 0;\n        for (let j = 0; j\
    \ < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n                count++;\n\
    \            }\n        }\n        if (count >= lst[i] && count >= maxCount) {\n\
    \            max = lst[i];\n            maxCount = count;\n        }\n    }\n\
    \    if (max == 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let\
    \ result = -1;\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n       \
    \     if (lst[i] == lst[j]) {\n                count++;\n            }\n     \
    \   }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \            result = max;\n        }\n        count = 0;\n    }\n    return result;\n\
    }\n", "    let result = -1;\n    let count = 0;\n    let max = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] == lst[j]) {\n                count++;\n         \
    \   }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n           \
    \ max = lst[i];\n            result = max;\n        }\n        count = 0;\n  \
    \  }\n    return result;\n}\n", "    let max = 0;\n    let maxCount = 0;\n   \
    \ let count = 0;\n    let i = 0;\n    let j = 0;\n    let result = -1;\n    lst.sort();\n\
    \    while (i < lst.length) {\n        j = i + 1;\n        count = 1;\n      \
    \  while (j < lst.length && lst[i] == lst[j]) {\n            count++;\n      \
    \      j++;\n        }\n        if (lst[i] > maxCount && count >= lst[i]) {\n\
    \            maxCount = count;\n            max = lst[i];\n            result\
    \ = max;\n        }\n        i = j;\n    }\n    return result;\n}\n", "    let\
    \ freq = {};\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n        if (freq[lst[i]] >= lst[i]\
    \ && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return\
    \ max || -1;\n}\n", "    let count = 0;\n    let max = 0;\n    let maxCount =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    for (let j = 0; j < lst.length;\
    \ j++) {\n        if (lst[j] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    }\n    else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\n", "    let max = -1;\n    let count = 0;\n    let maxCount = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n            maxCount = 1;\n        } else if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        return max;\n    } else {\n        return -1;\n    }\n}\n", "   \
    \ let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\n", "    let max = 0;\n    let maxCount = 0;\n    let count = 0;\n \
    \   let i = 0;\n    let j = 0;\n    let result = -1;\n    lst.sort();\n    while\
    \ (i < lst.length) {\n        j = i + 1;\n        count = 1;\n        while (j\
    \ < lst.length && lst[i] == lst[j]) {\n            count++;\n            j++;\n\
    \        }\n        if (lst[i] > maxCount && count >= lst[i]) {\n            maxCount\
    \ = count;\n            max = lst[i];\n            result = max;\n        }\n\
    \        i = j;\n    }\n    return result;\n}\n", "    let count = 0;\n    let\
    \ max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n    \
    \        count++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] == max) {\n            maxCount++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ max = 0;\n    let count = 0;\n    let result = -1;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ === max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        result = max;\n    }\n    return result;\n}\nconsole.log(search([4, 1,\
    \ 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dic: any = {};\n    let max: number = -1;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (dic[lst[i]]) {\n           \
    \ dic[lst[i]] += 1;\n        } else {\n            dic[lst[i]] = 1;\n        }\n\
    \    }\n    for (let key in dic) {\n        if (dic[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    return max;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let max = 0;\n    let maxCount = 0;\n    let count =\
    \ 0;\n    let i = 0;\n    while (i < lst.length) {\n        let j = i;\n     \
    \   while (j < lst.length && lst[j] === lst[i]) {\n            j++;\n        }\n\
    \        count = j - i;\n        if (count >= lst[i] && lst[i] > max) {\n    \
    \        max = lst[i];\n            maxCount = count;\n        }\n        i =\
    \ j;\n    }\n    return max > 0 ? max : -1;\n}\n", "    let count = 0;\n    let\
    \ max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        for (let j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j])\
    \ {\n                count++;\n            }\n        }\n        if (count >=\
    \ lst[i] && count > maxCount) {\n            max = lst[i];\n            maxCount\
    \ = count;\n        }\n        count = 0;\n    }\n    if (max == 0) {\n      \
    \  return -1;\n    }\n    return max;\n}\n", "    let count = 0;\n    let max\
    \ = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      for (let j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j])\
    \ {\n                count++;\n            }\n        }\n        if (count >=\
    \ lst[i] && count > maxCount) {\n            max = lst[i];\n            maxCount\
    \ = count;\n        }\n        count = 0;\n    }\n    if (max == 0) {\n      \
    \  return -1;\n    }\n    return max;\n}\n", "    let count: any = {};\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (count[lst[i]]) {\n         \
    \   count[lst[i]] += 1;\n        } else {\n            count[lst[i]] = 1;\n  \
    \      }\n    }\n    let max: number = 0;\n    for (let key in count) {\n    \
    \    if (count[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    if (max === 0) {\n        return -1;\n    } else {\n        return\
    \ max;\n    }\n}\n", "    let result = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n\
    \            if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (count >= lst[i] && lst[i] > result) {\n            result\
    \ = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in dict) {\n        if (dict[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let result\
    \ = -1;\n    let count = 0;\n    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let key\
    \ in dict) {\n        if (dict[key] >= key && key > result) {\n            result\
    \ = key;\n        }\n    }\n    return result;\n}\nconsole.log(search([4, 1, 2,\
    \ 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let max = 0;\n    let dict = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n   \
    \         dict[lst[i]]++;\n        } else {\n            dict[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in dict) {\n        if (dict[key] >= key &&\
    \ key > max) {\n            max = key;\n            result = key;\n        }\n\
    \    }\n    return result;\n}\n", "    let result: any = -1;\n    let count: any\
    \ = 0;\n    let max: any = 0;\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        for (let j: number = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n           \
    \ result = max;\n        }\n        count = 0;\n    }\n    return result;\n}\n\
    console.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3,\
    \ 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let max = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let\
    \ j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n       \
    \         count++;\n            }\n        }\n        if (count >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n        count = 0;\n    }\n\
    \    return max;\n}\n", "    let result = -1;\n    let count = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] === lst[j]) {\n                count++;\n        \
    \    }\n        }\n        if (count >= lst[i] && lst[i] > result) {\n       \
    \     result = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n\
    }\n", "    let count = 0;\n    let max = 0;\n    let maxCount = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] == lst[j]) {\n                count++;\n         \
    \   }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n           \
    \ max = lst[i];\n            maxCount = count;\n        }\n        count = 0;\n\
    \    }\n    if (maxCount == 0) {\n        return -1;\n    }\n    return max;\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let count = 0;\n\
    \    let result = -1;\n    for (let i = 0; i < lst.length; i++) {\n        for\
    \ (let j = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n \
    \               count++;\n            }\n        }\n        if (count >= lst[i]\
    \ && lst[i] > result) {\n            result = lst[i];\n        }\n        count\
    \ = 0;\n    }\n    return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for (let\
    \ key in freq) {\n        if (freq[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let count: any = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (count[lst[i]]) {\n  \
    \          count[lst[i]] += 1;\n        } else {\n            count[lst[i]] =\
    \ 1;\n        }\n    }\n    let max: number = 0;\n    for (let key in count) {\n\
    \        if (count[key] >= key && key > max) {\n            max = key;\n     \
    \   }\n    }\n    if (max === 0) {\n        return -1;\n    } else {\n       \
    \ return max;\n    }\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        }\
    \ else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in freq) {\n        if (freq[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let result\
    \ = -1;\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (lst[i] > max && count >= lst[i]) {\n            max = lst[i];\n           \
    \ result = max;\n        }\n        count = 0;\n    }\n    return result;\n}\n\
    console.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3,\
    \ 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let result: number\
    \ = -1;\n    let frequency: number = 0;\n    let frequencyMap: Map<number, number>\
    \ = new Map<number, number>();\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        if (frequencyMap.has(lst[i])) {\n            frequencyMap.set(lst[i],\
    \ frequencyMap.get(lst[i]) + 1);\n        } else {\n            frequencyMap.set(lst[i],\
    \ 1);\n        }\n    }\n    for (let [key, value] of frequencyMap) {\n      \
    \  if (key > 0 && value >= key && value > frequency) {\n            result = key;\n\
    \            frequency = value;\n        }\n    }\n    return result;\n}\n", " \
    \   let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let dict: any = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max: number\
    \ = -1;\n    for (let key in dict) {\n        if (dict[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    return max;\n}\n", "    let\
    \ frequency = {};\n    let max = 0;\n    let result = -1;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]\
    \ += 1;\n        } else {\n            frequency[lst[i]] = 1;\n        }\n   \
    \ }\n    for (let key in frequency) {\n        if (frequency[key] >= key && key\
    \ > max) {\n            max = key;\n            result = key;\n        }\n   \
    \ }\n    return result;\n}\n", "    let result: number = -1;\n    let count: number\
    \ = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > result) {\n            result = lst[i];\n            count = 1;\n        }\
    \ else if (lst[i] === result) {\n            count++;\n        }\n    }\n    if\
    \ (count >= result) {\n        return result;\n    } else {\n        return -1;\n\
    \    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "  let max\
    \ = -1;\n  let freq = 0;\n  let count = 0;\n  let num = 0;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n\
    \  }\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] === max) {\n  \
    \    count++;\n    }\n  }\n  for (let i = 0; i < lst.length; i++) {\n    for (let\
    \ j = 0; j < lst.length; j++) {\n      if (lst[i] === lst[j]) {\n        freq++;\n\
    \      }\n    }\n    if (freq >= lst[i] && lst[i] > num) {\n      num = lst[i];\n\
    \    }\n    freq = 0;\n  }\n  if (num === 0) {\n    return -1;\n  }\n  return\
    \ num;\n}\n", "    let max = Math.max(...lst);\n    let count = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            count++;\n\
    \        }\n    }\n    if (count >= max) {\n        return max;\n    } else {\n\
    \        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n     \
    \   if (freq[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    return max;\n}\n", "    let max = 0;\n    let maxCount = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        let count = 0;\n        for (let\
    \ j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n       \
    \         count++;\n            }\n        }\n        if (count >= lst[i] && count\
    \ >= maxCount) {\n            max = lst[i];\n            maxCount = count;\n \
    \       }\n    }\n    if (maxCount == 0) {\n        return -1;\n    }\n    return\
    \ max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ count = 0;\n    let max = 0;\n    let maxCount = 0;\n    let maxCountCount =\
    \ 0;\n    let maxCountCountCount = 0;\n    let maxCountCountCountCount = 0;\n\
    \    let maxCountCountCountCountCount = 0;\n    let maxCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCount = 0;\n    let maxCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCount = 0;\n    let\
    \ maxCountCountCountCountCountCountCountCountCountCount = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n    let maxCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ =", "    let dict = {};\n    for (let i = 0; i < lst.length; i++) {\n      \
    \  if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n        } else {\n   \
    \         dict[lst[i]] = 1;\n        }\n    }\n    let max = 0;\n    for (let\
    \ key in dict) {\n        if (dict[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    if (max === 0) {\n        return -1;\n    } else\
    \ {\n        return max;\n    }\n}\n", "    let count = 0;\n    let max = 0;\n\
    \    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        for\
    \ (let j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n  \
    \              count++;\n            }\n        }\n        if (count >= lst[i]\
    \ && lst[i] > max) {\n            max = lst[i];\n            maxCount = count;\n\
    \        }\n        count = 0;\n    }\n    if (maxCount == 0) {\n        return\
    \ -1;\n    }\n    return max;\n}\n", "    let dict = {};\n    let max = 0;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n    \
    \        max = lst[i];\n        }\n        if (dict[lst[i]]) {\n            dict[lst[i]]++;\n\
    \        } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ i = max; i > 0; i--) {\n        if (dict[i] >= i) {\n            return i;\n\
    \        }\n    }\n    return -1;\n}\n", "    let count = 0;\n    let max = 0;\n\
    \    let maxNum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        for\
    \ (let j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n  \
    \              count++;\n            }\n        }\n        if (count >= lst[i]\
    \ && count > max) {\n            max = count;\n            maxNum = lst[i];\n\
    \        }\n        count = 0;\n    }\n    if (maxNum == 0) {\n        return\
    \ -1;\n    }\n    return maxNum;\n}\n", "    let max = 0;\n    let count = 0;\n\
    \    let result = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n            count++;\n\
    \        }\n    }\n    if (count >= max) {\n        result = max;\n    }\n   \
    \ return result;\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n    \
    \    if (lst[i] == max) {\n            count++;\n        }\n    }\n    if (count\
    \ >= max) {\n        return max;\n    }\n    else {\n        return -1;\n    }\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let max = -1;\n\
    \    let count = 0;\n    let frequency = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max)\
    \ {\n            count++;\n        }\n    }\n    if (count >= max) {\n       \
    \ return max;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let dict: any = {};\n    let max: number = 0;\n    let\
    \ max_key: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n \
    \       if (dict[lst[i]]) {\n            dict[lst[i]]++;\n        } else {\n \
    \           dict[lst[i]] = 1;\n        }\n    }\n    for (let key in dict) {\n\
    \        if (dict[key] >= key && dict[key] > max) {\n            max = dict[key];\n\
    \            max_key = key;\n        }\n    }\n    if (max_key === 0) {\n    \
    \    return -1;\n    } else {\n        return max_key;\n    }\n}\n", "    let\
    \ max = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n     \
    \       count++;\n        }\n    }\n    if (count >= max) {\n        return max;\n\
    \    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2,\
    \ 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result: any = -1;\n    let count: any = 0;\n   \
    \ let max: any = 0;\n    let maxCount: any = 0;\n    for (let i: number = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n      \
    \  if (lst[i] == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount\
    \ >= max) {\n        result = max;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let result = -1;\n    let count = 0;\n    let max = 0;\n\
    \    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n            maxCount++;\n\
    \        }\n    }\n    if (maxCount >= max) {\n        result = max;\n    }\n\
    \    return result;\n}\n", "    let count = 0;\n    let max = 0;\n    let maxCount\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    }\n    else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ counts = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (counts[lst[i]]) {\n            counts[lst[i]] += 1;\n        } else\
    \ {\n            counts[lst[i]] = 1;\n        }\n        if (counts[lst[i]] >=\
    \ lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n   \
    \ return max;\n}\n", "    let frequency = {};\n    let max = 0;\n    let maxFreq\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]])\
    \ {\n            frequency[lst[i]]++;\n        } else {\n            frequency[lst[i]]\
    \ = 1;\n        }\n        if (frequency[lst[i]] >= lst[i] && lst[i] > max) {\n\
    \            max = lst[i];\n            maxFreq = frequency[lst[i]];\n       \
    \ }\n    }\n    return max;\n}\n", "    let freq = {};\n    let max = -1;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n     \
    \       freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]] = 1;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let freq = {};\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]\
    \ += 1;\n        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]\
    \ && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    let count: number = 0;\n    let max: number = 0;\n    let maxCount:\
    \ number = 0;\n    let result: number = -1;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        result = max;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let freq: any = {};\n    let max: any = -1;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n \
    \           freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n      \
    \  } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]\
    \ && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    let dict = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n        } else {\n\
    \            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for (let\
    \ key in dict) {\n        if (dict[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let dict = {};\n    let\
    \ max = 0;\n    let maxKey = -1;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] in dict) {\n            dict[lst[i]] += 1;\n        } else\
    \ {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let key in dict)\
    \ {\n        if (dict[key] >= key && dict[key] > max) {\n            max = dict[key];\n\
    \            maxKey = key;\n        }\n    }\n    return maxKey;\n}\n", "    let\
    \ max = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n     \
    \       count++;\n        }\n    }\n    if (count >= max) {\n        return max;\n\
    \    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2,\
    \ 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let result = -1;\n    let count = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n\
    \            if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (count >= lst[i] && lst[i] > result) {\n            result\
    \ = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let freq = 0;\n    let count =\
    \ 0;\n    let num = 0;\n    for (let i = 0; i < lst.length; i++) {\n        count\
    \ = 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && count > freq) {\n            freq = count;\n           \
    \ num = lst[i];\n        }\n    }\n    if (freq > 0) {\n        result = num;\n\
    \    }\n    return result;\n}\n", "    let result = -1;\n    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in freq) {\n        if (freq[key] >= key &&\
    \ key > result) {\n            result = key;\n        }\n    }\n    return result;\n\
    }\n", "    let result = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ === lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && lst[i] > result) {\n            result = lst[i];\n     \
    \   }\n        count = 0;\n    }\n    return result;\n}\n", "    let count = 0;\n\
    \    let max = 0;\n    let maxCount = 0;\n    let maxIndex = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] == lst[j]) {\n                count++;\n         \
    \   }\n        }\n        if (count >= lst[i] && count > maxCount) {\n       \
    \     max = lst[i];\n            maxCount = count;\n            maxIndex = i;\n\
    \        }\n        count = 0;\n    }\n    if (maxCount == 0) {\n        return\
    \ -1;\n    }\n    return max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        let count = 0;\n        for (let j = 0; j < lst.length; j++) {\n    \
    \        if (lst[i] == lst[j]) {\n                count++;\n            }\n  \
    \      }\n        if (count >= lst[i] && count >= maxCount) {\n            max\
    \ = lst[i];\n            maxCount = count;\n        }\n    }\n    if (maxCount\
    \ == 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let max = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] === max) {\n            count++;\n\
    \        }\n    }\n    if (count >= max) {\n        return max;\n    } else {\n\
    \        return -1;\n    }\n}\n", "    let result = -1;\n    let count = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n   \
    \         }\n        }\n        if (count >= lst[i] && lst[i] > result) {\n  \
    \          result = lst[i];\n        }\n        count = 0;\n    }\n    return\
    \ result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ result = 0;\n    let count = 0;\n    let count2 = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > result) {\n            result = lst[i];\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == result) {\n            count++;\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] == result - 1) {\n            count2++;\n\
    \        }\n    }\n    if (count >= result) {\n        return result;\n    }\n\
    \    else if (count2 >= result - 1) {\n        return result - 1;\n    }\n   \
    \ else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let freq = {};\n    let max = 0;\n    let maxFreq = 0;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n    \
    \        freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n  \
    \      }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max\
    \ = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n    return\
    \ max;\n}\n", "    let dic = {};\n    let max = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dic[lst[i]] == undefined) {\n            dic[lst[i]] = 1;\n\
    \        } else {\n            dic[lst[i]] += 1;\n        }\n        if (dic[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    if (max == 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let\
    \ dict = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]])\
    \ {\n            dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]]\
    \ = 1;\n        }\n    }\n    let max = -1;\n    for (let key in dict) {\n   \
    \     if (dict[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n          \
    \  max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] === max) {\n            count++;\n        }\n    }\n    if\
    \ (count >= max) {\n        return max;\n    } else {\n        return -1;\n  \
    \  }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2,\
    \ 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let max\
    \ = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let count: number = 0;\n    let max: number = 0;\n  \
    \  let maxCount: number = 0;\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        for (let j: number = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n           \
    \ maxCount = count;\n        }\n        count = 0;\n    }\n    if (maxCount ==\
    \ 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let max = -1;\n\
    \    let count = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n           \
    \ maxCount = 1;\n        } else if (lst[i] == max) {\n            maxCount++;\n\
    \        }\n    }\n    if (maxCount >= max) {\n        return max;\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    let dict = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]]++;\n\
    \        } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let result\
    \ = -1;\n    for (let key in dict) {\n        if (dict[key] >= key && key > result)\
    \ {\n            result = key;\n        }\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n\
    \            if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (count >= lst[i] && lst[i] > result) {\n            result\
    \ = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n}\n", " \
    \   let count = 0;\n    let max = 0;\n    let result = -1;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n   \
    \         if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (lst[i] > max && count >= lst[i]) {\n            max =\
    \ lst[i];\n            result = max;\n        }\n        count = 0;\n    }\n \
    \   return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ dict: any = {};\n    let max: number = 0;\n    let maxKey: number = 0;\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n      \
    \      dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in dict) {\n        if (dict[key] >= key &&\
    \ key > maxKey) {\n            maxKey = key;\n        }\n    }\n    if (maxKey\
    \ == 0) {\n        return -1;\n    } else {\n        return maxKey;\n    }\n}\n",
  "    let frequency = {};\n    let max = 0;\n    let result = -1;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]\
    \ += 1;\n        } else {\n            frequency[lst[i]] = 1;\n        }\n   \
    \ }\n    for (let key in frequency) {\n        if (frequency[key] >= key && frequency[key]\
    \ > max) {\n            max = frequency[key];\n            result = key;\n   \
    \     }\n    }\n    return result;\n}\n", "    let result = -1;\n    let count\
    \ = 0;\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ count = 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i] && count > max) {\n            max = count;\n            result\
    \ = lst[i];\n        }\n    }\n    return result;\n}\n", "    let max = 0;\n \
    \   let count = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max)\
    \ {\n            count++;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === maxCount) {\n            maxCount++;\n      \
    \  }\n    }\n    if (count >= max) {\n        return max;\n    } else {\n    \
    \    return -1;\n    }\n}\n", "    let result = -1;\n    let count = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n   \
    \         }\n        }\n        if (count >= lst[i] && lst[i] > result) {\n  \
    \          result = lst[i];\n        }\n        count = 0;\n    }\n    return\
    \ result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n     \
    \   if (freq[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    let\
    \ dict = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]])\
    \ {\n            dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ if (dict[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n \
    \       }\n    }\n    return max;\n}\n", "    let max = Math.max(...lst);\n  \
    \  let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ === max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        return max;\n    } else {\n        return -1;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let freq = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else\
    \ {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for\
    \ (let key in freq) {\n        if (freq[key] >= key && key > max) {\n        \
    \    max = key;\n        }\n    }\n    return max;\n}\n", "    let max = 0;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] == max) {\n            count++;\n \
    \       }\n    }\n    if (count >= max) {\n        return max;\n    }\n    else\
    \ {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let count: number = 0;\n    let max: number = 0;\n    let\
    \ maxCount: number = 0;\n    let maxIndex: number = 0;\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] == max) {\n            maxCount++;\n            maxIndex\
    \ = i;\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        if (lst[i] == lst[maxIndex]) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let count = 0;\n    let max = 0;\n    let maxCount =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j <\
    \ lst.length; j++) {\n            if (lst[i] == lst[j]) {\n                count++;\n\
    \            }\n        }\n        if (count >= lst[i] && count > maxCount) {\n\
    \            max = lst[i];\n            maxCount = count;\n        }\n       \
    \ count = 0;\n    }\n    if (max == 0) {\n        return -1;\n    }\n    return\
    \ max;\n}", "    let count = 0;\n    let max = 0;\n    let maxCount = 0;\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n      \
    \      max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] === max) {\n            count++;\n        }\n    }\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > maxCount) {\n\
    \            maxCount = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === maxCount) {\n            count++;\n        }\n\
    \    }\n    if (count >= max) {\n        return max;\n    }\n    else if (count\
    \ >= maxCount) {\n        return maxCount;\n    }\n    else {\n        return\
    \ -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let\
    \ dict = {};\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (dict[lst[i]]) {\n            dict[lst[i]]++;\n        } else {\n \
    \           dict[lst[i]] = 1;\n        }\n        if (dict[lst[i]] >= lst[i] &&\
    \ lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return max\
    \ > 0 ? max : -1;\n}\n", "    let result: any = -1;\n    let count: any = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] == lst[j]) {\n                count++;\n    \
    \        }\n        }\n        if (count >= lst[i]) {\n            result = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let count = 0;\n    let max = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n   \
    \         if (lst[i] == lst[j]) {\n                count++;\n            }\n \
    \       }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \        }\n        count = 0;\n    }\n    if (max == 0) {\n        return -1;\n\
    \    }\n    return max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let\
    \ result = -1;\n    let max = 0;\n    let count = 0;\n    let dict = {};\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n      \
    \      dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in dict) {\n        if (dict[key] >= key) {\n\
    \            count = dict[key];\n            if (count > max) {\n            \
    \    max = count;\n                result = key;\n            }\n        }\n \
    \   }\n    return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ max = 0;\n    let count = 0;\n    let result = -1;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i = 1; i <= max; i++) {\n        for (let j =\
    \ 0; j < lst.length; j++) {\n            if (lst[j] == i) {\n                count++;\n\
    \            }\n        }\n        if (count >= i) {\n            result = i;\n\
    \        }\n        count = 0;\n    }\n    return result;\n}\n", "    let max\
    \ = -1;\n    let counter = 0;\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      for (let j = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j])\
    \ {\n                counter++;\n            }\n        }\n        if (counter\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n       \
    \ counter = 0;\n    }\n    return max;\n}\n", "    let dict = {};\n    let max\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n        if (dict[lst[i]]) {\n     \
    \       dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n\
    \        }\n    }\n    for (let i = max; i > 0; i--) {\n        if (dict[i] >=\
    \ i) {\n            return i;\n        }\n    }\n    return -1;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let result = -1;\n    let max = 0;\n    let count = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n   \
    \         }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n     \
    \       max = lst[i];\n            result = max;\n        }\n        count = 0;\n\
    \    }\n    return result;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ dict = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (dict[lst[i]] == undefined) {\n            dict[lst[i]] = 1;\n   \
    \     } else {\n            dict[lst[i]] += 1;\n        }\n    }\n    for (let\
    \ key in dict) {\n        if (dict[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let count = 0;\n    let\
    \ max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        for (let j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j])\
    \ {\n                count++;\n            }\n        }\n        if (count >=\
    \ lst[i] && count > maxCount) {\n            max = lst[i];\n            maxCount\
    \ = count;\n        }\n        count = 0;\n    }\n    if (max == 0) {\n      \
    \  return -1;\n    }\n    return max;\n}\n", "    let max = 0;\n    let count\
    \ = 0;\n    let result = 0;\n    for (let i = 0; i < lst.length; i++) {\n    \
    \    if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] == max) {\n         \
    \   count++;\n        }\n    }\n    if (count >= max) {\n        result = max;\n\
    \    } else {\n        result = -1;\n    }\n    return result;\n}\n", "    let\
    \ freq: any = {};\n    let max: any = -1;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n      \
    \  } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n", "   \
    \ let result: any = -1;\n    let count: any = 0;\n    let max: any = 0;\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        for (let j: number = 0;\
    \ j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n              \
    \  count++;\n            }\n        }\n        if (count >= lst[i] && count >\
    \ max) {\n            max = count;\n            result = lst[i];\n        }\n\
    \        count = 0;\n    }\n    return result;\n}\nconsole.log(search([4, 1, 2,\
    \ 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dic = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (dic[lst[i]]) {\n            dic[lst[i]] += 1;\n        } else\
    \ {\n            dic[lst[i]] = 1;\n        }\n    }\n    let keys = Object.keys(dic);\n\
    \    let max = -1;\n    for (let i = 0; i < keys.length; i++) {\n        if (dic[keys[i]]\
    \ >= keys[i] && keys[i] > max) {\n            max = keys[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n    \
    \    if (lst[i] == max) {\n            count++;\n        }\n    }\n    if (count\
    \ >= max) {\n        return max;\n    }\n    else {\n        return -1;\n    }\n\
    }\n", "    let nums = lst.sort((a, b) => a - b);\n    let max = nums[nums.length\
    \ - 1];\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n   \
    \     if (nums[i] == max) {\n            count++;\n        }\n    }\n    if (count\
    \ >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n\
    \nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let obj = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (obj[lst[i]]) {\n    \
    \        obj[lst[i]] += 1;\n        } else {\n            obj[lst[i]] = 1;\n \
    \       }\n    }\n    let max = -1;\n    for (let key in obj) {\n        if (obj[key]\
    \ >= key && key > max) {\n            max = key;\n        }\n    }\n    return\
    \ max;\n}\n", "    let count = 0;\n    let max = 0;\n    let maxCount = 0;\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < lst.length; i++) {\n        count\
    \ = 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ == lst[j]) {\n                count++;\n            }\n        }\n        if\
    \ (count >= lst[i]) {\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                maxIndex = i;\n            }\n        }\n    }\n \
    \   if (maxCount == 0) {\n        return -1;\n    }\n    return lst[maxIndex];\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let max = 0;\n\
    \    let maxCount = 0;\n    let count = 0;\n    let i = 0;\n    while (i < lst.length)\
    \ {\n        count = 0;\n        for (let j = 0; j < lst.length; j++) {\n    \
    \        if (lst[i] == lst[j]) {\n                count++;\n            }\n  \
    \      }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \            maxCount = count;\n        }\n        i++;\n    }\n    if (maxCount\
    \ == 0) {\n        return -1;\n    }\n    return max;\n}\n", "    let max = Math.max(...lst);\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        return max;\n    } else {\n        return -1;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let max = -1;\n    let count = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        return max;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let dict: any = {};\n    let max: number = 0;\n    let\
    \ max_key: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n        } else {\n       \
    \     dict[lst[i]] = 1;\n        }\n    }\n    for (let key in dict) {\n     \
    \   if (dict[key] >= key && dict[key] > max) {\n            max = dict[key];\n\
    \            max_key = key;\n        }\n    }\n    if (max_key == 0) {\n     \
    \   return -1;\n    } else {\n        return max_key;\n    }\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let freq = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else\
    \ {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for\
    \ (let key in freq) {\n        if (freq[key] >= key && key > max) {\n        \
    \    max = key;\n        }\n    }\n    return max;\n}\n", "    let max = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] == max) {\n            count++;\n \
    \       }\n    }\n    if (count >= max) {\n        return max;\n    }\n    else\
    \ {\n        return -1;\n    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));", "    let max = 0;\n    let count = 0;\n    let result = -1;\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n      \
    \      max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n  \
    \  if (count >= max) {\n        result = max;\n    }\n    return result;\n}\n\
    console.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3,\
    \ 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let dic = {};\n\
    \    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (dic[lst[i]])\
    \ {\n            dic[lst[i]] += 1;\n        } else {\n            dic[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ if (dic[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n  \
    \      }\n    }\n    return max;\n}\n", "  let max = -1;\n  let count = 0;\n \
    \ let dict = {};\n  for (let i = 0; i < lst.length; i++) {\n    if (dict[lst[i]])\
    \ {\n      dict[lst[i]] += 1;\n    } else {\n      dict[lst[i]] = 1;\n    }\n\
    \  }\n  for (let key in dict) {\n    if (dict[key] >= key && key > max) {\n  \
    \    max = key;\n    }\n  }\n  return max;\n}\n", "    let dict = {};\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n          \
    \  dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n     \
    \   }\n    }\n    let max = -1;\n    for (let key in dict) {\n        if (dict[key]\
    \ >= key && key > max) {\n            max = key;\n        }\n    }\n    return\
    \ max;\n}\n", "    let result: any = -1;\n    let count: any = 0;\n    let max:\
    \ any = 0;\n    let maxCount: any = 0;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        result = max;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));", "    let dict: any = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max: number\
    \ = 0;\n    for (let key in dict) {\n        if (dict[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    if (max === 0) {\n        return\
    \ -1;\n    } else {\n        return max;\n    }\n}\n", "    let max = -1;\n  \
    \  let count = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n           \
    \ maxCount = 1;\n        } else if (lst[i] == max) {\n            maxCount++;\n\
    \        }\n    }\n    if (maxCount >= max) {\n        return max;\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    let max = 0;\n    let maxFreq = 0;\n\
    \    let freq = 0;\n    let i = 0;\n    while (i < lst.length) {\n        let\
    \ j = i;\n        while (j < lst.length && lst[i] === lst[j]) {\n            j++;\n\
    \        }\n        freq = j - i;\n        if (freq >= lst[i] && lst[i] > max)\
    \ {\n            max = lst[i];\n            maxFreq = freq;\n        }\n     \
    \   i = j;\n    }\n    return max;\n}\n", "    let count: number = 0;\n    let\
    \ max: number = 0;\n    let maxCount: number = 0;\n    for (let i: number = 0;\
    \ i < lst.length; i++) {\n        for (let j: number = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] == lst[j]) {\n                count++;\n         \
    \   }\n        }\n        if (count >= lst[i] && count > maxCount) {\n       \
    \     max = lst[i];\n            maxCount = count;\n        }\n        count =\
    \ 0;\n    }\n    if (max == 0) {\n        return -1;\n    }\n    return max;\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));", "    let max = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let\
    \ j = 0; j < lst.length; j++) {\n            if (lst[i] == lst[j]) {\n       \
    \         count++;\n            }\n        }\n        if (count >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n        count = 0;\n    }\n\
    \    return max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ result = -1;\n    let counter = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i] ===\
    \ lst[j]) {\n                counter++;\n            }\n        }\n        if\
    \ (counter >= lst[i] && lst[i] > result) {\n            result = lst[i];\n   \
    \     }\n        counter = 0;\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let result = -1;\n    let max = Math.max(...lst);\n\
    \    for (let i = 1; i <= max; i++) {\n        let count = 0;\n        for (let\
    \ j = 0; j < lst.length; j++) {\n            if (lst[j] == i) {\n            \
    \    count++;\n            }\n        }\n        if (count >= i) {\n         \
    \   result = i;\n        }\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let max = -1;\n    let obj = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (obj[lst[i]]) {\n            obj[lst[i]]\
    \ += 1;\n        } else {\n            obj[lst[i]] = 1;\n        }\n    }\n  \
    \  for (let key in obj) {\n        if (obj[key] >= key && key > max) {\n     \
    \       max = key;\n        }\n    }\n    return max;\n}\n", "    let obj = {};\n\
    \    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (obj[lst[i]])\
    \ {\n            obj[lst[i]]++;\n        } else {\n            obj[lst[i]] = 1;\n\
    \        }\n    }\n    for (let key in obj) {\n        if (obj[key] >= key &&\
    \ key > max) {\n            max = key;\n        }\n    }\n    return max;\n}\n",
  "    let dic = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (dic[lst[i]])\
    \ {\n            dic[lst[i]] += 1;\n        } else {\n            dic[lst[i]]\
    \ = 1;\n        }\n    }\n    let max = 0;\n    for (let key in dic) {\n     \
    \   if (dic[key] >= key && key > max) {\n            max = key;\n        }\n \
    \   }\n    if (max === 0) {\n        return -1;\n    } else {\n        return\
    \ max;\n    }\n}\n", "    let result = -1;\n    let max = 0;\n    let count =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j <\
    \ lst.length; j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n\
    \            }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n  \
    \          max = lst[i];\n            result = max;\n        }\n        count\
    \ = 0;\n    }\n    return result;\n}\n", "    let result = -1;\n    let max =\
    \ Math.max(...lst);\n    for (let i = 1; i <= max; i++) {\n        let count =\
    \ 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[j] ==\
    \ i) {\n                count++;\n            }\n        }\n        if (count\
    \ >= i) {\n            result = i;\n        }\n    }\n    return result;\n}\n\
    console.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3,\
    \ 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]] = 1;\n\
    \        }\n    }\n    let max = -1;\n    for (let key in freq) {\n        if\
    \ (freq[key] >= key && key > max) {\n            max = key;\n        }\n    }\n\
    \    return max;\n}\n", "    let max: number = -1;\n    let maxCount: number =\
    \ 0;\n    let count: number = 0;\n    let i: number = 0;\n    while (i < lst.length)\
    \ {\n        count = 0;\n        for (let j: number = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] == lst[j]) {\n                count++;\n         \
    \   }\n        }\n        if (count >= lst[i] && count > maxCount) {\n       \
    \     max = lst[i];\n            maxCount = count;\n        }\n        i++;\n\
    \    }\n    return max;\n}\n", "    let dict = {};\n    let max = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n          \
    \  dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n     \
    \   }\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n   \
    \ }\n    for (let i = max; i > 0; i--) {\n        if (dict[i] >= i) {\n      \
    \      return i;\n        }\n    }\n    return -1;\n}\n", "    let dict = {};\n\
    \    let max = 0;\n    let maxKey = -1;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > maxKey) {\n            maxKey = lst[i];\n        }\n\
    \        if (dict[lst[i]] === undefined) {\n            dict[lst[i]] = 1;\n  \
    \      } else {\n            dict[lst[i]]++;\n        }\n    }\n    for (let key\
    \ in dict) {\n        if (dict[key] >= key && key >= max) {\n            max =\
    \ key;\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n  \
    \  return max;\n}\n", "    let max = -1;\n    let freq = 0;\n    let count = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n            freq = 1;\n        } else if (lst[i] == max)\
    \ {\n            freq++;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2,\
    \ 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ count: any = {};\n    for (let i = 0; i < lst.length; i++) {\n        count[lst[i]]\
    \ = count[lst[i]] + 1 || 1;\n    }\n    let max = -1;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (count[lst[i]] >= lst[i] && lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    return max;\n}\n", "    let\
    \ count = 0;\n    let max = 0;\n    let maxCount = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n       \
    \     if (lst[i] == lst[j]) {\n                count++;\n            }\n     \
    \   }\n        if (count >= lst[i] && count > maxCount) {\n            max = lst[i];\n\
    \            maxCount = count;\n        }\n        count = 0;\n    }\n    if (max\
    \ == 0) {\n        return -1;\n    }\n    return max;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let max = 0;\n    let count = 0;\n    let result = -1;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        result = max;\n    }\n    return result;\n\
    }\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3,\
    \ 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let dict = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n   \
    \         dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n\
    \        }\n    }\n    let max = -1;\n    for (let key in dict) {\n        if\
    \ (dict[key] >= key && key > max) {\n            max = key;\n        }\n    }\n\
    \    return max;\n}\n", "    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in dict) {\n        if (dict[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let result:\
    \ any = -1;\n    let max: any = -1;\n    let dict: any = {};\n    for (let i:\
    \ number = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n          \
    \  dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n     \
    \   }\n    }\n    for (let key in dict) {\n        if (dict[key] >= key && key\
    \ > max) {\n            max = key;\n        }\n    }\n    if (max > -1) {\n  \
    \      result = max;\n    }\n    return result;\n}\n", "    let result: any =\
    \ -1;\n    let frequency: any = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]] += 1;\n \
    \       } else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    for\
    \ (let key in frequency) {\n        if (frequency[key] >= key && key > result)\
    \ {\n            result = key;\n        }\n    }\n    return result;\n}\n", " \
    \   let frequency: any = {};\n    let max: number = -1;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]++;\n\
    \        } else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    for\
    \ (let key in frequency) {\n        if (frequency[key] >= key && key > max) {\n\
    \            max = key;\n        }\n    }\n    return max;\n}\n", "    let max\
    \ = -1;\n    let count = 0;\n    let dict = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (dict[lst[i]] >= lst[i] && lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_51_remove_vowels
language: ts
prompt: "//remove_vowels is a function that takes string and returns string without\
  \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
  )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
  aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
  ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n\
  \  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
  eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
  EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
completions: ["    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\",\
    \ \"I\", \"O\", \"U\"];\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n", "    if (typeof text !==\
    \ \"string\") {\n        return \"\";\n    }\n    let result = \"\";\n    for\
    \ (let i = 0; i < text.length; i++) {\n        if (text[i] !== \"a\" && text[i]\
    \ !== \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i] !== \"u\") {\n\
    \            result += text[i];\n        }\n    }\n    return result;\n}\n", " \
    \   if (typeof text !== \"string\") {\n        throw new Error(\"Input is not\
    \ a string\");\n    }\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== \"a\" && text[i] !== \"e\" && text[i] !== \"\
    i\" && text[i] !== \"o\" && text[i] !== \"u\") {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let result = \"\
    \";\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\"];\n    let result = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i]) === -1) {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n", "    if (typeof text !==\
    \ \"string\") {\n        throw \"Invalid input\";\n    }\n    return text.replace(/[aeiou]/gi,\
    \ \"\");\n}\n", "    let vowels: string = \"aeiou\";\n    let result: string =\
    \ \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ == -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    if (typeof text !== \"string\") {\n        throw new Error(\"Input\
    \ is not a string\");\n    }\n    return text.replace(/[aeiou]/gi, \"\");\n}\n",
  "    if (typeof text !== \"string\") {\n        return \"Error: input is not a string\"\
    ;\n    }\n    let result = \"\";\n    for (let i = 0; i < text.length; i++) {\n\
    \        let char = text[i];\n        if (char !== \"a\" && char !== \"e\" &&\
    \ char !== \"i\" && char !== \"o\" && char !== \"u\") {\n            result +=\
    \ char;\n        }\n    }\n    return result;\n}\n", "    let vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    let newText = '';\n    for (let letter of text) {\n   \
    \     if (vowels.indexOf(letter) == -1) {\n            newText += letter;\n  \
    \      }\n    }\n    return newText;\n}\n", "    if (typeof text !== \"string\"\
    ) {\n        return \"\";\n    }\n    let result: string = \"\";\n    for (let\
    \ i = 0; i < text.length; i++) {\n        if (text[i] !== \"a\" && text[i] !==\
    \ \"e\" && text[i] !== \"i\" && text[i] !== \"o\" && text[i] !== \"u\") {\n  \
    \          result += text[i];\n        }\n    }\n    return result;\n}\n", " \
    \   if (typeof text !== \"string\") {\n        throw new Error(\"input is not\
    \ a string\");\n    }\n    let result: string = \"\";\n    for (let i = 0; i <\
    \ text.length; i++) {\n        if (text[i] !== \"a\" && text[i] !== \"e\" && text[i]\
    \ !== \"i\" && text[i] !== \"o\" && text[i] !== \"u\") {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let\
    \ new_text = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n", "    if (typeof text !== \"string\") {\n        throw new Error(\"Input\
    \ is not a string.\");\n    }\n    let result = \"\";\n    for (let i = 0; i <\
    \ text.length; i++) {\n        if (text[i] !== \"a\" && text[i] !== \"e\" && text[i]\
    \ !== \"i\" && text[i] !== \"o\" && text[i] !== \"u\") {\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let\
    \ new_text = \"\";\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n   \
    \ for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    if (typeof text !== \"string\") {\n        throw new Error(\"Argument\
    \ must be a string\");\n    }\n    return text.replace(/[aeiou]/gi, \"\");\n}\n",
  "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let newText\
    \ = '';\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            newText += text[i];\n        }\n    }\n    return newText;\n\
    }\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n   \
    \ for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    let vowels: string = \"aeiouAEIOU\";\n    let result: string = \"\"\
    ;\n    for (let i: number = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ == -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

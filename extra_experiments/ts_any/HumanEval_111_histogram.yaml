name: HumanEval_111_histogram
language: ts
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ an object\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\n// >>> histogram(\"a b c\")\n// {\"a\": 1, \"b\": 1, \"c\": 1}\n//\
  \ >>> histogram(\"a b b a\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"a b c\
  \ a b\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"b b b b a\")\n// {\"b\": 4}\n\
  // >>> histogram(\"\")\n// {}\nfunction histogram(test: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = histogram;\n  assert.deepEqual(candidate(\"a b b a\"\
  ),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2,\
  \ \"b\": 2});\n  assert.deepEqual(candidate(\"a b c d g\"),{\"a\": 1, \"b\": 1,\
  \ \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\"\
  : 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b b a\"),{\"b\":\
  \ 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n\
  \  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"a\"),{\"\
  a\": 1});\n}\n\ntest();"
completions: ["    let result: any = {};\n    let max: number = 0;\n    let maxKey:\
    \ string = \"\";\n    let maxKeys: string[] = [];\n    let testArray: string[]\
    \ = test.split(\" \");\n    for (let i: number = 0; i < testArray.length; i++)\
    \ {\n        if (result[testArray[i]]) {\n            result[testArray[i]]++;\n\
    \        } else {\n            result[testArray[i]] = 1;\n        }\n    }\n \
    \   for (let key in result) {\n        if (result[key] > max) {\n            max\
    \ = result[key];\n            maxKey = key;\n            maxKeys = [];\n     \
    \       maxKeys.push(maxKey);\n        } else if (result[key] === max) {\n   \
    \         maxKeys.push(key);\n        }\n    }\n    if (maxKeys.length === 1)\
    \ {\n        result = {};\n        result[maxKey] = max;\n    } else {\n     \
    \   result = {};\n        for (let i: number = 0; i < maxKeys.length; i++) {\n\
    \            result[maxKeys[i]] = max;\n        }\n    }\n    return result;\n\
    }\n", "    let testArray = test.split(\" \");\n    let testObject = {};\n    let\
    \ max = 0;\n    for (let i = 0; i < testArray.length; i++) {\n        if (testObject[testArray[i]])\
    \ {\n            testObject[testArray[i]]++;\n        } else {\n            testObject[testArray[i]]\
    \ = 1;\n        }\n    }\n    for (let key in testObject) {\n        if (testObject[key]\
    \ > max) {\n            max = testObject[key];\n        }\n    }\n    for (let\
    \ key in testObject) {\n        if (testObject[key] < max) {\n            delete\
    \ testObject[key];\n        }\n    }\n    return testObject;\n}\n", "    let testArray\
    \ = test.split(\" \");\n    let testObject = {};\n    let max = 0;\n    for (let\
    \ i = 0; i < testArray.length; i++) {\n        if (testObject[testArray[i]]) {\n\
    \            testObject[testArray[i]] += 1;\n        } else {\n            testObject[testArray[i]]\
    \ = 1;\n        }\n    }\n    for (let key in testObject) {\n        if (testObject[key]\
    \ > max) {\n            max = testObject[key];\n        }\n    }\n    for (let\
    \ key in testObject) {\n        if (testObject[key] < max) {\n            delete\
    \ testObject[key];\n        }\n    }\n    return testObject;\n}\n", "    let arr\
    \ = test.split(\" \");\n    let obj = {};\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else\
    \ {\n            obj[arr[i]] = 1;\n        }\n    }\n    let max = 0;\n    let\
    \ maxArr = [];\n    for (let key in obj) {\n        if (obj[key] > max) {\n  \
    \          max = obj[key];\n            maxArr = [];\n            maxArr.push(key);\n\
    \        } else if (obj[key] === max) {\n            maxArr.push(key);\n     \
    \   }\n    }\n    let result = {};\n    for (let i = 0; i < maxArr.length; i++)\
    \ {\n        result[maxArr[i]] = max;\n    }\n    return result;\n}\n", "    let\
    \ result: any = {};\n    let max: number = 0;\n    let maxKey: string = \"\";\n\
    \    let maxKeys: string[] = [];\n    let testArray: string[] = test.split(\"\
    \ \");\n    for (let i: number = 0; i < testArray.length; i++) {\n        if (result[testArray[i]])\
    \ {\n            result[testArray[i]]++;\n        } else {\n            result[testArray[i]]\
    \ = 1;\n        }\n    }\n    for (let key in result) {\n        if (result[key]\
    \ > max) {\n            max = result[key];\n            maxKey = key;\n      \
    \      maxKeys = [];\n            maxKeys.push(maxKey);\n        } else if (result[key]\
    \ === max) {\n            maxKeys.push(key);\n        }\n    }\n    for (let i:\
    \ number = 0; i < maxKeys.length; i++) {\n        result[maxKeys[i]] = max;\n\
    \    }\n    return result;\n}\n", "    let obj = {};\n    let arr = test.split(\"\
    \ \");\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n\
    \            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n\
    \        }\n    }\n    return obj;\n}\n", "    let result: any = {};\n    let\
    \ arr: string[] = test.split(\" \");\n    let max: number = 0;\n    let maxArr:\
    \ string[] = [];\n    for (let i: number = 0; i < arr.length; i++) {\n       \
    \ if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else {\n   \
    \         result[arr[i]] = 1;\n        }\n    }\n    for (let key in result) {\n\
    \        if (result[key] > max) {\n            max = result[key];\n          \
    \  maxArr = [];\n            maxArr.push(key);\n        } else if (result[key]\
    \ === max) {\n            maxArr.push(key);\n        }\n    }\n    for (let i:\
    \ number = 0; i < maxArr.length; i++) {\n        result[maxArr[i]] = max;\n  \
    \  }\n    return result;\n}\n", "    let obj = {};\n    let arr = test.split(\"\
    \ \");\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n\
    \            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n\
    \        }\n    }\n    return obj;\n}\nconsole.log(histogram(\"a b c\"));\nconsole.log(histogram(\"\
    a b b a\"));\nconsole.log(histogram(\"a b c a b\"));\nconsole.log(histogram(\"\
    b b b b a\"));\nconsole.log(histogram(\"\"));", "    let testArr = test.split(\"\
    \ \");\n    let result = {};\n    let max = 0;\n    let maxArr = [];\n    for\
    \ (let i = 0; i < testArr.length; i++) {\n        if (result[testArr[i]]) {\n\
    \            result[testArr[i]]++;\n        } else {\n            result[testArr[i]]\
    \ = 1;\n        }\n    }\n    for (let key in result) {\n        if (result[key]\
    \ > max) {\n            max = result[key];\n            maxArr = [];\n       \
    \     maxArr.push(key);\n        } else if (result[key] === max) {\n         \
    \   maxArr.push(key);\n        }\n    }\n    let finalResult = {};\n    for (let\
    \ i = 0; i < maxArr.length; i++) {\n        finalResult[maxArr[i]] = max;\n  \
    \  }\n    return finalResult;\n}\n", "    let result: any = {};\n    let arr:\
    \ string[] = test.split(\" \");\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
    \ {\n            result[arr[i]] = 1;\n        }\n    }\n    return result;\n}\n",
  "    let result: any = {};\n    let max: number = 0;\n    let maxLetter: string\
    \ = \"\";\n    let maxLetters: string[] = [];\n    let testArray: string[] = test.split(\"\
    \ \");\n    for (let i: number = 0; i < testArray.length; i++) {\n        if (result[testArray[i]]\
    \ === undefined) {\n            result[testArray[i]] = 1;\n        } else {\n\
    \            result[testArray[i]]++;\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] > max) {\n            max = result[key];\n      \
    \      maxLetter = key;\n            maxLetters = [];\n            maxLetters.push(maxLetter);\n\
    \        } else if (result[key] === max) {\n            maxLetters.push(key);\n\
    \        }\n    }\n    if (maxLetters.length === 1) {\n        result = {};\n\
    \        result[maxLetter] = max;\n    } else {\n        result = {};\n      \
    \  for (let i: number = 0; i < maxLetters.length; i++) {\n            result[maxLetters[i]]\
    \ = max;\n        }\n    }\n    return result;\n}\n", "    let result: any = {};\n\
    \    let arr: string[] = test.split(\" \");\n    let max: number = 0;\n    let\
    \ maxArr: string[] = [];\n    for (let i: number = 0; i < arr.length; i++) {\n\
    \        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
    \ {\n            result[arr[i]] = 1;\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] > max) {\n            max = result[key];\n      \
    \      maxArr = [];\n            maxArr.push(key);\n        } else if (result[key]\
    \ === max) {\n            maxArr.push(key);\n        }\n    }\n    for (let i:\
    \ number = 0; i < maxArr.length; i++) {\n        result[maxArr[i]] = max;\n  \
    \  }\n    return result;\n}\n", "    let result: any = {};\n    let arr: string[]\
    \ = test.split(\" \");\n    let max: number = 0;\n    let maxArr: string[] = [];\n\
    \    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
    \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
    \ = 1;\n        }\n    }\n    for (let key in result) {\n        if (result[key]\
    \ > max) {\n            max = result[key];\n            maxArr = [];\n       \
    \     maxArr.push(key);\n        } else if (result[key] === max) {\n         \
    \   maxArr.push(key);\n        }\n    }\n    for (let i: number = 0; i < maxArr.length;\
    \ i++) {\n        result[maxArr[i]] = max;\n    }\n    return result;\n}\n", " \
    \   let letters = test.split(\" \");\n    let count = {};\n    for (let i = 0;\
    \ i < letters.length; i++) {\n        if (count[letters[i]] === undefined) {\n\
    \            count[letters[i]] = 1;\n        } else {\n            count[letters[i]]\
    \ += 1;\n        }\n    }\n    return count;\n}\n", "    let obj = {};\n    let\
    \ arr = test.split(\" \");\n    for (let i = 0; i < arr.length; i++) {\n     \
    \   if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n       \
    \     obj[arr[i]] = 1;\n        }\n    }\n    return obj;\n}\n", "    let result:\
    \ any = {};\n    let max: number = 0;\n    let maxKey: any = [];\n    let key:\
    \ any = [];\n    let value: any = [];\n    let arr: any = test.split(\" \");\n\
    \    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
    \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
    \ = 1;\n        }\n    }\n    for (let i: number = 0; i < arr.length; i++) {\n\
    \        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n    \
    \    }\n    }\n    for (let i: number = 0; i < arr.length; i++) {\n        if\
    \ (result[arr[i]] === max) {\n            maxKey.push(arr[i]);\n        }\n  \
    \  }\n    for (let i: number = 0; i < maxKey.length; i++) {\n        key.push(maxKey[i]);\n\
    \        value.push(max);\n    }\n    return { key: value };\n}\n", "    let result:\
    \ any = {};\n    let arr: any = test.split(\" \");\n    let max: number = 0;\n\
    \    let maxElements: any = [];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
    \ {\n            result[arr[i]] = 1;\n        }\n    }\n    for (let key in result)\
    \ {\n        if (result[key] > max) {\n            max = result[key];\n      \
    \      maxElements = [];\n            maxElements.push(key);\n        } else if\
    \ (result[key] === max) {\n            maxElements.push(key);\n        }\n   \
    \ }\n    for (let i = 0; i < maxElements.length; i++) {\n        result[maxElements[i]]\
    \ = max;\n    }\n    return result;\n}\n", "    let result = {};\n    let max\
    \ = 0;\n    let maxKeys = [];\n    let words = test.split(\" \");\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (result[words[i]]) {\n         \
    \   result[words[i]]++;\n        } else {\n            result[words[i]] = 1;\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] > max)\
    \ {\n            max = result[key];\n            maxKeys = [];\n            maxKeys.push(key);\n\
    \        } else if (result[key] === max) {\n            maxKeys.push(key);\n \
    \       }\n    }\n    for (let i = 0; i < maxKeys.length; i++) {\n        result[maxKeys[i]]\
    \ = max;\n    }\n    return result;\n}\n", "    let result: any = {};\n    let\
    \ arr: string[] = test.split(\" \");\n    let max: number = 0;\n    for (let i:\
    \ number = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n        \
    \    result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n  \
    \      }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
    \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
    \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n",
  "    let result: any = {};\n    let max: number = 0;\n    let maxKey: string = '';\n\
    \    let maxKeys: string[] = [];\n    let testArr: string[] = test.split(' ');\n\
    \    for (let i: number = 0; i < testArr.length; i++) {\n        if (result[testArr[i]])\
    \ {\n            result[testArr[i]]++;\n        } else {\n            result[testArr[i]]\
    \ = 1;\n        }\n    }\n    for (let key in result) {\n        if (result[key]\
    \ > max) {\n            max = result[key];\n            maxKey = key;\n      \
    \      maxKeys = [];\n            maxKeys.push(maxKey);\n        } else if (result[key]\
    \ === max) {\n            maxKeys.push(key);\n        }\n    }\n    if (maxKeys.length\
    \ > 1) {\n        result = {};\n        for (let i: number = 0; i < maxKeys.length;\
    \ i++) {\n            result[maxKeys[i]] = max;\n        }\n    } else {\n   \
    \     result = {};\n        result[maxKey] = max;\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

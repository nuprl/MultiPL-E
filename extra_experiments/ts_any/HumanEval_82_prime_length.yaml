name: HumanEval_82_prime_length
language: ts
prompt: "//Write a function that takes a string and returns true if the string\n//\
  \ length is a prime number or false otherwise\n// Examples\n// >>> prime_length(\"\
  Hello\")\n// true\n// >>> prime_length(\"abcdcba\")\n// true\n// >>> prime_length(\"\
  kittens\")\n// true\n// >>> prime_length(\"orange\")\n// false\nfunction prime_length(string:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prime_length;\n  assert.deepEqual(candidate(\"Hello\"\
  ),true);\n  assert.deepEqual(candidate(\"abcdcba\"),true);\n  assert.deepEqual(candidate(\"\
  kittens\"),true);\n  assert.deepEqual(candidate(\"orange\"),false);\n  assert.deepEqual(candidate(\"\
  wow\"),true);\n  assert.deepEqual(candidate(\"world\"),true);\n  assert.deepEqual(candidate(\"\
  MadaM\"),true);\n  assert.deepEqual(candidate(\"Wow\"),true);\n  assert.deepEqual(candidate(\"\
  \"),false);\n  assert.deepEqual(candidate(\"HI\"),true);\n  assert.deepEqual(candidate(\"\
  go\"),true);\n  assert.deepEqual(candidate(\"gogo\"),false);\n  assert.deepEqual(candidate(\"\
  aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"Madam\"),true);\n  assert.deepEqual(candidate(\"\
  M\"),false);\n  assert.deepEqual(candidate(\"0\"),false);\n}\n\ntest();"
completions: ["    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length == 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    console.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"abcdcba\"));\n\
    console.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"orange\"));\n",
  "    let length = string.length;\n    if (length === 1) {\n        return false;\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  let length = string.length;\n    if (length === 1) {\n        return false;\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  if (typeof string !== \"string\") {\n        return \"Please enter a string\"\
    ;\n    }\n    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length === 1) {\n        return\
    \ false;\n    } else if (length === 2) {\n        return true;\n    } else {\n\
    \        for (let i = 2; i < length; i++) {\n            if (length % i === 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n}\n", "    let length = string.length;\n    for (let i = 2; i < length;\
    \ i++) {\n        if (length % i === 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n", "    let length = string.length;\n    if (length\
    \ === 1) {\n        return false;\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n", "    let length: number = string.length;\n    if\
    \ (length === 1) {\n        return false;\n    }\n    for (let i: number = 2;\
    \ i < length; i++) {\n        if (length % i === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nconsole.log(prime_length(\"Hello\"));\n\
    console.log(prime_length(\"abcdcba\"));\nconsole.log(prime_length(\"kittens\"\
    ));\nconsole.log(prime_length(\"orange\"));\n", "    let length = string.length;\n\
    \    if (length === 1) {\n        return false;\n    } else if (length === 2)\
    \ {\n        return true;\n    } else {\n        for (let i = 2; i < length; i++)\
    \ {\n            if (length % i === 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n    }\n}\n", "    let length = string.length;\n\
    \    let isPrime = true;\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            isPrime = false;\n            break;\n        }\n\
    \    }\n    return isPrime;\n}\n", "    let length = string.length;\n    if (length\
    \ === 1) {\n        return false;\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n", "    let length = string.length;\n    let isPrime\
    \ = true;\n    if (length === 1) {\n        return false;\n    }\n    for (let\
    \ i = 2; i < length; i++) {\n        if (length % i === 0) {\n            isPrime\
    \ = false;\n            break;\n        }\n    }\n    return isPrime;\n}\nconsole.log(prime_length(\"\
    Hello\"));\nconsole.log(prime_length(\"abcdcba\"));\nconsole.log(prime_length(\"\
    kittens\"));\nconsole.log(prime_length(\"orange\"));\n", "    let length = string.length;\n\
    \    let isPrime = true;\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            isPrime = false;\n            break;\n        }\n\
    \    }\n    return isPrime;\n}\nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"\
    abcdcba\"));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"\
    orange\"));\n", "    let length = string.length;\n    let isPrime = true;\n  \
    \  for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n     \
    \       isPrime = false;\n            break;\n        }\n    }\n    return isPrime;\n\
    }\n", "    let length = string.length;\n    if (length < 2) {\n        return\
    \ false;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let length = string.length;\n    if (length === 2 || length === 3 ||\
    \ length === 5 || length === 7) {\n        return true;\n    } else {\n      \
    \  return false;\n    }\n}\nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"\
    abcdcba\"));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"\
    orange\"));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_21_rescale_to_unit
language: ts
prompt: "//Given array of numbers (of at least two elements), apply a linear transform\
  \ to that array,\n// such that the smallest number will become 0 and the largest\
  \ will become 1\n// >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n// [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\nfunction rescale_to_unit(numbers: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = rescale_to_unit;\n  assert.deepEqual(candidate([2.0,\
  \ 49.9]),[0.0, 1.0]);\n  assert.deepEqual(candidate([100.0, 49.9]),[1.0, 0.0]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5, 0.75,\
  \ 1.0]);\n  assert.deepEqual(candidate([2.0, 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0,\
  \ 0.5, 0.75]);\n  assert.deepEqual(candidate([12.0, 11.0, 15.0, 13.0, 14.0]),[0.25,\
  \ 0.0, 1.0, 0.5, 0.75]);\n}\n\ntest();"
completions: ["    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    return numbers.map(function (number) {\n        return (number - min) / (max\
    \ - min);\n    });\n}\n", "    let min = Math.min(...numbers);\n    let max =\
    \ Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let rescaled = numbers.map(x => (x - min) / range);\n\
    \    return rescaled;\n}\n", "    let max = Math.max(...numbers);\n    let min\
    \ = Math.min(...numbers);\n    let new_numbers = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        new_numbers.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return new_numbers;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    return numbers.map(n => (n - min)\
    \ / (max - min));\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (x) {\n        return\
    \ (x - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n  \
    \  let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    let result = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / range);\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(number => (number - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let diff = max - min;\n    let rescaled = numbers.map(function\
    \ (number) {\n        return (number - min) / diff;\n    });\n    return rescaled;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    return numbers.map(n => (n - min) / (max - min));\n}\n", "    const min =\
    \ Math.min(...numbers);\n    const max = Math.max(...numbers);\n    const range\
    \ = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", "    let\
    \ min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / (max - min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    let rescaled =\
    \ numbers.map(function (n) {\n        return (n - min) / range;\n    });\n   \
    \ return rescaled;\n}\n", "    let min = Math.min(...numbers);\n    let max =\
    \ Math.max(...numbers);\n    let range = max - min;\n    let result = numbers.map(n\
    \ => (n - min) / range);\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    var min = Math.min.apply(null,\
    \ numbers);\n    var max = Math.max.apply(null, numbers);\n    var range = max\
    \ - min;\n    return numbers.map(function (n) {\n        return (n - min) / range;\n\
    \    });\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    return numbers.map(x => (x - min) / (max - min));\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (n) {\n        return\
    \ (n - min) / range;\n    });\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    return numbers.map(n => (n - min)\
    \ / (max - min));\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    return numbers.map(x => (x - min) / (max - min));\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    let rescaled\
    \ = numbers.map(function (n) {\n        return (n - min) / range;\n    });\n \
    \   return rescaled;\n}\n", "    var min = Math.min.apply(null, numbers);\n  \
    \  var max = Math.max.apply(null, numbers);\n    var range = max - min;\n    var\
    \ unit = numbers.map(function (n) {\n        return (n - min) / range;\n    });\n\
    \    return unit;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = numbers.map(function (number) {\n\
    \        return (number - min) / range;\n    });\n    return result;\n}\n", " \
    \   let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n   \
    \ let range = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n",
  "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let\
    \ range = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", " \
    \   let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n   \
    \ let range = max - min;\n    return numbers.map(x => (x - min) / range);\n}\n",
  "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let\
    \ new_numbers = numbers.map(function (number) {\n        return (number - min)\
    \ / (max - min);\n    });\n    return new_numbers;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(function\
    \ (number) {\n        return (number - min) / range;\n    });\n}\n", "    const\
    \ min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n    const\
    \ range = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", " \
    \   let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n   \
    \ let range = max - min;\n    return numbers.map(function (n) {\n        return\
    \ (n - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n  \
    \  let max = Math.max(...numbers);\n    return numbers.map(x => (x - min) / (max\
    \ - min));\n}\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    return numbers.map(x => (x - min) / (max - min));\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (n) {\n        return\
    \ (n - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n  \
    \  let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(function\
    \ (n) {\n        return (n - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    let result = numbers.map(x\
    \ => (x - min) / range);\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / range);\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = numbers.map(function (number) {\n\
    \        return (number - min) / range;\n    });\n    return result;\n}\n", " \
    \   const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    return numbers.map(number => (number - min) / (max - min));\n}\n", "    let\
    \ min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let range\
    \ = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let diff = max - min;\n    return numbers.map(n => (n - min) / diff);\n}\n",
  "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = numbers[0];\n    let max = numbers[0];\n    for (let i =\
    \ 1; i < numbers.length; i++) {\n        if (numbers[i] < min) {\n           \
    \ min = numbers[i];\n        }\n        if (numbers[i] > max) {\n            max\
    \ = numbers[i];\n        }\n    }\n    let result = [];\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max - min));\n\
    \    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    let scaled = numbers.map(x\
    \ => (x - min) / range);\n    return scaled;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const diff = max - min;\n    return\
    \ numbers.map(n => (n - min) / diff);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    let rescaled\
    \ = numbers.map(function (num) {\n        return (num - min) / range;\n    });\n\
    \    return rescaled;\n}\n", "    let min = Math.min(...numbers);\n    let max\
    \ = Math.max(...numbers);\n    let range = max - min;\n    let scaled = numbers.map(x\
    \ => (x - min) / range);\n    return scaled;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let diff = max - min;\n    return numbers.map(x\
    \ => (x - min) / diff);\n}\n", "    let min = Math.min(...numbers);\n    let max\
    \ = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(function\
    \ (n) {\n        return (n - min) / range;\n    });\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    return numbers.map(n => (n - min)\
    \ / (max - min));\n}\n", "    let max = Math.max(...numbers);\n    let min = Math.min(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let scaled = numbers.map(function (n) {\n   \
    \     return (n - min) / range;\n    });\n    return scaled;\n}\n", "    const\
    \ min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n    const\
    \ range = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", " \
    \   let max = Math.max(...numbers);\n    let min = Math.min(...numbers);\n   \
    \ let range = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n",
  "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let\
    \ result = [];\n    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / (max - min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    return numbers.map(x => (x - min) /\
    \ (max - min));\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = numbers.map(function (n) {\n   \
    \     return (n - min) / range;\n    });\n    return result;\n}\n", "    let min\
    \ = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let range\
    \ = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", "    let\
    \ min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let diff\
    \ = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / diff);\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let new_numbers = [];\n    for (let i = 0; i < numbers.length; i++) {\n \
    \       new_numbers.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ new_numbers;\n}\n", "    var min = Math.min.apply(null, numbers);\n    var max\
    \ = Math.max.apply(null, numbers);\n    var range = max - min;\n    return numbers.map(function\
    \ (n) {\n        return (n - min) / range;\n    });\n}\n", "    let max = Math.max(...numbers);\n\
    \    let min = Math.min(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    var min = Math.min.apply(null, numbers);\n\
    \    var max = Math.max.apply(null, numbers);\n    var range = max - min;\n  \
    \  return numbers.map(function (n) {\n        return (n - min) / range;\n    });\n\
    }\n", "    let min = numbers[0];\n    let max = numbers[0];\n    for (let i =\
    \ 1; i < numbers.length; i++) {\n        if (numbers[i] < min) {\n           \
    \ min = numbers[i];\n        }\n        if (numbers[i] > max) {\n            max\
    \ = numbers[i];\n        }\n    }\n    let result = [];\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max - min));\n\
    \    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = numbers.map(x => (x - min) / (max - min));\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (n) {\n        return\
    \ (n - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n  \
    \  let max = Math.max(...numbers);\n    return numbers.map(x => (x - min) / (max\
    \ - min));\n}\n", "    let min = numbers[0];\n    let max = numbers[0];\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] < min) {\n  \
    \          min = numbers[i];\n        }\n        if (numbers[i] > max) {\n   \
    \         max = numbers[i];\n        }\n    }\n    let result = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        result.push((numbers[i] - min) /\
    \ (max - min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    return numbers.map(n => (n - min)\
    \ / (max - min));\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let new_numbers = numbers.map(function (number) {\n        return (number\
    \ - min) / (max - min);\n    });\n    return new_numbers;\n}\n", "    let min\
    \ = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let range\
    \ = max - min;\n    return numbers.map(n => (n - min) / range);\n}\n", "    var\
    \ min = Math.min.apply(null, numbers);\n    var max = Math.max.apply(null, numbers);\n\
    \    return numbers.map(function (n) {\n        return (n - min) / (max - min);\n\
    \    });\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let max = Math.max(...numbers);\n    let min = Math.min(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "  let min = Math.min(...numbers);\n  let max = Math.max(...numbers);\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    result.push((numbers[i]\
    \ - min) / (max - min));\n  }\n  return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let new_numbers = numbers.map(function\
    \ (number) {\n        return (number - min) / (max - min);\n    });\n    return\
    \ new_numbers;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (number) {\n    \
    \    return (number - min) / range;\n    });\n}\n", "    const min_value = Math.min(...numbers);\n\
    \    const max_value = Math.max(...numbers);\n    const range = max_value - min_value;\n\
    \    return numbers.map(x => (x - min_value) / range);\n}\n", "    var min = Math.min.apply(null,\
    \ numbers);\n    var max = Math.max.apply(null, numbers);\n    var result = [];\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / (max - min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let new_numbers = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        new_numbers.push((numbers[i] - min)\
    \ / (max - min));\n    }\n    return new_numbers;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    let result\
    \ = numbers.map(function (number) {\n        return (number - min) / range;\n\
    \    });\n    return result;\n}\n", "    let min = numbers[0];\n    let max =\
    \ numbers[0];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ < min) {\n            min = numbers[i];\n        }\n        if (numbers[i] >\
    \ max) {\n            max = numbers[i];\n        }\n    }\n    let result = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / (max - min));\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let unit_numbers = numbers.map(function (number) {\n        return (number\
    \ - min) / (max - min);\n    });\n    return unit_numbers;\n}\n", "    let min\
    \ = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let range\
    \ = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let new_numbers = numbers.map(function (number) {\n        return (number\
    \ - min) / (max - min);\n    });\n    return new_numbers;\n}\n", "    var min\
    \ = Math.min.apply(null, numbers);\n    var max = Math.max.apply(null, numbers);\n\
    \    var range = max - min;\n    var result = [];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(number => (number - min) /\
    \ range);\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    return numbers.map(x => (x - min) / (max - min));\n}\n", "    var min = Math.min.apply(null,\
    \ numbers);\n    var max = Math.max.apply(null, numbers);\n    var range = max\
    \ - min;\n    return numbers.map(function (n) {\n        return (n - min) / range;\n\
    \    });\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    const min = Math.min(...numbers);\n    const max = Math.max(...numbers);\n\
    \    const range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = numbers.map(x => (x - min) / (max - min));\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = numbers.map(function (x) {\n        return (x - min) / (max\
    \ - min);\n    });\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    var min = Math.min.apply(null, numbers);\n\
    \    var max = Math.max.apply(null, numbers);\n    var range = max - min;\n  \
    \  return numbers.map(function (n) {\n        return (n - min) / range;\n    });\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (n) {\n        return\
    \ (n - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n  \
    \  let max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        result.push((numbers[i] - min) / (max -\
    \ min));\n    }\n    return result;\n}\n", "    const min = Math.min(...numbers);\n\
    \    const max = Math.max(...numbers);\n    const range = max - min;\n    return\
    \ numbers.map(n => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(x\
    \ => (x - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let range = max - min;\n    let result = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        result.push((numbers[i]\
    \ - min) / range);\n    }\n    return result;\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    let rescaled\
    \ = numbers.map(function (n) {\n        return (n - min) / range;\n    });\n \
    \   return rescaled;\n}\n", "    const min = Math.min(...numbers);\n    const\
    \ max = Math.max(...numbers);\n    const range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    var min = Math.min.apply(null, numbers);\n\
    \    var max = Math.max.apply(null, numbers);\n    var range = max - min;\n  \
    \  return numbers.map(function (n) {\n        return (n - min) / range;\n    });\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let diff = max - min;\n    return numbers.map(function (number) {\n     \
    \   return (number - min) / diff;\n    });\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(function (number) {\n    \
    \    return (number - min) / range;\n    });\n}\n", "    let min = Math.min(...numbers);\n\
    \    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map(n\
    \ => (n - min) / range);\n}\n", "    let min = Math.min(...numbers);\n    let\
    \ max = Math.max(...numbers);\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / (max - min));\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        result.push((numbers[i] - min) / range);\n    }\n    return\
    \ result;\n}\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n      \
    \  result.push((numbers[i] - min) / (max - min));\n    }\n    return result;\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(n => (n - min) / range);\n\
    }\n", "    let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n\
    \    let range = max - min;\n    return numbers.map(x => (x - min) / range);\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

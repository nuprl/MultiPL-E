name: HumanEval_13_greatest_common_divisor
language: ts
prompt: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
  \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
  \ any, b: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
  \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
  \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
completions: ["    if (a == 0 || b == 0) {\n        return a + b;\n    }\n    return\
    \ greatest_common_divisor(b, a % b);\n}\n", "    if (b == 0) {\n        return\
    \ a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (b ==\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n      \
    \  return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n  \
    \      b = -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    if (b\
    \ == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n  \
    \      b = -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    if (b\
    \ == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (b == 0) {\n   \
    \     return a;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n       \
    \ return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a == 0) {\n\
    \        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n   \
    \ return a;\n  }\n  if (a === b) {\n    return a;\n  }\n  if (a > b) {\n    return\
    \ greatest_common_divisor(a - b, b);\n  }\n  return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a === 0 || b === 0) {\n        return 0;\n    }\n    if (a ===\
    \ b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return\
    \ greatest_common_divisor(b, a % b);\n}\n", "    if (a < b) {\n        return\
    \ greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (a < b) {\n\
    \        return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n  \
    \      return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < b) {\n    \
    \    return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n      \
    \  return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "  \
    \  if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0) {\n  \
    \      return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a === 0 || b === 0) {\n        return 0;\n    }\n  \
    \  if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n\
    \        b = -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    while\
    \ (b != 0) {\n        if (a > b) {\n            a = a - b;\n        } else {\n\
    \            b = b - a;\n        }\n    }\n    return a;\n}\n", "    return b\
    \ ? greatest_common_divisor(b, a % b) : a;\n}\n", "    if (b == 0) {\n       \
    \ return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "   \
    \ if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n   \
    \ return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a % b, b);\n\
    \  } else {\n    return greatest_common_divisor(a, b % a);\n  }\n}\n", "    if\
    \ (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    return b ? greatest_common_divisor(b,\
    \ a % b) : a;\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b\
    \ === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (b == 0) {\n   \
    \     return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n\
    \        return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < 0) {\n    \
    \    a = -a;\n    }\n    if (b < 0) {\n        b = -b;\n    }\n    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n     \
    \   return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n \
    \   return greatest_common_divisor(a, b - a);\n}\n", "    if (b === 0) {\n   \
    \     return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < b) {\n    \
    \    return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n      \
    \  return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "  \
    \  if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (b == 0) {\n   \
    \     return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n\
    \        return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (b == 0) {\n   \
    \     return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b\
    \ == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0 || b ===\
    \ 0) {\n        return 0;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < 0) {\n    \
    \    a = -a;\n    }\n    if (b < 0) {\n        b = -b;\n    }\n    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ === 0 || b === 0) {\n        return 0;\n    }\n    if (a === b) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < b) {\n\
    \        return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n  \
    \      return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) return b;\n    if (b === 0) return a;\n   \
    \ if (a === b) return a;\n    if (a > b) return greatest_common_divisor(a - b,\
    \ b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0)\
    \ {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n     \
    \   return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0 || b === 0) {\n        return a + b;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < 0) {\n    \
    \    a = -a;\n    }\n    if (b < 0) {\n        b = -b;\n    }\n    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (a % b\
    \ === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b, a\
    \ % b);\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (a < b) {\n        [a, b] = [b, a];\n    }\n    if (a % b === 0) {\n   \
    \     return b;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n\
    \        return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0) {\n  \
    \      return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if\
    \ (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b, a);\n\
    \    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (b == 0) {\n      \
    \  return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "  \
    \  if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a == 0 || b == 0)\
    \ {\n        return 0;\n    }\n    if (a == b) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n \
    \   return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0) {\n   \
    \     return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b == 0)\
    \ {\n        return a;\n    }\n    if (a == b) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n \
    \   return greatest_common_divisor(a, b - a);\n}\n", "    if (a < b) {\n     \
    \   return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n       \
    \ return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "   \
    \ if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (b == 0)\
    \ {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n        b =\
    \ -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0)\
    \ && (b % 2 == 0)) return 2 * greatest_common_divisor(a / 2, b / 2);\n    if ((a\
    \ % 2 == 0) && !(b % 2 == 0)) return greatest_common_divisor(a / 2, b);\n    if\
    \ (!(a % 2 == 0) && (b % 2 == 0)) return greatest_common_divisor(a, b / 2);\n\
    \    return greatest_common_divisor((Math.abs(a - b)) / 2, Math.min(a, b));\n\
    }\n", "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n\
    \    if (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b === 0) {\n        return a;\n    } else {\n      \
    \  return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a < b) {\n\
    \        return greatest_common_divisor(b, a);\n    }\n    if (b === 0) {\n  \
    \      return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n    \
    \    return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ===\
    \ 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ == 0 || b == 0) {\n        return 0;\n    }\n    if (a == b) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0\
    \ || b === 0) {\n        return 0;\n    }\n    if (a === b) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0)\
    \ {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n       \
    \ return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a === 0) {\n\
    \        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a <\
    \ b) {\n        return greatest_common_divisor(b, a);\n    }\n    if (a % b ===\
    \ 0) {\n        return b;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n       \
    \ return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a === b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "    if (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n\
    \    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (b\
    \ == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if\
    \ (b > a) {\n        var temp = a;\n        a = b;\n        b = temp;\n    }\n\
    \    while (true) {\n        if (b == 0) return a;\n        a %= b;\n        if\
    \ (a == 0) return b;\n        b %= a;\n    }\n}\n", "    if (a === 0) {\n    \
    \    return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (b == 0)\
    \ {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n\
    \    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n\
    \        b = -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    while\
    \ (b != 0) {\n        if (a > b) {\n            a = a - b;\n        } else {\n\
    \            b = b - a;\n        }\n    }\n    return a;\n}\n", "    if (b ==\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n    \
    \    return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n\
    \        b = -b;\n    }\n    if (a == 0) {\n        return b;\n    }\n    if (b\
    \ == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a < b) {\n        return greatest_common_divisor(b, a);\n\
    \    }\n    if (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        let temp = a;\n        a = b;\n  \
    \      b = temp;\n    }\n    while (b != 0) {\n        let temp = a % b;\n   \
    \     a = b;\n        b = temp;\n    }\n    return a;\n}\n", "    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n  \
    \  }\n    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

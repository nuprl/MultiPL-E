name: HumanEval_120_maximum
language: ts
prompt: "//Given an array arr of integers and a positive integer k, return a sorted\
  \ array \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// >>>\
  \ maximum([-3, -4, 5], 3)\n// [-4, -3, 5]\n// Example 2:\n// >>> maximum([4, -4,\
  \ 4], 2)\n// [4, 4]\n// Example 3:\n// >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n\
  // [2]\n// Note:\n// 1. The length of the array will be in the range of [1, 1000].\n\
  // 2. The elements in the array will be in the range of [-1000, 1000].\n// 3. 0\
  \ <= k <= len(arr)\nfunction maximum(arr: any, k: any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = maximum;\n  assert.deepEqual(candidate([-3, -4, 5],\
  \ 3),[-4, -3, 5]);\n  assert.deepEqual(candidate([4, -4, 4], 2),[4, 4]);\n  assert.deepEqual(candidate([-3,\
  \ 2, 1, 2, -1, -2, 1], 1),[2]);\n  assert.deepEqual(candidate([123, -123, 20, 0,\
  \ 1, 2, -3], 3),[2, 20, 123]);\n  assert.deepEqual(candidate([-123, 20, 0, 1, 2,\
  \ -3], 4),[0, 1, 2, 20]);\n  assert.deepEqual(candidate([5, 15, 0, 3, -13, -8, 0],\
  \ 7),[-13, -8, 0, 0, 3, 5, 15]);\n  assert.deepEqual(candidate([-1, 0, 2, 5, 3,\
  \ -10], 2),[3, 5]);\n  assert.deepEqual(candidate([1, 0, 5, -7], 1),[5]);\n  assert.deepEqual(candidate([4,\
  \ -4], 2),[-4, 4]);\n  assert.deepEqual(candidate([-10, 10], 2),[-10, 10]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, -23, 243, -400, 0], 0),[]);\n}\n\ntest();"
completions: ["    let result: any = [];\n    for (let i = 0; i < k; i++) {\n    \
    \    let max = Math.max(...arr);\n        result.push(max);\n        arr.splice(arr.indexOf(max),\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n\
    \        let index = 0;\n        for (let j = 0; j < arr.length; j++) {\n    \
    \        if (arr[j] > max) {\n                max = arr[j];\n                index\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    let max: any = 0;\n    for (let i = 0; i < k; i++) {\n\
    \        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max)\
    \ {\n                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        max = 0;\n    }\n    return\
    \ result;\n}\n", "    let sorted = arr.sort((a, b) => b - a);\n    return sorted.slice(0,\
    \ k);\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4],\
    \ 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result =\
    \ [];\n    let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        max = arr[i];\n        maxIndex = i;\n        for (let j = i; j <\
    \ arr.length; j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = -Infinity;\n    }\n    return result;\n}\n", "    let\
    \ result = [];\n    let max = arr[0];\n    for (let i = 0; i < k; i++) {\n   \
    \     for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n\
    \                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        max = arr[0];\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    let max = 0;\n    let maxIndex = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        max = arr[i];\n        maxIndex =\
    \ i;\n        for (let j = i; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                maxIndex = j;\n     \
    \       }\n        }\n        result.push(max);\n        arr[maxIndex] = arr[i];\n\
    \        arr[i] = max;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n        let index\
    \ = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                index = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    let\
    \ max: any = [];\n    let temp: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        max.push(arr[i]);\n    }\n    for (let i = k; i < arr.length; i++) {\n\
    \        for (let j = 0; j < k; j++) {\n            if (arr[i] > max[j]) {\n \
    \               temp.push(max[j]);\n                max[j] = arr[i];\n       \
    \     }\n            else {\n                temp.push(arr[i]);\n            }\n\
    \        }\n        max = temp;\n        temp = [];\n    }\n    return max;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n \
    \   for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n  \
    \      arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    let max: any = 0;\n    let maxIndex: any = 0;\n    for (let i: any = 0; i\
    \ < k; i++) {\n        for (let j: any = 0; j < arr.length; j++) {\n         \
    \   if (arr[j] > max) {\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let max: any = arr[0];\n    let maxIndex: any = 0;\n    for (let\
    \ i: any = 0; i < k; i++) {\n        for (let j: any = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    let max: any = arr[0];\n    let index: any = 0;\n    for (let i: any = 0;\
    \ i < k; i++) {\n        max = arr[i];\n        index = i;\n        for (let j:\
    \ any = i; j < arr.length; j++) {\n            if (arr[j] > max) {\n         \
    \       max = arr[j];\n                index = j;\n            }\n        }\n\
    \        result.push(max);\n        arr[index] = arr[i];\n        arr[i] = max;\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    let max: any = 0;\n    let index: any = 0;\n    for (let\
    \ i: any = 0; i < k; i++) {\n        for (let j: any = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n        max = 0;\n    }\n    return result;\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    return arr.sort((a:\
    \ any, b: any) => b - a).slice(0, k);\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let max = [];\n    for (let i = 0; i < k; i++) {\n        max.push(arr[i]);\n\
    \    }\n    for (let i = k; i < arr.length; i++) {\n        for (let j = 0; j\
    \ < k; j++) {\n            if (arr[i] > max[j]) {\n                max.splice(j,\
    \ 0, arr[i]);\n                max.pop();\n                break;\n          \
    \  }\n        }\n    }\n    return max;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let sorted = arr.sort((a, b) => a - b);\n    return sorted.slice(sorted.length\
    \ - k, sorted.length);\n}\n", "    // Write your code here\n    let max = [];\n\
    \    let i = 0;\n    while (i < k) {\n        max.push(Math.max(...arr));\n  \
    \      arr.splice(arr.indexOf(Math.max(...arr)), 1);\n        i++;\n    }\n  \
    \  return max;\n}\n", "    let result = [];\n    for (let i = 0; i < k; i++) {\n\
    \        let max = arr[0];\n        let index = 0;\n        for (let j = 0; j\
    \ < arr.length; j++) {\n            if (arr[j] > max) {\n                max =\
    \ arr[j];\n                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n    }\n    return result;\n}\n\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let sorted = arr.sort((a, b) => b - a);\n \
    \   return sorted.slice(0, k);\n}\n", "    let result: any = [];\n    let max:\
    \ any = [];\n    let i: any = 0;\n    while (i < k) {\n        max = arr[0];\n\
    \        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max)\
    \ {\n                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        i++;\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    let sortedArr: any = arr.sort((a: any, b: any) => b - a);\n    for (let i:\
    \ number = 0; i < k; i++) {\n        result.push(sortedArr[i]);\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    let max = arr[0];\n    let maxIndex\
    \ = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\n", "    let sorted = arr.sort((a, b) => a - b);\n    return sorted.slice(sorted.length\
    \ - k);\n}\n", "    let result = [];\n    for (let i = 0; i < k; i++) {\n    \
    \    let max = arr[0];\n        let index = 0;\n        for (let j = 0; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let sortedArr = arr.sort((a, b) => b - a);\n\
    \    return sortedArr.slice(0, k);\n}\n", "    let result = [];\n    let index\
    \ = 0;\n    while (index < k) {\n        let max = arr[0];\n        let maxIndex\
    \ = 0;\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        index++;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    let max = arr[0];\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                maxIndex = j;\n     \
    \       }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));\n", "    let result: any = [];\n    let max: any =\
    \ [];\n    for (let i = 0; i < k; i++) {\n        max.push(Math.max(...arr));\n\
    \        result.push(Math.max(...arr));\n        arr.splice(arr.indexOf(Math.max(...arr)),\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    let\
    \ result: any = [];\n    for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n \
    \   let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n \
    \       max = arr[i];\n        maxIndex = i;\n        for (let j = i; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for (let i = 0; i < k; i++) {\n        let max\
    \ = arr[0];\n        let index = 0;\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n    let sorted = arr.sort((a,\
    \ b) => b - a);\n    for (let i = 0; i < k; i++) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    let max = arr.slice(0, k);\n    for (let\
    \ i = k; i < arr.length; i++) {\n        for (let j = 0; j < k; j++) {\n     \
    \       if (arr[i] > max[j]) {\n                max.splice(j, 0, arr[i]);\n  \
    \              max.pop();\n                break;\n            }\n        }\n\
    \    }\n    return max;\n}\n", "    let result = [];\n    let max = 0;\n    let\
    \ index = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n        max = 0;\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sorted = arr.sort((a,\
    \ b) => a - b);\n    return sorted.slice(sorted.length - k);\n}\n", "    let max:\
    \ any = [];\n    let maxIndex: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        let maxNum: any = arr[i];\n        let maxNumIndex: any = i;\n      \
    \  for (let j = i; j < arr.length; j++) {\n            if (arr[j] > maxNum) {\n\
    \                maxNum = arr[j];\n                maxNumIndex = j;\n        \
    \    }\n        }\n        max.push(maxNum);\n        maxIndex.push(maxNumIndex);\n\
    \        arr[maxNumIndex] = -Infinity;\n    }\n    return max;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        max.push(arr[i]);\n    }\n    for\
    \ (let i = 0; i < k; i++) {\n        for (let j = i + 1; j < k; j++) {\n     \
    \       if (max[i] < max[j]) {\n                let temp = max[i];\n         \
    \       max[i] = max[j];\n                max[j] = temp;\n            }\n    \
    \    }\n    }\n    for (let i = k; i < arr.length; i++) {\n        if (arr[i]\
    \ > max[k - 1]) {\n            max[k - 1] = arr[i];\n            for (let i =\
    \ 0; i < k; i++) {\n                for (let j = i + 1; j < k; j++) {\n      \
    \              if (max[i] < max[j]) {\n                        let temp = max[i];\n\
    \                        max[i] = max[j];\n                        max[j] = temp;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return max;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = arr[0];\n    let maxIndex = 0;\n    for (let i =\
    \ 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n         \
    \   if (arr[j] > max) {\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    if (arr.length === k) {\n        return arr.sort((a,\
    \ b) => a - b);\n    }\n    let result = [];\n    for (let i = 0; i < k; i++)\
    \ {\n        let max = arr[0];\n        for (let j = 0; j < arr.length; j++) {\n\
    \            if (arr[j] > max) {\n                max = arr[j];\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(arr.indexOf(max), 1);\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    let max: any\
    \ = 0;\n    let maxIndex: any = 0;\n    for (let i: any = 0; i < k; i++) {\n \
    \       for (let j: any = 0; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                maxIndex = j;\n     \
    \       }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    for (let i = 0; i < k; i++) {\n        let max: any = arr[0];\n \
    \       let index: any = 0;\n        for (let j = 0; j < arr.length; j++) {\n\
    \            if (arr[j] > max) {\n                max = arr[j];\n            \
    \    index = j;\n            }\n        }\n        result.push(max);\n       \
    \ arr.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = [];\n\
    \    let maxIndex: any = [];\n    let i: any = 0;\n    let j: any = 0;\n    let\
    \ temp: any = 0;\n    let tempIndex: any = 0;\n    let tempMax: any = 0;\n   \
    \ let tempMaxIndex: any = 0;\n    let tempResult: any = [];\n    let tempResultIndex:\
    \ any = [];\n    let tempResultMax: any = [];\n    let tempResultMaxIndex: any\
    \ = [];\n    for (i = 0; i < k; i++) {\n        max[i] = arr[i];\n        maxIndex[i]\
    \ = i;\n    }\n    for (i = 0; i < k; i++) {\n        for (j = i + 1; j < k; j++)\
    \ {\n            if (max[i] < max[j]) {\n                temp = max[i];\n    \
    \            max[i] = max[j];\n                max[j] = temp;\n              \
    \  tempIndex = maxIndex[i];\n                maxIndex[i] = maxIndex[j];\n    \
    \            maxIndex[j] = tempIndex;\n            }\n        }\n    }\n    for\
    \ (i = k; i < arr.length; i++) {\n        if (arr[i] > max[k - 1]) {\n       \
    \     tempMax = max[k - 1];\n            tempMaxIndex = maxIndex[k - 1];\n   \
    \         max[k - 1] = arr[i];\n            maxIndex[k - 1] = i;\n           \
    \ for (j = k - 1; j > 0; j--) {\n                if (max[j] > max[j - 1]) {\n\
    \                    temp = max[j];\n                    max[j] = max[j - 1];\n\
    \                    max[j - 1] = temp;\n                    tempIndex = maxIndex[j];\n\
    \                    maxIndex[j] = maxIndex[j - 1];\n                    maxIndex[j\
    \ - 1] = tempIndex;\n                }\n            }\n        }\n    }\n    for\
    \ (i = 0; i < k; i++) {\n        result[i] = arr[maxIndex[i]];\n    }\n   ", " \
    \   let result = [];\n    let max = 0;\n    let index = 0;\n    for (let i = 0;\
    \ i < k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if\
    \ (arr[j] > max) {\n                max = arr[j];\n                index = j;\n\
    \            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j\
    \ = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n             \
    \   max = arr[j];\n                maxIndex = j;\n            }\n        }\n \
    \       result.push(max);\n        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n\
    \        let maxIndex = 0;\n        for (let j = 0; j < arr.length; j++) {\n \
    \           if (arr[j] > max) {\n                max = arr[j];\n             \
    \   maxIndex = j;\n            }\n        }\n        result.push(max);\n     \
    \   arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    if (arr.length\
    \ === 0) {\n        return [];\n    }\n    if (arr.length === 1) {\n        return\
    \ arr;\n    }\n    let result: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        result.push(arr[i]);\n    }\n    for (let i = k; i < arr.length; i++)\
    \ {\n        for (let j = 0; j < k; j++) {\n            if (arr[i] > result[j])\
    \ {\n                result.splice(j, 0, arr[i]);\n                result.pop();\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let max = arr[0];\n    for (let i = 0; i < k;\
    \ i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        max = arr[0];\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    let max = 0;\n    let maxIndex = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = 0;\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "  let result = [];\n  let\
    \ max = -Infinity;\n  let maxIndex = 0;\n  for (let i = 0; i < k; i++) {\n   \
    \ for (let j = 0; j < arr.length; j++) {\n      if (arr[j] > max) {\n        max\
    \ = arr[j];\n        maxIndex = j;\n      }\n    }\n    result.push(max);\n  \
    \  arr[maxIndex] = -Infinity;\n    max = -Infinity;\n  }\n  return result;\n}\n\
    \nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        let max: any = arr[0];\n        let\
    \ maxIndex: any = 0;\n        for (let j = 0; j < arr.length; j++) {\n       \
    \     if (arr[j] > max) {\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let sorted = arr.sort((a, b) => a - b);\n    for (let i =\
    \ 0; i < k; i++) {\n        result.push(sorted[sorted.length - 1 - i]);\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n\
    \        let maxIndex = 0;\n        for (let j = 1; j < arr.length; j++) {\n \
    \           if (arr[j] > max) {\n                max = arr[j];\n             \
    \   maxIndex = j;\n            }\n        }\n        result.push(max);\n     \
    \   arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result:\
    \ any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++) {\n     \
    \   max.push(arr[i]);\n    }\n    for (let i = 0; i < k; i++) {\n        for (let\
    \ j = 0; j < k; j++) {\n            if (max[i] < max[j]) {\n                let\
    \ temp = max[i];\n                max[i] = max[j];\n                max[j] = temp;\n\
    \            }\n        }\n    }\n    for (let i = k; i < arr.length; i++) {\n\
    \        for (let j = 0; j < k; j++) {\n            if (arr[i] > max[j]) {\n \
    \               max[j] = arr[i];\n                break;\n            }\n    \
    \    }\n    }\n    for (let i = 0; i < k; i++) {\n        result.push(max[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        let max = Math.max(...arr);\n\
    \        result.push(max);\n        arr.splice(arr.indexOf(max), 1);\n    }\n\
    \    return result;\n}\n", "    let result: any = [];\n    let max: any = 0;\n\
    \    let index: any = 0;\n    for (let i: any = 0; i < k; i++) {\n        for\
    \ (let j: any = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n \
    \               max = arr[j];\n                index = j;\n            }\n   \
    \     }\n        result.push(max);\n        arr.splice(index, 1);\n        max\
    \ = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let result = [];\n    let sorted = arr.sort((a, b) => a - b);\n\
    \    for (let i = 0; i < k; i++) {\n        result.push(sorted[sorted.length -\
    \ 1 - i]);\n    }\n    return result;\n}\n", "    // TODO\n}\n", "    let result\
    \ = [];\n    let max = arr[0];\n    let maxIndex = 0;\n    for (let i = 0; i <\
    \ k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                maxIndex = j;\n   \
    \         }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let sortedArr = arr.sort((a, b) => b - a);\n\
    \    return sortedArr.slice(0, k);\n}\n", "    if (arr.length === 0) {\n     \
    \   return [];\n    }\n    if (arr.length === 1) {\n        return arr;\n    }\n\
    \    let max: any = [];\n    let maxIndex: any = [];\n    for (let i = 0; i <\
    \ k; i++) {\n        max.push(arr[i]);\n        maxIndex.push(i);\n    }\n   \
    \ for (let i = k; i < arr.length; i++) {\n        let min = Math.min(...max);\n\
    \        let minIndex = max.indexOf(min);\n        if (arr[i] > min) {\n     \
    \       max[minIndex] = arr[i];\n            maxIndex[minIndex] = i;\n       \
    \ }\n    }\n    let result: any = [];\n    for (let i = 0; i < maxIndex.length;\
    \ i++) {\n        result.push(arr[maxIndex[i]]);\n    }\n    return result;\n\
    }\n", "    let result: any = [];\n    let sortedArr: any = arr.sort((a: any, b:\
    \ any) => b - a);\n    for (let i: number = 0; i < k; i++) {\n        result.push(sortedArr[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    let\
    \ sorted = arr.sort((a, b) => b - a);\n    return sorted.slice(0, k);\n}\n", " \
    \   let result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k;\
    \ i++) {\n        max.push(Math.max(...arr));\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n \
    \   for (let i = 0; i < k; i++) {\n        let max = arr[0];\n        let maxIndex\
    \ = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                maxIndex = j;\n   \
    \         }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        max.push(arr[i]);\n    }\n    max.sort((a: any, b: any) => a - b);\n\
    \    for (let i = k; i < arr.length; i++) {\n        if (arr[i] > max[0]) {\n\
    \            max.shift();\n            max.push(arr[i]);\n            max.sort((a:\
    \ any, b: any) => a - b);\n        }\n    }\n    return max;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n    let max = arr[0];\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j =\
    \ 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n               \
    \ max = arr[j];\n                maxIndex = j;\n            }\n        }\n   \
    \     result.push(max);\n        arr.splice(maxIndex, 1);\n        max = arr[0];\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ sorted = arr.sort((a, b) => a - b);\n    let result = [];\n    for (let i =\
    \ sorted.length - 1; i >= sorted.length - k; i--) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = arr[0];\n    for (let i = 0; i < k; i++) {\n   \
    \     for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n\
    \                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        max = arr[0];\n    }\n    return\
    \ result;\n}\n", "    // let sorted = arr.sort((a, b) => b - a);\n    // return\
    \ sorted.slice(0, k);\n    return arr.sort((a, b) => b - a).slice(0, k);\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    let result: any =\
    \ [];\n    for (let i = 0; i < k; i++) {\n        let max: any = arr[0];\n   \
    \     let maxIndex: any = 0;\n        for (let j = 0; j < arr.length; j++) {\n\
    \            if (arr[j] > max) {\n                max = arr[j];\n            \
    \    maxIndex = j;\n            }\n        }\n        result.push(max);\n    \
    \    arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        max = arr[i];\n        maxIndex = i;\n        for (let j = i; j <\
    \ arr.length; j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "  return arr.sort((a: any, b: any) => b - a).slice(0, k);\n}\n\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n    let max = arr[0];\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j =\
    \ 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n               \
    \ max = arr[j];\n                maxIndex = j;\n            }\n        }\n   \
    \     result.push(max);\n        arr.splice(maxIndex, 1);\n        max = arr[0];\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i\
    \ < k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if\
    \ (arr[j] > max) {\n                max = arr[j];\n                maxIndex =\
    \ j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let max: any = arr[0];\n    for (let i = 0; i < k; i++) {\n     \
    \   max = arr[i];\n        for (let j = i; j < arr.length; j++) {\n          \
    \  if (arr[j] > max) {\n                max = arr[j];\n                arr[j]\
    \ = arr[i];\n                arr[i] = max;\n            }\n        }\n       \
    \ result.push(max);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4,\
    \ 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2,\
    \ 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = arr[0];\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \    }\n        }\n        result.push(max);\n        arr.splice(arr.indexOf(max),\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\n", "    let result:\
    \ any = [];\n    arr.sort((a: any, b: any) => a - b);\n    for (let i = 0; i <\
    \ k; i++) {\n        result.push(arr[arr.length - 1 - i]);\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sorted\
    \ = arr.sort((a, b) => b - a);\n    return sorted.slice(0, k);\n}\n", "    //\
    \ TODO\n}\n", "    let result = [];\n    let max = -Infinity;\n    let maxIndex\
    \ = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n    }\n    return\
    \ result;\n}\n", "    let sortedArr = arr.sort((a, b) => b - a);\n    return sortedArr.slice(0,\
    \ k);\n}\n\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result\
    \ = [];\n    let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                maxIndex = j;\n     \
    \       }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));\n", "    if (arr.length === 0) {\n        return [];\n\
    \    }\n    if (arr.length === 1) {\n        return arr;\n    }\n    if (k ===\
    \ 0) {\n        return [];\n    }\n    if (k === 1) {\n        let max = arr[0];\n\
    \        for (let i = 1; i < arr.length; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n            }\n        }\n        return [max];\n\
    \    }\n    if (k === arr.length) {\n        return arr.sort((a, b) => a - b);\n\
    \    }\n    let max = arr[0];\n    let min = arr[0];\n    for (let i = 1; i <\
    \ arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n\
    \        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n\
    \    }\n    let buckets = [];\n    for (let i = 0; i < k; i++) {\n        buckets.push([]);\n\
    \    }\n    let bucketSize = (max - min) / k;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        let index = Math.floor((arr[i] - min) / bucketSize);\n     \
    \   if (index === k) {\n            index--;\n        }\n        buckets[index].push(arr[i]);\n\
    \    }\n    let result = [];\n    for (let i = 0; i < k; i++) {\n        result\
    \ = result.concat(buckets[i].sort((a, b) => b - a));\n    }\n    return result.slice(0,\
    \ k);\n}\n", "    let sorted = arr.sort((a, b) => b - a);\n    return sorted.slice(0,\
    \ k);\n}\n", "    let result: any = [];\n    for (let i = 0; i < k; i++) {\n \
    \       result.push(Math.max(...arr));\n        arr.splice(arr.indexOf(Math.max(...arr)),\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\n", "    let result: any = [];\n    let max: any = 0;\n    let maxIndex: any\
    \ = 0;\n    for (let i: any = 0; i < k; i++) {\n        max = arr[i];\n      \
    \  maxIndex = i;\n        for (let j: any = i + 1; j < arr.length; j++) {\n  \
    \          if (arr[j] > max) {\n                max = arr[j];\n              \
    \  maxIndex = j;\n            }\n        }\n        result.push(max);\n      \
    \  arr[maxIndex] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "    // return arr.sort((a, b) => b - a).slice(0, k);\n    return arr.sort((a,\
    \ b) => a - b).slice(arr.length - k, arr.length);\n}\n", "    let result: any\
    \ = [];\n    for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    const sorted = arr.sort((a:\
    \ any, b: any) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let result:\
    \ any = [];\n    let max: any = 0;\n    for (let i = 0; i < k; i++) {\n      \
    \  for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n \
    \               max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(arr.indexOf(max), 1);\n        max = 0;\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sorted\
    \ = arr.sort((a, b) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let\
    \ result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        max.push(arr[i]);\n    }\n    for (let i = 0; i < arr.length; i++) {\n\
    \        for (let j = 0; j < max.length; j++) {\n            if (arr[i] > max[j])\
    \ {\n                max[j] = arr[i];\n                break;\n            }\n\
    \        }\n    }\n    return max;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    return arr.sort((a: any, b: any) => b - a).slice(0, k);\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sorted = arr.sort((a,\
    \ b) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let sortedArr = arr.sort((a,\
    \ b) => a - b);\n    let result = [];\n    for (let i = 0; i < k; i++) {\n   \
    \     result.push(sortedArr[sortedArr.length - 1 - i]);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let max: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        max.push(Math.max(...arr));\n    \
    \    arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return max;\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    arr.sort((a: any, b:\
    \ any) => b - a);\n    return arr.slice(0, k);\n}\n", "    let max = arr.slice(0,\
    \ k).sort((a, b) => a - b);\n    for (let i = k; i < arr.length; i++) {\n    \
    \    let j = k - 1;\n        while (j >= 0 && max[j] < arr[i]) {\n           \
    \ j--;\n        }\n        if (j !== k - 1) {\n            max.splice(j + 1, 0,\
    \ arr[i]);\n            max.pop();\n        }\n    }\n    return max;\n}\n\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = 0;\n\
    \    let index: any = 0;\n    for (let i: any = 0; i < k; i++) {\n        max\
    \ = arr[i];\n        index = i;\n        for (let j: any = i + 1; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[index] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for (let i = 0; i < k; i++) {\n        let max\
    \ = arr[0];\n        let index = 0;\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    // TODO\n}\n", "    const sorted = arr.sort((a:\
    \ any, b: any) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let max:\
    \ any = [];\n    let temp: any = [];\n    for (let i = 0; i < k; i++) {\n    \
    \    max.push(arr[i]);\n    }\n    for (let i = k; i < arr.length; i++) {\n  \
    \      for (let j = 0; j < k; j++) {\n            if (arr[i] > max[j]) {\n   \
    \             temp = max.slice(0, j);\n                temp.push(arr[i]);\n  \
    \              max = temp.concat(max.slice(j, k - 1));\n                break;\n\
    \            }\n        }\n    }\n    return max;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = arr[0];\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \    }\n        }\n        result.push(max);\n        arr.splice(arr.indexOf(max),\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n    let max = arr[0];\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j =\
    \ 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n               \
    \ max = arr[j];\n                maxIndex = j;\n            }\n        }\n   \
    \     result.push(max);\n        arr.splice(maxIndex, 1);\n        max = arr[0];\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let max = 0;\n  \
    \  let index = 0;\n    for (let i = 0; i < k; i++) {\n        max = arr[i];\n\
    \        index = i;\n        for (let j = i; j < arr.length; j++) {\n        \
    \    if (arr[j] > max) {\n                max = arr[j];\n                index\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr[index]\
    \ = -Infinity;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5],\
    \ 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2,\
    \ -1, -2, 1], 1));", "    let result = [];\n    let max = arr[0];\n    let maxIndex\
    \ = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sortedArr = arr.sort((a,\
    \ b) => b - a);\n    return sortedArr.slice(0, k);\n}\n", "    let sortedArr =\
    \ arr.sort((a, b) => b - a);\n    return sortedArr.slice(0, k);\n}\n", "    arr.sort((a:\
    \ any, b: any) => b - a);\n    return arr.slice(0, k);\n}\n", "    let sortedArr\
    \ = arr.sort((a, b) => b - a);\n    return sortedArr.slice(0, k);\n}\n", "   \
    \ let result = [];\n    let max = arr[0];\n    let maxIndex = 0;\n    let min\
    \ = arr[0];\n    let minIndex = 0;\n    for (let i = 0; i < k; i++) {\n      \
    \  for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n \
    \               max = arr[j];\n                maxIndex = j;\n            }\n\
    \            if (arr[j] < min) {\n                min = arr[j];\n            \
    \    minIndex = j;\n            }\n        }\n        result.push(max);\n    \
    \    arr[maxIndex] = min;\n        max = arr[0];\n        min = arr[0];\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    return\
    \ arr.sort((a: any, b: any) => b - a).slice(0, k);\n}\n", "    if (arr.length\
    \ === 0) {\n        return []\n    }\n    if (k === 0) {\n        return []\n\
    \    }\n    if (k === arr.length) {\n        return arr\n    }\n    let sortedArr\
    \ = arr.sort((a, b) => b - a)\n    return sortedArr.slice(0, k)\n}\n", "    return\
    \ arr.sort((a: any, b: any) => b - a).slice(0, k);\n}\n", "    let result: any\
    \ = [];\n    let sortedArr: any = arr.sort((a: any, b: any) => b - a);\n    for\
    \ (let i: number = 0; i < k; i++) {\n        result.push(sortedArr[i]);\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        max.push(arr[i]);\n    }\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr[i] > max[0]) {\n            max.shift();\n            max.push(arr[i]);\n\
    \        }\n    }\n    for (let i = 0; i < k; i++) {\n        result.push(max[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    //\
    \ Write your code here\n    let result = [];\n    let sortedArr = arr.sort((a,\
    \ b) => b - a);\n    for (let i = 0; i < k; i++) {\n        result.push(sortedArr[i]);\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < k; i++) {\n        let max: any = arr[0];\n        let index: any = 0;\n\
    \        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max)\
    \ {\n                max = arr[j];\n                index = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(index, 1);\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    if (arr.length\
    \ === 0) {\n        return [];\n    }\n    if (arr.length === 1) {\n        return\
    \ arr;\n    }\n    let max = arr[0];\n    let min = arr[0];\n    let maxArr =\
    \ [];\n    let minArr = [];\n    for (let i = 0; i < arr.length; i++) {\n    \
    \    if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i]\
    \ < min) {\n            min = arr[i];\n        }\n    }\n    for (let i = 0; i\
    \ < arr.length; i++) {\n        if (arr[i] === max) {\n            maxArr.push(arr[i]);\n\
    \        }\n        if (arr[i] === min) {\n            minArr.push(arr[i]);\n\
    \        }\n    }\n    if (k === 1) {\n        return maxArr;\n    }\n    if (k\
    \ === arr.length) {\n        return arr;\n    }\n    if (k === 2) {\n        return\
    \ maxArr.concat(minArr);\n    }\n    if (k === 3) {\n        return maxArr.concat(minArr).concat(arr[1]);\n\
    \    }\n    return arr;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    //\
    \ Write your code here\n    let sortedArr = arr.sort((a, b) => a - b);\n    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        result.push(sortedArr[sortedArr.length\
    \ - 1 - i]);\n    }\n    return result;\n}\n", "    let sorted = arr.sort((a,\
    \ b) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let sorted = arr.sort((a,\
    \ b) => b - a);\n    return sorted.slice(0, k);\n}\n", "    let max: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        max.push(Math.max(...arr));\n    \
    \    arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return max;\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n \
    \   let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n \
    \       for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max)\
    \ {\n                max = arr[j];\n                maxIndex = j;\n          \
    \  }\n        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n\
    \        max = 0;\n    }\n    return result;\n}\n", "    let sorted = arr.sort((a,\
    \ b) => b - a);\n    return sorted.slice(0, k);\n}\n\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    for (let i = 0;\
    \ i < k; i++) {\n        result.push(Math.max(...arr));\n        arr.splice(arr.indexOf(Math.max(...arr)),\
    \ 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "  let result\
    \ = [];\n  let max = Math.max(...arr);\n  let min = Math.min(...arr);\n  for (let\
    \ i = 0; i < k; i++) {\n    if (arr.includes(max)) {\n      result.push(max);\n\
    \      arr.splice(arr.indexOf(max), 1);\n      max = Math.max(...arr);\n    }\
    \ else if (arr.includes(min)) {\n      result.push(min);\n      arr.splice(arr.indexOf(min),\
    \ 1);\n      min = Math.min(...arr);\n    }\n  }\n  return result;\n}\n", "  \
    \  let result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++)\
    \ {\n        max.push(arr[i]);\n    }\n    for (let i = 0; i < k; i++) {\n   \
    \     let min: any = Math.min(...max);\n        result.push(min);\n        let\
    \ index: any = max.indexOf(min);\n        max.splice(index, 1);\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "  let result\
    \ = [];\n  for (let i = 0; i < k; i++) {\n    let max = arr[0];\n    for (let\
    \ j = 0; j < arr.length; j++) {\n      if (arr[j] > max) {\n        max = arr[j];\n\
    \      }\n    }\n    result.push(max);\n    arr.splice(arr.indexOf(max), 1);\n\
    \  }\n  return result;\n}\n", "    let result = [];\n    for (let i = 0; i < k;\
    \ i++) {\n        let max = arr[0];\n        let maxIndex = 0;\n        for (let\
    \ j = 1; j < arr.length; j++) {\n            if (arr[j] > max) {\n           \
    \     max = arr[j];\n                maxIndex = j;\n            }\n        }\n\
    \        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "    return arr.sort((a: any, b: any) => b - a).slice(0, k);\n\
    }\n", "    let result = [];\n    let max = -Infinity;\n    let maxIndex = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    // TODO:\
    \ Implement me\n    return null;\n}\n", "    let result: any = [];\n    let index:\
    \ any = 0;\n    let max: any = arr[0];\n    for (let i: any = 0; i < k; i++) {\n\
    \        for (let j: any = 0; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                index = j;\n        \
    \    }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \        max = arr[0];\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let max: any = 0;\n    let index: any = 0;\n    for (let i: any =\
    \ 0; i < k; i++) {\n        max = arr[i];\n        index = i;\n        for (let\
    \ j: any = i + 1; j < arr.length; j++) {\n            if (arr[j] > max) {\n  \
    \              max = arr[j];\n                index = j;\n            }\n    \
    \    }\n        result.push(max);\n        arr[index] = arr[i];\n        arr[i]\
    \ = max;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let sorted = arr.sort((a, b) => b - a);\n    return sorted.slice(0,\
    \ k);\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4],\
    \ 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result:\
    \ any = [];\n    for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let res: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        let max = Math.max(...arr);\n    \
    \    res.push(max);\n        arr.splice(arr.indexOf(max), 1);\n    }\n    return\
    \ res;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result\
    \ = [];\n    let sorted = arr.sort((a, b) => b - a);\n    for (let i = 0; i <\
    \ k; i++) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\n",
  "    let result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++)\
    \ {\n        max.push(arr[i]);\n    }\n    for (let i = 0; i < k; i++) {\n   \
    \     for (let j = i + 1; j < k; j++) {\n            if (max[i] < max[j]) {\n\
    \                let temp = max[i];\n                max[i] = max[j];\n      \
    \          max[j] = temp;\n            }\n        }\n    }\n    for (let i = k;\
    \ i < arr.length; i++) {\n        for (let j = 0; j < k; j++) {\n            if\
    \ (arr[i] > max[j]) {\n                max[j] = arr[i];\n                break;\n\
    \            }\n        }\n    }\n    for (let i = 0; i < k; i++) {\n        result.push(max[i]);\n\
    \    }\n    return result;\n}\n", "    return arr.sort((a: any, b: any) => b -\
    \ a).slice(0, k);\n}\n", "    let result = [];\n    for (let i = 0; i < k; i++)\
    \ {\n        let max = arr[0];\n        let maxIndex = 0;\n        for (let j\
    \ = 1; j < arr.length; j++) {\n            if (arr[j] > max) {\n             \
    \   max = arr[j];\n                maxIndex = j;\n            }\n        }\n \
    \       result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "  let result: any = [];\n  let max: any = 0;\n  let maxIndex:\
    \ any = 0;\n  for (let i = 0; i < k; i++) {\n    for (let j = 0; j < arr.length;\
    \ j++) {\n      if (arr[j] > max) {\n        max = arr[j];\n        maxIndex =\
    \ j;\n      }\n    }\n    result.push(max);\n    arr.splice(maxIndex, 1);\n  \
    \  max = 0;\n  }\n  return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let sortedArr = arr.sort((a, b) => b - a);\n    return sortedArr.slice(0,\
    \ k);\n}\n", "    let sorted = arr.sort((a, b) => b - a);\n    return sorted.slice(0,\
    \ k);\n}\n", "  let result: any = [];\n  for (let i = 0; i < k; i++) {\n    let\
    \ max: any = arr[0];\n    let maxIndex: any = 0;\n    for (let j = 0; j < arr.length;\
    \ j++) {\n      if (arr[j] > max) {\n        max = arr[j];\n        maxIndex =\
    \ j;\n      }\n    }\n    result.push(max);\n    arr.splice(maxIndex, 1);\n  }\n\
    \  return result;\n}\n\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ sorted = arr.sort((a, b) => a - b);\n    return sorted.slice(sorted.length -\
    \ k);\n}\n", "    let result: any = [];\n    let max: any = 0;\n    let index:\
    \ any = 0;\n    for (let i: any = 0; i < k; i++) {\n        for (let j: any =\
    \ 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n               \
    \ max = arr[j];\n                index = j;\n            }\n        }\n      \
    \  result.push(max);\n        arr.splice(index, 1);\n        max = 0;\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = 0;\n    let index = 0;\n    for (let i = 0; i <\
    \ k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                index = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4,\
    \ 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2,\
    \ 1, 2, -1, -2, 1], 1));", "    let sorted = arr.sort((a, b) => b - a);\n    return\
    \ sorted.slice(0, k);\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = arr[0];\n    let maxIndex = 0;\n    for (let i =\
    \ 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n         \
    \   if (arr[j] > max) {\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "  let max = arr.slice(0, k).sort((a, b) => b -\
    \ a);\n  for (let i = k; i < arr.length; i++) {\n    let j = 0;\n    while (j\
    \ < k && max[j] > arr[i]) {\n      j++;\n    }\n    if (j < k) {\n      max.splice(j,\
    \ 0, arr[i]);\n      max.pop();\n    }\n  }\n  return max;\n}\n\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let sorted = arr.sort((a, b) => a - b);\n \
    \   let result = [];\n    for (let i = sorted.length - 1; i >= sorted.length -\
    \ k; i--) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\n\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n        let index\
    \ = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                index = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let max = arr[0];\n\
    \    let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j\
    \ = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n             \
    \   max = arr[j];\n                maxIndex = j;\n            }\n        }\n \
    \       result.push(max);\n        arr.splice(maxIndex, 1);\n        max = arr[0];\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    // Write\
    \ your code here\n    let result: any = [];\n    let max: any = [];\n    for (let\
    \ i = 0; i < k; i++) {\n        max.push(arr[i]);\n    }\n    for (let i = k;\
    \ i < arr.length; i++) {\n        for (let j = 0; j < k; j++) {\n            if\
    \ (arr[i] > max[j]) {\n                max[j] = arr[i];\n                break;\n\
    \            }\n        }\n    }\n    return max;\n}\n", "  let sorted = arr.sort((a,\
    \ b) => a - b);\n  return sorted.slice(sorted.length - k);\n}\n", "    let result\
    \ = [];\n    let max = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        max = arr[i];\n        maxIndex = i;\n        for (let j = i; j <\
    \ arr.length; j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for (let i = 0; i < k; i++) {\n        let max\
    \ = arr[0];\n        let index = 0;\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n    let max = arr[0];\n \
    \   let maxIndex = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j =\
    \ 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n               \
    \ max = arr[j];\n                maxIndex = j;\n            }\n        }\n   \
    \     result.push(max);\n        arr.splice(maxIndex, 1);\n        max = arr[0];\n\
    \    }\n    return result;\n}\n", "    let result: any = [];\n    for (let i =\
    \ 0; i < k; i++) {\n        let max: any = arr[0];\n        let index: any = 0;\n\
    \        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max)\
    \ {\n                max = arr[j];\n                index = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(index, 1);\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result = [];\n    let max = -Infinity;\n    let maxIndex = 0;\n    for (let\
    \ i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n     \
    \       if (arr[j] > max) {\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr[maxIndex]\
    \ = -Infinity;\n        max = -Infinity;\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = arr[0];\n\
    \    let maxIndex: any = 0;\n    for (let i: any = 0; i < k; i++) {\n        for\
    \ (let j: any = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n \
    \               max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    \
    \    max = arr[0];\n    }\n    return result;\n}\n", "    let result: any = [];\n\
    \    let max: any = arr[0];\n    let maxIndex: any = 0;\n    let i: any = 0;\n\
    \    while (i < k) {\n        for (let j: any = 0; j < arr.length; j++) {\n  \
    \          if (arr[j] > max) {\n                max = arr[j];\n              \
    \  maxIndex = j;\n            }\n        }\n        result.push(max);\n      \
    \  arr.splice(maxIndex, 1);\n        max = arr[0];\n        i++;\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let sortedArr\
    \ = arr.sort((a, b) => a - b);\n    let result = [];\n    for (let i = sortedArr.length\
    \ - 1; i >= sortedArr.length - k; i--) {\n        result.push(sortedArr[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    return\
    \ arr.sort((a: any, b: any) => b - a).slice(0, k);\n}\n", "    let result = [];\n\
    \    for (let i = 0; i < k; i++) {\n        let max = arr[0];\n        let index\
    \ = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                index = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    for (let i = 0; i < k; i++) {\n        let max = Math.max(...arr);\n\
    \        result.push(max);\n        arr.splice(arr.indexOf(max), 1);\n    }\n\
    \    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let\
    \ result: any = [];\n    let max: any = [];\n    for (let i = 0; i < k; i++) {\n\
    \        max.push(arr[i]);\n    }\n    for (let i = 0; i < k; i++) {\n       \
    \ for (let j = i + 1; j < k; j++) {\n            if (max[i] < max[j]) {\n    \
    \            let temp = max[i];\n                max[i] = max[j];\n          \
    \      max[j] = temp;\n            }\n        }\n    }\n    for (let i = k; i\
    \ < arr.length; i++) {\n        for (let j = 0; j < k; j++) {\n            if\
    \ (arr[i] > max[j]) {\n                max[j] = arr[i];\n                break;\n\
    \            }\n        }\n    }\n    for (let i = 0; i < k; i++) {\n        result.push(max[i]);\n\
    \    }\n    return result;\n}\n", "    let sortedArr = arr.sort((a, b) => b -\
    \ a);\n    return sortedArr.slice(0, k);\n}\n", "    let result: any = [];\n \
    \   let sorted: any = arr.sort((a: any, b: any) => a - b);\n    for (let i: number\
    \ = sorted.length - 1; i >= sorted.length - k; i--) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4,\
    \ -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n", "    let\
    \ result = [];\n    let max = 0;\n    let index = 0;\n    for (let i = 0; i <\
    \ k; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j]\
    \ > max) {\n                max = arr[j];\n                index = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4,\
    \ 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2,\
    \ 1, 2, -1, -2, 1], 1));", "    let result = arr.sort((a, b) => b - a);\n    return\
    \ result.slice(0, k);\n}\n", "    let result: any = [];\n    let max: any = 0;\n\
    \    let index: any = 0;\n    for (let i: any = 0; i < k; i++) {\n        max\
    \ = arr[i];\n        index = i;\n        for (let j: any = i + 1; j < arr.length;\
    \ j++) {\n            if (arr[j] > max) {\n                max = arr[j];\n   \
    \             index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[index] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n\
    \    let max: any = 0;\n    let index: any = 0;\n    for (let i: any = 0; i <\
    \ k; i++) {\n        for (let j: any = 0; j < arr.length; j++) {\n           \
    \ if (arr[j] > max) {\n                max = arr[j];\n                index =\
    \ j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    return arr.sort((a: any, b: any) => b - a).slice(0,\
    \ k);\n}\n", "    let result = [];\n    let max = arr[0];\n    let index = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result = [];\n \
    \   let max = 0;\n    let index = 0;\n    for (let i = 0; i < k; i++) {\n    \
    \    for (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n\
    \                max = arr[j];\n                index = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(index, 1);\n        max\
    \ = 0;\n    }\n    return result;\n}\n", "    let result = [];\n    let sorted\
    \ = arr.sort((a, b) => a - b);\n    for (let i = sorted.length - 1; i >= sorted.length\
    \ - k; i--) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    // return arr.sort((a,\
    \ b) => b - a).slice(0, k);\n    return arr.sort((a, b) => a - b).slice(arr.length\
    \ - k);\n}\n", "    let result = [];\n    let max = 0;\n    let maxIndex = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        max = arr[i];\n        maxIndex =\
    \ i;\n        for (let j = i; j < arr.length; j++) {\n            if (arr[j] >\
    \ max) {\n                max = arr[j];\n                maxIndex = j;\n     \
    \       }\n        }\n        result.push(max);\n        arr[maxIndex] = arr[i];\n\
    \        arr[i] = max;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let max: any = 0;\n    let index: any = 0;\n    for (let i: any =\
    \ 0; i < k; i++) {\n        max = arr[i];\n        index = i;\n        for (let\
    \ j: any = i + 1; j < arr.length; j++) {\n            if (arr[j] > max) {\n  \
    \              max = arr[j];\n                index = j;\n            }\n    \
    \    }\n        result.push(max);\n        arr[index] = arr[i];\n        arr[i]\
    \ = max;\n    }\n    return result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\n\
    console.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2,\
    \ 1], 1));", "    let result: any = [];\n    let max: any = [];\n    for (let\
    \ i = 0; i < k; i++) {\n        max.push(arr[i]);\n    }\n    for (let i = 0;\
    \ i < k; i++) {\n        for (let j = 0; j < k; j++) {\n            if (max[i]\
    \ > max[j]) {\n                let temp = max[i];\n                max[i] = max[j];\n\
    \                max[j] = temp;\n            }\n        }\n    }\n    for (let\
    \ i = k; i < arr.length; i++) {\n        for (let j = 0; j < k; j++) {\n     \
    \       if (arr[i] > max[j]) {\n                max[j] = arr[i];\n           \
    \     break;\n            }\n        }\n    }\n    for (let i = 0; i < k; i++)\
    \ {\n        result.push(max[i]);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = 0;\n\
    \    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \    }\n        }\n        result.push(max);\n        arr.splice(arr.indexOf(max),\
    \ 1);\n        max = 0;\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    return arr.sort((a: any, b: any) => b - a).slice(0,\
    \ k);\n}\n", "    let result = [];\n    let max = 0;\n    let index = 0;\n   \
    \ for (let i = 0; i < k; i++) {\n        for (let j = 0; j < arr.length; j++)\
    \ {\n            if (arr[j] > max) {\n                max = arr[j];\n        \
    \        index = j;\n            }\n        }\n        result.push(max);\n   \
    \     arr.splice(index, 1);\n        max = 0;\n    }\n    return result;\n}\n",
  "    let result = [];\n    let max = 0;\n    let index = 0;\n    for (let i = 0;\
    \ i < k; i++) {\n        max = arr[i];\n        index = i;\n        for (let j\
    \ = i; j < arr.length; j++) {\n            if (arr[j] > max) {\n             \
    \   max = arr[j];\n                index = j;\n            }\n        }\n    \
    \    result.push(max);\n        arr[index] = -1001;\n    }\n    return result;\n\
    }\n", "    arr.sort((a: any, b: any) => a - b);\n    return arr.slice(arr.length\
    \ - k);\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    // sort\
    \ the array in descending order\n    arr.sort((a: any, b: any) => b - a);\n  \
    \  // return the first k elements\n    return arr.slice(0, k);\n}\n", "    let\
    \ result = [];\n    for (let i = 0; i < k; i++) {\n        result.push(Math.max(...arr));\n\
    \        arr.splice(arr.indexOf(Math.max(...arr)), 1);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let max = 0;\n    let index = 0;\n    for (let\
    \ i = 0; i < k; i++) {\n        max = arr[i];\n        index = i;\n        for\
    \ (let j = i; j < arr.length; j++) {\n            if (arr[j] > max) {\n      \
    \          max = arr[j];\n                index = j;\n            }\n        }\n\
    \        result.push(max);\n        arr[index] = arr[i];\n        arr[i] = max;\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let max = 0;\n  \
    \  let index = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0;\
    \ j < arr.length; j++) {\n            if (arr[j] > max) {\n                max\
    \ = arr[j];\n                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n        max = 0;\n    }\n    return result;\n\
    }\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    // return arr.sort((a,\
    \ b) => b - a).slice(0, k);\n    let result = [];\n    for (let i = 0; i < k;\
    \ i++) {\n        let max = -Infinity;\n        let maxIndex = -1;\n        for\
    \ (let j = 0; j < arr.length; j++) {\n            if (arr[j] > max) {\n      \
    \          max = arr[j];\n                maxIndex = j;\n            }\n     \
    \   }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n  \
    \  return result;\n}\n", "    let sorted = arr.sort((a, b) => a - b);\n    return\
    \ sorted.slice(sorted.length - k);\n}\n", "    let result: any = [];\n    let\
    \ max: any = [];\n    for (let i = 0; i < k; i++) {\n        max.push(arr[i]);\n\
    \    }\n    for (let i = 0; i < k; i++) {\n        for (let j = i + 1; j < k;\
    \ j++) {\n            if (max[i] < max[j]) {\n                let temp = max[i];\n\
    \                max[i] = max[j];\n                max[j] = temp;\n          \
    \  }\n        }\n    }\n    for (let i = k; i < arr.length; i++) {\n        for\
    \ (let j = 0; j < k; j++) {\n            if (arr[i] > max[j]) {\n            \
    \    max[j] = arr[i];\n                break;\n            }\n        }\n    }\n\
    \    for (let i = 0; i < k; i++) {\n        result.push(max[i]);\n    }\n    return\
    \ result;\n}\nconsole.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4,\
    \ 4], 2));\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));", "    let result\
    \ = [];\n    let sorted = arr.sort((a, b) => b - a);\n    for (let i = 0; i <\
    \ k; i++) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\nconsole.log(maximum([-3,\
    \ -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\nconsole.log(maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1));", "    let result: any = [];\n    let max: any = [];\n\
    \    for (let i = 0; i < k; i++) {\n        max.push(arr[i]);\n    }\n    for\
    \ (let i = 0; i < k; i++) {\n        for (let j = 0; j < k; j++) {\n         \
    \   if (max[i] > max[j]) {\n                let temp = max[i];\n             \
    \   max[i] = max[j];\n                max[j] = temp;\n            }\n        }\n\
    \    }\n    for (let i = k; i < arr.length; i++) {\n        for (let j = 0; j\
    \ < k; j++) {\n            if (arr[i] > max[j]) {\n                max[j] = arr[i];\n\
    \                break;\n            }\n        }\n    }\n    for (let i = 0;\
    \ i < k; i++) {\n        result.push(max[i]);\n    }\n    return result;\n}\n\
    console.log(maximum([-3, -4, 5], 3));\nconsole.log(maximum([4, -4, 4], 2));\n\
    console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

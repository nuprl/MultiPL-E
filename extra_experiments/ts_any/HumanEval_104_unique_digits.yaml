name: HumanEval_104_unique_digits
language: ts
prompt: "//Given an array of positive integers x. return a sorted array of all \n\
  // elements that hasn't any even digit.\n// Note: Returned array should be sorted\
  \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
  // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
  \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
  \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
  \ 103, 31]),[31, 135]);\n}\n\ntest();"
completions: ["    let result = [];\n    for (let i = 0; i < x.length; i++) {\n  \
    \      let isEven = false;\n        let num = x[i].toString();\n        for (let\
    \ j = 0; j < num.length; j++) {\n            if (num[j] % 2 === 0) {\n       \
    \         isEven = true;\n                break;\n            }\n        }\n \
    \       if (!isEven) {\n            result.push(x[i]);\n        }\n    }\n   \
    \ return result.sort((a, b) => a - b);\n}\n", "    let result = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num = x[i];\n        let flag = true;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (flag) {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    let result: any = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let temp: any = x[i].toString().split('');\n        let count:\
    \ number = 0;\n        for (let j = 0; j < temp.length; j++) {\n            if\
    \ (temp[j] % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       if (count == 0) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33,\
    \ 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "    let\
    \ result: number[] = [];\n    for (let i = 0; i < x.length; i++) {\n        let\
    \ num: number = x[i];\n        let isUnique: boolean = true;\n        while (num\
    \ > 0) {\n            let digit: number = num % 10;\n            if (digit % 2\
    \ == 0) {\n                isUnique = false;\n                break;\n       \
    \     }\n            num = Math.floor(num / 10);\n        }\n        if (isUnique)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    let uniqueDigits: any = [];\n    let evenDigits: any\
    \ = [];\n    let evenDigitsStr: any = [];\n    let uniqueDigitsStr: any = [];\n\
    \    let uniqueDigitsStrSorted: any = [];\n    let uniqueDigitsSorted: any = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n   \
    \         evenDigits.push(x[i]);\n        }\n    }\n    for (let i = 0; i < evenDigits.length;\
    \ i++) {\n        evenDigitsStr.push(evenDigits[i].toString());\n    }\n    for\
    \ (let i = 0; i < evenDigitsStr.length; i++) {\n        for (let j = 0; j < evenDigitsStr[i].length;\
    \ j++) {\n            if (evenDigitsStr[i][j] % 2 === 0) {\n                uniqueDigitsStr.push(evenDigitsStr[i]);\n\
    \            }\n        }\n    }\n    for (let i = 0; i < uniqueDigitsStr.length;\
    \ i++) {\n        uniqueDigitsStrSorted.push(uniqueDigitsStr[i].split('').sort().join(''));\n\
    \    }\n    for (let i = 0; i < uniqueDigitsStrSorted.length; i++) {\n       \
    \ uniqueDigitsSorted.push(parseInt(uniqueDigitsStrSorted[i]));\n    }\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (uniqueDigitsSorted.indexOf(x[i])\
    \ === -1) {\n            uniqueDigits.push(x[i]);\n        }\n    }\n    return\
    \ uniqueDigits.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n", "    let result: any = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let temp: any = x[i].toString().split('');\n        let flag:\
    \ boolean = true;\n        for (let j = 0; j < temp.length; j++) {\n         \
    \   if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n       \
    \         break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "   \
    \ let result: any = [];\n    for (let i = 0; i < x.length; i++) {\n        let\
    \ isEven: boolean = false;\n        for (let j = 0; j < x[i].toString().length;\
    \ j++) {\n            if (x[i].toString()[j] % 2 === 0) {\n                isEven\
    \ = true;\n            }\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n", "    let arr\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n\
    \        let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n \
    \           if (temp[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\n", "    let result\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven = false;\n\
    \        let num = x[i].toString();\n        for (let j = 0; j < num.length; j++)\
    \ {\n            if (num[j] % 2 === 0) {\n                isEven = true;\n   \
    \             break;\n            }\n        }\n        if (!isEven) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n", "    let evenDigits = [2, 4, 6, 8, 0];\n    let result = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let isEven = false;\n     \
    \   let num = x[i];\n        while (num > 0) {\n            let digit = num %\
    \ 10;\n            if (evenDigits.includes(digit)) {\n                isEven =\
    \ true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n", "    let arr:\
    \ any = [];\n    for (let i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n\
    \        let flag = true;\n        for (let j = 0; j < num.length; j++) {\n  \
    \          if (num[j] % 2 == 0) {\n                flag = false;\n           \
    \     break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort();\n}\n", "    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let even = false;\n        let num\
    \ = x[i].toString();\n        for (let j = 0; j < num.length; j++) {\n       \
    \     if (num[j] % 2 === 0) {\n                even = true;\n            }\n \
    \       }\n        if (!even) {\n            result.push(x[i]);\n        }\n \
    \   }\n    return result.sort((a, b) => a - b);\n}", "    let result: any = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let str: string = x[i].toString();\n        for (let j = 0; j < str.length;\
    \ j++) {\n            if (parseInt(str[j]) % 2 === 0) {\n                isEven\
    \ = true;\n                break;\n            }\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    let result: any = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let num: any = x[i];\n        let flag: boolean = true;\n  \
    \      while (num > 0) {\n            let digit: number = num % 10;\n        \
    \    if (digit % 2 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (flag) {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n", "    let evenDigits = [0, 2, 4, 6, 8];\n    let uniqueDigits = [];\n   \
    \ for (let i = 0; i < x.length; i++) {\n        let isUnique = true;\n       \
    \ let num = x[i];\n        while (num > 0) {\n            let digit = num % 10;\n\
    \            if (evenDigits.includes(digit)) {\n                isUnique = false;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (isUnique) {\n            uniqueDigits.push(x[i]);\n  \
    \      }\n    }\n    return uniqueDigits.sort((a, b) => a - b);\n}\n", "    let\
    \ result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven =\
    \ false;\n        let num = x[i].toString();\n        for (let j = 0; j < num.length;\
    \ j++) {\n            if (num[j] % 2 === 0) {\n                isEven = true;\n\
    \                break;\n            }\n        }\n        if (!isEven) {\n  \
    \          result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n", "    let even_digits = [0, 2, 4, 6, 8];\n    let result =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        let is_even = false;\n\
    \        let num = x[i];\n        while (num > 0) {\n            let digit = num\
    \ % 10;\n            if (even_digits.includes(digit)) {\n                is_even\
    \ = true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!is_even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n", "    let result:\
    \ any = [];\n    for (let i = 0; i < x.length; i++) {\n        let temp: any =\
    \ x[i].toString().split('');\n        let flag: boolean = true;\n        for (let\
    \ j = 0; j < temp.length; j++) {\n            if (parseInt(temp[j]) % 2 == 0)\
    \ {\n                flag = false;\n                break;\n            }\n  \
    \      }\n        if (flag) {\n            result.push(x[i]);\n        }\n   \
    \ }\n    return result.sort((a, b) => a - b);\n}\n", "    let result: any = [];\n\
    \    for (let i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "   \
    \ let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven\
    \ = false;\n        let num = x[i].toString();\n        for (let j = 0; j < num.length;\
    \ j++) {\n            if (num[j] % 2 === 0) {\n                isEven = true;\n\
    \                break;\n            }\n        }\n        if (!isEven) {\n  \
    \          result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

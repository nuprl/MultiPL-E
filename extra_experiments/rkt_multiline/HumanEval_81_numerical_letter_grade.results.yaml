language: rkt
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(>= (first grades) 4.0)\
    \ (cons \"A+\" (numerical_letter_grade (rest grades)))]\n    [(>= (first grades)\
    \ 3.7) (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(>= (first grades)\
    \ 3.3) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(>= (first\
    \ grades) 3.0) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(>=\
    \ (first grades) 2.7) (cons \"B\" (numerical_letter_grade (rest grades)))]\n \
    \   [(>= (first grades) 2.3) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 2.0) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.7) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.3) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.0) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 0.7) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \    [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"\
    ]\n       [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>=\
    \ grade 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"\
    B-\"]\n       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>=\
    \ grade 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"\
    D\"]\n       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplxgenrzg.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplxgenrzg.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplxgenrzg.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplxgenrzg.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0qanfcq2.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0qanfcq2.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0qanfcq2.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0qanfcq2.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(>= (first grades) 4.0)\
    \ (cons \"A+\" (numerical_letter_grade (rest grades)))]\n    [(>= (first grades)\
    \ 3.7) (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(>= (first grades)\
    \ 3.3) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(>= (first\
    \ grades) 3.0) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(>=\
    \ (first grades) 2.7) (cons \"B\" (numerical_letter_grade (rest grades)))]\n \
    \   [(>= (first grades) 2.3) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 2.0) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.7) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.3) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 1.0) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 0.7) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \    [(>= (first grades) 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \    [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo39c2yrs.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           ((>= x 4.0) \"A+\")\n\
    \           ((>= x 3.7) \"A\")\n           ((>= x 3.3) \"A-\")\n           ((>=\
    \ x 3.0) \"B+\")\n           ((>= x 2.7) \"B\")\n           ((>= x 2.3) \"B-\"\
    )\n           ((>= x 2.0) \"C+\")\n           ((>= x 1.7) \"C\")\n           ((>=\
    \ x 1.3) \"C-\")\n           ((>= x 1.0) \"D+\")\n           ((>= x 0.7) \"D\"\
    )\n           ((>= x 0.0) \"D-\")\n           (else \"E\")))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_rct4fh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_rct4fh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_rct4fh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_rct4fh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr68v_via.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwhdc784j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [(>= grade 0.0) \"E\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporz8nr3n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa331f0zs.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa331f0zs.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa331f0zs.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa331f0zs.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp320eu8ic.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [(>= grade 0.0) \"E\"]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq0ielhkh.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n      \
    \         [(>= gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n       \
    \        [(>= gpa 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n        \
    \       [(>= gpa 2.3) \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n        \
    \       [(>= gpa 1.7) \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n         \
    \      [(>= gpa 1.0) \"D+\"]\n               [(>= gpa 0.7) \"D\"]\n          \
    \     [(>= gpa 0.0) \"D-\"]\n               [(>= gpa 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_bzca4a4.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_bzca4a4.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_bzca4a4.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_bzca4a4.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf3bcoh07.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29ndn1hc.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125
- exit_code: 0
  program: "#lang racket\n\n#| It is the last week of the semester and the teacher\
    \ has to give the grades\nto students. The teacher has been making her own algorithm\
    \ for grading.\nThe only problem is, she has lost the code she used for grading.\n\
    She has given you a list of GPAs for some students and you have to write \na function\
    \ that can output a list of letter grades using the following table:\nGPA    \
    \   |    Letter grade\n4.0                A+\n> 3.7                A \n> 3.3 \
    \               A- \n> 3.0                B+\n> 2.7                B \n> 2.3 \
    \               B-\n> 2.0                C+\n> 1.7                C\n> 1.3   \
    \             C-\n> 1.0                D+ \n> 0.7                D \n> 0.0   \
    \             D-\n0.0                E\nExample:\n>>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n(list \"A+\" \"B\" \"C-\" \"C\" \"A-\")|#\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1clqjfb5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660219125

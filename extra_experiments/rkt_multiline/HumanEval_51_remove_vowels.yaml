name: HumanEval_51_remove_vowels
language: rkt
prompt: "#lang racket\n\n#| remove_vowels is a function that takes string and returns\
  \ string without vowels.\n>>> (remove_vowels \"\")\n\"\"\n>>> (remove_vowels \"\
  abcdef\")\n\"bcdf\"\n>>> (remove_vowels \"aaaaa\")\n\"\"\n>>> (remove_vowels \"\
  aaBAA\")\n\"B\"\n>>> (remove_vowels \"zbcd\")\n\"zbcd\"|#\n(define (remove_vowels\
  \ text)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
  \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
  ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
  )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate \"\
  acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
  \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text) result]\n\
    \      [(vowel? (first text)) (remove_vowels_iter (rest text) result)]\n     \
    \ [else (remove_vowels_iter (rest text) (string-append result (string (first text))))]))\n\
    \  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text) empty]\n \
    \   [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n       \
    \ (char=? ch #\\e)\n        (char=? ch #\\i)\n        (char=? ch #\\o)\n     \
    \   (char=? ch #\\u)))\n  (define (remove_vowels_iter text result)\n    (if (string-empty?\
    \ text)\n        result\n        (if (is_vowel? (string-ref text 0))\n       \
    \     (remove_vowels_iter (substring text 1) result)\n            (remove_vowels_iter\
    \ (substring text 1) (string-append result (string (string-ref text 0)))))))\n\
    \  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text) \"\"]\n  \
    \  [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (define (remove_vowels_helper text result)\n    (cond\n  \
    \    [(empty? text) result]\n      [(member (first text) '(\"a\" \"e\" \"i\" \"\
    o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n       (remove_vowels_helper (rest\
    \ text) result)]\n      [else (remove_vowels_helper (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels_helper text \"\"))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\i #\\o #\\u #\\A #\\E #\\\
    I #\\O #\\U)))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty?\
    \ text) result]\n      [(is_vowel? (first text)) (remove_vowels_iter (rest text)\
    \ result)]\n      [else (remove_vowels_iter (rest text) (string-append result\
    \ (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) text]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (string-append (first text) (remove_vowels (rest text)))]))\n", "  (if\
    \ (string=? text \"\")\n      \"\"\n      (if (or (string=? (substring text 0\
    \ 1) \"a\")\n              (string=? (substring text 0 1) \"e\")\n           \
    \   (string=? (substring text 0 1) \"i\")\n              (string=? (substring\
    \ text 0 1) \"o\")\n              (string=? (substring text 0 1) \"u\"))\n   \
    \       (remove_vowels (substring text 1))\n          (string-append (substring\
    \ text 0 1) (remove_vowels (substring text 1))))))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (string-append\n \
    \  (filter (lambda (char)\n             (not (member char '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\"))))\n           (string->list text))))\n", "  (cond\n    [(empty?\
    \ text) text]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel char)\n    (member char '(#\\a #\\\
    e #\\i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels_iter text\
    \ result)\n    (cond [(empty? text) (reverse result)]\n          [(is_vowel (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n          [else (remove_vowels_iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels_iter text '()))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n  \
    \      (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n \
    \ (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text) result]\n\
    \      [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n  \
    \    [else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ text]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? ch)\n\
    \    (member ch '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"\
    )))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text)\
    \ result]\n      [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \      [else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? char)\n    (member char '(#\\a #\\\
    e #\\i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels_helper\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(is_vowel? (first\
    \ text)) (remove_vowels_helper (rest text) result)]\n      [else (remove_vowels_helper\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_helper\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n        (char=? char #\\\
    e)\n        (char=? char #\\i)\n        (char=? char #\\o)\n        (char=? char\
    \ #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty?\
    \ text) result]\n      [(is_vowel? (first text)) (remove_vowels_iter (rest text)\
    \ result)]\n      [else (remove_vowels_iter (rest text) (string-append result\
    \ (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (let loop\
    \ ([text text]\n             [result \"\"])\n    (cond [(empty? text) result]\n\
    \          [(char-vowel? (first text)) (loop (rest text) result)]\n          [else\
    \ (loop (rest text) (string-append result (string (first text))))])))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond [(empty? text) result]\n          [(is_vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n          [else (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\i #\\\
    o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels_iter text result)\n\
    \    (if (empty? text)\n        result\n        (if (is_vowel? (first text))\n\
    \            (remove_vowels_iter (rest text) result)\n            (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n  \
    \      (char=? char #\\e)\n        (char=? char #\\i)\n        (char=? char #\\\
    o)\n        (char=? char #\\u)))\n  (define (remove_vowels_iter text result)\n\
    \    (if (string-empty? text)\n        result\n        (if (is_vowel? (string-ref\
    \ text 0))\n            (remove_vowels_iter (substring text 1) result)\n     \
    \       (remove_vowels_iter (substring text 1) (string-append result (string (string-ref\
    \ text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (string-append\
    \ (string (first text)) (remove_vowels (rest text)))]))\n", "  (let loop ([text\
    \ text]\n             [result \"\"])\n    (cond\n      [(empty? text) result]\n\
    \      [(char-vowel? (first text)) (loop (rest text) result)]\n      [else (loop\
    \ (rest text) (string-append result (string (first text))))])))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? ch)\n    (or\
    \ (char=? ch #\\a)\n        (char=? ch #\\e)\n        (char=? ch #\\i)\n     \
    \   (char=? ch #\\o)\n        (char=? ch #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond [(empty? text) result]\n          [(is_vowel? (first\
    \ text)) (remove_vowels-iter (rest text) result)]\n          [else (remove_vowels-iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels-iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n\
    \        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n\
    \  (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text) result]\n\
    \      [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n  \
    \    [else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? ch)\n    (or\
    \ (equal? ch #\\a)\n        (equal? ch #\\e)\n        (equal? ch #\\i)\n     \
    \   (equal? ch #\\o)\n        (equal? ch #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel?\
    \ (first text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels_iter text empty))\n",
  "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n   \
    \     (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define\
    \ (remove_vowels_iter text result)\n    (cond [(empty? text) result]\n       \
    \   [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n     \
    \     [else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n\
    \    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n \
    \       (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel?\
    \ (first text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels_iter text '()))\n\
    ```\n\n## Problem 4\n\n```racket\n#lang racket\n", "  (define (is_vowel? c)\n\
    \    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n \
    \       (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(is_vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (regexp-replace* #rx\"[aeiouAEIOU]\" text \"\"))\n", "  (string-append\n\
    \   (filter (lambda (c) (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\"))))\n \
    \          (string->list text))))\n", "  (cond\n    [(empty? text) empty]\n  \
    \  [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\\
    i #\\o #\\u)))\n  (define (remove_vowels-iter text result)\n    (cond\n      [(empty?\
    \ text) (list->string (reverse result))]\n      [(is_vowel? (first text)) (remove_vowels-iter\
    \ (rest text) result)]\n      [else (remove_vowels-iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels-iter text '()))\n", "  (regexp-replace*\
    \ #rx\"[aeiouAEIOU]\" text \"\"))\n", "  (define (is_vowel? c)\n    (or (char=?\
    \ c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c\
    \ #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter text result)\n\
    \    (cond [(empty? text) (reverse result)]\n          [(is_vowel? (first text))\
    \ (remove_vowels-iter (rest text) result)]\n          [else (remove_vowels-iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels-iter text '()))\n",
  "  (cond\n    [(empty? text) text]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n   \
    \     (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define\
    \ (remove_vowels_iter text result)\n    (if (string-empty? text)\n        result\n\
    \        (if (is_vowel? (string-ref text 0))\n            (remove_vowels_iter\
    \ (substring text 1) result)\n            (remove_vowels_iter (substring text\
    \ 1) (string-append result (string (string-ref text 0)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (string-join (remove (lambda (x) (member x '(#\\a #\\e #\\\
    i #\\o #\\u #\\A #\\E #\\I #\\O #\\U))) (string->list text)) \"\"))\n", "  (define\
    \ (is_vowel? char)\n    (or (char=? char #\\a)\n        (char=? char #\\e)\n \
    \       (char=? char #\\i)\n        (char=? char #\\o)\n        (char=? char #\\\
    u)))\n  (define (remove_vowels_iter text result)\n    (cond [(empty? text) result]\n\
    \          [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \          [else (remove_vowels_iter (rest text) (string-append result (string\
    \ (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond [(empty? text) result]\n          [(is_vowel? (first\
    \ text)) (remove_vowels-iter (rest text) result)]\n          [else (remove_vowels-iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels-iter\
    \ text \"\"))\n", "  (define (is_vowel? c)\n    (member c '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(is_vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (append result (list (first text))))]))\n  (remove_vowels_iter text\
    \ '()))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (is_vowel? c)\n    (member c '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"\
    E\" \"I\" \"O\" \"U\")))\n  (define (remove_vowels_iter text result)\n    (cond\
    \ [(empty? text) (reverse result)]\n          [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n          [else (remove_vowels_iter (rest text) (cons\
    \ (first text) result))]))\n  (remove_vowels_iter text '()))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond [(empty? text) result]\n          [(is_vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n          [else (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\n   \
    \  empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"\
    E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else\n     (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (define (remove_vowels_iter text\
    \ result)\n    (cond [(empty? text) result]\n          [(member (first text) '(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n           (remove_vowels_iter\
    \ (rest text) result)]\n          [else (remove_vowels_iter (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (regexp-replace* #rx\"[aeiou]\" text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n   \
    \     (char=? char #\\e)\n        (char=? char #\\i)\n        (char=? char #\\\
    o)\n        (char=? char #\\u)))\n  (define (remove_vowels-iter text result)\n\
    \    (cond [(empty? text) result]\n          [(is_vowel? (first text)) (remove_vowels-iter\
    \ (rest text) result)]\n          [else (remove_vowels-iter (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels-iter text \"\"))\n", " \
    \ (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n  \
    \      (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n \
    \ (define (remove_vowels_iter text result)\n    (if (empty? text)\n        result\n\
    \        (if (is_vowel? (first text))\n            (remove_vowels_iter (rest text)\
    \ result)\n            (remove_vowels_iter (rest text) (string-append result (string\
    \ (first text)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n\
    \        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n\
    \  (define (remove_vowels-iter text result)\n    (cond\n      [(empty? text) (reverse\
    \ result)]\n      [(is_vowel? (first text)) (remove_vowels-iter (rest text) result)]\n\
    \      [else (remove_vowels-iter (rest text) (cons (first text) result))]))\n\
    \  (remove_vowels-iter text '()))\n", "  (cond [(empty? text) \"\"]\n        [(member\
    \ (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n\
    \         (remove_vowels (rest text))]\n        [else (string-append (first text)\
    \ (remove_vowels (rest text)))]))\n", "  (define (is_vowel? char)\n    (or (char=?\
    \ char #\\a)\n        (char=? char #\\e)\n        (char=? char #\\i)\n       \
    \ (char=? char #\\o)\n        (char=? char #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond [(empty? text) (list->string (reverse result))]\n  \
    \        [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \          [else (remove_vowels_iter (rest text) (cons (first text) result))]))\n\
    \  (remove_vowels_iter text '()))\n", "  (cond\n    [(empty? text) empty]\n  \
    \  [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n \
    \       (char=? ch #\\e)\n        (char=? ch #\\i)\n        (char=? ch #\\o)\n\
    \        (char=? ch #\\u)))\n  (define (remove_vowels_iter text result)\n    (if\
    \ (string-empty? text)\n        result\n        (if (is_vowel? (string-ref text\
    \ 0))\n            (remove_vowels_iter (substring text 1) result)\n          \
    \  (remove_vowels_iter (substring text 1) (string-append result (string (string-ref\
    \ text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n    (or\
    \ (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n        (char=?\
    \ c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter text result)\n\
    \    (if (string-empty? text)\n        result\n        (if (is_vowel? (string-ref\
    \ text 0))\n            (remove_vowels_iter (substring text 1) result)\n     \
    \       (remove_vowels_iter (substring text 1) (string-append result (string (string-ref\
    \ text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (string-append (list->string\
    \ (filter (lambda (x) (not (member x '(\"a\" \"e\" \"i\" \"o\" \"u\")))) (string->list\
    \ text)))))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) text]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n   \
    \     (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n    \
    \    (char=? c #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\n\
    \      [(empty? text) (reverse result)]\n      [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels_iter text '()))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond [(empty? text) (string-&gt;list result)]\n         \
    \ [(is_vowel? (first text)) (remove_vowels-iter (rest text) result)]\n       \
    \   [else (remove_vowels-iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (string-&gt;list (remove_vowels-iter (string-&gt;list text) \"\
    \")))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c\
    \ #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\\
    u)))\n  (define (remove_vowels_iter text result)\n    (cond [(empty? text) (reverse\
    \ result)]\n          [(is_vowel? (first text)) (remove_vowels_iter (rest text)\
    \ result)]\n          [else (remove_vowels_iter (rest text) (cons (first text)\
    \ result))]))\n  (remove_vowels_iter text '()))\n", "  (define (is_vowel? ch)\n\
    \    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n        (char=? ch #\\i)\n\
    \        (char=? ch #\\o)\n        (char=? ch #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond [(empty? text) result]\n          [(is_vowel? (first\
    \ text)) (remove_vowels-iter (rest text) result)]\n          [else (remove_vowels-iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels-iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) text]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n        (char=? char #\\\
    e)\n        (char=? char #\\i)\n        (char=? char #\\o)\n        (char=? char\
    \ #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty?\
    \ text) (reverse result)]\n      [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels_iter text '()))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel?\
    \ (first text)) (remove_vowels-iter (rest text) result)]\n      [else (remove_vowels-iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels-iter text '()))\n",
  "  (cond\n    [(empty? text) text]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\i #\\o #\\u #\\A #\\E #\\\
    I #\\O #\\U)))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty?\
    \ text) (reverse result)]\n      [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels_iter text '()))\n", "  (cond\n    [(empty?\
    \ text) text]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n\
    \    (member c '(#\\a #\\e #\\i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define\
    \ (remove_vowels-iter text result)\n    (if (empty? text)\n        result\n  \
    \      (if (is_vowel? (first text))\n            (remove_vowels-iter (rest text)\
    \ result)\n            (remove_vowels-iter (rest text) (string-append result (string\
    \ (first text)))))))\n  (remove_vowels-iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ text]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond [(empty? text) \"\"\
    ]\n        [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"\
    I\" \"O\" \"U\"))\n         (remove_vowels (rest text))]\n        [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (if (empty? text)\n      \"\"\n      (if (member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n          (remove_vowels (rest\
    \ text))\n          (string-append (first text) (remove_vowels (rest text))))))\n",
  "  (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text) result]\n\
    \      [(char-vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \      [else (remove_vowels_iter (rest text) (append result (list (first text))))]))\n\
    \  (remove_vowels_iter text '()))\n", "  (define (is_vowel? c)\n    (or (char=?\
    \ c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c\
    \ #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter text result)\n\
    \    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel? (first text))\
    \ (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter (rest\
    \ text) (cons (first text) result))]))\n  (remove_vowels_iter text '()))\n", " \
    \ (define (remove_vowels_iter text result)\n    (cond\n      [(empty? text) (reverse\
    \ result)]\n      [(vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \      [else (remove_vowels_iter (rest text) (cons (first text) result))]))\n\
    \  (remove_vowels_iter text '()))\n", "  (string-join\n   (filter (lambda (c)\
    \ (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\"))))\n           (string->list\
    \ text))\n   \"\"))\n", "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n\
    \        (char=? ch #\\e)\n        (char=? ch #\\i)\n        (char=? ch #\\o)\n\
    \        (char=? ch #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\
    \ [(empty? text) (reverse result)]\n          [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n          [else (remove_vowels_iter (rest text) (cons\
    \ (first text) result))]))\n  (remove_vowels_iter text '()))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n\
    \    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n \
    \       (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text i)\n    (if (= i (string-length text))\n        \"\"\n        (if (is_vowel?\
    \ (string-ref text i))\n            (remove_vowels-iter text (+ i 1))\n      \
    \      (string-append (string (string-ref text i))\n                         \
    \  (remove_vowels-iter text (+ i 1))))))\n  (remove_vowels-iter text 0))\n", " \
    \ (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n  \
    \      (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n \
    \ (define (remove_vowels_iter text result)\n    (cond [(empty? text) result]\n\
    \          [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n\
    \          [else (remove_vowels_iter (rest text) (string-append result (string\
    \ (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (regexp-replace* #rx\"[aeiou]\"\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (string-filter (lambda (c) (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\"))))\
    \ text))\n", "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=?\
    \ ch #\\e)\n        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=?\
    \ ch #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond [(empty? text)\
    \ result]\n          [(is_vowel? (first text)) (remove_vowels_iter (rest text)\
    \ result)]\n          [else (remove_vowels_iter (rest text) (string-append result\
    \ (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (define\
    \ (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n       \
    \ (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n  (define\
    \ (remove_vowels_iter text result)\n    (cond [(empty? text) result]\n       \
    \   [(is_vowel? (first text)) (remove_vowels_iter (rest text) result)]\n     \
    \     [else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? char)\n\
    \    (or (char=? char #\\a)\n        (char=? char #\\e)\n        (char=? char\
    \ #\\i)\n        (char=? char #\\o)\n        (char=? char #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (if (string-empty? text)\n        result\n        (if (is_vowel?\
    \ (string-ref text 0))\n            (remove_vowels_iter (substring text 1) result)\n\
    \            (remove_vowels_iter (substring text 1) (string-append result (string\
    \ (string-ref text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (define\
    \ (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=?\
    \ c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (if (string-empty? text)\n        result\n        (if (is_vowel?\
    \ (string-ref text 0))\n            (remove_vowels_iter (substring text 1) result)\n\
    \            (remove_vowels_iter (substring text 1) (string-append result (string\
    \ (string-ref text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (string-append\
    \ (filter (lambda (c) (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\")))) (string->list\
    \ text))))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (define (is_vowel? c)\n    (member c '(\"a\" \"e\" \"i\" \"\
    o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")))\n  (define (remove_vowels-iter text\
    \ result)\n    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel?\
    \ (first text)) (remove_vowels-iter (rest text) result)]\n      [else (remove_vowels-iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels-iter text '()))\n",
  "  (string-filter (lambda (c) (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\"))))\
    \ text))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (string-join\n   (filter (lambda (x) (not (member x '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))))\n           (string->list text))\n \
    \  \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (regexp-replace* #rx\"[aeiou]\" text \"\"))\n", "  (define (is_vowel? c)\n  \
    \  (member c '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")))\n\
    \  (define (remove_vowels_iter text)\n    (if (empty? text)\n        \"\"\n  \
    \      (if (is_vowel? (first text))\n            (remove_vowels_iter (rest text))\n\
    \            (string-append (first text) (remove_vowels_iter (rest text))))))\n\
    \  (remove_vowels_iter text))\n", "  (cond\n    [(empty? text) empty]\n    [(member\
    \ (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n\
    \     (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\\
    i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels-iter text result)\n\
    \    (cond\n      [(empty? text) result]\n      [(is_vowel? (first text)) (remove_vowels-iter\
    \ (rest text) result)]\n      [else (remove_vowels-iter (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels-iter text \"\"))\n", " \
    \ (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n\
    \        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n\
    \  (define (remove_vowels_iter text result)\n    (if (string-empty? text)\n  \
    \      result\n        (if (is_vowel? (string-ref text 0))\n            (remove_vowels_iter\
    \ (substring text 1) result)\n            (remove_vowels_iter (substring text\
    \ 1) (string-append result (string (string-ref text 0)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (define (is_vowel? char)\n    (member char '(\"a\" \"e\"\
    \ \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")))\n  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(is_vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (append result (list (first text))))]))\n  (remove_vowels_iter text\
    \ '()))\n", "  (cond\n    [(empty? text) empty]\n    [(or (char=? (first text)\
    \ #\\a)\n         (char=? (first text) #\\e)\n         (char=? (first text) #\\\
    i)\n         (char=? (first text) #\\o)\n         (char=? (first text) #\\u))\n\
    \     (remove_vowels (rest text))]\n    [else (string-append (string (first text))\n\
    \                         (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"\
    ]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\"\
    \ \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n    (member\
    \ c '(#\\a #\\e #\\i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel?\
    \ (first text)) (remove_vowels-iter (rest text) result)]\n      [else (remove_vowels-iter\
    \ (rest text) (cons (first text) result))]))\n  (remove_vowels-iter text '()))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i\
    \ #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n   \
    \     (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n    \
    \    (char=? c #\\u)))\n  (define (remove_vowels-iter text result)\n    (cond\
    \ [(empty? text) (string-&gt;list result)]\n          [(is_vowel? (first text))\
    \ (remove_vowels-iter (rest text) result)]\n          [else (remove_vowels-iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (list-&gt;string\
    \ (remove_vowels-iter (string-&gt;list text) \"\")))\n</code>\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond [(empty?\
    \ text) \"\"]\n        [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"\
    A\" \"E\" \"I\" \"O\" \"U\"))\n         (remove_vowels (rest text))]\n       \
    \ [else (string-append (first text) (remove_vowels (rest text)))]))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ char)\n    (or (char=? char #\\a)\n        (char=? char #\\e)\n        (char=?\
    \ char #\\i)\n        (char=? char #\\o)\n        (char=? char #\\u)))\n  (define\
    \ (remove_vowels_iter text result)\n    (if (string-empty? text)\n        result\n\
    \        (if (is_vowel? (string-ref text 0))\n            (remove_vowels_iter\
    \ (substring text 1) result)\n            (remove_vowels_iter (substring text\
    \ 1) (string-append result (string (string-ref text 0)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (define (remove_vowels_iter text result)\n    (cond ((empty?\
    \ text) (reverse result))\n          ((char-vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result))\n          (else (remove_vowels_iter (rest text) (cons\
    \ (first text) result)))))\n  (remove_vowels_iter text '()))\n", "  (cond\n  \
    \  [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ char)\n    (member char '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"\
    O\" \"U\")))\n  (define (remove_vowels_iter text result)\n    (cond\n      [(empty?\
    \ text) result]\n      [(is_vowel? (first text)) (remove_vowels_iter (rest text)\
    \ result)]\n      [else (remove_vowels_iter (rest text) (string-append result\
    \ (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) text]\n\
    \    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (string-append\
    \ (string (first text)) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ text]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (string-append\n   (filter\
    \ (lambda (c) (not (member c '(\"a\" \"e\" \"i\" \"o\" \"u\"))))\n           (string->list\
    \ text))))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n        (char=? char #\\\
    e)\n        (char=? char #\\i)\n        (char=? char #\\o)\n        (char=? char\
    \ #\\u)))\n  (define (remove_vowels-iter text result)\n    (cond [(empty? text)\
    \ result]\n          [(is_vowel? (first text)) (remove_vowels-iter (rest text)\
    \ result)]\n          [else (remove_vowels-iter (rest text) (string-append result\
    \ (string (first text))))]))\n  (remove_vowels-iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (if (string-empty? text)\n        result\n        (if (is_vowel?\
    \ (string-ref text 0))\n            (remove_vowels_iter (substring text 1) result)\n\
    \            (remove_vowels_iter (substring text 1) (string-append result (string\
    \ (string-ref text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n \
    \   [else (cons (first text) (remove_vowels (rest text)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

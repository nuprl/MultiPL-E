language: sh
name: HumanEval_74_total_match
results:
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=$(echo \"$list1\" | tr -d ' '\
    \ | wc -c)\n  local list2_total_chars=$(echo \"$list2\" | tr -d ' ' | wc -c)\n\
    \  if [ \"$list1_total_chars\" -lt \"$list2_total_chars\" ]; then\n    echo \"\
    $list1\"\n  elif [ \"$list1_total_chars\" -gt \"$list2_total_chars\" ]; then\n\
    \    echo \"$list2\"\n  else\n    echo \"$list1\"\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local total1=$(echo $list1 | sed 's/[^ ]//g' | wc -c)\n\
    \  local total2=$(echo $list2 | sed 's/[^ ]//g' | wc -c)\n  if [[ $total1 -lt\
    \ $total2 ]]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_length=0\n    local list2_length=0\n    local list1_array=()\n\
    \    local list2_array=()\n    local list1_array_length=0\n    local list2_array_length=0\n\
    \    local i=0\n    local j=0\n    local temp_length=0\n    local temp_total=0\n\
    \    local temp_array=()\n    local temp_array_length=0\n    local temp_string=\"\
    \"\n    local temp_string_length=0\n    local temp_string_total=0\n    local result_array=()\n\
    \    local result_array_length=0\n    local result_string=\"\"\n    local result_string_length=0\n\
    \    local result_string_total=0\n    local result_list=\"\"\n    local result_list_length=0\n\
    \    local result_list_total=0\n    local result_list_array=()\n    local result_list_array_length=0\n\
    \    local result_list_string=\"\"\n    local result_list_string_length=0\n  \
    \  local result_list_string_total=0\n    local result_list_string_array=()\n \
    \   local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array_length=0\n    local result_list_string_array_total=0\n\
    \    local result_list_string_array\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i count1=0\n    local -i count2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -a result=()\n    for ((i=0; i<len1; i++)); do\n    \
    \    count1=$(echo ${list1[$i]} | wc -c)\n        count1=$((count1-1))\n     \
    \   for ((j=0; j<len2; j++)); do\n            count2=$(echo ${list2[$j]} | wc\
    \ -c)\n            count2=$((count2-1))\n            if [[ $count1 -lt $count2\
    \ ]]; then\n                min=$count1\n                min_index=$i\n      \
    \          max=$count2\n                max_index=$j\n            else\n     \
    \           min=$count2\n                min_index=$j\n                max=$count1\n\
    \                max_index=$i\n            fi\n            if [[ $min -eq $max\
    \ ]]; then\n                result+=(${list1[$min_index]})\n            else\n\
    \                result+=(${list2[$min_index]})\n            fi\n        done\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n\
    \    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local\
    \ -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n\
    \    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local\
    \ -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n\
    \    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i space=0\n\
    \    local -i total1=0\n    local -i total2=0\n    local -i total3=0\n    local\
    \ -i total4=0\n    local -i total5=0\n    local -i total6=0\n    local -i total7=0\n\
    \    local -i total8=0\n    local -i total9=0\n    local -i total10=0\n    local\
    \ -i total11=0\n    local -i total12=0\n    local -i total13=\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpum77htb6.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpum77htb6.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpum77htb6.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpum77htb6.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    local list1_length=${#list1_array[@]}\n\
    \    local list2_length=${#list2_array[@]}\n    local i=0\n    while [ $i -lt\
    \ $list1_length ]; do\n        list1_total=$((list1_total + ${#list1_array[$i]}))\n\
    \        i=$((i + 1))\n    done\n    i=0\n    while [ $i -lt $list2_length ];\
    \ do\n        list2_total=$((list2_total + ${#list2_array[$i]}))\n        i=$((i\
    \ + 1))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo\
    \ \"${list1_array[@]}\"\n    else\n        echo \"${list2_array[@]}\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if [[ $total1 -lt $total2 ]]; then\n        echo \"${list1[@]}\"\
    \n    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    local -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]};\
    \ i++)); do\n        sum1=$((sum1 + ${#list1[$i]}))\n    done\n    for ((j=0;\
    \ j<${#list2[@]}; j++)); do\n        sum2=$((sum2 + ${#list2[$j]}))\n    done\n\
    \    if [ $sum1 -lt $sum2 ]; then\n        result=(\"${list1[@]}\")\n    else\n\
    \        result=(\"${list2[@]}\")\n    fi\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n    done\n    for\
    \ ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n    if ((sum1<sum2));\
    \ then\n        echo \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpicnt5zjs.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpicnt5zjs.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpicnt5zjs.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpicnt5zjs.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    if [ $# -ne 2 ]; then\n\
    \        echo \"Usage: total_match \\\"list1\\\" \\\"list2\\\"\"\n        return\
    \ 1\n    fi\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_total=0\n\
    \    local list2_total=0\n    for i in $list1; do\n        list1_total=$((list1_total\
    \ + ${#i}))\n    done\n    for i in $list2; do\n        list2_total=$((list2_total\
    \ + ${#i}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n      \
    \  echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=0\n  local list2_total_chars=0\n\
    \  local list1_total_chars=$(echo \"$list1\" | wc -c)\n  local list2_total_chars=$(echo\
    \ \"$list2\" | wc -c)\n  if [ \"$list1_total_chars\" -lt \"$list2_total_chars\"\
    \ ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=$(echo \"$list1\" | tr -d ' '\
    \ | wc -c)\n  local list2_total_chars=$(echo \"$list2\" | tr -d ' ' | wc -c)\n\
    \  if [ \"$list1_total_chars\" -lt \"$list2_total_chars\" ]; then\n    echo \"\
    $list1\"\n  elif [ \"$list1_total_chars\" -gt \"$list2_total_chars\" ]; then\n\
    \    echo \"$list2\"\n  else\n    echo \"$list1\"\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    if [ $# -ne 2 ]; then\n\
    \        echo \"Usage: total_match <list1> <list2>\"\n        return 1\n    fi\n\
    \    local list1=\"$1\"\n    local list2=\"$2\"\n    local total1=$(echo $list1\
    \ | tr -d ' ' | wc -c)\n    local total2=$(echo $list2 | tr -d ' ' | wc -c)\n\
    \    if [ $total1 -lt $total2 ]; then\n        echo \"$list1\"\n    else\n   \
    \     echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        sum1=$((sum1+${#list1[i]}))\n    done\n\
    \    for ((j=0; j<len2; j++)); do\n        sum2=$((sum2+${#list2[j]}))\n    done\n\
    \    if [[ $sum1 -lt $sum2 ]]; then\n        echo \"${list1[@]}\"\n    else\n\
    \        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b"/tmp/tmpl_c4ppl4.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpl_c4ppl4.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpl_c4ppl4.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpl_c4ppl4.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_length=0\n\
    \    local list2_array_length=0\n    local i=0\n    local j=0\n    local list1_array_element=\"\
    \"\n    local list2_array_element=\"\"\n    local list1_array_element_length=0\n\
    \    local list2_array_element_length=0\n    local result=()\n    local result_length=0\n\
    \    local result_element=\"\"\n    local result_element_length=0\n    local result_index=0\n\
    \    local result_index_length=0\n    local result_index_element=\"\"\n    local\
    \ result_index_element_length=0\n    local result_index_element_length_diff=0\n\
    \    local result_index_element_length_diff_min=0\n    local result_index_element_length_diff_min_index=0\n\
    \    local result_index_element_length_diff_min_index_element=\"\"\n    local\
    \ result_index_element_length_diff_min_index_element_length=0\n    local result_index_element_length_diff_min_index_element_length_diff=0\n\
    \    local result_index_element_length_diff_min_index_element_length_diff_min=0\n\
    \    local result_index_element_length_diff_min_index_element_length_diff_min_index=0\n\
    \    local result_index_element_length_diff_min_index_element_length_diff_min_index_element=\"\
    \"\n    local result_index_element_length_diff_min_index_element_length_diff_min_index_element_length=0\n\
    \    local result_index_element_length_diff_min_index_element_length_diff_min_index_element_length_diff=0\n\
    \    local result_index_element_length_diff_min_index_element_length_diff_min_index_element_length_diff_min=0\n\
    \    local result_index_element_length\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list3=()\n    local -a list4=()\n    local\
    \ -a list5=()\n    local -a list6=()\n    local -a list7=()\n    local -a list8=()\n\
    \    local -a list9=()\n    local -a list10=()\n    local -a list11=()\n    local\
    \ -a list12=()\n    local -a list13=()\n    local -a list14=()\n    local -a list15=()\n\
    \    local -a list16=()\n    local -a list17=()\n    local -a list18=()\n    local\
    \ -a list19=()\n    local -a list20=()\n    local -a list21=()\n    local -a list22=()\n\
    \    local -a list23=()\n    local -a list24=()\n    local -a list25=()\n    local\
    \ -a list26=()\n    local -a list27=()\n    local -a list28=()\n    local -a list29=()\n\
    \    local -a list30=()\n    local -a list31=()\n    local -a list32=()\n    local\
    \ -a list33=()\n    local -a list34=()\n    local -a list35=()\n    local -a list36=()\n\
    \    local -a list37=()\n    local -a list38=()\n    local -a list39=()\n    local\
    \ -a list40=()\n    local -a list41=()\n    local -a list42=()\n    local -a list43=()\n\
    \    local -a list44=()\n    local -a list45=()\n    local -a list46=()\n    local\
    \ -a list47=()\n    local -a list48=()\n    local -a list49=()\n    local -a list50=()\n\
    \    local -a list51=()\n    local -a list52=()\n    local -a list53=()\n    local\
    \ -a list54=()\n    local -a list55=()\n    local -a list56=()\n    local -\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_count=0\n    local list2_count=0\n    local list1_arr\n    local\
    \ list2_arr\n    local i\n    local j\n    local list1_str\n    local list2_str\n\
    \    local list1_len\n    local list2_len\n    local list1_arr_len\n    local\
    \ list2_arr_len\n    local list1_total_len\n    local list2_total_len\n    local\
    \ list1_total_count\n    local list2_total_count\n    local list1_total_str\n\
    \    local list2_total_str\n    local list1_total_arr\n    local list2_total_arr\n\
    \    local list1_total_arr_len\n    local list2_total_arr_len\n    local list1_total_str_len\n\
    \    local list2_total_str_len\n    local list1_total_str_count\n    local list2_total_str_count\n\
    \    local list1_total_str_arr\n    local list2_total_str_arr\n    local list1_total_str_arr_len\n\
    \    local list2_total_str_arr_len\n    local list1_total_str_arr_count\n    local\
    \ list2_total_str_arr_count\n    local list1_total_str_arr_str\n    local list2_total_str_arr_str\n\
    \    local list1_total_str_arr_str_len\n    local list2_total_str_arr_str_len\n\
    \    local list1_total_str_arr_str_count\n    local list2_total_str_arr_str_count\n\
    \    local list1_total_str_arr_str_arr\n    local list2_total_str_arr_str_arr\n\
    \    local list1_total_str_arr_str_arr_len\n    local list2_total_str_arr_str_arr_len\n\
    \    local list1_total_str_arr_str_arr_count\n    local list2_total_str_arr\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    local list1_len=${#list1_array[@]}\n\
    \    local list2_len=${#list2_array[@]}\n    for ((i=0; i<list1_len; i++)); do\n\
    \        list1_total=$((list1_total + ${#list1_array[$i]}))\n    done\n    for\
    \ ((i=0; i<list2_len; i++)); do\n        list2_total=$((list2_total + ${#list2_array[$i]}))\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"${list1_array[@]}\"\
    \n    else\n        echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    for i in\
    \ $list1; do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2;\
    \ do\n        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  for i in\
    \ $list1; do\n    list1_total=$((list1_total + ${#i}))\n  done\n  for i in $list2;\
    \ do\n    list2_total=$((list2_total + ${#i}))\n  done\n  if [ $list1_total -lt\
    \ $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo\
    \ $list2 | wc -c)\n    if [ $list1_len -eq $list2_len ]; then\n        echo $list1\n\
    \    elif [ $list1_len -lt $list2_len ]; then\n        echo $list1\n    else\n\
    \        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    local -i i=0\n    local -i j=0\n    for i in ${list1[@]}; do\n\
    \        sum1=$((sum1+${#i}))\n    done\n    for j in ${list2[@]}; do\n      \
    \  sum2=$((sum2+${#j}))\n    done\n    if [[ $sum1 -lt $sum2 ]]; then\n      \
    \  echo ${list1[@]}\n    else\n        echo ${list2[@]}\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    local list1_len=${#list1_array[@]}\n\
    \    local list2_len=${#list2_array[@]}\n    for ((i=0; i<$list1_len; i++)); do\n\
    \        list1_total=$((list1_total + ${#list1_array[$i]}))\n    done\n    for\
    \ ((i=0; i<$list2_len; i++)); do\n        list2_total=$((list2_total + ${#list2_array[$i]}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"${list1_array[@]}\"\
    \n    else\n        echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a res\n    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n\
    \    if [[ $sum1 -lt $sum2 ]]; then\n        echo \"${list1[@]}\"\n    elif [[\
    \ $sum1 -gt $sum2 ]]; then\n        echo \"${list2[@]}\"\n    else\n        echo\
    \ \"${list1[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp47mfenj8.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp47mfenj8.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp47mfenj8.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp47mfenj8.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    list1=$1\n    list2=$2\n\
    \    list1_total_chars=$(echo $list1 | wc -c)\n    list2_total_chars=$(echo $list2\
    \ | wc -c)\n    if [ $list1_total_chars -lt $list2_total_chars ]; then\n     \
    \   echo $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_chars=(\"${list1[@]}\")\n    local\
    \ -a list2_chars=(\"${list2[@]}\")\n    local -i list1_total=0\n    local -i list2_total=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i list1_len=${#list1_chars[@]}\n\
    \    local -i list2_len=${#list2_chars[@]}\n    local -i list1_chars_len=0\n \
    \   local -i list2_chars_len=0\n    local -i list1_chars_len_total=0\n    local\
    \ -i list2_chars_len_total=0\n    local -a list1_chars_len_arr=()\n    local -a\
    \ list2_chars_len_arr=()\n    local -a result=()\n    local -i result_len=0\n\
    \    local -i result_len_total=0\n    local -a result_len_arr=()\n    local -i\
    \ result_len_arr_len=0\n    local -i result_len_arr_len_total=0\n    local -a\
    \ result_len_arr_len_arr=()\n    local -i result_len_arr_len_arr_len=0\n    local\
    \ -i result_len_arr_len_arr_len_total=0\n    local -a result_len_arr_len_arr_len_arr=()\n\
    \    local -i result_len_arr_len_arr_len_arr_len=0\n    local -i result_len_arr_len_arr_len_arr_len_total=0\n\
    \    local -a result_len_arr_len_arr_len_arr_len_arr=()\n    local -i result_len_arr_len_arr_len_arr_len_arr_len=0\n\
    \    local -i result_len_arr_len_arr_len_arr_len_arr_len_total=0\n    local -a\
    \ result_len_arr_len_arr_len\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpiwmw2ujm.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpiwmw2ujm.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpiwmw2ujm.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpiwmw2ujm.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local list1_total_length=0\n    local list2_total_length=0\n    for i in\
    \ ${list1_array[@]}; do\n        list1_total_length=$((list1_total_length + ${#i}))\n\
    \    done\n    for i in ${list2_array[@]}; do\n        list2_total_length=$((list2_total_length\
    \ + ${#i}))\n    done\n    if [[ $list1_total_length -lt $list2_total_length ]];\
    \ then\n        echo \"${list1_array[@]}\"\n    else\n        echo \"${list2_array[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp6rrdsfvz.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp6rrdsfvz.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp6rrdsfvz.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp6rrdsfvz.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr=()\n    local list2_arr=()\n    local list1_arr_len=0\n   \
    \ local list2_arr_len=0\n    local list1_arr_i=0\n    local list2_arr_i=0\n  \
    \  local list1_arr_i_len=0\n    local list2_arr_i_len=0\n    local list1_arr_i_len_str=0\n\
    \    local list2_arr_i_len_str=0\n    local list1_arr_i_len_str_len=0\n    local\
    \ list2_arr_i_len_str_len=0\n    local list1_arr_i_len_str_len_i=0\n    local\
    \ list2_arr_i_len_str_len_i=0\n    local list1_arr_i_len_str_len_i_char=0\n  \
    \  local list2_arr_i_len_str_len_i_char=0\n    local list1_arr_i_len_str_len_i_char_code=0\n\
    \    local list2_arr_i_len_str_len_i_char_code=0\n    local list1_arr_i_len_str_len_i_char_code_int=0\n\
    \    local list2_arr_i_len_str_len_i_char_code_int=0\n    local list1_arr_i_len_str_len_i_char_code_int_str=0\n\
    \    local list2_arr_i_len_str_len_i_char_code_int_str=0\n    local list1_arr_i_len_str_len_i_char_code_int_str_len=0\n\
    \    local list2_arr_i_len_str_len_i_char_code_int_str_len=0\n    local list1_arr_i_len_str_len_i_char_code_int_str_len_i=0\n\
    \    local list2\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -m)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -m)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local count1=0\n    local count2=0\n    for i in $list1;\
    \ do\n        count1=$((count1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        count2=$((count2 + ${#i}))\n    done\n    if [[ $count1 -lt $count2 ]];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp_cjbz7kg.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp_cjbz7kg.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp_cjbz7kg.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp_cjbz7kg.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1+=${#list1[i]}\n    done\n  \
    \  for ((j=0; j<len2; j++)); do\n        total2+=${#list2[j]}\n    done\n    if\
    \ [ $total1 -lt $total2 ]; then\n        echo \"${list1[@]}\"\n    else\n    \
    \    echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpq7mys7nn.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpq7mys7nn.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpq7mys7nn.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpq7mys7nn.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo \"\
    $list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local total1=0\n    local total2=0\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpv8wfyldx.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpv8wfyldx.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpv8wfyldx.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpv8wfyldx.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=$(echo \"$list1\" | wc -c)\n\
    \    local list2_total_chars=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_total_chars\"\
    \ -lt \"$list2_total_chars\" ]; then\n        echo \"$list1\"\n    else\n    \
    \    echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=(\"$list1\")\n    local -a list2_array=(\"\
    $list2\")\n    local -i list1_total=0\n    local -i list2_total=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i list1_len=${#list1_array[@]}\n    local\
    \ -i list2_len=${#list2_array[@]}\n    local -i list1_len_i=0\n    local -i list2_len_i=0\n\
    \    local -i list1_len_j=0\n    local -i list2_len_j=0\n    local -i list1_len_k=0\n\
    \    local -i list2_len_k=0\n    local -i list1_len_l=0\n    local -i list2_len_l=0\n\
    \    local -i list1_len_m=0\n    local -i list2_len_m=0\n    local -i list1_len_n=0\n\
    \    local -i list2_len_n=0\n    local -i list1_len_o=0\n    local -i list2_len_o=0\n\
    \    local -i list1_len_p=0\n    local -i list2_len_p=0\n    local -i list1_len_q=0\n\
    \    local -i list2_len_q=0\n    local -i list1_len_r=0\n    local -i list2_len_r=0\n\
    \    local -i list1_len_s=0\n    local -i list2_len_s=0\n    local -i list1_len_t=0\n\
    \    local -i list2_len_t=0\n    local -i list1_len_u=0\n    local -i list2_len_u=0\n\
    \    local -i list1_len_v=0\n    local -i list2_len_v=0\n    local -i list1_len_w=0\n\
    \    local -i list2_len_w\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmps2vjxd3h.sh: line 17: local: `'': not a valid identifier\n/tmp/tmps2vjxd3h.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmps2vjxd3h.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmps2vjxd3h.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_index_max=0\n    local list2_array_index_max=0\n\
    \    local list1_array_index_min=0\n    local list2_array_index_min=0\n    local\
    \ list1_array_index_min_value=0\n    local list2_array_index_min_value=0\n   \
    \ local list1_array_index_max_value=0\n    local list2_array_index_max_value=0\n\
    \    local list1_array_index_min_value_index=0\n    local list2_array_index_min_value_index=0\n\
    \    local list1_array_index_max_value_index=0\n    local list2_array_index_max_value_index=0\n\
    \    local list1_array_index_min_value_index_temp=0\n    local list2_array_index_min_value_index_temp=0\n\
    \    local list1_array_index_max_value_index_temp=0\n    local list2_array_index_max_value_index_temp=0\n\
    \    local list1_array_index_min_value_temp=0\n    local list2_array_index_min_value_temp=0\n\
    \    local list1_array_index_max_value_temp=0\n    local list2_array_index_max_value_temp=0\n\
    \    local list1_array_index_min_value_temp_index=0\n    local list2_array_index_min_value_temp_index=0\n\
    \    local list1_array_index_max_value_temp_index=0\n    local list2_array_index_max_value_temp_index=0\n\
    \    local list1_array_index_min_value_temp_index_temp=0\n    local list2_array_index_min_value_temp\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local list1_total=0\n    local list2_total=0\n   \
    \ for i in $list1; do\n        list1_total=$((list1_total + ${#i}))\n    done\n\
    \    for i in $list2; do\n        list2_total=$((list2_total + ${#i}))\n    done\n\
    \    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$list1\"\n \
    \   else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpdyjy4gzw.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpdyjy4gzw.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpdyjy4gzw.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpdyjy4gzw.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list3=()\n    local -a list4=()\n    local\
    \ -a list5=()\n    local -a list6=()\n    local -a list7=()\n    local -a list8=()\n\
    \    local -a list9=()\n    local -a list10=()\n    local -a list11=()\n    local\
    \ -a list12=()\n    local -a list13=()\n    local -a list14=()\n    local -a list15=()\n\
    \    local -a list16=()\n    local -a list17=()\n    local -a list18=()\n    local\
    \ -a list19=()\n    local -a list20=()\n    local -a list21=()\n    local -a list22=()\n\
    \    local -a list23=()\n    local -a list24=()\n    local -a list25=()\n    local\
    \ -a list26=()\n    local -a list27=()\n    local -a list28=()\n    local -a list29=()\n\
    \    local -a list30=()\n    local -a list31=()\n    local -a list32=()\n    local\
    \ -a list33=()\n    local -a list34=()\n    local -a list35=()\n    local -a list36=()\n\
    \    local -a list37=()\n    local -a list38=()\n    local -a list39=()\n    local\
    \ -a list40=()\n    local -a list41=()\n    local -a list42=()\n    local -a list43=()\n\
    \    local -a list44=()\n    local -a list45=()\n    local -a list46=()\n    local\
    \ -a list47=()\n    local -a list48=()\n    local -a list49=()\n    local -a list50=()\n\
    \    local -a list51=()\n    local -a list52=()\n    local -a list53=()\n    local\
    \ -a list54=()\n    local -a list55=()\n    local -a list56=()\n    local -\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr=()\n    local list2_arr=()\n    local list1_arr_len=0\n   \
    \ local list2_arr_len=0\n    local list1_arr_index=0\n    local list2_arr_index=0\n\
    \    local list1_arr_item=0\n    local list2_arr_item=0\n    local list1_arr_item_len=0\n\
    \    local list2_arr_item_len=0\n    local list1_arr_item_index=0\n    local list2_arr_item_index=0\n\
    \    local list1_arr_item_char=0\n    local list2_arr_item_char=0\n    local list1_arr_item_char_ascii=0\n\
    \    local list2_arr_item_char_ascii=0\n    local list1_arr_item_char_ascii_sum=0\n\
    \    local list2_arr_item_char_ascii_sum=0\n    local list1_arr_item_char_ascii_sum_total=0\n\
    \    local list2_arr_item_char_ascii_sum_total=0\n    local list1_arr_item_char_ascii_sum_total_min=0\n\
    \    local list2_arr_item_char_ascii_sum_total_min=0\n    local list1_arr_item_char_ascii_sum_total_min_index=0\n\
    \    local list2_arr_item_char_ascii_sum_total_min_index=0\n    local list1_arr_item_char_ascii_sum_total_min_index_arr=()\n\
    \    local list2_arr_item_char_ascii_sum_total_min_index_arr=()\n    local list1_arr_item_char_ascii_sum_total_min_index_arr_len=0\n\
    \    local list2_arr_item_char_ascii_sum_total_min\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list1_len=()\n    local -a list2_len=()\n\
    \    local -a list1_len_sorted=()\n    local -a list2_len_sorted=()\n    local\
    \ -a list1_len_sorted_index=()\n    local -a list2_len_sorted_index=()\n    local\
    \ -a list1_len_sorted_index_sorted=()\n    local -a list2_len_sorted_index_sorted=()\n\
    \    local -a list1_len_sorted_index_sorted_index=()\n    local -a list2_len_sorted_index_sorted_index=()\n\
    \    local -a list1_len_sorted_index_sorted_index_sorted=()\n    local -a list2_len_sorted_index_sorted_index_sorted=()\n\
    \    local -a list1_len_sorted_index_sorted_index_sorted_index=()\n    local -a\
    \ list2_len_sorted_index_sorted_index_sorted_index=()\n    local -a list1_len_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a list2_len_sorted_index_sorted_index_sorted_index_sorted=()\n   \
    \ local -a list1_len_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a list2_len_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a list1_len_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a list2_len_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a list1_len_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    for i in\
    \ $list1; do\n        sum1+=${#i}\n    done\n    for i in $list2; do\n       \
    \ sum2+=${#i}\n    done\n    if [ $sum1 -lt $sum2 ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b"/tmp/tmp_e17qzkk.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp_e17qzkk.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp_e17qzkk.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp_e17qzkk.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local total1=0\n    local total2=0\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpv8wfyldx.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpv8wfyldx.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpv8wfyldx.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpv8wfyldx.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n\
    \    local list1_total_chars_with_quotes=0\n    local list2_total_chars_with_quotes=0\n\
    \    local list1_total_chars_without_quotes=0\n    local list2_total_chars_without_quotes=0\n\
    \    local list1_total_chars_with_quotes_and_spaces=0\n    local list2_total_chars_with_quotes_and_spaces=0\n\
    \    local list1_total_chars_without_quotes_and_spaces=0\n    local list2_total_chars_without_quotes_and_spaces=0\n\
    \    local list1_total_chars_with_quotes_and_spaces_and_commas=0\n    local list2_total_chars_with_quotes_and_spaces_and_commas=0\n\
    \    local list1_total_chars_without_quotes_and_spaces_and_commas=0\n    local\
    \ list2_total_chars_without_quotes_and_spaces_and_commas=0\n    local list1_total_chars_with_quotes_and_spaces_and_commas_and_brackets=0\n\
    \    local list2_total_chars_with_quotes_and_spaces_and_commas_and_brackets=0\n\
    \    local list1_total_chars_without_quotes_and_spaces_and_commas_and_brackets=0\n\
    \    local list2_total_chars_without_quotes_and_spaces_and_commas_and_brackets=0\n\
    \    local list1_total_chars_with_quotes_and_spaces_and_commas_and_brackets_and_double_quotes=0\n\
    \    local list2_total_chars_with_quotes_and_spaces_and_commas_and_brackets_and_double_quotes=0\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=$(echo \"$list1\" | awk '{for(i=1;i<=NF;i++)print\
    \ length($i)}' | awk '{sum+=$1}END{print sum}')\n  local list2_total=$(echo \"\
    $list2\" | awk '{for(i=1;i<=NF;i++)print length($i)}' | awk '{sum+=$1}END{print\
    \ sum}')\n  if [ \"$list1_total\" -lt \"$list2_total\" ]; then\n    echo \"$list1\"\
    \n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwqz523n3.sh: line 21: [: : integer expression expected\n'''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_length=0\n\
    \    local list2_array_length=0\n    local list1_array_index=0\n    local list2_array_index=0\n\
    \    local list1_array_element=\"\"\n    local list2_array_element=\"\"\n    local\
    \ list1_array_element_length=0\n    local list2_array_element_length=0\n    local\
    \ list1_array_element_index=0\n    local list2_array_element_index=0\n    local\
    \ list1_array_element_char=\"\"\n    local list2_array_element_char=\"\"\n   \
    \ local list1_array_element_char_length=0\n    local list2_array_element_char_length=0\n\
    \    local list1_array_element_char_index=0\n    local list2_array_element_char_index=0\n\
    \    local list1_array_element_char_code=0\n    local list2_array_element_char_code=0\n\
    \    local list1_array_element_char_code_length=0\n    local list2_array_element_char_code_length=0\n\
    \    local list1_array_element_char_code_index=0\n    local list2_array_element_char_code_index=0\n\
    \    local list1_array_element_char_code_char=\"\"\n    local list2_array_element_char_code_char=\"\
    \"\n    local list1_array_element_char_code_char_length=0\n    local list2_array_element_char_code_char_length=0\n\
    \    local list1_array_element_char_code_char_index=0\n    local list2_array_element_char_code_char_index=0\n\
    \    local list1_array_element_char_code_char_code=0\n    local list2_array_element_char_code_char_code=0\n\
    \    local list1_array_element_char_code_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr=($list1)\n    local list2_arr=($list2)\n    local list1_len=${#list1_arr[@]}\n\
    \    local list2_len=${#list2_arr[@]}\n    for ((i=0; i<list1_len; i++)); do\n\
    \        list1_total=$((list1_total + ${#list1_arr[$i]}))\n    done\n    for ((i=0;\
    \ i<list2_len; i++)); do\n        list2_total=$((list2_total + ${#list2_arr[$i]}))\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"${list1_arr[@]}\"\
    \n    else\n        echo \"${list2_arr[@]}\"\n    fi\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_array=()\n\
    \  local list2_array=()\n  local list1_array_index=0\n  local list2_array_index=0\n\
    \  local list1_array_length=0\n  local list2_array_length=0\n  local list1_array_element=\"\
    \"\n  local list2_array_element=\"\"\n  local list1_array_element_length=0\n \
    \ local list2_array_element_length=0\n  local list1_array_element_index=0\n  local\
    \ list2_array_element_index=0\n  local list1_array_element_char=\"\"\n  local\
    \ list2_array_element_char=\"\"\n  local list1_array_element_char_code=0\n  local\
    \ list2_array_element_char_code=0\n  local list1_array_element_char_code_hex=\"\
    \"\n  local list2_array_element_char_code_hex=\"\"\n  local list1_array_element_char_code_hex_length=0\n\
    \  local list2_array_element_char_code_hex_length=0\n  local list1_array_element_char_code_hex_index=0\n\
    \  local list2_array_element_char_code_hex_index=0\n  local list1_array_element_char_code_hex_char=\"\
    \"\n  local list2_array_element_char_code_hex_char=\"\"\n  local list1_array_element_char_code_hex_char_code=0\n\
    \  local list2_array_element_char_code_hex_char_code=0\n  local list1_array_element_char_code_hex_char_code_decimal=0\n\
    \  local list2_array_element_char_code_hex_char_code_decimal=0\n  local list1_array_element_char_code_hex_char_code_decimal_string=\"\
    \"\n  local list2_array_element_char_code_hex_char_code_decimal_string=\"\"\n\
    \  local list\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    local -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]};\
    \ i++)); do\n        total1=$((total1 + ${#list1[$i]}))\n    done\n    for ((j=0;\
    \ j<${#list2[@]}; j++)); do\n        total2=$((total2 + ${#list2[$j]}))\n    done\n\
    \    if ((total1 < total2)); then\n        result=(\"${list1[@]}\")\n    else\n\
    \        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo\
    \ $list2 | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        sum1=$((sum1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        sum2=$((sum2\
    \ + ${#list2[j]}))\n    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"\
    ${list1[@]}\")\n    elif [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpandzrm05.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpandzrm05.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpandzrm05.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpandzrm05.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo \"\
    $list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_len=0\n\
    \    local list2_array_len=0\n    local i=0\n    local j=0\n    local list1_array_len_str=\"\
    \"\n    local list2_array_len_str=\"\"\n    local list1_array_str=\"\"\n    local\
    \ list2_array_str=\"\"\n    local list1_array_str_len=0\n    local list2_array_str_len=0\n\
    \    local list1_array_str_len_str=\"\"\n    local list2_array_str_len_str=\"\"\
    \n    local list1_array_str_len_str_len=0\n    local list2_array_str_len_str_len=0\n\
    \    local list1_array_str_len_str_len_str=\"\"\n    local list2_array_str_len_str_len_str=\"\
    \"\n    local list1_array_str_len_str_len_str_len=0\n    local list2_array_str_len_str_len_str_len=0\n\
    \    local list1_array_str_len_str_len_str_len_str=\"\"\n    local list2_array_str_len_str_len_str_len_str=\"\
    \"\n    local list1_array_str_len_str_len_str_len_str_len=0\n    local list2_array_str_len_str_len_str_len_str_len=0\n\
    \    local list1_array_str_len_str_len_str_len_str_len_str=\"\"\n    local list2_array_str_len_str_len_str_len_str_len_str=\"\
    \"\n    local list1_array_str_len_str_len_str_len_str_len_str_len=0\n    local\
    \ list2_array_str_len_str_len_str_len_str_len_str_len=0\n    local list1_array_str_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local l1=\"$1\"\n  \
    \  local l2=\"$2\"\n    local l1_len=$(echo \"$l1\" | wc -c)\n    local l2_len=$(echo\
    \ \"$l2\" | wc -c)\n    if [ $l1_len -lt $l2_len ]; then\n        echo \"$l1\"\
    \n    else\n        echo \"$l2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local sum1=0\n    local sum2=0\n    local list1_len=0\n\
    \    local list2_len=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ len1=0\n    local len2=0\n    local list1_arr=()\n    local list2_arr=()\n \
    \   local list1_arr_len=0\n    local list2_arr_len=0\n    local result_arr=()\n\
    \    local result_arr_len=0\n    local result_str=\"\"\n    local result_str_len=0\n\
    \    local result_str_len_2=0\n    local result_str_len_3=0\n    local result_str_len_4=0\n\
    \    local result_str_len_5=0\n    local result_str_len_6=0\n    local result_str_len_7=0\n\
    \    local result_str_len_8=0\n    local result_str_len_9=0\n    local result_str_len_10=0\n\
    \    local result_str_len_11=0\n    local result_str_len_12=0\n    local result_str_len_13=0\n\
    \    local result_str_len_14=0\n    local result_str_len_15=0\n    local result_str_len_16=0\n\
    \    local result_str_len_17=0\n    local result_str_len_18=0\n    local result_str_len_19=0\n\
    \    local result_str_len_20=0\n    local result_str_len_21=0\n    local result_str_len_22=0\n\
    \    local result_str_len_23=0\n    local result_str_len_24=0\n    local result_str_len_25=0\n\
    \    local result_str_len_26=0\n    local result_str_len_27=0\n    local result_str_len_28=0\n\
    \    local result_str_len_29=0\n    local result_str_len_30=0\n    local result_str_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=$(echo \"$list1\" | wc -c)\n\
    \    local list2_total_chars=$(echo \"$list2\" | wc -c)\n    if [[ $list1_total_chars\
    \ -lt $list2_total_chars ]]; then\n        echo \"$list1\"\n    elif [[ $list1_total_chars\
    \ -gt $list2_total_chars ]]; then\n        echo \"$list2\"\n    else\n       \
    \ echo \"$list1\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local total1=0\n  local total2=0\n  local -a result\n  for item\
    \ in $list1; do\n    total1=$((total1 + ${#item}))\n  done\n  for item in $list2;\
    \ do\n    total2=$((total2 + ${#item}))\n  done\n  if [[ $total1 -lt $total2 ]];\
    \ then\n    result=($list1)\n  else\n    result=($list2)\n  fi\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpt10zunp_.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpt10zunp_.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpt10zunp_.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpt10zunp_.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_len=$(echo $list1 | tr -d ' ' | wc -c)\n   \
    \ local list2_len=$(echo $list2 | tr -d ' ' | wc -c)\n    if [ $list1_len -lt\
    \ $list2_len ]; then\n        echo $list1\n    else\n        echo $list2\n   \
    \ fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n\
    \    if ((sum1<sum2)); then\n        result=(\"${list1[@]}\")\n    elif ((sum1>sum2));\
    \ then\n        result=(\"${list2[@]}\")\n    else\n        result=(\"${list1[@]}\"\
    )\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp8iu1odmh.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp8iu1odmh.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp8iu1odmh.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp8iu1odmh.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_count=0\n    local list2_count=0\n    local list1_array=()\n  \
    \  local list2_array=()\n    local list1_array_count=0\n    local list2_array_count=0\n\
    \    local list1_array_index=0\n    local list2_array_index=0\n    local list1_array_element=\"\
    \"\n    local list2_array_element=\"\"\n    local list1_array_element_len=0\n\
    \    local list2_array_element_len=0\n    local list1_array_element_index=0\n\
    \    local list2_array_element_index=0\n    local list1_array_element_char=\"\"\
    \n    local list2_array_element_char=\"\"\n    local list1_array_element_char_ascii=0\n\
    \    local list2_array_element_char_ascii=0\n    local list1_array_element_char_ascii_hex=\"\
    \"\n    local list2_array_element_char_ascii_hex=\"\"\n    local list1_array_element_char_ascii_hex_len=0\n\
    \    local list2_array_element_char_ascii_hex_len=0\n    local list1_array_element_char_ascii_hex_index=0\n\
    \    local list2_array_element_char_ascii_hex_index=0\n    local list1_array_element_char_ascii_hex_char=\"\
    \"\n    local list2_array_element_char_ascii_hex_char=\"\"\n    local list1_array_element_char_ascii_hex_char_ascii=0\n\
    \    local list2_array_element_char_ascii_hex_char_ascii=0\n    local list1_array_element_char_ascii_hex_char_ascii_sum=0\n\
    \    local list2_array_element_char_ascii_hex_char_ascii_sum=0\n   \n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i total1=0\n    local -i total2=0\n    local -i i=0\n    local -i\
    \ j=0\n    local -i len=0\n    local -i total=0\n    local -a result=()\n    for\
    \ ((i=0; i<len1; i++)); do\n        len=${#list1[$i]}\n        total1=$((total1+len))\n\
    \    done\n    for ((i=0; i<len2; i++)); do\n        len=${#list2[$i]}\n     \
    \   total2=$((total2+len))\n    done\n    if [ $total1 -lt $total2 ]; then\n \
    \       result=(\"${list1[@]}\")\n    else\n        result=(\"${list2[@]}\")\n\
    \    fi\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    local list1_array_length=${#list1_array[@]}\n\
    \    local list2_array_length=${#list2_array[@]}\n    local i=0\n    local j=0\n\
    \    local list1_element=\"\"\n    local list2_element=\"\"\n    local list1_element_length=0\n\
    \    local list2_element_length=0\n    local result=\"\"\n    local result_array=()\n\
    \    local result_array_length=0\n    local result_element=\"\"\n    local result_element_length=0\n\
    \    local result_total=0\n    local result_array_index=0\n    local result_array_index_length=0\n\
    \    local result_array_index_element=\"\"\n    local result_array_index_element_length=0\n\
    \    local result_array_index_element_length_diff=0\n    local result_array_index_element_length_diff_min=0\n\
    \    local result_array_index_element_length_diff_min_index=0\n    local result_array_index_element_length_diff_min_index_element=\"\
    \"\n    local result_array_index_element_length_diff_min_index_element_length=0\n\
    \    local result_array_index_element_length_diff_min_index_element_length_diff=0\n\
    \    local result_array_index_element_length_diff_min_index_element_length_diff_min=0\n\
    \    local result_array_index_element_length_diff_min_index_element_length_diff_min_index=0\n\
    \    local result_array_index_element_length_diff_min_index_element_length_diff_min_index_element=\"\
    \"\n    local result_array_index_element_length_diff_min_index_element_length_diff_min_index_element_length=0\n\
    \    local result_array_index_element_length_diff_min_index_element_\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list3=()\n    local -a list4=()\n    local\
    \ -a list5=()\n    local -a list6=()\n    local -a list7=()\n    local -a list8=()\n\
    \    local -a list9=()\n    local -a list10=()\n    local -a list11=()\n    local\
    \ -a list12=()\n    local -a list13=()\n    local -a list14=()\n    local -a list15=()\n\
    \    local -a list16=()\n    local -a list17=()\n    local -a list18=()\n    local\
    \ -a list19=()\n    local -a list20=()\n    local -a list21=()\n    local -a list22=()\n\
    \    local -a list23=()\n    local -a list24=()\n    local -a list25=()\n    local\
    \ -a list26=()\n    local -a list27=()\n    local -a list28=()\n    local -a list29=()\n\
    \    local -a list30=()\n    local -a list31=()\n    local -a list32=()\n    local\
    \ -a list33=()\n    local -a list34=()\n    local -a list35=()\n    local -a list36=()\n\
    \    local -a list37=()\n    local -a list38=()\n    local -a list39=()\n    local\
    \ -a list40=()\n    local -a list41=()\n    local -a list42=()\n    local -a list43=()\n\
    \    local -a list44=()\n    local -a list45=()\n    local -a list46=()\n    local\
    \ -a list47=()\n    local -a list48=()\n    local -a list49=()\n    local -a list50=()\n\
    \    local -a list51=()\n    local -a list52=()\n    local -a list53=()\n    local\
    \ -a list54=()\n    local -a list55=()\n    local -a list56=()\n    local -\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local -i total1=0\n  local -i total2=0\n  local -i i=0\n  local\
    \ -i j=0\n  local -i len1=${#list1[@]}\n  local -i len2=${#list2[@]}\n  local\
    \ -a result=()\n  for ((i=0; i<len1; i++)); do\n    total1=$((total1 + ${#list1[i]}))\n\
    \  done\n  for ((j=0; j<len2; j++)); do\n    total2=$((total2 + ${#list2[j]}))\n\
    \  done\n  if [[ $total1 -lt $total2 ]]; then\n    result=(\"${list1[@]}\")\n\
    \  elif [[ $total1 -gt $total2 ]]; then\n    result=(\"${list2[@]}\")\n  else\n\
    \    result=(\"${list1[@]}\")\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpczokvpy1.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpczokvpy1.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpczokvpy1.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpczokvpy1.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local -a list1_array=($list1)\n  local -a list2_array=($list2)\n\
    \  local -i list1_total=0\n  local -i list2_total=0\n  for i in \"${list1_array[@]}\"\
    ; do\n    list1_total=$((list1_total + ${#i}))\n  done\n  for i in \"${list2_array[@]}\"\
    ; do\n    list2_total=$((list2_total + ${#i}))\n  done\n  if [ $list1_total -lt\
    \ $list2_total ]; then\n    echo \"${list1_array[@]}\"\n  else\n    echo \"${list2_array[@]}\"\
    \n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfp40eizu.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpfp40eizu.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpfp40eizu.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpfp40eizu.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i sum1=0\n    local -i sum2=0\n    local -i len=0\n\
    \    local -i len_max=0\n    local -i len_min=0\n    local -i sum_max=0\n    local\
    \ -i sum_min=0\n    local -a list_max=()\n    local -a list_min=()\n    for ((i=0;\
    \ i<len1; i++)); do\n        len=${#list1[i]}\n        sum1=$((sum1+len))\n  \
    \  done\n    for ((i=0; i<len2; i++)); do\n        len=${#list2[i]}\n        sum2=$((sum2+len))\n\
    \    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        sum_min=$sum1\n       \
    \ sum_max=$sum2\n        len_min=$len1\n        len_max=$len2\n        list_min=(\"\
    ${list1[@]}\")\n        list_max=(\"${list2[@]}\")\n    else\n        sum_min=$sum2\n\
    \        sum_max=$sum1\n        len_min=$len2\n        len_max=$len1\n       \
    \ list_min=(\"${list2[@]}\")\n        list_max=(\"${list1[@]}\")\n    fi\n   \
    \ local -i j=0\n    local -i sum=0\n    local -a list_ret=()\n    for ((i=0; i<len_min;\
    \ i++)); do\n        len=${#list_min[i]}\n        sum=$((sum+len))\n        list_ret+=(\"\
    ${list_min[i]}\")\n        if [[ $sum -gt $sum_max ]]; then\n            break\n\
    \        fi\n    done\n    if [[ $sum -lt $sum_max ]]; then\n        for ((j=i;\
    \ j<len_max; j++)); do\n            len=\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphhaw5ob7.sh: line 68: syntax error near unexpected token `}''\n/tmp/tmphhaw5ob7.sh:
    line 68: `}''\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_total=0\n    local list2_total=0\n    local\
    \ list1_arr=($list1)\n    local list2_arr=($list2)\n    for i in ${list1_arr[@]};\
    \ do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for i in ${list2_arr[@]};\
    \ do\n        list2_total=$((list2_total + ${#i}))\n    done\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        echo \"${list1_arr[@]}\"\n    else\n     \
    \   echo \"${list2_arr[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=()\n    local -a list2_array=()\n\
    \    local -a result=()\n    local list1_total=0\n    local list2_total=0\n  \
    \  IFS=' ' read -r -a list1_array <<< \"$list1\"\n    IFS=' ' read -r -a list2_array\
    \ <<< \"$list2\"\n    for i in \"${list1_array[@]}\"; do\n        list1_total=$((list1_total\
    \ + ${#i}))\n    done\n    for i in \"${list2_array[@]}\"; do\n        list2_total=$((list2_total\
    \ + ${#i}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n      \
    \  for i in \"${list1_array[@]}\"; do\n            result+=(\"\\\"$i\\\"\")\n\
    \        done\n    else\n        for i in \"${list2_array[@]}\"; do\n        \
    \    result+=(\"\\\"$i\\\"\")\n        done\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpopglrzc1.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpopglrzc1.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpopglrzc1.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpopglrzc1.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    for i in ${list1[@]}; do\n        sum1=$((sum1 + ${#i}))\n  \
    \  done\n    for i in ${list2[@]}; do\n        sum2=$((sum2 + ${#i}))\n    done\n\
    \    if [ $sum1 -lt $sum2 ]; then\n        echo ${list1[@]}\n    else\n      \
    \  echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_total=0\n    local list2_total=0\n    local\
    \ list1_array=($list1)\n    local list2_array=($list2)\n    for i in ${list1_array[@]};\
    \ do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for i in ${list2_array[@]};\
    \ do\n        list2_total=$((list2_total + ${#i}))\n    done\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        echo \"${list1_array[@]}\"\n    else\n   \
    \     echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n    done\n    for\
    \ ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n    if [ $sum1\
    \ -lt $sum2 ]; then\n        echo \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpq4511epk.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpq4511epk.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpq4511epk.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpq4511epk.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i len1=0\n    local -i len2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n\
    \    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local\
    \ -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n\
    \    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local\
    \ -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n\
    \    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local\
    \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
    \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcnbat8i_.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpcnbat8i_.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpcnbat8i_.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpcnbat8i_.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=$1\n  local\
    \ list2=$2\n  local list1_total=0\n  local list2_total=0\n  for i in $list1; do\n\
    \    list1_total=$((list1_total + ${#i}))\n  done\n  for i in $list2; do\n   \
    \ list2_total=$((list2_total + ${#i}))\n  done\n  if [ $list1_total -lt $list2_total\
    \ ]; then\n    echo $list1\n  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr=()\n    local list2_arr=()\n    local list1_arr_len=0\n   \
    \ local list2_arr_len=0\n    local i=0\n    local j=0\n    local list1_str=\"\"\
    \n    local list2_str=\"\"\n    local list1_str_len=0\n    local list2_str_len=0\n\
    \    local list1_str_len_arr=()\n    local list2_str_len_arr=()\n    local list1_str_len_arr_len=0\n\
    \    local list2_str_len_arr_len=0\n    local list1_str_len_arr_index=0\n    local\
    \ list2_str_len_arr_index=0\n    local list1_str_len_arr_index_str=\"\"\n    local\
    \ list2_str_len_arr_index_str=\"\"\n    local list1_str_len_arr_index_str_len=0\n\
    \    local list2_str_len_arr_index_str_len=0\n    local list1_str_len_arr_index_str_len_arr=()\n\
    \    local list2_str_len_arr_index_str_len_arr=()\n    local list1_str_len_arr_index_str_len_arr_len=0\n\
    \    local list2_str_len_arr_index_str_len_arr_len=0\n    local list1_str_len_arr_index_str_len_arr_index=0\n\
    \    local list2_str_len_arr_index_str_len_arr_index=0\n    local list1_str_len_arr_index_str_len_arr_index_str=\"\
    \"\n    local list2_str_len_arr_index_str_len_arr_index_str=\"\"\n    local list1_str_len_arr_index_str_len_arr_index_str_len=0\n\
    \    local list2_str_len_arr_index_str_len_arr_index\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo $list1 | wc -c)\n    local\
    \ list2_len=$(echo $list2 | wc -c)\n    if [ $list1_len -gt $list2_len ]; then\n\
    \        echo $list2\n    else\n        echo $list1\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n    done\n    for\
    \ ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n    if ((sum1<sum2));\
    \ then\n        echo ${list1[@]}\n    else\n        echo ${list2[@]}\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpk3_ixoue.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpk3_ixoue.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpk3_ixoue.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpk3_ixoue.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -i total_1=0\n\
    \    local -i total_2=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n\
    \    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local\
    \ -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n\
    \    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local\
    \ -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n\
    \    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local\
    \ -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n\
    \    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  for word\
    \ in $list1; do\n    list1_total=$((list1_total + ${#word}))\n  done\n  for word\
    \ in $list2; do\n    list2_total=$((list2_total + ${#word}))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=(\"$list1\")\n    local -a list2_array=(\"\
    $list2\")\n    local -a list1_lengths\n    local -a list2_lengths\n    local -i\
    \ list1_total=0\n    local -i list2_total=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp9gu2ns46.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp9gu2ns46.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp9gu2ns46.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp9gu2ns46.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    for i in ${list1[@]}; do\n        sum1=$((sum1 + ${#i}))\n  \
    \  done\n    for i in ${list2[@]}; do\n        sum2=$((sum2 + ${#i}))\n    done\n\
    \    if [ $sum1 -lt $sum2 ]; then\n        result=(${list1[@]})\n    else\n  \
    \      result=(${list2[@]})\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -gt \"$list2_len\"\
    \ ]; then\n        echo \"$list2\"\n    else\n        echo \"$list1\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local list1_total=0\n    local list2_total=0\n   \
    \ for i in $list1; do\n        list1_total=$((list1_total + ${#i}))\n    done\n\
    \    for i in $list2; do\n        list2_total=$((list2_total + ${#i}))\n    done\n\
    \    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\n   \
    \ else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b"/tmp/tmpv4k_ppxw.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpv4k_ppxw.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpv4k_ppxw.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpv4k_ppxw.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_index_max=0\n    local list2_array_index_max=0\n\
    \    local list1_array_index_max_length=0\n    local list2_array_index_max_length=0\n\
    \    local list1_array_index_max_length_index=0\n    local list2_array_index_max_length_index=0\n\
    \    local list1_array_index_max_length_index_length=0\n    local list2_array_index_max_length_index_length=0\n\
    \    local list1_array_index_max_length_index_length_index=0\n    local list2_array_index_max_length_index_length_index=0\n\
    \    local list1_array_index_max_length_index_length_index_length=0\n    local\
    \ list2_array_index_max_length_index_length_index_length=0\n    local list1_array_index_max_length_index_length_index_length_index=0\n\
    \    local list2_array_index_max_length_index_length_index_length_index=0\n  \
    \  local list1_array_index_max_length_index_length_index_length_index_length=0\n\
    \    local list2_array_index_max_length_index_length_index_length_index_length=0\n\
    \    local list1_array_index_max_length_index_length_index_length_index_length_index=0\n\
    \    local list2_array_index_max_length_index_length_index_length_index_length_index=0\n\
    \    local list1_array_index_max_length_index_length_index_length_index_length_index_length=0\n\
    \    local list2_array_index_max_length_index_length_index_length_index_length_index\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i sum1=0\n    local -i sum2=0\n    local\
    \ -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n       \
    \ sum1=$((sum1 + ${#list1[$i]}))\n    done\n    for ((j=0; j<${#list2[@]}; j++));\
    \ do\n        sum2=$((sum2 + ${#list2[$j]}))\n    done\n    if [ $sum1 -lt $sum2\
    \ ]; then\n        echo \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_count=0\n\
    \  local list2_count=0\n  local list1_array=()\n  local list2_array=()\n  local\
    \ list1_array_count=0\n  local list2_array_count=0\n  local list1_array_index=0\n\
    \  local list2_array_index=0\n  local list1_array_element=''\n  local list2_array_element=''\n\
    \  local list1_array_element_length=0\n  local list2_array_element_length=0\n\
    \  local list1_array_element_length_total=0\n  local list2_array_element_length_total=0\n\
    \  local list1_array_element_length_total_count=0\n  local list2_array_element_length_total_count=0\n\
    \  local list1_array_element_length_total_index=0\n  local list2_array_element_length_total_index=0\n\
    \  local list1_array_element_length_total_element=''\n  local list2_array_element_length_total_element=''\n\
    \  local list1_array_element_length_total_element_length=0\n  local list2_array_element_length_total_element_length=0\n\
    \  local list1_array_element_length_total_element_length_total=0\n  local list2_array_element_length_total_element_length_total=0\n\
    \  local list1_array_element_length_total_element_length_total_count=0\n  local\
    \ list2_array_element_length_total_element_length_total_count=0\n  local list1_array_element_length_total_element_length_total_index=0\n\
    \  local list2_array_element_length_total_element_length_total_index=0\n  local\
    \ list1_array_element_length_total_element_length_total_element=''\n  local list2_array_element_length_total_element_length_total_element\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -i total1=0\n\
    \    local -i total2=0\n    local -i i=0\n    local -i j=0\n    local -i len1=0\n\
    \    local -i len2=0\n    local -a list1\n    local -a list2\n    local -a result\n\
    \    list1=($1)\n    list2=($2)\n    len1=${#list1[@]}\n    len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  elif ((total1 > total2)); then\n        echo \"${list2[@]}\"\n    else\n  \
    \      echo \"${list1[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_count=0\n    local list2_count=0\n    local list1_array=()\n  \
    \  local list2_array=()\n    local list1_array_count=0\n    local list2_array_count=0\n\
    \    local list1_array_index=0\n    local list2_array_index=0\n    local list1_array_element=\"\
    \"\n    local list2_array_element=\"\"\n    local list1_array_element_count=0\n\
    \    local list2_array_element_count=0\n    local list1_array_element_index=0\n\
    \    local list2_array_element_index=0\n    local list1_array_element_char=\"\"\
    \n    local list2_array_element_char=\"\"\n    local list1_array_element_char_count=0\n\
    \    local list2_array_element_char_count=0\n    local list1_array_element_char_index=0\n\
    \    local list2_array_element_char_index=0\n    local list1_array_element_char_ascii=0\n\
    \    local list2_array_element_char_ascii=0\n    local list1_array_element_char_ascii_count=0\n\
    \    local list2_array_element_char_ascii_count=0\n    local list1_array_element_char_ascii_index=0\n\
    \    local list2_array_element_char_ascii_index=0\n    local list1_array_element_char_ascii_value=0\n\
    \    local list2_array_element_char_ascii_value=0\n    local list1_array_element_char_ascii_value_count=0\n\
    \    local list2_array_element_char_ascii_value_count=0\n    local list1_array_element_char_ascii_value_index=0\n\
    \    local list2_array_element_char_ascii_value_index=0\n    local list1_array_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_count=0\n    local list2_count=0\n    local list1_array=()\n  \
    \  local list2_array=()\n    local list1_array_count=0\n    local list2_array_count=0\n\
    \    local list1_array_index=0\n    local list2_array_index=0\n    local list1_array_element=0\n\
    \    local list2_array_element=0\n    local list1_array_element_length=0\n   \
    \ local list2_array_element_length=0\n    local list1_array_element_length_total=0\n\
    \    local list2_array_element_length_total=0\n    local list1_array_element_length_total_count=0\n\
    \    local list2_array_element_length_total_count=0\n    local list1_array_element_length_total_index=0\n\
    \    local list2_array_element_length_total_index=0\n    local list1_array_element_length_total_element=0\n\
    \    local list2_array_element_length_total_element=0\n    local list1_array_element_length_total_element_length=0\n\
    \    local list2_array_element_length_total_element_length=0\n    local list1_array_element_length_total_element_length_total=0\n\
    \    local list2_array_element_length_total_element_length_total=0\n    local\
    \ list1_array_element_length_total_element_length_total_count=0\n    local list2_array_element_length_total_element_length_total_count=0\n\
    \    local list1_array_element_length_total_element_length_total_index=0\n   \
    \ local list2_array_element_length_total_element_length_total_index=0\n    local\
    \ list1_array_element_length_total_element_length_total_element=0\n    local list2_array_element_length_total_element_length_total_element\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    for\
    \ i in ${list1[@]}; do\n        total1=$((total1 + ${#i}))\n    done\n    for\
    \ i in ${list2[@]}; do\n        total2=$((total2 + ${#i}))\n    done\n    if [[\
    \ $total1 -lt $total2 ]]; then\n        echo ${list1[@]}\n    else\n        echo\
    \ ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  for word\
    \ in $list1; do\n    list1_total=$((list1_total + ${#word}))\n  done\n  for word\
    \ in $list2; do\n    list2_total=$((list2_total + ${#word}))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  for word\
    \ in $list1; do\n    list1_total=$((list1_total + ${#word}))\n  done\n  for word\
    \ in $list2; do\n    list2_total=$((list2_total + ${#word}))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_array\n\
    \  local list2_array\n  local list1_array_length\n  local list2_array_length\n\
    \  local i\n  local j\n  local temp\n  local result\n  local result_array\n  local\
    \ result_array_length\n  local result_array_length_temp\n  local result_array_length_temp_array\n\
    \  local result_array_length_temp_array_length\n  local result_array_length_temp_array_length_temp\n\
    \  local result_array_length_temp_array_length_temp_array\n  local result_array_length_temp_array_length_temp_array_length\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp\n  local\
    \ result_array_length_temp_array_length_temp_array_length_temp_array\n  local\
    \ result_array_length_temp_array_length_temp_array_length_temp_array_length\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length_temp\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length\n\
    \  local result_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length_temp_array_length_temp\n\
    \  local result_array_length_temp_array_length\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n\
    \    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"${list1[@]}\")\n    elif\
    \ [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\")\n    else\n  \
    \      result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3fsx2b1l.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp3fsx2b1l.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp3fsx2b1l.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp3fsx2b1l.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=(\"$@\"\
    )\n    local -a list2=(\"$@\")\n    local -a list3=(\"$@\")\n    local -a list4=(\"\
    $@\")\n    local -a list5=(\"$@\")\n    local -a list6=(\"$@\")\n    local -a\
    \ list7=(\"$@\")\n    local -a list8=(\"$@\")\n    local -a list9=(\"$@\")\n \
    \   local -a list10=(\"$@\")\n    local -a list11=(\"$@\")\n    local -a list12=(\"\
    $@\")\n    local -a list13=(\"$@\")\n    local -a list14=(\"$@\")\n    local -a\
    \ list15=(\"$@\")\n    local -a list16=(\"$@\")\n    local -a list17=(\"$@\")\n\
    \    local -a list18=(\"$@\")\n    local -a list19=(\"$@\")\n    local -a list20=(\"\
    $@\")\n    local -a list21=(\"$@\")\n    local -a list22=(\"$@\")\n    local -a\
    \ list23=(\"$@\")\n    local -a list24=(\"$@\")\n    local -a list25=(\"$@\")\n\
    \    local -a list26=(\"$@\")\n    local -a list27=(\"$@\")\n    local -a list28=(\"\
    $@\")\n    local -a list29=(\"$@\")\n    local -a list30=(\"$@\")\n    local -a\
    \ list31=(\"$@\")\n    local -a list32=(\"$@\")\n    local -a list33=(\"$@\")\n\
    \    local -a list34=(\"$@\")\n    local -a list35=(\"$@\")\n    local -a list36=(\"\
    $@\")\n    local -a list37=(\"$@\")\n    local -a list38=(\"$@\")\n    local -a\
    \ list39=(\"$@\")\n    local -a list40=(\"$@\")\n    local -a list41=(\"$@\")\n\
    \    local -a list42=(\"$@\")\n    local -a list43=\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    for\
    \ i in $list1; do\n        total1=$((total1+${#i}))\n    done\n    for i in $list2;\
    \ do\n        total2=$((total2+${#i}))\n    done\n    if [ $total1 -lt $total2\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpsspjvwln.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpsspjvwln.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpsspjvwln.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpsspjvwln.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    for\
    \ i in $list1; do\n        total1=$((total1+${#i}))\n    done\n    for i in $list2;\
    \ do\n        total2=$((total2+${#i}))\n    done\n    if [ $total1 -lt $total2\
    \ ]; then\n        echo $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfdyaqqt0.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpfdyaqqt0.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpfdyaqqt0.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpfdyaqqt0.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    for i in ${list1[@]}; do\n        sum1=$((sum1 + ${#i}))\n  \
    \  done\n    for i in ${list2[@]}; do\n        sum2=$((sum2 + ${#i}))\n    done\n\
    \    if [ $sum1 -lt $sum2 ]; then\n        result=(\"${list1[@]}\")\n    else\n\
    \        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n\tlocal -a list1=($1)\n\t\
    local -a list2=($2)\n\tlocal -i total1=0\n\tlocal -i total2=0\n\tlocal -i i=0\n\
    \tlocal -i j=0\n\tfor ((i=0; i<${#list1[@]}; i++)); do\n\t\ttotal1=$((total1+${#list1[$i]}))\n\
    \tdone\n\tfor ((j=0; j<${#list2[@]}; j++)); do\n\t\ttotal2=$((total2+${#list2[$j]}))\n\
    \tdone\n\tif [ $total1 -lt $total2 ]; then\n\t\techo ${list1[@]}\n\telse\n\t\t\
    echo ${list2[@]}\n\tfi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=(\"$list1\")\n    local -a list2_array=(\"\
    $list2\")\n    local list1_total=0\n    local list2_total=0\n    for i in \"${list1_array[@]}\"\
    ; do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for i in \"\
    ${list2_array[@]}\"; do\n        list2_total=$((list2_total + ${#i}))\n    done\n\
    \    if [ $list1_total -lt $list2_total ]; then\n        echo \"${list1_array[@]}\"\
    \n    else\n        echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmppotqw124.sh: line 17: local: `'': not a valid identifier\n/tmp/tmppotqw124.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmppotqw124.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmppotqw124.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=$(echo $list1 | wc -c)\n\
    \    local list2_total_chars=$(echo $list2 | wc -c)\n    if [ $list1_total_chars\
    \ -lt $list2_total_chars ]; then\n        echo $list1\n    else\n        echo\
    \ $list2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local list1_total=0\n  local list2_total=0\n  for i in $list1;\
    \ do\n    list1_total=$((list1_total + ${#i}))\n  done\n  for i in $list2; do\n\
    \    list2_total=$((list2_total + ${#i}))\n  done\n  if [ $list1_total -lt $list2_total\
    \ ]; then\n    echo $list1\n  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp_7cjgh9k.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp_7cjgh9k.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp_7cjgh9k.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp_7cjgh9k.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    for i in\
    \ ${list1[@]}; do\n        ((sum1+=${#i}))\n    done\n    for i in ${list2[@]};\
    \ do\n        ((sum2+=${#i}))\n    done\n    if ((sum1<sum2)); then\n        echo\
    \ ${list1[@]}\n    else\n        echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp_ren410p.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp_ren410p.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp_ren410p.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp_ren410p.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local sum1=0\n    local\
    \ sum2=0\n    for i in ${list1[@]}; do\n        sum1=$((sum1 + ${#i}))\n    done\n\
    \    for i in ${list2[@]}; do\n        sum2=$((sum2 + ${#i}))\n    done\n    if\
    \ [[ $sum1 -lt $sum2 ]]; then\n        echo \"${list1[@]}\"\n    else\n      \
    \  echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    for i in ${list1[@]}; do\n        total1=$((total1 + ${#i}))\n\
    \    done\n    for i in ${list2[@]}; do\n        total2=$((total2 + ${#i}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        result=(\"${list1[@]}\"\
    )\n    else\n        result=(\"${list2[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1+=${#list1[i]}\n    done\n  \
    \  for ((j=0; j<len2; j++)); do\n        total2+=${#list2[j]}\n    done\n    if\
    \ ((total1<total2)); then\n        echo \"${list1[@]}\"\n    else\n        echo\
    \ \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptve6_ham.sh: line 17: local: `'': not a valid identifier\n/tmp/tmptve6_ham.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmptve6_ham.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmptve6_ham.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local list1_total_chars=0\n    local list2_total_chars=0\n\
    \    local list1_total_chars_list=()\n    local list2_total_chars_list=()\n  \
    \  for i in $list1; do\n        list1_total_chars=$((list1_total_chars + ${#i}))\n\
    \        list1_total_chars_list+=($i)\n    done\n    for i in $list2; do\n   \
    \     list2_total_chars=$((list2_total_chars + ${#i}))\n        list2_total_chars_list+=($i)\n\
    \    done\n    if [ $list1_total_chars -lt $list2_total_chars ]; then\n      \
    \  echo ${list1_total_chars_list[@]}\n    else\n        echo ${list2_total_chars_list[@]}\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpkpx8u99c.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpkpx8u99c.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpkpx8u99c.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpkpx8u99c.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    for i in ${list1[@]}; do\n        total1=$((total1 + ${#i}))\n\
    \    done\n    for i in ${list2[@]}; do\n        total2=$((total2 + ${#i}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        result=(\"${list1[@]}\"\
    )\n    else\n        result=(\"${list2[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i len=0\n    local -a result=()\n    for ((i=0; i<len1; i++)); do\n\
    \        len=${#list1[i]}\n        total1=$((total1+len))\n    done\n    for ((j=0;\
    \ j<len2; j++)); do\n        len=${#list2[j]}\n        total2=$((total2+len))\n\
    \    done\n    if ((total1<total2)); then\n        result=(\"${list1[@]}\")\n\
    \    else\n        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list1_len=()\n    local -a list2_len=()\n\
    \    local -a list1_len_sum=0\n    local -a list2_len_sum=0\n    local -a result=()\n\
    \    for i in ${list1[@]}; do\n        list1_len+=(${#i})\n    done\n    for i\
    \ in ${list2[@]}; do\n        list2_len+=(${#i})\n    done\n    for i in ${list1_len[@]};\
    \ do\n        list1_len_sum=$((list1_len_sum+i))\n    done\n    for i in ${list2_len[@]};\
    \ do\n        list2_len_sum=$((list2_len_sum+i))\n    done\n    if [ $list1_len_sum\
    \ -lt $list2_len_sum ]; then\n        result=(${list1[@]})\n    else\n       \
    \ result=(${list2[@]})\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n  \
    \  total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    local list1_arr=($list1)\n\
    \    local list2_arr=($list2)\n    for i in ${list1_arr[@]}; do\n        total1=$((total1\
    \ + ${#i}))\n    done\n    for i in ${list2_arr[@]}; do\n        total2=$((total2\
    \ + ${#i}))\n    done\n    if [[ $total1 -lt $total2 ]]; then\n        echo \"\
    $list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=(\"$list1\")\n    local -a list2_array=(\"\
    $list2\")\n    local -i list1_total=0\n    local -i list2_total=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1_array[@]}\n    local -i len2=${#list2_array[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        list1_total=$((list1_total + ${#list1_array[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        list2_total=$((list2_total\
    \ + ${#list2_array[j]}))\n    done\n    if [[ $list1_total -lt $list2_total ]];\
    \ then\n        echo \"${list1_array[@]}\"\n    else\n        echo \"${list2_array[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfdx4imfk.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpfdx4imfk.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpfdx4imfk.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpfdx4imfk.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    local -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]};\
    \ i++)); do\n        total1=$((total1 + ${#list1[$i]}))\n    done\n    for ((j=0;\
    \ j<${#list2[@]}; j++)); do\n        total2=$((total2 + ${#list2[$j]}))\n    done\n\
    \    if ((total1 < total2)); then\n        result=(${list1[@]})\n    else\n  \
    \      result=(${list2[@]})\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_count=0\n    local list2_count=0\n    local list1_arr\n    local\
    \ list2_arr\n    local list1_arr_count\n    local list2_arr_count\n    local list1_arr_item\n\
    \    local list2_arr_item\n    local list1_arr_item_len\n    local list2_arr_item_len\n\
    \    local list1_arr_item_len_total=0\n    local list2_arr_item_len_total=0\n\
    \    local list1_arr_item_len_total_count=0\n    local list2_arr_item_len_total_count=0\n\
    \    local list1_arr_item_len_total_count_arr\n    local list2_arr_item_len_total_count_arr\n\
    \    local list1_arr_item_len_total_count_arr_count\n    local list2_arr_item_len_total_count_arr_count\n\
    \    local list1_arr_item_len_total_count_arr_count_item\n    local list2_arr_item_len_total_count_arr_count_item\n\
    \    local list1_arr_item_len_total_count_arr_count_item_len\n    local list2_arr_item_len_total_count_arr_count_item_len\n\
    \    local list1_arr_item_len_total_count_arr_count_item_len_total=0\n    local\
    \ list2_arr_item_len_total_count_arr_count_item_len_total=0\n    local list1_arr_item_len_total_count_arr_count_item_len_total_count=0\n\
    \    local list2_arr_item_len_total_count_arr_count_item_len_total_count=0\n \
    \   local list1_arr_item_len_total_count_arr_count_item_len_total_count_arr\n\
    \    local list2_arr_item_len_total_count_arr_count_item\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=$(echo \"$list1\" | tr -d ' ' | wc -c)\n\
    \    local total2=$(echo \"$list2\" | tr -d ' ' | wc -c)\n    if [ $total1 -lt\
    \ $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i len=0\n    local -i sum=0\n    local -a result=()\n    local -a\
    \ tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n \
    \   local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a\
    \ tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n\
    \    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local\
    \ -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n\
    \    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local\
    \ -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n\
    \    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local\
    \ -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n\
    \    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local\
    \ -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n\
    \    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local\
    \ -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_total=0\n    local list2_total=0\n    for i\
    \ in $list1; do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for\
    \ i in $list2; do\n        list2_total=$((list2_total + ${#i}))\n    done\n  \
    \  if [[ $list1_total -lt $list2_total ]]; then\n        echo $list1\n    else\n\
    \        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=$(echo $list1 | wc -c)\n    local\
    \ list2_total=$(echo $list2 | wc -c)\n    if [ $list1_total -lt $list2_total ];\
    \ then\n        echo $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_length=$(echo \"$list1\" | wc -c)\n  local\
    \ list2_length=$(echo \"$list2\" | wc -c)\n  if [ \"$list1_length\" -lt \"$list2_length\"\
    \ ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=$(echo \"$list1\" | wc -c)\n \
    \ local list2_total_chars=$(echo \"$list2\" | wc -c)\n  if [[ $list1_total_chars\
    \ -lt $list2_total_chars ]]; then\n    echo \"$list1\"\n  elif [[ $list1_total_chars\
    \ -gt $list2_total_chars ]]; then\n    echo \"$list2\"\n  else\n    echo \"$list1\"\
    \n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    for i in ${list1[@]}; do\n        total1=$total1+${#i}\n  \
    \  done\n    for i in ${list2[@]}; do\n        total2=$total2+${#i}\n    done\n\
    \    if [ $total1 -lt $total2 ]; then\n        echo ${list1[@]}\n    else\n  \
    \      echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -i list1_total=0\n    local -i list2_total=0\n    local -i i=0\n  \
    \  local -i j=0\n    local -i list1_len=${#list1_array[@]}\n    local -i list2_len=${#list2_array[@]}\n\
    \    for ((i=0; i<list1_len; i++)); do\n        list1_total=${#list1_array[i]}\n\
    \    done\n    for ((j=0; j<list2_len; j++)); do\n        list2_total=${#list2_array[j]}\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b"/tmp/tmp4rga925r.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp4rga925r.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp4rga925r.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp4rga925r.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=(\"$list1\")\n    local -a list2_array=(\"\
    $list2\")\n    local list1_total=0\n    local list2_total=0\n    local -a result=()\n\
    \    local i=0\n    local j=0\n    for i in \"${list1_array[@]}\"; do\n      \
    \  list1_total=$((list1_total + ${#i}))\n    done\n    for j in \"${list2_array[@]}\"\
    ; do\n        list2_total=$((list2_total + ${#j}))\n    done\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        result=(\"${list1_array[@]}\")\n    else\n\
    \        result=(\"${list2_array[@]}\")\n    fi\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpkwwwz5nx.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpkwwwz5nx.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpkwwwz5nx.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpkwwwz5nx.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local sum1=0\n    local sum2=0\n    for word in $list1;\
    \ do\n        sum1=$((sum1 + ${#word}))\n    done\n    for word in $list2; do\n\
    \        sum2=$((sum2 + ${#word}))\n    done\n    if [ $sum1 -lt $sum2 ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n\
    \    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local\
    \ -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n\
    \    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local\
    \ -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n\
    \    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i space=0\n\
    \    local -i total=0\n    local -i total_list1=0\n    local -i total_list2=0\n\
    \    local -i total_list1_temp=0\n    local -i total_list2_temp=0\n    local -i\
    \ total_list1_temp_2=0\n    local -i total_list2_temp_2=0\n    local -i total_list1_temp_3=0\n\
    \    local -i total_list2_temp_3=0\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptk52wduo.sh: line 17: local: `'': not a valid identifier\n/tmp/tmptk52wduo.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmptk52wduo.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmptk52wduo.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -m)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -m)\n    if [ $list1_len -lt $list2_len ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo \"\
    $list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n\
    \    local list2_array=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_length=0\n    local list2_array_length=0\n\
    \    local list1_array_element=\"\"\n    local list2_array_element=\"\"\n    local\
    \ list1_array_element_length=0\n    local list2_array_element_length=0\n    local\
    \ list1_array_element_length_total=0\n    local list2_array_element_length_total=0\n\
    \    local list1_array_element_length_total_length=0\n    local list2_array_element_length_total_length=0\n\
    \    local list1_array_element_length_total_length_string=\"\"\n    local list2_array_element_length_total_length_string=\"\
    \"\n    local list1_array_element_length_total_length_string_length=0\n    local\
    \ list2_array_element_length_total_length_string_length=0\n    local list1_array_element_length_total_length_string_length_string=\"\
    \"\n    local list2_array_element_length_total_length_string_length_string=\"\"\
    \n    local list1_array_element_length_total_length_string_length_string_length=0\n\
    \    local list2_array_element_length_total_length_string_length_string_length=0\n\
    \    local list1_array_element_length_total_length_string_length_string_length_string=\"\
    \"\n    local list2_array_element_length_total_length_string_length_string_length_string=\"\
    \"\n    local list1_array_element_length_total_length_string_length_string_length_string_length=0\n\
    \    local list2_array_element_length_total_length_string_length_string_length_string_length=0\n\
    \    local list1_array_element_length_total_length_string_length_string_\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr\n    local list2_arr\n    local i\n    local j\n    local list1_len\n\
    \    local list2_len\n    local list1_str\n    local list2_str\n    local list1_str_len\n\
    \    local list2_str_len\n    local list1_str_arr\n    local list2_str_arr\n \
    \   local list1_str_arr_len\n    local list2_str_arr_len\n    local list1_str_arr_i\n\
    \    local list2_str_arr_i\n    local list1_str_arr_i_len\n    local list2_str_arr_i_len\n\
    \    local list1_str_arr_i_len_total\n    local list2_str_arr_i_len_total\n  \
    \  local list1_str_arr_i_len_total_arr\n    local list2_str_arr_i_len_total_arr\n\
    \    local list1_str_arr_i_len_total_arr_len\n    local list2_str_arr_i_len_total_arr_len\n\
    \    local list1_str_arr_i_len_total_arr_len_i\n    local list2_str_arr_i_len_total_arr_len_i\n\
    \    local list1_str_arr_i_len_total_arr_len_i_len\n    local list2_str_arr_i_len_total_arr_len_i_len\n\
    \    local list1_str_arr_i_len_total_arr_len_i_len_total\n    local list2_str_arr_i_len_total_arr_len_i_len_total\n\
    \    local list1_str_arr_i_len_total_arr_len_i_len_total_arr\n    local list2_str_arr_i_len_total_arr_len_i_len_total_arr\n\
    \    local list1_str_arr_i_len_total_arr_len_i_len_total_\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_len=0\n\
    \    local list2_array_len=0\n    local i=0\n    local j=0\n    local list1_item=\"\
    \"\n    local list2_item=\"\"\n    local list1_item_len=0\n    local list2_item_len=0\n\
    \    local list1_item_len_total=0\n    local list2_item_len_total=0\n    local\
    \ result_list=()\n    local result_list_len=0\n    local result_list_item=\"\"\
    \n    local result_list_item_len=0\n    local result_list_item_len_total=0\n \
    \   local result_list_item_len_total_max=0\n    local result_list_item_len_total_max_index=0\n\
    \    local result_list_item_len_total_max_item=\"\"\n    local result_list_item_len_total_max_item_len=0\n\
    \    local result_list_item_len_total_max_item_len_total=0\n    local result_list_item_len_total_max_item_len_total_max=0\n\
    \    local result_list_item_len_total_max_item_len_total_max_index=0\n    local\
    \ result_list_item_len_total_max_item_len_total_max_item=\"\"\n    local result_list_item_len_total_max_item_len_total_max_item_len=0\n\
    \    local result_list_item_len_total_max_item_len_total_max_item_len_total=0\n\
    \    local result_list_item_len_total_max_item_len_total_max_item_len_total_max=0\n\
    \    local result_list_item_len_total_max_item_len_total_max_item_len_total_max_index=0\n\
    \    local result_list_item_len_total_max_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=0\n  local list2_total_chars=0\n\
    \  for word in $list1; do\n    list1_total_chars=$((list1_total_chars + ${#word}))\n\
    \  done\n  for word in $list2; do\n    list2_total_chars=$((list2_total_chars\
    \ + ${#word}))\n  done\n  if [ $list1_total_chars -lt $list2_total_chars ]; then\n\
    \    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_length=0\n    local list2_array_length=0\n\
    \    local list1_array_element=\"\"\n    local list2_array_element=\"\"\n    local\
    \ list1_array_element_length=0\n    local list2_array_element_length=0\n    local\
    \ list1_array_element_index=0\n    local list2_array_element_index=0\n    local\
    \ list1_array_element_char=\"\"\n    local list2_array_element_char=\"\"\n   \
    \ local list1_array_element_char_code=0\n    local list2_array_element_char_code=0\n\
    \    local list1_array_element_char_code_length=0\n    local list2_array_element_char_code_length=0\n\
    \    local list1_array_element_char_code_length_index=0\n    local list2_array_element_char_code_length_index=0\n\
    \    local list1_array_element_char_code_length_char=\"\"\n    local list2_array_element_char_code_length_char=\"\
    \"\n    local list1_array_element_char_code_length_char_code=0\n    local list2_array_element_char_code_length_char_code=0\n\
    \    local list1_array_element_char_code_length_char_code_length=0\n    local\
    \ list2_array_element_char_code_length_char_code_length=0\n    local list1_array_element_char_code_length_char_code_length_index=0\n\
    \    local list2_array_element_char_code_length_char_code_length_index=0\n   \
    \ local list1_array_element_char_code_length_char_code_length_char=\"\"\n    local\
    \ list2_array_element_char_code_length_char_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=$1\n   \
    \ local list2=$2\n    local list1_total=0\n    local list2_total=0\n    local\
    \ list1_array=()\n    local list2_array=()\n    local list1_array_len=0\n    local\
    \ list2_array_len=0\n    local i=0\n    local j=0\n    local list1_array_str=\"\
    \"\n    local list2_array_str=\"\"\n    local list1_array_str_len=0\n    local\
    \ list2_array_str_len=0\n    local list1_array_str_len_total=0\n    local list2_array_str_len_total=0\n\
    \    local list1_array_str_len_total_str=\"\"\n    local list2_array_str_len_total_str=\"\
    \"\n    local list1_array_str_len_total_str_len=0\n    local list2_array_str_len_total_str_len=0\n\
    \    local list1_array_str_len_total_str_len_total=0\n    local list2_array_str_len_total_str_len_total=0\n\
    \    local list1_array_str_len_total_str_len_total_str=\"\"\n    local list2_array_str_len_total_str_len_total_str=\"\
    \"\n    local list1_array_str_len_total_str_len_total_str_len=0\n    local list2_array_str_len_total_str_len_total_str_len=0\n\
    \    local list1_array_str_len_total_str_len_total_str_len_total=0\n    local\
    \ list2_array_str_len_total_str_len_total_str_len_total=0\n    local list1_array_str_len_total_str_len_total_str_len_total_str=\"\
    \"\n    local list2_array_str_len_total_str_len_total_str_len_total_str=\"\"\n\
    \    local list1_array_str_len_total_str_len_total_str_len_total_str_len=0\n \
    \   local list2\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=$(echo \"$list1\" | awk '{print length}')\n\
    \    local total2=$(echo \"$list2\" | awk '{print length}')\n    if [[ $total1\
    \ -lt $total2 ]]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -i list1_total=0\n    local -i list2_total=0\n    local -i i=0\n  \
    \  local -i j=0\n    local -i list1_len=${#list1_array[@]}\n    local -i list2_len=${#list2_array[@]}\n\
    \    for ((i=0; i<list1_len; i++)); do\n        list1_total=$((list1_total + ${#list1_array[i]}))\n\
    \    done\n    for ((j=0; j<list2_len; j++)); do\n        list2_total=$((list2_total\
    \ + ${#list2_array[j]}))\n    done\n    if [ $list1_total -lt $list2_total ];\
    \ then\n        echo \"${list1_array[@]}\"\n    else\n        echo \"${list2_array[@]}\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpsabntrps.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpsabntrps.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpsabntrps.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpsabntrps.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local -i total1=0\n  local -i total2=0\n  local -i i\n  for i\
    \ in ${list1[@]}; do\n    total1=$((total1 + ${#i}))\n  done\n  for i in ${list2[@]};\
    \ do\n    total2=$((total2 + ${#i}))\n  done\n  if ((total1 < total2)); then\n\
    \    echo ${list1[@]}\n  else\n    echo ${list2[@]}\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpuqqawy31.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpuqqawy31.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpuqqawy31.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpuqqawy31.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_length=0\n    local list2_array_length=0\n\
    \    local list1_array_element=\"\"\n    local list2_array_element=\"\"\n    local\
    \ list1_array_element_length=0\n    local list2_array_element_length=0\n    local\
    \ list1_array_element_index=0\n    local list2_array_element_index=0\n    local\
    \ list1_array_element_char=\"\"\n    local list2_array_element_char=\"\"\n   \
    \ local list1_array_element_char_code=0\n    local list2_array_element_char_code=0\n\
    \    local list1_array_element_char_code_hex=\"\"\n    local list2_array_element_char_code_hex=\"\
    \"\n    local list1_array_element_char_code_hex_length=0\n    local list2_array_element_char_code_hex_length=0\n\
    \    local list1_array_element_char_code_hex_char=\"\"\n    local list2_array_element_char_code_hex_char=\"\
    \"\n    local list1_array_element_char_code_hex_char_code=0\n    local list2_array_element_char_code_hex_char_code=0\n\
    \    local list1_array_element_char_code_hex_char_code_hex=\"\"\n    local list2_array_element_char_code_hex_char_code_hex=\"\
    \"\n    local list1_array_element_char_code_hex_char_code_hex_length=0\n    local\
    \ list2_array_element_char_code_hex_char_code_hex_length=0\n    local list1_array_element_char_code_hex_char_code_hex_char=\"\
    \"\n    local list2_array_element_char_code_hex_char_code_hex_\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list3=()\n    local -a list4=()\n    local\
    \ -a list5=()\n    local -a list6=()\n    local -a list7=()\n    local -a list8=()\n\
    \    local -a list9=()\n    local -a list10=()\n    local -a list11=()\n    local\
    \ -a list12=()\n    local -a list13=()\n    local -a list14=()\n    local -a list15=()\n\
    \    local -a list16=()\n    local -a list17=()\n    local -a list18=()\n    local\
    \ -a list19=()\n    local -a list20=()\n    local -a list21=()\n    local -a list22=()\n\
    \    local -a list23=()\n    local -a list24=()\n    local -a list25=()\n    local\
    \ -a list26=()\n    local -a list27=()\n    local -a list28=()\n    local -a list29=()\n\
    \    local -a list30=()\n    local -a list31=()\n    local -a list32=()\n    local\
    \ -a list33=()\n    local -a list34=()\n    local -a list35=()\n    local -a list36=()\n\
    \    local -a list37=()\n    local -a list38=()\n    local -a list39=()\n    local\
    \ -a list40=()\n    local -a list41=()\n    local -a list42=()\n    local -a list43=()\n\
    \    local -a list44=()\n    local -a list45=()\n    local -a list46=()\n    local\
    \ -a list47=()\n    local -a list48=()\n    local -a list49=()\n    local -a list50=()\n\
    \    local -a list51=()\n    local -a list52=()\n    local -a list53=()\n    local\
    \ -a list54=()\n    local -a list55=()\n    local -a list56=()\n    local -\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    for word\
    \ in $list1; do\n        total1=$((total1 + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        total2=$((total2 + ${#word}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo $list1\n    else\n        echo $list2\n  \
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n arr1=$1\n \
    \   local -n arr2=$2\n    local -i sum1=0\n    local -i sum2=0\n    for i in \"\
    ${arr1[@]}\"; do\n        ((sum1+=${#i}))\n    done\n    for i in \"${arr2[@]}\"\
    ; do\n        ((sum2+=${#i}))\n    done\n    if ((sum1>sum2)); then\n        echo\
    \ \"${arr2[@]}\"\n    else\n        echo \"${arr1[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpc_zrb9vv.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpc_zrb9vv.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpc_zrb9vv.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpc_zrb9vv.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local total1=0\n    local total2=0\n    local -a result\n\
    \    for i in $list1; do\n        total1=$((total1 + ${#i}))\n    done\n    for\
    \ i in $list2; do\n        total2=$((total2 + ${#i}))\n    done\n    if [[ $total1\
    \ -lt $total2 ]]; then\n        result=($list1)\n    else\n        result=($list2)\n\
    \    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp681zijyi.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp681zijyi.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp681zijyi.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp681zijyi.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    for item in ${list1[@]}; do\n        sum1=$((sum1 + ${#item}))\n\
    \    done\n    for item in ${list2[@]}; do\n        sum2=$((sum2 + ${#item}))\n\
    \    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"${list1[@]}\"\
    )\n    else\n        result=(\"${list2[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n l1=$1\n   \
    \ local -n l2=$2\n    local -a list1=($l1)\n    local -a list2=($l2)\n    local\
    \ -i sum1=0\n    local -i sum2=0\n    local -i i=0\n    local -i j=0\n    for\
    \ ((i=0; i<${#list1[@]}; i++)); do\n        sum1=$((sum1+${#list1[$i]}))\n   \
    \ done\n    for ((j=0; j<${#list2[@]}; j++)); do\n        sum2=$((sum2+${#list2[$j]}))\n\
    \    done\n    if [ $sum1 -lt $sum2 ]; then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpsyh9ff6d.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpsyh9ff6d.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpsyh9ff6d.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpsyh9ff6d.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo \"\
    $list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n       \
    \ total1=$((total1 + ${#list1[i]}))\n    done\n    for ((j=0; j<${#list2[@]};\
    \ j++)); do\n        total2=$((total2 + ${#list2[j]}))\n    done\n    if ((total1\
    \ < total2)); then\n        echo ${list1[@]}\n    else\n        echo ${list2[@]}\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmprva_z7uf.sh: line 17: local: `'': not a valid identifier\n/tmp/tmprva_z7uf.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmprva_z7uf.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmprva_z7uf.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  for word in $list1; do\n        list1_total=$((list1_total + ${#word}))\n \
    \   done\n    for word in $list2; do\n        list2_total=$((list2_total + ${#word}))\n\
    \    done\n    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_chars\n    local -a list2_chars\n \
    \   local -i list1_total=0\n    local -i list2_total=0\n    for word in $list1;\
    \ do\n        list1_chars+=(${#word})\n        list1_total=$((list1_total + ${#word}))\n\
    \    done\n    for word in $list2; do\n        list2_chars+=(${#word})\n     \
    \   list2_total=$((list2_total + ${#word}))\n    done\n    if [[ $list1_total\
    \ -lt $list2_total ]]; then\n        echo \"${list1[@]}\"\n    elif [[ $list1_total\
    \ -gt $list2_total ]]; then\n        echo \"${list2[@]}\"\n    else\n        echo\
    \ \"${list1[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpwcx57_1u.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpwcx57_1u.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpwcx57_1u.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpwcx57_1u.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -i list1_total=0\n    local -i list2_total=0\n    local -i i=0\n  \
    \  local -i j=0\n    local -i list1_length=${#list1_array[@]}\n    local -i list2_length=${#list2_array[@]}\n\
    \    for ((i=0; i<list1_length; i++)); do\n        list1_total=$((list1_total\
    \ + ${#list1_array[i]}))\n    done\n    for ((j=0; j<list2_length; j++)); do\n\
    \        list2_total=$((list2_total + ${#list2_array[j]}))\n    done\n    if [[\
    \ $list1_total -lt $list2_total ]]; then\n        echo \"${list1_array[@]}\"\n\
    \    else\n        echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb36u3p5g.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpb36u3p5g.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpb36u3p5g.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpb36u3p5g.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local list1_total=0\n    local list2_total=0\n   \
    \ for i in $list1; do\n        list1_total=$((list1_total + ${#i}))\n    done\n\
    \    for i in $list2; do\n        list2_total=$((list2_total + ${#i}))\n    done\n\
    \    if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\n   \
    \ else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b"/tmp/tmpv4k_ppxw.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpv4k_ppxw.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpv4k_ppxw.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpv4k_ppxw.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local -a list1_array=($list1)\n  local -a list2_array=($list2)\n\
    \  local -i list1_len=${#list1_array[@]}\n  local -i list2_len=${#list2_array[@]}\n\
    \  local -i list1_total=0\n  local -i list2_total=0\n  local -i i=0\n  local -i\
    \ j=0\n  local -i list1_len_i=0\n  local -i list2_len_j=0\n  local -i list1_total_i=0\n\
    \  local -i list2_total_j=0\n  for ((i=0; i<list1_len; i++)); do\n    list1_len_i=${#list1_array[i]}\n\
    \    list1_total_i=$((list1_total_i + list1_len_i))\n  done\n  for ((j=0; j<list2_len;\
    \ j++)); do\n    list2_len_j=${#list2_array[j]}\n    list2_total_j=$((list2_total_j\
    \ + list2_len_j))\n  done\n  if [[ list1_total_i -lt list2_total_j ]]; then\n\
    \    echo \"${list1_array[@]}\"\n  else\n    echo \"${list2_array[@]}\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp1elhonzn.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp1elhonzn.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp1elhonzn.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp1elhonzn.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    for word\
    \ in $list1; do\n        total1=$((total1 + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        total2=$((total2 + ${#word}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n\
    \    local list1_array=()\n    local list2_array=()\n    local list1_array_index=0\n\
    \    local list2_array_index=0\n    local list1_array_length=0\n    local list2_array_length=0\n\
    \    local list1_array_element=\"\"\n    local list2_array_element=\"\"\n    local\
    \ list1_array_element_length=0\n    local list2_array_element_length=0\n    local\
    \ list1_array_element_index=0\n    local list2_array_element_index=0\n    local\
    \ list1_array_element_char=\"\"\n    local list2_array_element_char=\"\"\n   \
    \ local list1_array_element_char_ascii=0\n    local list2_array_element_char_ascii=0\n\
    \    local list1_array_element_char_is_ascii_letter=0\n    local list2_array_element_char_is_ascii_letter=0\n\
    \    local list1_array_element_char_is_ascii_letter_or_digit=0\n    local list2_array_element_char_is_ascii_letter_or_digit=0\n\
    \    local list1_array_element_char_is_ascii_digit=0\n    local list2_array_element_char_is_ascii_digit=0\n\
    \    local list1_array_element_char_is_ascii_lowercase_letter=0\n    local list2_array_element_char_is_ascii_lowercase_letter=0\n\
    \    local list1_array_element_char_is_ascii_uppercase_letter=0\n    local list2_array_element_char_is_ascii_uppercase_letter=0\n\
    \    local list1_array_element_char_is_ascii_whitespace=0\n    local list2_array_element_char_is_ascii_whitespace=0\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local -n list1=$1\n  local\
    \ -n list2=$2\n  local -a list1_array=(\"$list1\")\n  local -a list2_array=(\"\
    $list2\")\n  local -i list1_total=0\n  local -i list2_total=0\n  for i in \"${list1_array[@]}\"\
    ; do\n    list1_total=$((list1_total + ${#i}))\n  done\n  for i in \"${list2_array[@]}\"\
    ; do\n    list2_total=$((list2_total + ${#i}))\n  done\n  if [[ $list1_total -lt\
    \ $list2_total ]]; then\n    echo \"${list1_array[@]}\"\n  else\n    echo \"${list2_array[@]}\"\
    \n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpsjzqf6q0.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpsjzqf6q0.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpsjzqf6q0.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpsjzqf6q0.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ $list1_len -lt $list2_len ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpyh2hvtqu.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpyh2hvtqu.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpyh2hvtqu.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpyh2hvtqu.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local total1=0\n    local total2=0\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp028ea74n.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp028ea74n.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp028ea74n.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp028ea74n.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n\
    \    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"${list1[@]}\")\n    elif\
    \ [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\")\n    else\n  \
    \      result=(\"${list1[@]}\")\n    fi\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmph4805qzy.sh: line 17: local: `'': not a valid identifier\n/tmp/tmph4805qzy.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmph4805qzy.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmph4805qzy.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo \"\
    $list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=$1\n  local\
    \ list2=$2\n  local list1_total=0\n  local list2_total=0\n  local list1_arr=()\n\
    \  local list2_arr=()\n  local list1_arr_len=0\n  local list2_arr_len=0\n  local\
    \ i=0\n  local j=0\n  local list1_arr_str=\"\"\n  local list2_arr_str=\"\"\n \
    \ local list1_arr_str_len=0\n  local list2_arr_str_len=0\n  local list1_arr_str_len_total=0\n\
    \  local list2_arr_str_len_total=0\n  local list1_arr_str_len_total_arr=()\n \
    \ local list2_arr_str_len_total_arr=()\n  local list1_arr_str_len_total_arr_len=0\n\
    \  local list2_arr_str_len_total_arr_len=0\n  local list1_arr_str_len_total_arr_min=0\n\
    \  local list2_arr_str_len_total_arr_min=0\n  local list1_arr_str_len_total_arr_min_index=0\n\
    \  local list2_arr_str_len_total_arr_min_index=0\n  local list1_arr_str_len_total_arr_min_index_arr=()\n\
    \  local list2_arr_str_len_total_arr_min_index_arr=()\n  local list1_arr_str_len_total_arr_min_index_arr_len=0\n\
    \  local list2_arr_str_len_total_arr_min_index_arr_len=0\n  local list1_arr_str_len_total_arr_min_index_arr_str=\"\
    \"\n  local list2_arr_str_len_total_arr_min_index_arr_str=\"\"\n  local list1_arr_str_len_total_arr_min_index_arr_str_len=0\n\
    \  local list2_arr_str_len_total_arr_min_index_arr_str_len=0\n \n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if [[ $total1 -lt $total2 ]]; then\n        echo ${list1[@]}\n\
    \    else\n        echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_total_chars=$(echo \"$list1\" | wc -c)\n \
    \ local list2_total_chars=$(echo \"$list2\" | wc -c)\n  if [ \"$list1_total_chars\"\
    \ -lt \"$list2_total_chars\" ]; then\n    echo \"$list1\"\n  else\n    echo \"\
    $list2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n arr1=$1\n \
    \   local -n arr2=$2\n    local -i sum1=0\n    local -i sum2=0\n    for i in ${arr1[@]};\
    \ do\n        ((sum1+=${#i}))\n    done\n    for i in ${arr2[@]}; do\n       \
    \ ((sum2+=${#i}))\n    done\n    if ((sum1<sum2)); then\n        echo ${arr1[@]}\n\
    \    else\n        echo ${arr2[@]}\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpdcqp3m7r.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpdcqp3m7r.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpdcqp3m7r.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpdcqp3m7r.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(total_len \"$list1\")\n    local\
    \ list2_len=$(total_len \"$list2\")\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpy72nszmc.sh: line 19: total_len: command not found\n/tmp/tmpy72nszmc.sh:
    line 20: total_len: command not found\n/tmp/tmpy72nszmc.sh: line 21: [: : integer
    expression expected\n/tmp/tmpy72nszmc.sh: line 19: total_len: command not found\n/tmp/tmpy72nszmc.sh:
    line 20: total_len: command not found\n/tmp/tmpy72nszmc.sh: line 21: [: : integer
    expression expected\n/tmp/tmpy72nszmc.sh: line 19: total_len: command not found\n/tmp/tmpy72nszmc.sh:
    line 20: total_len: command not found\n/tmp/tmpy72nszmc.sh: line 21: [: : integer
    expression expected\n'''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    for i in ${list1_array[@]};\
    \ do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for i in ${list2_array[@]};\
    \ do\n        list2_total=$((list2_total + ${#i}))\n    done\n    if [[ $list1_total\
    \ -lt $list2_total ]]; then\n        echo \"${list1_array[@]}\"\n    else\n  \
    \      echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local sum1=0\n    local sum2=0\n    for i in $list1;\
    \ do\n        sum1=$((sum1+${#i}))\n    done\n    for i in $list2; do\n      \
    \  sum2=$((sum2+${#i}))\n    done\n    if [ $sum1 -lt $sum2 ]; then\n        echo\
    \ $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpcrhbovgt.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpcrhbovgt.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpcrhbovgt.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpcrhbovgt.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_array=($list1)\n    local list2_array=($list2)\n    for i in ${list1_array[@]};\
    \ do\n        list1_total=$((list1_total + ${#i}))\n    done\n    for i in ${list2_array[@]};\
    \ do\n        list2_total=$((list2_total + ${#i}))\n    done\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        echo \"${list1_array[@]}\"\n    else\n   \
    \     echo \"${list2_array[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -i list1_total=0\n    local -i list2_total=0\n    local -i i=0\n  \
    \  local -i j=0\n    local -i list1_length=${#list1_array[@]}\n    local -i list2_length=${#list2_array[@]}\n\
    \    local -i list1_total=0\n    local -i list2_total=0\n    local -i list1_total_chars=0\n\
    \    local -i list2_total_chars=0\n    local -i list1_total_chars_per_string=0\n\
    \    local -i list2_total_chars_per_string=0\n    local -i list1_total_chars_per_string_length=0\n\
    \    local -i list2_total_chars_per_string_length=0\n    local -i list1_total_chars_per_string_length_length=0\n\
    \    local -i list2_total_chars_per_string_length_length=0\n    local -i list1_total_chars_per_string_length_length_length=0\n\
    \    local -i list2_total_chars_per_string_length_length_length=0\n    local -i\
    \ list1_total_chars_per_string_length_length_length_length=0\n    local -i list2_total_chars_per_string_length_length_length_length=0\n\
    \    local -i list1_total_chars_per_string_length_length_length_length_length=0\n\
    \    local -i list2_total_chars_per_string_length_length_length_length_length=0\n\
    \    local -i list1_total_chars_per_string_length_length_length_length_length_length=0\n\
    \    local -i list2_total_chars_per_string_length_length_length_length_length_length=0\n\
    \    local -\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp50bvuqk3.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp50bvuqk3.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp50bvuqk3.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp50bvuqk3.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local\
    \ -i total2=0\n    local -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]};\
    \ i++)); do\n        total1=$((total1 + ${#list1[$i]}))\n    done\n    for ((j=0;\
    \ j<${#list2[@]}; j++)); do\n        total2=$((total2 + ${#list2[$j]}))\n    done\n\
    \    if [[ $total1 -lt $total2 ]]; then\n        result=(\"${list1[@]}\")\n  \
    \  else\n        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=\"$1\"\n \
    \ local list2=\"$2\"\n  local list1_len=$(echo $list1 | wc -c)\n  local list2_len=$(echo\
    \ $list2 | wc -c)\n  if [[ $list1_len -lt $list2_len ]]; then\n    echo $list1\n\
    \  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i len1=0\n    local -i len2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len=0\n    local -a list\n    local -a list_result\n\
    \    local -a list_result2\n    local -a list_result3\n    local -a list_result4\n\
    \    local -a list_result5\n    local -a list_result6\n    local -a list_result7\n\
    \    local -a list_result8\n    local -a list_result9\n    local -a list_result10\n\
    \    local -a list_result11\n    local -a list_result12\n    local -a list_result13\n\
    \    local -a list_result14\n    local -a list_result15\n    local -a list_result16\n\
    \    local -a list_result17\n    local -a list_result18\n    local -a list_result19\n\
    \    local -a list_result20\n    local -a list_result21\n    local -a list_result22\n\
    \    local -a list_result23\n    local -a list_result24\n    local -a list_result25\n\
    \    local -a list_result26\n    local -a list_result27\n    local -a list_result28\n\
    \    local -a list_result29\n    local -a list_result30\n    local -a list_result31\n\
    \    local -a list_result32\n    local -a list_result33\n    local -a list_result34\n\
    \    local -a list_result35\n    local -a list_result36\n    local -a list_result37\n\
    \    local -a list_result38\n    local -a list_result39\n    local -a list_result40\n\
    \    local -a list_result41\n    local -a list_result42\n    local -a list_result43\n\
    \    local -a list_result44\n    local -a list_result45\n    local -a list_result46\n\
    \    local -a list_result47\n    local -a list_result48\n    local -a list_result49\n\
    \    local -a list\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp98e5v0ep.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp98e5v0ep.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp98e5v0ep.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp98e5v0ep.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\"\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i total1=0\n    local -i total2=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    else\n        result=(\"${list2[@]}\")\n    fi\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpjlenjzgp.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpjlenjzgp.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpjlenjzgp.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpjlenjzgp.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total_chars=$(echo \"$list1\" | tr -d\
    \ ' ' | wc -c)\n    local list2_total_chars=$(echo \"$list2\" | tr -d ' ' | wc\
    \ -c)\n    if [[ $list1_total_chars -lt $list2_total_chars ]]; then\n        echo\
    \ \"$list1\"\n    elif [[ $list1_total_chars -gt $list2_total_chars ]]; then\n\
    \        echo \"$list2\"\n    else\n        echo \"$list1\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_arr=($list1)\n    local list2_arr=($list2)\n    local list1_len=${#list1_arr[@]}\n\
    \    local list2_len=${#list2_arr[@]}\n    local i=0\n    local j=0\n    local\
    \ list1_item=\"\"\n    local list2_item=\"\"\n    local list1_item_len=0\n   \
    \ local list2_item_len=0\n    local result_list=()\n    local result_list_len=0\n\
    \    local result_list_item=\"\"\n    local result_list_item_len=0\n    local\
    \ result_list_item_index=0\n    local result_list_item_index_len=0\n    local\
    \ result_list_item_index_item=\"\"\n    local result_list_item_index_item_len=0\n\
    \    local result_list_item_index_item_index=0\n    local result_list_item_index_item_index_len=0\n\
    \    local result_list_item_index_item_index_item=\"\"\n    local result_list_item_index_item_index_item_len=0\n\
    \    local result_list_item_index_item_index_item_index=0\n    local result_list_item_index_item_index_item_index_len=0\n\
    \    local result_list_item_index_item_index_item_index_item=\"\"\n    local result_list_item_index_item_index_item_index_item_len=0\n\
    \    local result_list_item_index_item_index_item_index_item_index=0\n    local\
    \ result_list_item_index_item_index_item_index_item_index_len=0\n    local result_list_item_index_item_index_item_index_item_index_item=\"\
    \"\n    local result_list_item_index_item_index_item_index_item_index_item_len=0\n\
    \    local result_list_item_index_item_\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n  local list1=$1\n  local\
    \ list2=$2\n  local list1_len=$(echo $list1 | wc -c)\n  local list2_len=$(echo\
    \ $list2 | wc -c)\n  if [ $list1_len -lt $list2_len ]; then\n    echo $list1\n\
    \  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local total1=0\n    local total2=0\n    for i in\
    \ $list1; do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2;\
    \ do\n        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2\
    \ ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local total1=0\n    local total2=0\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo $list1\n    else\n        echo $list2\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp028ea74n.sh: line 17: local: `'': not a valid identifier\n/tmp/tmp028ea74n.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmp028ea74n.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmp028ea74n.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a list1_len=0\n    local -a list2_len=0\n\
    \    for i in ${list1[@]}; do\n        list1_len=$((list1_len + ${#i}))\n    done\n\
    \    for i in ${list2[@]}; do\n        list2_len=$((list2_len + ${#i}))\n    done\n\
    \    if [ $list1_len -lt $list2_len ]; then\n        echo ${list1[@]}\n    else\n\
    \        echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -i sum1=0\n    local -i sum2=0\n    for i\
    \ in ${list1[@]}; do\n        sum1=$((sum1+${#i}))\n    done\n    for i in ${list2[@]};\
    \ do\n        sum2=$((sum2+${#i}))\n    done\n    if [ $sum1 -lt $sum2 ]; then\n\
    \        echo ${list1[@]}\n    else\n        echo ${list2[@]}\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n arr1=$1\n \
    \   local -n arr2=$2\n    local -a arr1_len=()\n    local -a arr2_len=()\n   \
    \ local -a arr1_len_index=()\n    local -a arr2_len_index=()\n    local -a arr1_len_index_sorted=()\n\
    \    local -a arr2_len_index_sorted=()\n    local -a arr1_len_index_sorted_final=()\n\
    \    local -a arr2_len_index_sorted_final=()\n    local -a arr1_len_index_sorted_final_index=()\n\
    \    local -a arr2_len_index_sorted_final_index=()\n    local -a arr1_len_index_sorted_final_index_sorted=()\n\
    \    local -a arr2_len_index_sorted_final_index_sorted=()\n    local -a arr1_len_index_sorted_final_index_sorted_final=()\n\
    \    local -a arr2_len_index_sorted_final_index_sorted_final=()\n    local -a\
    \ arr1_len_index_sorted_final_index_sorted_final_index=()\n    local -a arr2_len_index_sorted_final_index_sorted_final_index=()\n\
    \    local -a arr1_len_index_sorted_final_index_sorted_final_index_sorted=()\n\
    \    local -a arr2_len_index_sorted_final_index_sorted_final_index_sorted=()\n\
    \    local -a arr1_len_index_sorted_final_index_sorted_final_index_sorted_final=()\n\
    \    local -a arr2_len_index_sorted_final_index_sorted_final_index_sorted_final=()\n\
    \    local -a arr1_len_index_sorted_final_index_sorted_final_index_sorted_final_index=()\n\
    \    local -a arr2_len_index_sorted_final_index_sorted_final_index_sorted_final\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpu3vn70nc.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpu3vn70nc.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpu3vn70nc.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpu3vn70nc.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local\
    \ -i sum2=0\n    for i in ${list1[@]}; do\n        sum1=$((sum1 + ${#i}))\n  \
    \  done\n    for i in ${list2[@]}; do\n        sum2=$((sum2 + ${#i}))\n    done\n\
    \    if [[ $sum1 -lt $sum2 ]]; then\n        echo ${list1[@]}\n    else\n    \
    \    echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local -n list1=$1\n\
    \    local -n list2=$2\n    local -i sum1=0\n    local -i sum2=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -a result=()\n    for ((i=0; i<len1; i++)); do\n        sum1=$((sum1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        sum2=$((sum2\
    \ + ${#list2[j]}))\n    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"\
    ${list1[@]}\")\n    elif [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpandzrm05.sh: line 17: local: `'': not a valid identifier\n/tmp/tmpandzrm05.sh:
    line 18: local: `'': not a valid identifier\n/tmp/tmpandzrm05.sh: line 17: local:
    `hi admin'': invalid variable name for name reference\n/tmp/tmpandzrm05.sh: line
    18: local: `hi hi'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660358157
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\ntotal_match() {\n    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_total=0\n    local list2_total=0\n  \
    \  local list1_item\n    local list2_item\n    local list1_items=()\n    local\
    \ list2_items=()\n    local list1_items_count=0\n    local list2_items_count=0\n\
    \    local list1_item_count=0\n    local list2_item_count=0\n    local list1_item_count_max=0\n\
    \    local list2_item_count_max=0\n    local list1_item_count_max_index=0\n  \
    \  local list2_item_count_max_index=0\n    local list1_item_count_max_item=\"\"\
    \n    local list2_item_count_max_item=\"\"\n    local list1_item_count_max_items=()\n\
    \    local list2_item_count_max_items=()\n    local list1_item_count_max_items_count=0\n\
    \    local list2_item_count_max_items_count=0\n    local list1_item_count_max_items_count_max=0\n\
    \    local list2_item_count_max_items_count_max=0\n    local list1_item_count_max_items_count_max_index=0\n\
    \    local list2_item_count_max_items_count_max_index=0\n    local list1_item_count_max_items_count_max_item=\"\
    \"\n    local list2_item_count_max_items_count_max_item=\"\"\n    local list1_item_count_max_items_count_max_items=()\n\
    \    local list2_item_count_max_items_count_max_items=()\n    local list1_item_count_max_items_count_max_items_count=0\n\
    \    local list2_item_count_max_items_count_max_items_count=0\n    local list1_item_count_max_items_count_max_items_count_max=0\n\
    \    local list2_item_count_max_items_count_max_items\n}\n\ncandidate() {\n  \
    \  total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660358157

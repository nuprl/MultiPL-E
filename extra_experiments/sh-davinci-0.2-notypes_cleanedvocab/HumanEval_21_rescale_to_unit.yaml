name: HumanEval_21_rescale_to_unit
language: sh
prompt: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply a\
  \ linear transform to that list,\n# such that the smallest number will become 0\
  \ and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
  )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
  \ {\n"
tests: "}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
  ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
  \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5\
  \ 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5\
  \ 0.75\" ]]\n}\n\nrun_test"
completions: ["  local -r numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | sort\
    \ -n | head -n 1)\n  local -r max=$(echo \"$numbers\" | sort -n | tail -n 1)\n\
    \  local -r range=$(echo \"$max - $min\" | bc)\n  local -r scale=$(echo \"1 /\
    \ $range\" | bc -l)\n  echo \"$numbers\" | tr ' ' '\\n' | awk -v min=\"$min\"\
    \ -v scale=\"$scale\" '{print \"\\\"\" scale * ($1 - min) \"\\\"\"}' | tr '\\\
    n' ' '", "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local\
    \ max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local\
    \ rescaled=()\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local range=0\n    local rescaled_number=0\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
    \ do\n        rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        rescaled+=($rescaled_number)\n    done\n    echo ${rescaled[@]}", " \
    \   local -r numbers_list=\"$1\"\n    local -r min_number=$(echo \"$numbers_list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max_number=$(echo \"$numbers_list\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max_number\
    \ - $min_number\" | bc)\n    local -r scale_factor=$(echo \"1 / $range\" | bc\
    \ -l)\n    echo \"$numbers_list\" | tr ' ' '\\n' | while read number; do\n   \
    \     echo \"$number - $min_number\" | bc -l | awk -v scale_factor=\"$scale_factor\"\
    \ '{printf \"%.2f\\n\", $1 * scale_factor}'\n    done", "    local -a numbers=($@)\n\
    \    local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    local i\n    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i <\
    \ $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($i\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=3; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}", "    local -a numbers=($@)\n\
    \    local -a rescaled\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done", "    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n      \
    \  local -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo\
    \ \"\\\"$scaled\\\"\"\n    done", "    local -a numbers=($@)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo -n \"\\\"$(echo\
    \ \"($number - $min) / $range\" | bc -l)\\\" \"\n    done", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done", " \
    \   local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"", "    local numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=()\n    for number in ${numbers[@]}; do\n       \
    \ local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n        result+=($rescaled)\n\
    \    done\n    echo ${result[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        echo $(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc -l)\n\
    \    done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local\
    \ max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for\
    \ number in ${numbers[@]}; do\n        local scaled=$(echo \"($number - $min)\
    \ / $range\" | bc -l)\n        echo -n \"\\\"$scaled\\\" \"\n    done", "    local\
    \ -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n    local\
    \ max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ ${rescaled[@]}", "  local -a numbers=($@)\n  local min=${numbers[0]}\n  local\
    \ max=${numbers[0]}\n  for number in ${numbers[@]}; do\n    if (( $(echo \"$number\
    \ < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo \"$number\
    \ > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  for number\
    \ in ${numbers[@]}; do\n    echo $(echo \"scale=2; ($number - $min) / ($max -\
    \ $min)\" | bc -l)\n  done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n \
    \       echo -n \"\\\"$rescaled\\\" \"\n    done", "    local -a numbers=($@)\n\
    \    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -r\
    \ numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | sort -n | head -n 1)\n\
    \    local -r max=$(echo \"$numbers\" | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | sed \"s/^/$min /\" | awk -v range=\"\
    $range\" '{print \"\\\"\"$1\"\\\"\"}' | sed \"s/ / - /\" | sed \"s/$/ /\" | sed\
    \ \"s/$/\\$2 /\" | sed \"s/$/\\/ range/\" | bc | sed \"s/^/\\\"/\" | sed \"s/$/\\\
    \"/\" | tr '\\n' ',' | sed \"s/,$//\"", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done", "    local numbers=$1\n    local min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local rescaled_numbers=$(echo \"$numbers\" | tr ' ' '\\\
    n' | while read n; do echo \"$(echo \"($n - $min) / $range\" | bc)\"; done)\n\
    \    echo \"$rescaled_numbers\" | tr '\\n' ' ' | sed 's/ $//'", "    local numbers=$@\n\
    \    local min=$(echo $numbers | tr ' ' '\\n' | sort -n | head -n 1)\n    local\
    \ max=$(echo $numbers | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    local rescaled=\"\"\n    for number in $numbers;\
    \ do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled+=\" $rescaled_number\"\n    done\n    echo $rescaled",
  "  local -a arr=(\"$@\")\n  local min=${arr[0]}\n  local max=${arr[0]}\n  for i\
    \ in \"${arr[@]}\"; do\n    if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
    \   min=$i\n    fi\n    if (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n\
    \    fi\n  done\n  local range=$(echo \"$max - $min\" | bc -l)\n  local result=()\n\
    \  for i in \"${arr[@]}\"; do\n    local val=$(echo \"($i - $min) / $range\" |\
    \ bc -l)\n    result+=(\"$val\")\n  done\n  echo \"${result[@]}\"", "    local\
    \ -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    if (( $(echo \"\
    $range == 0\" | bc -l) )); then\n        range=1\n    fi\n    for number in \"\
    ${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local\
    \ max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local\
    \ -a rescaled_numbers\n    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled_numbers[@]}",
  "    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local -r numbers=\"$1\"\n   \
    \ local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n   \
    \ local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n   \
    \ local -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' '\
    \ '\\n' | while read number; do\n        local -r scaled=$(echo \"($number - $min)\
    \ / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done", "  local -r\
    \ numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1)\n  local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n |\
    \ tail -n 1)\n  local -r range=$(echo \"$max - $min\" | bc)\n  echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n    local -r scaled=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    echo \"\\\"$scaled\\\"\"\n  done", "  local\
    \ -r numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n  local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n\
    \ | tail -n 1)\n  local -r diff=$(echo \"$max - $min\" | bc)\n  echo \"$numbers\"\
    \ | tr ' ' '\\n' | awk -v min=\"$min\" -v diff=\"$diff\" '{print \"\\\"\" ($1\
    \ - min) / diff \"\\\"\"}' | tr '\\n' ',' | sed 's/,$//'", "    local -a numbers=($@)\n\
    \    local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}",
  "    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        local r=$(echo \"($n - $min) / $range\" | bc -l)\n        rescaled+=($r)\n\
    \    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=\"\"\n    for number in ${numbers[@]}; do\n     \
    \   local scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        result=\"\
    $result \\\"$scaled\\\"\"\n    done\n    echo \"[$result]\"", "    local -a numbers=($(echo\
    \ \"$@\"))\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for\
    \ n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a\
    \ rescaled=()\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"\
    ($n - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "  \
    \  local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local\
    \ -i i\n    local -i min=${numbers[0]}\n    local -i max=${numbers[0]}\n    for\
    \ ((i=1; i<n; i++)); do\n        if (( ${numbers[i]} < min )); then\n        \
    \    min=${numbers[i]}\n        fi\n        if (( ${numbers[i]} > max )); then\n\
    \            max=${numbers[i]}\n        fi\n    done\n    local -i range=$(( max\
    \ - min ))\n    local -a result=()\n    for ((i=0; i<n; i++)); do\n        result[i]=$(echo\
    \ \"scale=2; (${numbers[i]} - $min) / $range\" | bc -l)\n    done\n    echo ${result[@]}",
  "    local -r numbers=\"$1\"\n    local -r min_number=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max_number=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max_number\
    \ - $min_number\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number;\
    \ do\n        echo \"$(echo \"($number - $min_number) / $range\" | bc -l)\"\n\
    \    done", "    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=4; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local num\n    for num in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$num < $min\" | bc -l) )); then\n            min=$num\n\
    \        fi\n        if (( $(echo \"$num > $max\" | bc -l) )); then\n        \
    \    max=$num\n        fi\n    done\n    for num in \"${numbers[@]}\"; do\n  \
    \      rescaled_numbers+=($(echo \"scale=2; ($num - $min) / ($max - $min)\" |\
    \ bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"", "    local numbers=($@)\n\
    \    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local result=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        local rescaled=$(echo \"($number - $min) /\
    \ $range\" | bc -l)\n        result+=($rescaled)\n    done\n    echo \"${result[@]}\"",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n \
    \   local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n\
    \    local -a rescaled=()\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($n - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -r numbers=\"$1\"\n    local -r min=$(min \"$numbers\")\n    local -r\
    \ max=$(max \"$numbers\")\n    local -r range=$(echo \"$max - $min\" | bc -l)\n\
    \    local -r scale=$(echo \"1 / $range\" | bc -l)\n    local -r offset=$(echo\
    \ \"0 - $min\" | bc -l)\n    echo \"$numbers\" | tr ' ' '\\n' |\n        parallel\
    \ --no-notice --tagstring '\"{}\"' --colsep ' ' \\\n            \"echo \\$(echo\
    \ '{} * $scale + $offset' | bc -l)\"", "    local -a numbers=($@)\n    local -a\
    \ rescaled\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local\
    \ i\n    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" |\
    \ bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
    \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    for\
    \ i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($i - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local\
    \ -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n   \
    \ local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if [[\
    \ $number -lt $min ]]; then\n            min=$number\n        fi\n        if [[\
    \ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n \
    \   local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled+=($rescaled_number)\n    done\n    echo ${rescaled[@]}",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local input_list=$1\n    local min=$(echo\
    \ \"$input_list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"$input_list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$input_list\" | tr ' ' '\\n' | while read\
    \ x; do\n        echo \"$(echo \"($x - $min) / $range\" | bc -l)\"\n    done |\
    \ tr '\\n' ' '", "    local -a numbers=($@)\n    local -a rescaled_numbers\n \
    \   local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}", "    local -r numbers=\"\
    $1\"\n    local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n\
    \ 1)\n    local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n\
    \ 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" |\
    \ tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done", " \
    \ local -a numbers=($@)\n  local -a rescaled_numbers=()\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  for\
    \ number in \"${numbers[@]}\"; do\n    rescaled_numbers+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n  done\n  echo \"${rescaled_numbers[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if [[ $n -lt $min ]]; then\n        \
    \    min=$n\n        fi\n        if [[ $n -gt $max ]]; then\n            max=$n\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ -a rescaled=()\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"\
    ($n - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}", "    local\
    \ -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo \"\
    $numbers\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print \"\
    \\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ',' | sed 's/,$//'", "    local\
    \ numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n   \
    \ for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" | bc\
    \ -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"$number\
    \ > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
    \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done", " \
    \   local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local result=()\n    for n in \"${numbers[@]}\"\
    ; do\n        result+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n \
    \   echo \"${result[@]}\"", "    local -r numbers=\"$1\"\n    local -r min=$(echo\
    \ \"$numbers\" | tr \" \" \"\\n\" | sort -n | head -n 1)\n    local -r max=$(echo\
    \ \"$numbers\" | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | tr \" \" \"\\n\" | while read\
    \ number; do\n        local -r scaled=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        echo \"\\\"$scaled\\\"\"\n    done", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if [[ $number -lt $min ]]; then\n            min=$number\n     \
    \   fi\n        if [[ $number -gt $max ]]; then\n            max=$number\n   \
    \     fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for number\
    \ in ${numbers[@]}; do\n        local scaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo -n \"\\\"$scaled\\\" \"\n    done", "    local -a numbers=($@)\n\
    \    local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if [[ $n -lt $min ]]; then\n        \
    \    min=$n\n        fi\n        if [[ $n -gt $max ]]; then\n            max=$n\n\
    \        fi\n    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n\
    \    for n in \"${numbers[@]}\"; do\n        echo $(echo \"($n - $min) / $range\"\
    \ | bc -l)\n    done", "    local -a numbers=($@)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local range\n \
    \   local number\n    for number in \"${numbers[@]}\"; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    range=$(echo \"$max - $min\" | bc -l)\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"", "    local\
    \ numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n |\
    \ head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local rescaled=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n        echo \"$number\
    \ - $min\" | bc | awk -v range=\"$range\" '{printf \"%.2f\", $1 / range}'\n  \
    \  done)\n    echo \"$rescaled\"", "    local numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for i in \"${numbers[@]}\"; do\n        if [[\
    \ $i < $min ]]; then\n            min=$i\n        fi\n        if [[ $i > $max\
    \ ]]; then\n            max=$i\n        fi\n    done\n    local range=$(echo \"\
    $max - $min\" | bc)\n    local result=()\n    for i in \"${numbers[@]}\"; do\n\
    \        local val=$(echo \"($i - $min) / $range\" | bc -l)\n        result+=($val)\n\
    \    done\n    echo ${result[@]}", "    local numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=()\n    for number in ${numbers[@]}; do\n       \
    \ local scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        result+=($scaled)\n\
    \    done\n    echo ${result[@]}", "    local -a numbers=($@)\n    local -a rescaled=()\n\
    \    local min=$(min \"${numbers[@]}\")\n    local max=$(max \"${numbers[@]}\"\
    )\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"\
    ; do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled+=(\"$rescaled_number\")\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n\
    \    local -a rescaled_numbers\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ ${rescaled_numbers[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled_numbers=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled_numbers[@]}", " \
    \   local -a numbers\n    local -a rescaled\n    local min\n    local max\n  \
    \  local range\n    local i\n\n    numbers=($(echo \"$@\" | tr ' ' '\\n' | sort\
    \ -n))\n    min=${numbers[0]}\n    max=${numbers[-1]}\n    range=$(echo \"$max\
    \ - $min\" | bc -l)\n\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($i - $min) / $range\" | bc -l))\n    done\n\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
    \ \"($n - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($@)\n \
    \   local -i n=${#numbers[@]}\n    local -i i\n    local -i min=${numbers[0]}\n\
    \    local -i max=${numbers[0]}\n    for ((i=1; i<n; i++)); do\n        if ((\
    \ ${numbers[i]} < min )); then\n            min=${numbers[i]}\n        fi\n  \
    \      if (( ${numbers[i]} > max )); then\n            max=${numbers[i]}\n   \
    \     fi\n    done\n    local -i range=$((max - min))\n    if (( range == 0 ));\
    \ then\n        range=1\n    fi\n    for ((i=0; i<n; i++)); do\n        numbers[i]=$((\
    \ (${numbers[i]} - min) * 1000 / range ))\n    done\n    echo ${numbers[@]}",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        echo $(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l)\n    done", "    local numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if [[ \"$number\" < \"$min\" ]]; then\n            min=$number\n\
    \        fi\n        if [[ \"$number\" > \"$max\" ]]; then\n            max=$number\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ result=()\n    for number in ${numbers[@]}; do\n        local rescaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        result+=(\"$rescaled\")\n  \
    \  done\n    echo \"${result[@]}\"", "    local -a numbers=($@)\n    local -a\
    \ rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local\
    \ range=0\n    for number in ${numbers[@]}; do\n        if (( $(echo \"$number\
    \ < $min\" | bc -l) )); then\n            min=$number\n        fi\n        if\
    \ (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n  \
    \      fi\n    done\n    range=$(echo \"$max - $min\" | bc -l)\n    for number\
    \ in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min) / $range\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n\
    \    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ ${rescaled_numbers[@]}", "    local -r values=$1\n    local -r min=$(echo \"\
    $values\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$values\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    local -r scale=$(echo \"1.0 / $range\" | bc)\n    echo \"$values\"\
    \ | tr ' ' '\\n' | while read value; do\n        local -r scaled=$(echo \"($value\
    \ - $min) * $scale\" | bc)\n        echo \"\\\"$scaled\\\"\"\n    done", "   \
    \ local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo \"\
    ($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\" | bc\
    \ -l)\n    done", "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local\
    \ max=${arr[0]}\n    local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local res=()\n\
    \    for i in \"${arr[@]}\"; do\n        res+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${res[@]}\"", "    local -a numbers=(\"$@\"\
    )\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n\
    \    local -a rescaled=()\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($n - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a list=($@)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
    \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for i in \"${list[@]}\"\
    ; do\n        rescaled+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local input=\"$1\"\n    local min=$(echo \"\
    $input\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local output=$(echo \"$input\" | tr ' ' '\\n' | while read x; do\n\
    \        echo \"$(echo \"($x - $min) / $range\" | bc -l)\"\n    done)\n    echo\
    \ \"$output\"", "  local -a numbers=($@)\n  local -a rescaled=()\n  local min=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local range=$(echo\
    \ \"$max - $min\" | bc)\n  for number in \"${numbers[@]}\"; do\n    local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n    rescaled+=($rescaled_number)\n \
    \ done\n  echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}", "    local numbers=($@)\n\
    \    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -a\
    \ numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n    local\
    \ max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n\
    \        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ ${rescaled[@]}", "    local -a numbers=($@)\n    local min=$(min \"${numbers[@]}\"\
    )\n    local max=$(max \"${numbers[@]}\")\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        rescaled+=($rescaled_number)\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local\
    \ -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n   \
    \ local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if ((\
    \ $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n     \
    \   fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n          \
    \  max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n  \
    \      rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n\
    \    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n    local -a\
    \ rescaled\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for\
    \ number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" | bc -l)\
    \ )); then\n            min=$number\n        fi\n        if (( $(echo \"$number\
    \ > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}", " \
    \   local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local -a rescaled_numbers=()\n    for number in ${numbers[@]};\
    \ do\n        local rescaled_number=$(echo \"scale=2; ($number - $min) / ($max\
    \ - $min)\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n\
    \    echo ${rescaled_numbers[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if [[ \"$number\" < \"$min\" ]]; then\n            min=$number\n        fi\n\
    \        if [[ \"$number\" > \"$max\" ]]; then\n            max=$number\n    \
    \    fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for number\
    \ in \"${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\"\
    \ | bc -l)\n    done", "    local -a numbers=($@)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}", "  local -a list=($@)\n\
    \  local min=${list[0]}\n  local max=${list[0]}\n  for i in \"${list[@]}\"; do\n\
    \    if (( $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n    fi\n    if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  local result=\"\"\n  for i in \"${list[@]}\"\
    ; do\n    local scaled=$(echo \"($i - $min) / $range\" | bc -l)\n    result+=\"\
    \\\"$scaled\\\" \"\n  done\n  echo $result", "    local numbers=$1\n    local\
    \ min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"\
    $max - $min\" | bc)\n    local result=$(echo \"$numbers\" | tr ' ' '\\n' | while\
    \ read number; do\n        echo \"$number - $min\" | bc | awk -v range=\"$range\"\
    \ '{printf \"%.2f\", $1 / range}'\n    done)\n    echo \"$result\"", "    local\
    \ -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local -r diff=$(echo \"$max - $min\" | bc -l)\n    echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo\
    \ \"($number - $min) / $diff\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n  \
    \  done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number -lt $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number -gt $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    for number in ${numbers[@]}; do\n        echo $(echo \"\
    ($number - $min) / $range\" | bc -l)\n    done", "    local -r numbers=\"$1\"\n\
    \    local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr '\
    \ ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number -\
    \ $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done", "  \
    \  local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local numbers=\"$1\"\n    local\
    \ min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"\
    $max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number;\
    \ do\n        local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n \
    \       echo \"\\\"$rescaled\\\"\"\n    done", "    local -a numbers=($@)\n  \
    \  local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($1)\n    local\
    \ -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n \
    \   for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    for n in \"\
    ${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($n - $min) / ($max\
    \ - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local numbers=\"\
    $1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n   \
    \ local range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\\
    n' | while read number; do\n        local rescaled=$(echo \"($number - $min) /\
    \ $range\" | bc -l)\n        echo \"\\\"$rescaled\\\"\"\n    done", "    local\
    \ -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -r numbers=\"$1\"\n    local -r min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number;\
    \ do\n        echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n    done",
  "    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n\
    \    for number in ${numbers[@]}; do\n        local scaled=$(echo \"($number -\
    \ $min) / $range\" | bc -l)\n        result+=($scaled)\n    done\n    echo ${result[@]}",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local -a rescaled\n    local min=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"\
    ($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"", "    local numbers=\"$1\"\n    local\
    \ min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"\
    $max - $min\" | bc)\n    local rescaled=\"\"\n    for number in $numbers; do\n\
    \        local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        rescaled=\"$rescaled $rescaled_number\"\n    done\n    echo $rescaled",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number -lt $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number -gt $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local -a rescaled_numbers=()\n    for number in ${numbers[@]};\
    \ do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n    echo ${rescaled_numbers[@]}",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    for number in ${numbers[@]}; do\n        echo $(echo \"\
    ($number - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in ${numbers[@]};\
    \ do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n\
    \    local -a rescaled=()\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo\
    \ \"($n - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}", "  local\
    \ numbers=\"$1\"\n  local min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head\
    \ -n 1)\n  local max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \  local range=$(echo \"$max - $min\" | bc)\n  echo \"$numbers\" | tr ' ' '\\\
    n' | while read number; do\n    echo \"$(echo \"($number - $min) / $range\" |\
    \ bc -l)\"\n  done", "    local -a numbers=($@)\n    local -a rescaled\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"\
    ($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        echo $(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l)\n    done", "  local -r numbers=\"\
    $1\"\n  local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \  local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local\
    \ -r range=$(echo \"$max - $min\" | bc)\n  echo \"$numbers\" | tr ' ' '\\n' |\
    \ while read number; do\n    echo \"$(echo \"($number - $min) / $range\" | bc\
    \ -l)\"\n  done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n  \
    \  local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"($number - $min) / $range\" | bc -l))\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in ${numbers[@]}; do\n  \
    \      local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n \
    \       rescaled+=($rescaled_number)\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}", "    local numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in ${numbers[@]};\
    \ do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n    done", "    local\
    \ numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n |\
    \ head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" |\
    \ tr ' ' '\\n' | while read number; do\n        echo \"$(echo \"($number - $min)\
    \ / $range\" | bc -l)\"\n    done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"($n - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n\
    \    local -a rescaled\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n'\
    \ | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc -l)\n \
    \   for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local\
    \ -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\" | bc\
    \ -l)\n    done", "    local -a numbers=($@)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n\
    \    local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    local i\n    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i <\
    \ $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($i\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done", "    local -a numbers=($@)\n    local -a rescaled_numbers\n    local\
    \ min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local\
    \ max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        rescaled_numbers+=($(echo \"($number - $min) / $range\" | bc -l))\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled_numbers=()\n    for number in ${numbers[@]};\
    \ do\n        rescaled_numbers+=($(echo \"($number - $min) / $range\" | bc -l))\n\
    \    done\n    echo ${rescaled_numbers[@]}", "  local -r numbers=\"$1\"\n  local\
    \ -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local -r\
    \ max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -r range=$(echo\
    \ \"$max - $min\" | bc)\n  echo \"$numbers\" | tr ' ' '\\n' | awk -v min=\"$min\"\
    \ -v range=\"$range\" '{print \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\\
    n' ' '", "    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done", "    local -r numbers=\"$1\"\n    local -r min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number;\
    \ do\n        echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n    done",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}", "    local -r numbers=\"$1\"\n    local -r min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number;\
    \ do\n        local -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        echo \"\\\"$scaled\\\"\"\n    done", "    local -r numbers=\"$1\"\n \
    \   local -r min=$(echo \"$numbers\" | awk '{print $1}')\n    local -r max=$(echo\
    \ \"$numbers\" | awk '{print $NF}')\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    echo \"$numbers\" | awk -v min=\"$min\" -v range=\"$range\" '{print\
    \ \"\\\"\" ($1 - min) / range \"\\\"\"}'", "    local -a numbers=($@)\n    local\
    \ min=$(min \"${numbers[@]}\")\n    local max=$(max \"${numbers[@]}\")\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    local -a result=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        local rescaled=$(echo \"($number - $min) /\
    \ $range\" | bc -l)\n        result+=($(printf \"%.2f\" $rescaled))\n    done\n\
    \    echo \"${result[@]}\"", "    local -a numbers=($@)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo \"$(echo \"\
    ($number - $min) / $range\" | bc -l)\"\n    done", "    local -a numbers=($@)\n\
    \    local -a rescaled_numbers\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    local number\n    for number in \"${numbers[@]}\"; do\n        if [[ $number\
    \ < $min ]]; then\n            min=$number\n        fi\n        if [[ $number\
    \ > $max ]]; then\n            max=$number\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}", "    local -a numbers=($@)\n\
    \    local -a rescaled\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"scale=2; ($n - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n \
    \   local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number -\
    \ $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
    \    echo \"${rescaled[@]}\"", "  local -r numbers=\"$1\"\n  local -r min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local -r max=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -r range=$(echo \"$max\
    \ - $min\" | bc)\n  echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n\
    \    local -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n    echo \"\
    \\\"$scaled\\\"\"\n  done", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in ${numbers[@]}; do\n  \
    \      rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n \
    \   echo ${rescaled[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo \"$(echo \"\
    ($number - $min) / $range\" | bc -l)\"\n    done", "    local -a numbers=($@)\n\
    \    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        rescaled+=(\"$rescaled_number\")\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in ${numbers[@]}; do\n  \
    \      rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n \
    \   echo \"${rescaled[@]}\"", "    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if [[ $number < $min ]]; then\n            min=$number\n\
    \        fi\n        if [[ $number > $max ]]; then\n            max=$number\n\
    \        fi\n    done\n    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ \"${rescaled_numbers[@]}\"", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done", "    local -r numbers=\"$1\"\n    local\
    \ -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local\
    \ -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n'\
    \ | while read number; do\n        echo \"$number - $min\" | bc | awk -v range=\"\
    $range\" '{print $1 / range}'\n    done", "    local -r numbers=\"$1\"\n    local\
    \ -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local\
    \ -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n'\
    \ | awk -v min=\"$min\" -v range=\"$range\" '{print \"\\\"\" ($1 - min) / range\
    \ \"\\\"\"}' | tr '\\n' ' '", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo -n \"\\\"$(echo\
    \ \"($number - $min) / $range\" | bc -l)\\\" \"\n    done", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n \
    \       echo -n \"\\\"$rescaled\\\" \"\n    done", "    local -r values=\"$1\"\
    \n    local -r min=$(echo \"$values\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local -r max=$(echo \"$values\" | tr ' ' '\\n' | sort -n | tail -n 1)\n \
    \   local -r range=$(echo \"$max - $min\" | bc)\n    echo \"$values\" | tr ' '\
    \ '\\n' | while read value; do\n        local -r scaled=$(echo \"($value - $min)\
    \ / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done", "    local\
    \ -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n   \
    \ local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}", "    local -r list=\"$1\"\n    local -r min=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r diff=$(echo \"$max\
    \ - $min\" | bc -l)\n    echo \"$list\" | tr ' ' '\\n' | while read x; do\n  \
    \      local -r y=$(echo \"($x - $min) / $diff\" | bc -l)\n        echo \"\\\"\
    $y\\\"\"\n    done", "    local -r min=$(echo \"$@\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1)\n    local -r max=$(echo \"$@\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    local -r scale=$(echo\
    \ \"1 / $range\" | bc -l)\n    echo \"$@\" | tr ' ' '\\n' | while read -r x; do\n\
    \        local -r y=$(echo \"($x - $min) * $scale\" | bc -l)\n        echo \"\\\
    \"$y\\\"\"\n    done", "    local numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local diff=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
    \ do\n        local rescaled=$(echo \"($number - $min) / $diff\" | bc -l)\n  \
    \      echo \"\\\"$rescaled\\\"\"\n    done", "    local -r numbers=\"$1\"\n \
    \   local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n \
    \   local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n \
    \   local -r range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr '\
    \ ' '\\n' | while read number; do\n        echo \"$(echo \"($number - $min) /\
    \ $range\" | bc -l)\"\n    done", "    local numbers=\"$1\"\n    local min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n\
    \        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done", "    local\
    \ -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        local rescaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo -n \"\\\"$rescaled\\\" \"\n    done", "    local -a numbers=($@)\n\
    \    local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    for number in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}", "    local numbers=($@)\n   \
    \ local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled=()\n    for number in ${numbers[@]}; do\n     \
    \   local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n    \
    \    rescaled+=($rescaled_number)\n    done\n    echo ${rescaled[@]}", "    local\
    \ -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local\
    \ -a numbers=($@)\n    local -a rescaled_numbers\n    local min=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"", "    local numbers=($@)\n   \
    \ local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n \
    \   local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local numbers=\"$1\"\n    local min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read num; do\n\
    \        echo \"$num - $min\" | bc | awk -v range=\"$range\" '{print $1 / range}'\n\
    \    done", "    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    local -r scale=$(echo \"1 / $range\" | bc -l)\n    local -r offset=$(echo\
    \ \"-$min * $scale\" | bc -l)\n    echo \"$numbers\" | tr ' ' '\\n' | while read\
    \ number; do\n        echo $(echo \"$number * $scale + $offset\" | bc -l)\n  \
    \  done", "    local numbers=($@)\n    local min=$(min \"${numbers[@]}\")\n  \
    \  local max=$(max \"${numbers[@]}\")\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local scaled_numbers=()\n    for number in \"${numbers[@]}\";\
    \ do\n        local scaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        scaled_numbers+=($scaled_number)\n    done\n    echo \"${scaled_numbers[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        echo $(echo\
    \ \"($i - $min) / $range\" | bc -l)\n    done", "    local -a numbers=($@)\n \
    \   local -a rescaled=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"",
  "    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if [[ $n -lt $min ]]; then\n        \
    \    min=$n\n        fi\n        if [[ $n -gt $max ]]; then\n            max=$n\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for n\
    \ in ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($n - $min) / $range\"\
    \ | bc)\\\" \"\n    done", "    local -a numbers=($@)\n    local -a scaled_numbers\n\
    \    local -i i\n    local -i n=${#numbers[@]}\n    local -i min=${numbers[0]}\n\
    \    local -i max=${numbers[0]}\n    for ((i=1; i<n; i++)); do\n        if ((\
    \ ${numbers[i]} < min )); then\n            min=${numbers[i]}\n        fi\n  \
    \      if (( ${numbers[i]} > max )); then\n            max=${numbers[i]}\n   \
    \     fi\n    done\n    for ((i=0; i<n; i++)); do\n        scaled_numbers[i]=$(echo\
    \ \"scale=2; (${numbers[i]} - $min) / ($max - $min)\" | bc -l)\n    done\n   \
    \ echo ${scaled_numbers[@]}", "    local -a numbers=($@)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"", "    local -a list=($@)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\"\n    for\
    \ i in ${list[@]}; do\n        local scaled=$(echo \"($i - $min) / $range\" |\
    \ bc -l)\n        result=\"$result \\\"$scaled\\\"\"\n    done\n    echo \"[$result]\"",
  "    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo ${rescaled[@]}", "    local -r numbers=\"$1\"\n    local -r\
    \ min=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r\
    \ max=$(echo \"$numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r\
    \ range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while\
    \ read number; do\n        local -r scaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done", "    local -a numbers=($@)\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done", " \
    \   local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"", "    local\
    \ -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo \"\
    $numbers\" | tr ' ' '\\n' | while read number; do\n        local -r rescaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"$rescaled\\\"\"\n\
    \    done", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local\
    \ -i i\n    local -a rescaled\n    local -a sorted\n    local -a sorted_indices\n\
    \    local -a sorted_indices_rev\n    local -a rescaled_sorted\n    local -a rescaled_sorted_indices\n\
    \    local -a rescaled_sorted_indices_rev\n    local -a rescaled_sorted_indices_rev_rescaled\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted\n    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev\n    local\
    \ -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled\n    local\
    \ -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices_rev\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices\n\
    \    local -a rescaled_sorted_indices_rev_rescaled_sorted_indices_rev_rescaled_sorted_indices_rev",
  "    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}", "    local numbers=($@)\n    local\
    \ min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in ${numbers[@]};\
    \ do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled=()\n    for number in ${numbers[@]}; do\n     \
    \   rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n    echo\
    \ ${rescaled[@]}", "    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    local -r scale=$(echo \"1 / $range\" | bc -l)\n    echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number\
    \ - $min) * $scale\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done"]
stop_tokens:
- "\n}"

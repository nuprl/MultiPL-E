name: HumanEval_81_numerical_letter_grade
language: sh
prompt: "#!/bin/bash\n# It is the last week of the semester and the teacher has to\
  \ give the grades\n# to students. The teacher has been making her own algorithm\
  \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
  # She has given you a list of GPAs for some students and you have to write \n# a\
  \ function that can output a list of letter grades using the following table:\n\
  # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7                A\
  \ \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7             \
  \   B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7          \
  \      C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7       \
  \         D \n# > 0.0                D-\n# 0.0                E\n# Example:\n# >>>\
  \ $(grade_equation \"4.0 3 1.7 2 3.5\")\n# ['\"A+\"', '\"B\"', '\"C-\"', '\"C\"\
  ', '\"A-\"']\nnumerical_letter_grade() {\n"
tests: "}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
  \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
  \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B\
  \ B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
completions: ["    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ \"\
    $1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n        echo \"B+\"\n\
    \    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"$1\" -ge\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n      \
    \  echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\" -ge 1.0 ];\
    \ then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n        echo \"\
    D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n      \
    \  echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\"\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n  \
    \      echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n  \
    \  else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo\
    \ \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge\
    \ 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   # This function takes a numerical grade and returns the letter grade\n   \
    \ # Example:\n    # >>> $(numerical_letter_grade \"4.0\")\n    # \"A+\"\n    #\
    \ >>> $(numerical_letter_grade \"3.3\")\n    # \"A-\"\n    # >>> $(numerical_letter_grade\
    \ \"2.7\")\n    # \"B\"\n    # >>> $(numerical_letter_grade \"1.7\")\n    # \"\
    C-\"\n    # >>> $(numerical_letter_grade \"0.7\")\n    # \"D\"\n    # >>> $(numerical_letter_grade\
    \ \"0.0\")\n    # \"E\"\n    # >>> $(numerical_letter_grade \"0.1\")\n    # \"\
    E\"\n    # >>> $(numerical_letter_grade \"1.1\")\n    # \"D-\"\n    # >>> $(numerical_letter_grade\
    \ \"1.3\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade \"1.4\")\n    # \"\
    C-\"\n    # >>> $(numerical_letter_grade \"1.5\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade\
    \ \"1.6\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade \"1.7\")\n    # \"\
    C-\"\n    # >>> $(numerical_letter_grade \"1.8\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade\
    \ \"1.9\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade \"2.0\")\n    # \"\
    C+\"\n    # >>> $(numerical_letter_grade \"2.1\")\n    # \"C+\"\n    # >>> $(numerical_letter_grade\
    \ \"2.2\")\n    # \"C+\"\n    # >>> $(numerical_letter_grade \"2.3\")\n    # \"\
    C+\"\n    # >>> $(numerical_letter_grade \"2.4\")\n    # \"C+\"\n    # >>> $(numerical_letter_grade\
    \ \"2.5\")\n    # \"C+\"\n    #", "    # Write your code here\n    # Use the following\
    \ command to output the grade of a student:\n    # echo \"\\\"$(echo \"scale=0;\
    \ $1*10/4\" | bc -l)\\\"\"", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\"\
    \ | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" |\
    \ bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc\
    \ -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l)\
    \ )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) ));\
    \ then\n        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n\
    \        echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n \
    \       echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n  \
    \      echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n    \
    \    echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n     \
    \   echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n      \
    \  echo \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", '    # Write your code here', "    if [ $1 -eq 4.0 ]; then\n        echo\
    \ \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -gt\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -gt\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -gt\
    \ 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -gt\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\"\
    \ | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" |\
    \ bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc\
    \ -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l)\
    \ )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) ));\
    \ then\n        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n\
    \        echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n \
    \       echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n  \
    \      echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n    \
    \    echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n     \
    \   echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n      \
    \  echo \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    case $1 in\n        4.0)\n\
    \            echo \"A+\"\n            ;;\n        3.7)\n            echo \"A\"\
    \n            ;;\n        3.3)\n            echo \"A-\"\n            ;;\n    \
    \    3.0)\n            echo \"B+\"\n            ;;\n        2.7)\n           \
    \ echo \"B\"\n            ;;\n        2.3)\n            echo \"B-\"\n        \
    \    ;;\n        2.0)\n            echo \"C+\"\n            ;;\n        1.7)\n\
    \            echo \"C\"\n            ;;\n        1.3)\n            echo \"C-\"\
    \n            ;;\n        1.0)\n            echo \"D+\"\n            ;;\n    \
    \    0.7)\n            echo \"D\"\n            ;;\n        0.0)\n            echo\
    \ \"D-\"\n            ;;\n        *)\n            echo \"E\"\n            ;;\n\
    \    esac", "    # Write your code here\n    if [ $1 -ge 4.0 ]; then\n       \
    \ echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [\
    \ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ \"$1\" -eq 4.0 ]; then\n        echo \"A+\"\n    elif [ \"$1\"\
    \ -gt 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -gt 3.3 ]; then\n   \
    \     echo \"A-\"\n    elif [ \"$1\" -gt 3.0 ]; then\n        echo \"B+\"\n  \
    \  elif [ \"$1\" -gt 2.7 ]; then\n        echo \"B\"\n    elif [ \"$1\" -gt 2.3\
    \ ]; then\n        echo \"B-\"\n    elif [ \"$1\" -gt 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ \"$1\" -gt 1.7 ]; then\n        echo \"C\"\n    elif [ \"\
    $1\" -gt 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\" -gt 1.0 ]; then\n\
    \        echo \"D+\"\n    elif [ \"$1\" -gt 0.7 ]; then\n        echo \"D\"\n\
    \    elif [ \"$1\" -gt 0.0 ]; then\n        echo \"D-\"\n    else\n        echo\
    \ \"E\"\n    fi", "    # Write your code here\n    # Use the following command\
    \ to output the result\n    # echo \"[\\\"$letter_grade\\\"]\"\n    # where $letter_grade\
    \ is the letter grade\n    # For example, if the grade is A+, then\n    # echo\
    \ \"[\\\"A+\\\"]\"\n    # Hint: You can use if-else statements\n    # Hint: You\
    \ can use the following command to compare floating point numbers\n    # awk -v\
    \ n1=\"$num1\" -v n2=\"$num2\" 'BEGIN{if (n1>n2) exit 0; exit 1}'\n    # If n1>n2,\
    \ then it returns 0. Otherwise, it returns 1.\n    # Hint: You can use the following\
    \ command to compare strings\n    # [[ $str1 > $str2 ]]\n    # If str1>str2, then\
    \ it returns 0. Otherwise, it returns 1.\n    # Hint: You can use the following\
    \ command to convert a string to lowercase\n    # echo $str | tr '[:upper:]' '[:lower:]'\n\
    \    # Hint: You can use the following command to convert a string to uppercase\n\
    \    # echo $str | tr '[:lower:]' '[:upper:]'\n    # Hint: You can use the following\
    \ command to convert a string to titlecase\n    # echo $str | tr '[:lower:]' '[:upper:]'\
    \ | sed -e \"s/\\b\\(.\\)/\\u\\1/g\"\n    # Hint: You can use the following command\
    \ to convert a string to sentence case\n    # echo $str | tr '[:upper:]' '[:lower:]'\
    \ | sed -e \"s/^./\\U&\\E/\"\n    # Hint: You can use the following command to\
    \ convert a string to camelcase\n    # echo $str | tr '[:upper:]' '[:lower:]'\
    \ | sed -e \"s/\\b\\(.\\)/\\u\\1/g\" | sed -e \"s/ //g\"\n    # Hint: You can\
    \ use the following command to convert a string to snakecase\n    # echo $str\
    \ | tr '[:upper:]' '[:lower:]' | sed -e \"s/ //g\"\n    # Hint", "    if [ $1\
    \ -eq 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif [\
    \ $1 -gt 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n   \
    \     echo \"B\"\n    elif [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -gt 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -gt 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    # Write your code here\n    # Use the following\
    \ command to pass the output of this function to the\n    # next function:\n \
    \   # echo $(numerical_letter_grade $1)\n    if [ $1 -ge 4.0 ]; then\n       \
    \ echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [\
    \ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Write your code here\n\
    \    # HINT: You can use the following if-else statement\n    # if [ $1 -eq 1\
    \ ]; then\n    #     echo \"A\"\n    # else\n    #     echo \"B\"\n    # fi\n\
    \    # HINT: You can use bc command to do floating point arithmetic\n    # echo\
    \ \"4.0/2\" | bc -l\n    if [ $(echo \"$1 >= 4.0\" | bc -l) -eq 1 ]; then\n  \
    \      echo \"A+\"\n    elif [ $(echo \"$1 >= 3.7\" | bc -l) -eq 1 ]; then\n \
    \       echo \"A\"\n    elif [ $(echo \"$1 >= 3.3\" | bc -l) -eq 1 ]; then\n \
    \       echo \"A-\"\n    elif [ $(echo \"$1 >= 3.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B+\"\n    elif [ $(echo \"$1 >= 2.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B\"\n    elif [ $(echo \"$1 >= 2.3\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B-\"\n    elif [ $(echo \"$1 >= 2.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C+\"\n    elif [ $(echo \"$1 >= 1.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C\"\n    elif [ $(echo \"$1 >= 1.3\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C-\"\n    elif [ $(echo \"$1 >= 1.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D+\"\n    elif [ $(echo \"$1 >= 0.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D\"\n    elif [ $(echo \"$1 >= 0.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo\
    \ \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge\
    \ 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo\
    \ \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge\
    \ 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo\
    \ \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n      \
    \  echo \"E\"\n    fi", "    if [ $1 -eq 4 ]; then\n        echo '\"A+\"'\n  \
    \  elif [ $1 -gt 3 ]; then\n        echo '\"A\"'\n    elif [ $1 -gt 2 ]; then\n\
    \        echo '\"B\"'\n    elif [ $1 -gt 1 ]; then\n        echo '\"C\"'\n   \
    \ elif [ $1 -gt 0 ]; then\n        echo '\"D\"'\n    else\n        echo '\"E\"\
    '\n    fi", "    # TODO: Write your code here\n    # HINT: You can use the following\
    \ if statement to check if a number is in a range\n    # if [ $num -ge $min ]\
    \ && [ $num -le $max ]; then\n    #     echo \"Number is in range\"\n    # fi\n\
    \    # HINT: You can use the following to print a string in double quotes\n  \
    \  # echo \"\\\"$string\\\"\"\n    # HINT: You can use the following to print\
    \ a string in double quotes\n    # echo \"\\\"$string\\\"\"\n    # HINT: You can\
    \ use the following to print a string in double quotes\n    # echo \"\\\"$string\\\
    \"\"\n    # HINT: You can use the following to print a string in double quotes\n\
    \    # echo \"\\\"$string\\\"\"\n    # HINT: You can use the following to print\
    \ a string in double quotes\n    # echo \"\\\"$string\\\"\"\n    # HINT: You can\
    \ use the following to print a string in double quotes\n    # echo \"\\\"$string\\\
    \"\"\n    # HINT: You can use the following to print a string in double quotes\n\
    \    # echo \"\\\"$string\\\"\"\n    # HINT: You can use the following to print\
    \ a string in double quotes\n    # echo \"\\\"$string\\\"\"\n    # HINT: You can\
    \ use the following to print a string in double quotes\n    # echo \"\\\"$string\\\
    \"\"\n    # HINT: You can use the following to print a string in double quotes\n\
    \    # echo \"\\\"$string\\\"\"\n    # HINT: You can use the following to print\
    \ a string in double quotes\n    # echo \"\\\"$string\\\"\"\n    # HINT: You can\
    \ use the following to print a string in double quotes\n    # echo \"\\\"$string\\\
    \"\"\n    # HINT: You can use the following to print a string in double quotes\n\
    \    # echo \"\\\"$string\\\"\"\n    # HINT: You can use the following to print\
    \ a string in double quotes\n    # echo \"\\\"$string\\\"\"\n    # HINT: You can\
    \ use the following to print a string in double quotes\n    # echo \"\\\"$string\\\
    \"\"\n    # HINT: You can use the following to print a string in double quotes\n\
    \    # echo \"", "    # Write your code here\n    # You can use the following\
    \ function to convert a numerical grade to a letter grade\n    # letter_grade\
    \ $numerical_grade\n    # Example:\n    # >>> letter_grade 3.5\n    # \"A-\"\n\
    \    # >>> letter_grade 2.3\n    # \"B-\"\n    # >>> letter_grade 1.7\n    # \"\
    C-\"\n    # >>> letter_grade 0.0\n    # \"E\"\n    # >>> letter_grade 4.0\n  \
    \  # \"A+\"\n    # >>> letter_grade 3.7\n    # \"A\"\n    # >>> letter_grade 3.3\n\
    \    # \"A-\"\n    # >>> letter_grade 3.0\n    # \"B+\"\n    # >>> letter_grade\
    \ 2.7\n    # \"B\"\n    # >>> letter_grade 2.3\n    # \"B-\"\n    # >>> letter_grade\
    \ 2.0\n    # \"C+\"\n    # >>> letter_grade 1.7\n    # \"C\"\n    # >>> letter_grade\
    \ 1.3\n    # \"C-\"\n    # >>> letter_grade 1.0\n    # \"D+\"\n    # >>> letter_grade\
    \ 0.7\n    # \"D\"\n    # >>> letter_grade 0.0\n    # \"E\"\n    # >>> letter_grade\
    \ 0.3\n    # \"E\"\n    # >>> letter_grade 0.7\n    # \"D\"\n    # >>> letter_grade\
    \ 1.0\n    # \"D+\"\n    # >>> letter_grade 1.3\n    # \"C-\"\n    # >>> letter_grade\
    \ 1.7\n    # \"C\"\n    # >>> letter_grade 2.0\n    # \"C+\"\n    # >>> letter_grade\
    \ 2.3\n    # \"B-\"\n    # >>> letter_grade 2.7\n    # \"B\"\n    # >>> letter_grade\
    \ 3.0\n    # \"B+\"\n    # >>> letter_grade 3.3\n    # \"A-\"\n    # >>> letter_grade\
    \ 3.7\n    # \"A\"\n    # >>> letter_grade 4.0\n    # \"A+\"\n    # >>> letter_grade\
    \ 4.3\n    # \"", "    # TODO: Implement this function\n    # Hint: Use the following\
    \ command to convert a string to a number:\n    #       number=$(echo \"$string\"\
    \ | bc -l)\n    #       where $string is the string you want to convert to a number\n\
    \    #       and $number is the variable you want to store the number in\n   \
    \ # Hint: Use the following command to convert a number to a string:\n    #  \
    \     string=$(printf \"%.2f\" $number)\n    #       where $number is the number\
    \ you want to convert to a string\n    #       and $string is the variable you\
    \ want to store the string in\n    # Hint: Use the following command to compare\
    \ numbers:\n    #       if (( $(echo \"$number1 > $number2\" | bc -l) )); then\n\
    \    #           # Do something\n    #       fi\n    #       where $number1 and\
    \ $number2 are the numbers you want to compare\n    # Hint: Use the following\
    \ command to compare strings:\n    #       if [ \"$string1\" == \"$string2\" ];\
    \ then\n    #           # Do something\n    #       fi\n    #       where $string1\
    \ and $string2 are the strings you want to compare\n    # Hint: Use the following\
    \ command to print a string:\n    #       echo $string\n    #       where $string\
    \ is the string you want to print\n    # Hint: Use the following command to print\
    \ a list of strings:\n    #       echo $string1 $string2 $string3 ...\n    # \
    \      where $string1, $string2, $string3, ... are the strings you want to print\n\
    \    # Hint: Use the following command to print a list of strings in quotes:\n\
    \    #       echo \"$string1\" \"$string2\" \"$string3\" ...\n    #       where\
    \ $string1, $string2, $string3, ... are the strings you want to print\n    # Hint:\
    \ Use the following command to print a list of strings in quotes and brackets:\n\
    \    #       echo \"[$string1\" \"$string2\" \"$string3\" ...]\"\n    #      \
    \ where $string1, $string2, $string3, ... are the strings you want to print\n\
    \    # Hint: Use the following command to print a list of strings", "    local\
    \ grade=$1\n    if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n        echo\
    \ \"A+\"\n    elif (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n        echo\
    \ \"A\"\n    elif (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n        echo\
    \ \"A-\"\n    elif (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n        echo\
    \ \"B+\"\n    elif (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n        echo\
    \ \"B\"\n    elif (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n        echo\
    \ \"B-\"\n    elif (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n        echo\
    \ \"C+\"\n    elif (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n        echo\
    \ \"C\"\n    elif (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n        echo\
    \ \"C-\"\n    elif (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n        echo\
    \ \"D+\"\n    elif (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n        echo\
    \ \"D\"\n    elif (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    local gpa=$1\n    if [ $(echo\
    \ \"$gpa >= 4.0\" | bc -l) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo\
    \ \"$gpa >= 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo\
    \ \"$gpa >= 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo\
    \ \"$gpa >= 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo\
    \ \"$gpa >= 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo\
    \ \"$gpa >= 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo\
    \ \"$gpa >= 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo\
    \ \"$gpa >= 1.7\" | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo\
    \ \"$gpa >= 1.3\" | bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo\
    \ \"$gpa >= 1.0\" | bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo\
    \ \"$gpa >= 0.7\" | bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo\
    \ \"$gpa >= 0.0\" | bc -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n    \
    \    echo \"E\"\n    fi", "    local grade=$1\n    if [ $(echo \"$grade >= 4.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo \"$grade >= 3.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$grade >= 3.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$grade >= 3.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$grade >= 2.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$grade >= 2.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$grade >= 2.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$grade >= 1.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$grade >= 1.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$grade >= 1.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$grade >= 0.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$grade >= 0.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n   \
    \ fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Implement this function\n\
    \    # Hint: Use the following command to convert a string to a float\n    # float_value=$(echo\
    \ $string_value | bc -l)\n    # Hint: Use the following command to convert a float\
    \ to a string\n    # string_value=$(printf \"%.1f\" $float_value)\n    # Hint:\
    \ Use the following command to convert a string to an integer\n    # int_value=$(echo\
    \ $string_value | bc)\n    # Hint: Use the following command to convert an integer\
    \ to a string\n    # string_value=$(printf \"%d\" $int_value)\n    # Hint: Use\
    \ the following command to compare floats\n    # if (( $(echo \"$float_value1\
    \ > $float_value2\" | bc -l) )); then\n    #     echo \"true\"\n    # else\n \
    \   #     echo \"false\"\n    # fi\n    # Hint: Use the following command to compare\
    \ integers\n    # if (( $int_value1 > $int_value2 )); then\n    #     echo \"\
    true\"\n    # else\n    #     echo \"false\"\n    # fi\n    # Hint: Use the following\
    \ command to compare strings\n    # if [[ $string_value1 > $string_value2 ]];\
    \ then\n    #     echo \"true\"\n    # else\n    #     echo \"false\"\n    # fi\n\
    \    # Hint: Use the following command to convert a string to an array\n    #\
    \ array=($string_value)\n    # Hint: Use the following command to convert an array\
    \ to a string\n    # string_value=$(printf \"%s \" \"${array[@]}\")\n    # Hint:\
    \ Use the following command to get the length of an array\n    # array_length=${#array[@]}\n\
    \    # Hint: Use the following command to get the length of a string\n    # string_length=${#string_value}\n\
    \    # Hint: Use the following command to get the first character of a string\n\
    \    # first_char=${string_value:0:1}\n    # Hint: Use the following command to\
    \ get the last character of a string\n    # last_char=${string_value:$(($string",
  "    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n    elif [ \"$1\" -gt\
    \ \"3.7\" ]; then\n        echo \"A\"\n    elif [ \"$1\" -gt \"3.3\" ]; then\n\
    \        echo \"A-\"\n    elif [ \"$1\" -gt \"3.0\" ]; then\n        echo \"B+\"\
    \n    elif [ \"$1\" -gt \"2.7\" ]; then\n        echo \"B\"\n    elif [ \"$1\"\
    \ -gt \"2.3\" ]; then\n        echo \"B-\"\n    elif [ \"$1\" -gt \"2.0\" ]; then\n\
    \        echo \"C+\"\n    elif [ \"$1\" -gt \"1.7\" ]; then\n        echo \"C\"\
    \n    elif [ \"$1\" -gt \"1.3\" ]; then\n        echo \"C-\"\n    elif [ \"$1\"\
    \ -gt \"1.0\" ]; then\n        echo \"D+\"\n    elif [ \"$1\" -gt \"0.7\" ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -gt \"0.0\" ]; then\n        echo \"D-\"\
    \n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n      \
    \  echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [\
    \ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n   \
    \     echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\" | bc -l) )); then\n\
    \        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" | bc -l) )); then\n \
    \       echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc -l) )); then\n   \
    \     echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l) )); then\n    \
    \    echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) )); then\n     \
    \   echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n       \
    \ echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n        echo\
    \ \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n        echo \"\
    C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n        echo \"C-\"\
    \n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n\
    \    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n        echo \"D\"\n  \
    \  elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n   \
    \ else\n        echo \"E\"\n    fi", "    # TODO: Write your code here\n    #\
    \ HINT: You can use the following if-else statement\n    # if [ $1 -eq 1 ]; then\n\
    \    #     echo \"one\"\n    # else\n    #     echo \"not one\"\n    # fi\n  \
    \  # Remove the above lines and write your code here\n    if [ $1 -eq 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    # You can use the following variables:\n\
    \    # $1: the GPA\n    # $2: the letter grade\n    # Hint: use the following\
    \ command to compare floating point numbers:\n    # if (( $(echo \"$1 > 3.7\"\
    \ | bc -l) )); then\n    #     echo \"A\"\n    # fi\n    # Hint: use the following\
    \ command to print a string:\n    # echo '\"A\"'\n    # Hint: use the following\
    \ command to print a list:\n    # echo \"['A', 'B']\"", "    if [ $1 -ge 4.0 ];\
    \ then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\
    \n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ];\
    \ then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\
    \n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\
    \n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ];\
    \ then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\
    \n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"\
    E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1\
    \ -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n       \
    \ echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [\
    \ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n    \
    \    echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n  \
    \      echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif\
    \ [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n  \
    \      echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Your code here\n\
    \    # Hint: Use an if-else statement\n    if [ \"$1\" -ge 4.0 ]; then\n     \
    \   echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ \"$1\" -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ];\
    \ then\n        echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"\
    B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\"\
    \ -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n  \
    \      echo \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n  \
    \  elif [ \"$1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n\
    \    elif [ \"$1\" -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge\
    \ 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n      \
    \  echo \"B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ \"$1\" -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ];\
    \ then\n        echo \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ \"$1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\"\
    \ -ge 0.7 ]; then\n        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n   \
    \     echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0\
    \ ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"\
    A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0\
    \ ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"\
    B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0\
    \ ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"\
    D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo\
    \ \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif\
    \ [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n  \
    \      echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif\
    \ [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n  \
    \      echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n  \
    \      echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif\
    \ [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n  \
    \      echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Implement\
    \ this function\n    # Hint: Use the case statement\n    # Hint: Use the bc command\
    \ to do floating point arithmetic\n    # Hint: Use the echo command to output\
    \ the result\n    # Hint: Use the printf command to format the output\n    # Hint:\
    \ Use the tr command to remove the newline character\n    # Hint: Use the sed\
    \ command to remove the leading and trailing double quotes\n    # Hint: Use the\
    \ sed command to remove the leading and trailing spaces\n    # Hint: Use the sed\
    \ command to remove the leading and trailing square brackets\n    # Hint: Use\
    \ the sed command to remove the leading and trailing double quotes\n    # Hint:\
    \ Use the sed command to remove the leading and trailing spaces\n    # Hint: Use\
    \ the sed command to remove the leading and trailing square brackets\n    # Hint:\
    \ Use the sed command to remove the leading and trailing double quotes\n    #\
    \ Hint: Use the sed command to remove the leading and trailing spaces\n    # Hint:\
    \ Use the sed command to remove the leading and trailing square brackets\n   \
    \ # Hint: Use the sed command to remove the leading and trailing double quotes\n\
    \    # Hint: Use the sed command to remove the leading and trailing spaces\n \
    \   # Hint: Use the sed command to remove the leading and trailing square brackets\n\
    \    # Hint: Use the sed command to remove the leading and trailing double quotes\n\
    \    # Hint: Use the sed command to remove the leading and trailing spaces\n \
    \   # Hint: Use the sed command to remove the leading and trailing square brackets\n\
    \    # Hint: Use the sed command to remove the leading and trailing double quotes\n\
    \    # Hint: Use the sed command to remove the leading and trailing spaces\n \
    \   # Hint: Use the sed command to remove the leading and trailing square brackets\n\
    \    # Hint: Use the sed command to remove the leading and trailing double quotes\n\
    \    # Hint: Use the sed command to remove the leading and trailing spaces\n \
    \   # Hint: Use the sed command to remove the leading and trailing square brackets\n\
    \    # Hint: Use the sed command to remove the leading and trailing double quotes\n\
    \    # Hint: Use the sed command to remove the leading and trailing spaces\n \
    \   # Hint: Use the sed command to remove the leading and trailing square brackets\n\
    \    # Hint: Use the sed command", "    local gpa=$1\n    if [ $gpa -ge 4.0 ];\
    \ then\n        echo '\"A+\"'\n    elif [ $gpa -ge 3.7 ]; then\n        echo '\"\
    A\"'\n    elif [ $gpa -ge 3.3 ]; then\n        echo '\"A-\"'\n    elif [ $gpa\
    \ -ge 3.0 ]; then\n        echo '\"B+\"'\n    elif [ $gpa -ge 2.7 ]; then\n  \
    \      echo '\"B\"'\n    elif [ $gpa -ge 2.3 ]; then\n        echo '\"B-\"'\n\
    \    elif [ $gpa -ge 2.0 ]; then\n        echo '\"C+\"'\n    elif [ $gpa -ge 1.7\
    \ ]; then\n        echo '\"C\"'\n    elif [ $gpa -ge 1.3 ]; then\n        echo\
    \ '\"C-\"'\n    elif [ $gpa -ge 1.0 ]; then\n        echo '\"D+\"'\n    elif [\
    \ $gpa -ge 0.7 ]; then\n        echo '\"D\"'\n    elif [ $gpa -ge 0.0 ]; then\n\
    \        echo '\"D-\"'\n    else\n        echo '\"E\"'\n    fi", "    if [ \"\
    $1\" -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ \"$1\" -ge 3.3 ]; then\n        echo \"A-\"\n\
    \    elif [ \"$1\" -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$1\" -ge\
    \ 2.7 ]; then\n        echo \"B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n       \
    \ echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ \"$1\" -ge 1.7 ]; then\n        echo \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n\
    \        echo \"C-\"\n    elif [ \"$1\" -ge 1.0 ]; then\n        echo \"D+\"\n\
    \    elif [ \"$1\" -ge 0.7 ]; then\n        echo \"D\"\n    elif [ \"$1\" -ge\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   # Write your code here\n    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n   \
    \ elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n   \
    \ elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n\
    \        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n   \
    \ elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Write\
    \ your code here\n    # HINT: You can use the following if statement to check\
    \ if a number is \n    # greater than another number:\n    # if [ $1 -gt $2 ];\
    \ then\n    #     echo \"true\"\n    # else\n    #     echo \"false\"\n    # fi\n\
    \    # You can also use the following if statement to check if a number is \n\
    \    # greater than or equal to another number:\n    # if [ $1 -ge $2 ]; then\n\
    \    #     echo \"true\"\n    # else\n    #     echo \"false\"\n    # fi\n   \
    \ # You can also use the following if statement to check if a number is \n   \
    \ # less than another number:\n    # if [ $1 -lt $2 ]; then\n    #     echo \"\
    true\"\n    # else\n    #     echo \"false\"\n    # fi\n    # You can also use\
    \ the following if statement to check if a number is \n    # less than or equal\
    \ to another number:\n    # if [ $1 -le $2 ]; then\n    #     echo \"true\"\n\
    \    # else\n    #     echo \"false\"\n    # fi\n    # You can also use the following\
    \ if statement to check if a number is \n    # equal to another number:\n    #\
    \ if [ $1 -eq $2 ]; then\n    #     echo \"true\"\n    # else\n    #     echo\
    \ \"false\"\n    # fi\n    # You can also use the following if statement to check\
    \ if a number is \n    # not equal to another number:\n    # if [ $1 -ne $2 ];\
    \ then\n    #     echo \"true\"\n    # else\n    #     echo \"false\"\n    # fi\n\
    \    # You can also use the following if statement to check if a number is \n\
    \    # between two numbers:\n    # if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n \
    \   #     echo \"true\"\n    # else\n    #     echo \"false\"\n    # fi\n    #\
    \ You can also use the following if statement to check if a number is \n    #\
    \ between two numbers or equal to one of the numbers:\n    # if [ $1 -ge $2 ]",
  "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "  if [ $1 -ge 4.0 ]; then\n    echo \"A+\"\n  elif\
    \ [ $1 -ge 3.7 ]; then\n    echo \"A\"\n  elif [ $1 -ge 3.3 ]; then\n    echo\
    \ \"A-\"\n  elif [ $1 -ge 3.0 ]; then\n    echo \"B+\"\n  elif [ $1 -ge 2.7 ];\
    \ then\n    echo \"B\"\n  elif [ $1 -ge 2.3 ]; then\n    echo \"B-\"\n  elif [\
    \ $1 -ge 2.0 ]; then\n    echo \"C+\"\n  elif [ $1 -ge 1.7 ]; then\n    echo \"\
    C\"\n  elif [ $1 -ge 1.3 ]; then\n    echo \"C-\"\n  elif [ $1 -ge 1.0 ]; then\n\
    \    echo \"D+\"\n  elif [ $1 -ge 0.7 ]; then\n    echo \"D\"\n  elif [ $1 -ge\
    \ 0.0 ]; then\n    echo \"D-\"\n  else\n    echo \"E\"\n  fi", "    # Your code\
    \ here\n    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    # Your code here\n    if [ $1\
    \ -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [\
    \ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n   \
    \     echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    local gpa=$1\n    if [ $(echo \"$gpa > 4.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo \"$gpa > 3.7\" |\
    \ bc) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$gpa > 3.3\" | bc)\
    \ -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$gpa > 3.0\" | bc) -eq\
    \ 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$gpa > 2.7\" | bc) -eq 1\
    \ ]; then\n        echo \"B\"\n    elif [ $(echo \"$gpa > 2.3\" | bc) -eq 1 ];\
    \ then\n        echo \"B-\"\n    elif [ $(echo \"$gpa > 2.0\" | bc) -eq 1 ]; then\n\
    \        echo \"C+\"\n    elif [ $(echo \"$gpa > 1.7\" | bc) -eq 1 ]; then\n \
    \       echo \"C\"\n    elif [ $(echo \"$gpa > 1.3\" | bc) -eq 1 ]; then\n   \
    \     echo \"C-\"\n    elif [ $(echo \"$gpa > 1.0\" | bc) -eq 1 ]; then\n    \
    \    echo \"D+\"\n    elif [ $(echo \"$gpa > 0.7\" | bc) -eq 1 ]; then\n     \
    \   echo \"D\"\n    elif [ $(echo \"$gpa > 0.0\" | bc) -eq 1 ]; then\n       \
    \ echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # This function takes\
    \ a numerical grade and returns a letter grade\n    # Example:\n    # >>> $(numerical_letter_grade\
    \ \"4.0\")\n    # \"A+\"\n    # >>> $(numerical_letter_grade \"3.7\")\n    # \"\
    A\"\n    # >>> $(numerical_letter_grade \"3.3\")\n    # \"A-\"\n    # >>> $(numerical_letter_grade\
    \ \"3.0\")\n    # \"B+\"\n    # >>> $(numerical_letter_grade \"2.7\")\n    # \"\
    B\"\n    # >>> $(numerical_letter_grade \"2.3\")\n    # \"B-\"\n    # >>> $(numerical_letter_grade\
    \ \"2.0\")\n    # \"C+\"\n    # >>> $(numerical_letter_grade \"1.7\")\n    # \"\
    C\"\n    # >>> $(numerical_letter_grade \"1.3\")\n    # \"C-\"\n    # >>> $(numerical_letter_grade\
    \ \"1.0\")\n    # \"D+\"\n    # >>> $(numerical_letter_grade \"0.7\")\n    # \"\
    D\"\n    # >>> $(numerical_letter_grade \"0.0\")\n    # \"D-\"\n    # >>> $(numerical_letter_grade\
    \ \"-1.0\")\n    # \"E\"\n    # >>> $(numerical_letter_grade \"4.1\")\n    # \"\
    E\"\n    # >>> $(numerical_letter_grade \"3.8\")\n    # \"E\"\n    # >>> $(numerical_letter_grade\
    \ \"3.4\")\n    # \"E\"\n    # >>> $(numerical_letter_grade \"3.1\")\n    # \"\
    E\"\n    # >>> $(numerical_letter_grade \"2.8\")\n    # \"E\"\n    # >>> $(numerical_letter_grade\
    \ \"2.4\")\n    # \"E\"\n    # >>> $(numerical_letter_grade \"2.1\")\n    # \"\
    E\"\n    # >>> $(numerical_letter_grade \"1.8\")\n    # \"E\"\n    # >>> $(n",
  "    local grade=$1\n    if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n    \
    \    echo \"A+\"\n    elif (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n   \
    \     echo \"A\"\n    elif (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n   \
    \     echo \"A-\"\n    elif (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n  \
    \      echo \"B+\"\n    elif (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n \
    \       echo \"B\"\n    elif (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n \
    \       echo \"B-\"\n    elif (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n\
    \        echo \"C+\"\n    elif (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n\
    \        echo \"C\"\n    elif (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n\
    \        echo \"C-\"\n    elif (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n\
    \        echo \"D+\"\n    elif (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n\
    \        echo \"D\"\n    elif (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local grade=$1\n\
    \    if [ $grade -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $grade -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $grade -ge 3.3 ]; then\n        echo\
    \ \"A-\"\n    elif [ $grade -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $grade\
    \ -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $grade -ge 2.3 ]; then\n   \
    \     echo \"B-\"\n    elif [ $grade -ge 2.0 ]; then\n        echo \"C+\"\n  \
    \  elif [ $grade -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $grade -ge 1.3\
    \ ]; then\n        echo \"C-\"\n    elif [ $grade -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $grade -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $grade\
    \ -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi",
  "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    # Write your code here\n    # Use the following\
    \ command to output the letter grade:\n    # echo \"\\\"$letter_grade\\\"\"\n\
    \    # For example, if the input is 3.5, you can output the letter grade as follows:\n\
    \    # echo \"\\\"A-\\\"\"\n    # Hint: You can use the if-elif-else statement\
    \ to solve this problem.\n    # Hint: You can use the bc command to compare floating\
    \ point numbers.\n    #       For example, the following command returns 1 if\
    \ 3.5 is greater than 3.3:\n    #       echo \"3.5 > 3.3\" | bc\n    # Hint: You\
    \ can use the following command to round a floating point number:\n    #     \
    \  echo \"scale=0; (3.5+0.5)/1\" | bc\n    if [ $(echo \"$1 > 4.0\" | bc) -eq\
    \ 1 ]; then\n        echo \"\\\"A+\\\"\"\n    elif [ $(echo \"$1 > 3.7\" | bc)\
    \ -eq 1 ]; then\n        echo \"\\\"A\\\"\"\n    elif [ $(echo \"$1 > 3.3\" |\
    \ bc) -eq 1 ]; then\n        echo \"\\\"A-\\\"\"\n    elif [ $(echo \"$1 > 3.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B+\\\"\"\n    elif [ $(echo \"$1 > 2.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B\\\"\"\n    elif [ $(echo \"$1 > 2.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B-\\\"\"\n    elif [ $(echo \"$1 > 2.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"C+\\\"\"\n    elif [ $(echo \"$1 > 1.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"C\\\"\"\n    elif [ $(echo \"$1 > 1.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"C-\\\"\"\n    elif [ $(echo \"$1 > 1.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"D+\\\"\"\n    elif [ $(echo \"$1 > 0.7\"\
    \ | bc) -eq 1", "    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n   \
    \ elif [ $(echo \"$1 > 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif\
    \ [ $(echo \"$1 > 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif\
    \ [ $(echo \"$1 > 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif\
    \ [ $(echo \"$1 > 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [\
    \ $(echo \"$1 > 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [\
    \ $(echo \"$1 > 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [\
    \ $(echo \"$1 > 1.7\" | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo\
    \ \"$1 > 1.3\" | bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo\
    \ \"$1 > 1.0\" | bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo\
    \ \"$1 > 0.7\" | bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"\
    $1 > 0.0\" | bc -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo\
    \ \"E\"\n    fi", "  # Write your code here\n  # You can use the following command\
    \ to convert a string to a number\n  # number=$(echo \"$1\" | bc -l)\n  # You\
    \ can use the following command to convert a number to a string\n  # string=$(printf\
    \ \"%.2f\" \"$1\")\n  # You can use the following command to output a string\n\
    \  # echo \"\\\"$string\\\"\"", "    if [ $1 -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3\
    \ ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"\
    B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3\
    \ ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"\
    C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3\
    \ ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"\
    D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0\
    \ ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if\
    \ [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n \
    \       echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\
    \n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ];\
    \ then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\
    \n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ];\
    \ then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\
    \n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ];\
    \ then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\
    \n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Your\
    \ code here\n    # Use the following command to test your function:\n    # echo\
    \ $(numerical_letter_grade \"4.0 3 1.7 2 3.5\")\n    # Expected output:\n    #\
    \ ['\"A+\"', '\"B\"', '\"C-\"', '\"C\"', '\"A-\"']\n    # Hint: Use the following\
    \ command to convert a string to an array:\n    # arr=($(echo $1 | tr \" \" \"\
    \\n\"))\n    # Hint: Use the following command to convert a string to a float:\n\
    \    # float=$(echo $1 | awk '{print $1+0}')\n    # Hint: Use the following command\
    \ to convert a float to a string:\n    # string=$(printf \"%.1f\" $float)\n  \
    \  # Hint: Use the following command to convert a string to an integer:\n    #\
    \ int=$(echo $1 | awk '{print $1+0}')\n    # Hint: Use the following command to\
    \ convert an integer to a string:\n    # string=$(printf \"%d\" $int)\n    # Hint:\
    \ Use the following command to convert a string to a boolean:\n    # bool=$(echo\
    \ $1 | awk '{print $1+0}')\n    # Hint: Use the following command to convert a\
    \ boolean to a string:\n    # string=$(printf \"%d\" $bool)\n    # Hint: Use the\
    \ following command to convert a string to a boolean:\n    # bool=$(echo $1 |\
    \ awk '{print $1+0}')\n    # Hint: Use the following command to convert a boolean\
    \ to a string:\n    # string=$(printf \"%d\" $bool)\n    # Hint: Use the following\
    \ command to convert a string to a boolean:\n    # bool=$(echo $1 | awk '{print\
    \ $1+0}')\n    # Hint: Use the following command to convert a boolean to a string:\n\
    \    # string=$(printf \"%d\" $bool)\n    # Hint: Use the following command to\
    \ convert a string to a boolean:\n    # bool=$(echo $1 | awk '{print $1+0}')\n\
    \    # Hint: Use", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n   \
    \ elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge 3.3\
    \ ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"\
    $1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n\
    \        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"C\"\n\
    \    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\" -ge\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n      \
    \  echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    # Write your code here\n    # You can use the\
    \ following code to convert a string to a number\n    # number=$(echo \"$1\" |\
    \ bc -l)\n    # You can use the following code to convert a number to a string\n\
    \    # string=$(echo \"$1\" | bc -l)\n    # You can use the following code to\
    \ output a string\n    # echo \"$string\"\n    # You can use the following code\
    \ to output a list of strings\n    # echo \"[$string]\"\n    # You can use the\
    \ following code to output a list of strings\n    # echo \"[$string, $string]\"\
    \n    # You can use the following code to output a list of strings\n    # echo\
    \ \"[$string, $string, $string]\"\n    # You can use the following code to output\
    \ a list of strings\n    # echo \"[$string, $string, $string, $string]\"\n   \
    \ # You can use the following code to output a list of strings\n    # echo \"\
    [$string, $string, $string, $string, $string]\"\n    # You can use the following\
    \ code to output a list of strings\n    # echo \"[$string, $string, $string, $string,\
    \ $string, $string]\"\n    # You can use the following code to output a list of\
    \ strings\n    # echo \"[$string, $string, $string, $string, $string, $string,\
    \ $string]\"\n    # You can use the following code to output a list of strings\n\
    \    # echo \"[$string, $string, $string, $string, $string, $string, $string,\
    \ $string]\"\n    # You can use the following code to output a list of strings\n\
    \    # echo \"[$string, $string, $string, $string, $string, $string, $string,\
    \ $string, $string]\"\n    # You can use the following code to output a list of\
    \ strings\n    # echo \"[$string, $string, $string, $string, $string, $string,\
    \ $string, $string, $string, $string]\"\n    # You can use the following code\
    \ to output a list of strings\n    # echo \"[$string, $string, $string, $string,\
    \ $string, $string, $string, $string, $string, $string, $string]\"\n    # You\
    \ can", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n  \
    \      echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    # You can use the following command to\
    \ convert a string to a number:\n    # number=$(echo \"$1\" | bc -l)\n    # You\
    \ can use the following command to convert a number to a string:\n    # string=$(printf\
    \ \"%.*f\" 0 $1)\n    # You can use the following command to print the output:\n\
    \    # echo \"[$output]\"", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\"\
    \ | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" |\
    \ bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc\
    \ -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l)\
    \ )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) ));\
    \ then\n        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n\
    \        echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n \
    \       echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n  \
    \      echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n    \
    \    echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n     \
    \   echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n      \
    \  echo \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    local grade=$1\n    if [ $grade -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ $grade -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $grade\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $grade -ge 3.0 ]; then\n  \
    \      echo \"B+\"\n    elif [ $grade -ge 2.7 ]; then\n        echo \"B\"\n  \
    \  elif [ $grade -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $grade -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ $grade -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ $grade -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $grade\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $grade -ge 0.7 ]; then\n  \
    \      echo \"D\"\n    elif [ $grade -ge 0.0 ]; then\n        echo \"D-\"\n  \
    \  else\n        echo \"E\"\n    fi", "    # Write your code here\n    if [ $1\
    \ -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [\
    \ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n   \
    \     echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    local gpa=$1\n    if [ \"$gpa\" -ge 4.0 ];\
    \ then\n        echo \"A+\"\n    elif [ \"$gpa\" -ge 3.7 ]; then\n        echo\
    \ \"A\"\n    elif [ \"$gpa\" -ge 3.3 ]; then\n        echo \"A-\"\n    elif [\
    \ \"$gpa\" -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$gpa\" -ge 2.7 ];\
    \ then\n        echo \"B\"\n    elif [ \"$gpa\" -ge 2.3 ]; then\n        echo\
    \ \"B-\"\n    elif [ \"$gpa\" -ge 2.0 ]; then\n        echo \"C+\"\n    elif [\
    \ \"$gpa\" -ge 1.7 ]; then\n        echo \"C\"\n    elif [ \"$gpa\" -ge 1.3 ];\
    \ then\n        echo \"C-\"\n    elif [ \"$gpa\" -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ \"$gpa\" -ge 0.7 ]; then\n        echo \"D\"\n    elif [\
    \ \"$gpa\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n\
    \    fi", "    # TODO: Write your code here\n    # HINT: You can use the if-else\
    \ statement\n    # HINT: You can use the elif statement\n    # HINT: You can use\
    \ the else statement\n    # HINT: You can use the echo command\n    # HINT: You\
    \ can use the bc command\n    # HINT: You can use the printf command\n    # HINT:\
    \ You can use the cut command\n    # HINT: You can use the tr command\n    # HINT:\
    \ You can use the sed command\n    # HINT: You can use the tr -d command\n   \
    \ # HINT: You can use the grep command\n    # HINT: You can use the awk command\n\
    \    # HINT: You can use the sort command\n    # HINT: You can use the uniq command\n\
    \    # HINT: You can use the wc command\n    # HINT: You can use the head command\n\
    \    # HINT: You can use the tail command\n    # HINT: You can use the seq command\n\
    \    # HINT: You can use the paste command\n    # HINT: You can use the cat command\n\
    \    # HINT: You can use the tr -s command\n    # HINT: You can use the tr -d\
    \ command\n    # HINT: You can use the tr -c command\n    # HINT: You can use\
    \ the tr -s command\n    # HINT: You can use the tr -d command\n    # HINT: You\
    \ can use the tr -c command\n    # HINT: You can use the tr -s command\n    #\
    \ HINT: You can use the tr -d command\n    # HINT: You can use the tr -c command\n\
    \    # HINT: You can use the tr -s command\n    # HINT: You can use the tr -d\
    \ command\n    # HINT: You can use the tr -c command\n    # HINT: You can use\
    \ the tr -s command\n    # HINT: You can use the tr -d command\n    # HINT: You\
    \ can use the tr -c command\n    # HINT: You can use the tr -s command\n    #\
    \ HINT: You can use the tr -d command\n    # HINT: You can use the tr -c command\n\
    \   ", "    # This function takes a numerical grade and returns the letter grade\n\
    \    # Example:\n    # >>> $(numerical_letter_grade \"3.5\")\n    # \"A-\"\n \
    \   # >>> $(numerical_letter_grade \"2.3\")\n    # \"B-\"\n    local grade=$1\n\
    \    if [ $(echo \"$grade >= 4.0\" | bc) -eq 1 ]; then\n        echo \"A+\"\n\
    \    elif [ $(echo \"$grade >= 3.7\" | bc) -eq 1 ]; then\n        echo \"A\"\n\
    \    elif [ $(echo \"$grade >= 3.3\" | bc) -eq 1 ]; then\n        echo \"A-\"\n\
    \    elif [ $(echo \"$grade >= 3.0\" | bc) -eq 1 ]; then\n        echo \"B+\"\n\
    \    elif [ $(echo \"$grade >= 2.7\" | bc) -eq 1 ]; then\n        echo \"B\"\n\
    \    elif [ $(echo \"$grade >= 2.3\" | bc) -eq 1 ]; then\n        echo \"B-\"\n\
    \    elif [ $(echo \"$grade >= 2.0\" | bc) -eq 1 ]; then\n        echo \"C+\"\n\
    \    elif [ $(echo \"$grade >= 1.7\" | bc) -eq 1 ]; then\n        echo \"C\"\n\
    \    elif [ $(echo \"$grade >= 1.3\" | bc) -eq 1 ]; then\n        echo \"C-\"\n\
    \    elif [ $(echo \"$grade >= 1.0\" | bc) -eq 1 ]; then\n        echo \"D+\"\n\
    \    elif [ $(echo \"$grade >= 0.7\" | bc) -eq 1 ]; then\n        echo \"D\"\n\
    \    elif [ $(echo \"$grade >= 0.0\" | bc) -eq 1 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n       \
    \ echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [\
    \ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    if [ $1 -ge 4.0 ]; then\n        echo\
    \ \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge\
    \ 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   local grade=$1\n    if [ $(echo \"$grade >= 4.0\" | bc) -eq 1 ]; then\n  \
    \      echo \"A+\"\n    elif [ $(echo \"$grade >= 3.7\" | bc) -eq 1 ]; then\n\
    \        echo \"A\"\n    elif [ $(echo \"$grade >= 3.3\" | bc) -eq 1 ]; then\n\
    \        echo \"A-\"\n    elif [ $(echo \"$grade >= 3.0\" | bc) -eq 1 ]; then\n\
    \        echo \"B+\"\n    elif [ $(echo \"$grade >= 2.7\" | bc) -eq 1 ]; then\n\
    \        echo \"B\"\n    elif [ $(echo \"$grade >= 2.3\" | bc) -eq 1 ]; then\n\
    \        echo \"B-\"\n    elif [ $(echo \"$grade >= 2.0\" | bc) -eq 1 ]; then\n\
    \        echo \"C+\"\n    elif [ $(echo \"$grade >= 1.7\" | bc) -eq 1 ]; then\n\
    \        echo \"C\"\n    elif [ $(echo \"$grade >= 1.3\" | bc) -eq 1 ]; then\n\
    \        echo \"C-\"\n    elif [ $(echo \"$grade >= 1.0\" | bc) -eq 1 ]; then\n\
    \        echo \"D+\"\n    elif [ $(echo \"$grade >= 0.7\" | bc) -eq 1 ]; then\n\
    \        echo \"D\"\n    elif [ $(echo \"$grade >= 0.0\" | bc) -eq 1 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo\
    \ \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge\
    \ 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo\
    \ \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge\
    \ 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo\
    \ \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n      \
    \  echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\"\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n  \
    \      echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n  \
    \  else\n        echo \"E\"\n    fi", "    local grade=$1\n    if [ $(echo \"\
    $grade > 4.0\" | bc) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo \"\
    $grade > 3.7\" | bc) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$grade\
    \ > 3.3\" | bc) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$grade\
    \ > 3.0\" | bc) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$grade\
    \ > 2.7\" | bc) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$grade\
    \ > 2.3\" | bc) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$grade\
    \ > 2.0\" | bc) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$grade\
    \ > 1.7\" | bc) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$grade\
    \ > 1.3\" | bc) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$grade\
    \ > 1.0\" | bc) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$grade\
    \ > 0.7\" | bc) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$grade\
    \ > 0.0\" | bc) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"\
    E\"\n    fi", "    local grade=$1\n    if (( $(echo \"$grade >= 4.0\" | bc -l)\
    \ )); then\n        echo \"A+\"\n    elif (( $(echo \"$grade >= 3.7\" | bc -l)\
    \ )); then\n        echo \"A\"\n    elif (( $(echo \"$grade >= 3.3\" | bc -l)\
    \ )); then\n        echo \"A-\"\n    elif (( $(echo \"$grade >= 3.0\" | bc -l)\
    \ )); then\n        echo \"B+\"\n    elif (( $(echo \"$grade >= 2.7\" | bc -l)\
    \ )); then\n        echo \"B\"\n    elif (( $(echo \"$grade >= 2.3\" | bc -l)\
    \ )); then\n        echo \"B-\"\n    elif (( $(echo \"$grade >= 2.0\" | bc -l)\
    \ )); then\n        echo \"C+\"\n    elif (( $(echo \"$grade >= 1.7\" | bc -l)\
    \ )); then\n        echo \"C\"\n    elif (( $(echo \"$grade >= 1.3\" | bc -l)\
    \ )); then\n        echo \"C-\"\n    elif (( $(echo \"$grade >= 1.0\" | bc -l)\
    \ )); then\n        echo \"D+\"\n    elif (( $(echo \"$grade >= 0.7\" | bc -l)\
    \ )); then\n        echo \"D\"\n    elif (( $(echo \"$grade >= 0.0\" | bc -l)\
    \ )); then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    #\
    \ Write your code here\n    # You can use the following variables:\n    # $1:\
    \ the GPA\n    # $2: the letter grade\n    # $3: the numerical grade\n    # $4:\
    \ the numerical grade of the next letter grade\n    # $5: the next letter grade\n\
    \    # $6: the numerical grade of the previous letter grade\n    # $7: the previous\
    \ letter grade\n    if [ $1 -ge $3 ] && [ $1 -lt $4 ]; then\n        echo $2\n\
    \    elif [ $1 -ge $4 ]; then\n        numerical_letter_grade $1 $5 $4 $4 $5 $3\
    \ $2\n    elif [ $1 -lt $3 ]; then\n        numerical_letter_grade $1 $7 $6 $3\
    \ $2 $6 $7\n    fi", "    local gpa=$1\n    if [ $(echo \"$gpa >= 4.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo \"$gpa >= 3.7\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$gpa >= 3.3\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$gpa >= 3.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$gpa >= 2.7\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$gpa >= 2.3\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$gpa >= 2.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$gpa >= 1.7\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$gpa >= 1.3\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$gpa >= 1.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$gpa >= 0.7\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$gpa >= 0.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   # Write your code here\n    # You can use the following variables:\n    #\
    \ $1: the first argument\n    # $2: the second argument\n    # ...\n    # $n:\
    \ the nth argument\n    # $#: the number of arguments\n    # $@: all arguments\n\
    \    # $*: all arguments\n    # $?: the exit status of the last command\n    #\
    \ $$: the process ID of the current shell\n    # $!: the process ID of the last\
    \ background command\n    # $0: the name of the shell or shell script\n    # $_:\
    \ the last argument of the previous command\n    # $IFS: the Internal Field Separator\
    \ that is used for word splitting after\n    # expansion and to split lines into\
    \ words with the read builtin command\n    # $PS1: the value of the primary prompt\
    \ string, which is displayed before\n    # the user enters a command\n    # $PS2:\
    \ the value of the secondary prompt string, which is displayed when\n    # a command\
    \ needs more input\n    # $PS3: the value of the select prompt string, which is\
    \ used by the select\n    # builtin\n    # $PS4: the value of the debug prompt\
    \ string, which is printed before the\n    # command line is echoed when the -x\
    \ option is set\n    # $LINENO: the line number in the script of the line being\
    \ executed\n    # $RANDOM: a random integer between 0 and 32767\n    # $SECONDS:\
    \ the number of seconds since the shell was started\n    # $BASH_VERSION: the\
    \ version number of the current instance of Bash\n    # $DIRSTACK: an array variable\
    \ containing the current contents of the\n    # directory stack\n    # $EUID:\
    \ the numeric effective user ID of the current user\n    # $GROUPS: an array variable\
    \ containing the list of groups of which the\n    # current user is a member\n\
    \    # $HOSTNAME: the name of the current host\n    # $HOSTTYPE: a string describing\
    \ the machine Bash is running on\n    # $MACHTYPE: a string describing the machine\
    \ Bash is running on\n    # $OSTYPE: a string describing the operating system\
    \ Bash is running on\n    # $PIPESTATUS: an array variable containing a list of\
    \ exit status values\n    #", "    # Write your code here\n    # Use the following\
    \ command to output the letter grade:\n    # echo \"\\\"$letter_grade\\\"\"\n\
    \    # For example, if the GPA is 3.5, the output should be:\n    # echo \"\\\"\
    A-\\\"\"\n    # Hint: Use if-else statements\n    # Hint: Use the bash command\
    \ `bc` to compare floating point numbers\n    # Hint: Use the bash command `echo`\
    \ to output the result\n    # Hint: Use the bash command `printf` to format the\
    \ output\n    #       For example, if the GPA is 3.5, the output should be:\n\
    \    #       echo \"\\\"A-\\\"\"\n    #       If the GPA is 1.7, the output should\
    \ be:\n    #       echo \"\\\"C-\\\"\"\n    #       If the GPA is 0.0, the output\
    \ should be:\n    #       echo \"\\\"E\\\"\"\n    # Hint: Use the bash command\
    \ `echo` to output the result\n    # Hint: Use the bash command `printf` to format\
    \ the output\n    #       For example, if the GPA is 3.5, the output should be:\n\
    \    #       echo \"\\\"A-\\\"\"\n    #       If the GPA is 1.7, the output should\
    \ be:\n    #       echo \"\\\"C-\\\"\"\n    #       If the GPA is 0.0, the output\
    \ should be:\n    #       echo \"\\\"E\\\"\"\n    if [ $(echo \"$1 > 4.0\" | bc)\
    \ -eq 1 ]; then\n        echo \"\\\"A+\\\"\"\n    elif [ $(echo \"$1 > 3.7\" |\
    \ bc) -eq 1 ]; then\n        echo \"\\\"A\\\"\"\n    elif [ $(echo \"$1 > 3.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"A-\\\"\"\n    elif [ $(echo \"$1 > 3.0\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B+\\\"\"\n    elif [ $(echo \"$1 > 2.7\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B\\\"\"\n    elif [ $(echo \"$1 > 2.3\"\
    \ | bc) -eq 1 ]; then\n        echo \"\\\"B-\\\"", "    # Write your code here\n\
    \    # You can use the following command to convert a string to a number\n   \
    \ # number=$(echo $string | bc -l)\n    # You can use the following command to\
    \ convert a number to a string\n    # string=$(printf \"%.2f\" $number)\n    #\
    \ You can use the following command to print a string\n    # echo \"\\\"$string\\\
    \"\"", "    # Write your code here\n    # Use the following variables:\n    #\
    \ $1: GPA\n    # $2: Letter grade\n    # $3: Numerical grade\n    # $4: Letter\
    \ grade\n    # $5: Numerical grade\n    # $6: Letter grade\n    # $7: Numerical\
    \ grade\n    # $8: Letter grade\n    # $9: Numerical grade\n    # $10: Letter\
    \ grade\n    # $11: Numerical grade\n    # $12: Letter grade\n    # $13: Numerical\
    \ grade\n    # $14: Letter grade\n    # $15: Numerical grade\n    # $16: Letter\
    \ grade\n    # $17: Numerical grade\n    # $18: Letter grade\n    # $19: Numerical\
    \ grade\n    # $20: Letter grade\n    # $21: Numerical grade\n    # $22: Letter\
    \ grade\n    # $23: Numerical grade\n    # $24: Letter grade\n    # $25: Numerical\
    \ grade\n    # $26: Letter grade\n    # $27: Numerical grade\n    # $28: Letter\
    \ grade\n    # $29: Numerical grade\n    # $30: Letter grade\n    # $31: Numerical\
    \ grade\n    # $32: Letter grade\n    # $33: Numerical grade\n    # $34: Letter\
    \ grade\n    # $35: Numerical grade\n    # $36: Letter grade\n    # $37: Numerical\
    \ grade\n    # $38: Letter grade\n    # $39: Numerical grade\n    # $40: Letter\
    \ grade\n    # $41: Numerical grade\n    # $42: Letter grade\n    # $43: Numerical\
    \ grade\n    # $44: Letter grade\n    # $45: Numerical grade\n    # $46: Letter\
    \ grade\n    # $47: Numerical grade\n    # $48: Letter grade\n    # $49: Numerical\
    \ grade\n    # $50: Letter grade\n    # $51: Numerical grade\n    # $52: Letter\
    \ grade\n    # $53: Numerical grade\n    # $54: Letter grade\n    # $55: Numerical\
    \ grade\n    # $", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n   \
    \ elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge 3.3\
    \ ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"\
    $1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n\
    \        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"C\"\n\
    \    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\" -ge\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n      \
    \  echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\
    \n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ];\
    \ then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\
    \n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ];\
    \ then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\
    \n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ];\
    \ then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\
    \n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local\
    \ grade=$1\n    if [ $grade -ge 4 ]; then\n        echo \"A+\"\n    elif [ $grade\
    \ -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $grade -ge 3.3 ]; then\n   \
    \     echo \"A-\"\n    elif [ $grade -ge 3 ]; then\n        echo \"B+\"\n    elif\
    \ [ $grade -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $grade -ge 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ $grade -ge 2 ]; then\n        echo \"C+\"\n \
    \   elif [ $grade -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $grade -ge 1.3\
    \ ]; then\n        echo \"C-\"\n    elif [ $grade -ge 1 ]; then\n        echo\
    \ \"D+\"\n    elif [ $grade -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $grade\
    \ -ge 0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   # Write your code here\n    # You can use the following command to convert\
    \ a string to a number:\n    # num=$(echo $1 | bc -l)\n    # You can use the following\
    \ command to convert a number to a string:\n    # str=$(printf \"%.2f\" $1)\n\
    \    # You can use the following command to print an array:\n    # echo ${array[@]}\n\
    \    # You can use the following command to print an array with double quotes:\n\
    \    # echo ${array[@]/#/\\\"}\n    # You can use the following command to print\
    \ an array with double quotes and commas:\n    # echo ${array[@]/#/\\\"},\n  \
    \  # You can use the following command to print an array with double quotes, commas,\
    \ and square brackets:\n    # echo [${array[@]/#/\\\"},]\n    # You can use the\
    \ following command to print an array with double quotes, commas, and square brackets\
    \ without the last comma:\n    # echo [${array[@]/#/\\\"},] | sed 's/,]$/]/'\n\
    \    # You can use the following command to print an array with double quotes,\
    \ commas, and square brackets without the last comma and space:\n    # echo [${array[@]/#/\\\
    \"},] | sed 's/, ]$/]/'\n    # You can use the following command to print an array\
    \ with double quotes, commas, and square brackets without the last comma and space\
    \ and a newline:\n    # echo [${array[@]/#/\\\"},] | sed 's/, ]$/]/' | tr -d '\\\
    n'\n    # You can use the following command to print an array with double quotes,\
    \ commas, and square brackets without the last comma and space and a newline and\
    \ a semicolon:\n    # echo [${array[@]/#/\\\"},] | sed 's/, ]$/]/' | tr -d '\\\
    n' | sed 's/$/;/'\n    # You can use the following command to print an array with\
    \ double quotes, commas, and square brackets without the last comma and space\
    \ and a newline and a semicolon and a space:\n    # echo [${array[@]/#/\\\"},]",
  "    # Write your code here\n    # Use the following command to output the letter\
    \ grade:\n    # echo \"\\\"$letter_grade\\\"\"\n    # For example, if the GPA\
    \ is 3.7, the output should be:\n    # echo \"\\\"A\\\"\"\n    # Note that the\
    \ letter grade should be enclosed in double quotes.\n    # Hint: Use the if-elif-else\
    \ statement.\n    # Hint: Use the bc command to compare floating point numbers.\n\
    \    #       For example, to check if 3.7 is greater than 3.3, use:\n    #   \
    \    echo \"3.7 > 3.3\" | bc\n    #       The output will be 1 if the condition\
    \ is true, 0 otherwise.\n    # Hint: Use the echo command to output the letter\
    \ grade.\n    #       For example, to output A+, use:\n    #       echo \"\\\"\
    A+\\\"\"\n    #       Note that the letter grade should be enclosed in double\
    \ quotes.\n    # Hint: You can use the echo command to append a string to a variable.\n\
    \    #       For example, to append A+ to the variable letter_grades, use:\n \
    \   #       letter_grades=\"$letter_grades \\\"A+\\\"\"\n    #       Note that\
    \ the letter grade should be enclosed in double quotes.\n    # Hint: You can use\
    \ the echo command to output a string.\n    #       For example, to output the\
    \ string [A+, B, C, D], use:\n    #       echo \"[A+, B, C, D]\"\n    #      \
    \ Note that the string should be enclosed in square brackets.\n    # Hint: You\
    \ can use the echo command to output a string.\n    #       For example, to output\
    \ the string [A+, B, C, D], use:\n    #       echo \"[A+, B, C, D]\"\n    #  \
    \     Note that the string should be enclosed in square brackets.\n    # Hint:\
    \ You can use the echo command to output a string.\n    #       For example, to\
    \ output the string [A+, B, C, D], use:\n    #       echo \"[A+, B, C, D]\"\n\
    \    #       Note that the string should be enclosed in square brackets.\n   \
    \ # Hint: You can use the echo command to output a string", "    # Write your\
    \ code here\n    # You can use the following variables:\n    # $1 - the first\
    \ argument\n    # $2 - the second argument\n    # $3 - the third argument\n  \
    \  # $4 - the fourth argument\n    # $5 - the fifth argument\n    # $# - the number\
    \ of arguments\n    # $@ - all arguments\n    # $* - all arguments\n    # $? -\
    \ the exit status of the last command\n    # $$ - the process ID of the current\
    \ shell\n    # $! - the process ID of the last background command\n    # $0 -\
    \ the name of the shell or shell script\n    # $_ - the last argument of the previous\
    \ command\n    # $- - current options set for the shell\n    # $PS1 - the value\
    \ of the prompt\n    # $PS2 - the value of the continuation prompt\n    # $IFS\
    \ - the Internal Field Separator that is used for word splitting after expansion\
    \ and to split lines into words with the read builtin command\n    # $UID - the\
    \ numeric, real user ID of the current user\n    # $EUID - the numeric, effective\
    \ user ID of the current user\n    # $GROUPS - an array variable containing the\
    \ list of groups of which the current user is a member\n    # $RANDOM - each time\
    \ this parameter is referenced, a random integer between 0 and 32767 is generated\n\
    \    # $SECONDS - the number of seconds since the shell was started\n    # $LINENO\
    \ - the line number in the script of the line being executed\n    # $OLDPWD -\
    \ the previous working directory as set by the cd command\n    # $DIRSTACK - an\
    \ array variable containing the current contents of the directory stack\n    #\
    \ $MACHTYPE - a string that fully describes the system type on which Bash is executing,\
    \ in the standard GNU cpu-company-system format\n    # $HOSTNAME - the name of\
    \ the current host\n    # $HOSTTYPE - a string that describes the machine Bash\
    \ is running on\n    # $OSTYPE - a string that describes the operating system\
    \ Bash is running on\n    # $PIPESTATUS - an array variable containing a list\
    \ of exit status values from the processes in the most-recently-executed foreground\
    \ pipeline (which may contain only a single command)\n    # $BASH", "    local\
    \ gpa=$1\n    if (( $(echo \"$gpa >= 4.0\" | bc -l) )); then\n        echo \"\
    A+\"\n    elif (( $(echo \"$gpa >= 3.7\" | bc -l) )); then\n        echo \"A\"\
    \n    elif (( $(echo \"$gpa >= 3.3\" | bc -l) )); then\n        echo \"A-\"\n\
    \    elif (( $(echo \"$gpa >= 3.0\" | bc -l) )); then\n        echo \"B+\"\n \
    \   elif (( $(echo \"$gpa >= 2.7\" | bc -l) )); then\n        echo \"B\"\n   \
    \ elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n        echo \"B-\"\n    elif\
    \ (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n        echo \"C+\"\n    elif ((\
    \ $(echo \"$gpa >= 1.7\" | bc -l) )); then\n        echo \"C\"\n    elif (( $(echo\
    \ \"$gpa >= 1.3\" | bc -l) )); then\n        echo \"C-\"\n    elif (( $(echo \"\
    $gpa >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n    elif (( $(echo \"$gpa\
    \ >= 0.7\" | bc -l) )); then\n        echo \"D\"\n    elif (( $(echo \"$gpa >=\
    \ 0.0\" | bc -l) )); then\n        echo \"D-\"\n    else\n        echo \"E\"\n\
    \    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge\
    \ 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo\
    \ \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge\
    \ 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo\
    \ \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge\
    \ 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo\
    \ \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge\
    \ 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    local grade=$1\n    if [ $(echo \"$grade >= 4.0\" | bc) -eq 1 ];\
    \ then\n        echo \"A+\"\n    elif [ $(echo \"$grade >= 3.7\" | bc) -eq 1 ];\
    \ then\n        echo \"A\"\n    elif [ $(echo \"$grade >= 3.3\" | bc) -eq 1 ];\
    \ then\n        echo \"A-\"\n    elif [ $(echo \"$grade >= 3.0\" | bc) -eq 1 ];\
    \ then\n        echo \"B+\"\n    elif [ $(echo \"$grade >= 2.7\" | bc) -eq 1 ];\
    \ then\n        echo \"B\"\n    elif [ $(echo \"$grade >= 2.3\" | bc) -eq 1 ];\
    \ then\n        echo \"B-\"\n    elif [ $(echo \"$grade >= 2.0\" | bc) -eq 1 ];\
    \ then\n        echo \"C+\"\n    elif [ $(echo \"$grade >= 1.7\" | bc) -eq 1 ];\
    \ then\n        echo \"C\"\n    elif [ $(echo \"$grade >= 1.3\" | bc) -eq 1 ];\
    \ then\n        echo \"C-\"\n    elif [ $(echo \"$grade >= 1.0\" | bc) -eq 1 ];\
    \ then\n        echo \"D+\"\n    elif [ $(echo \"$grade >= 0.7\" | bc) -eq 1 ];\
    \ then\n        echo \"D\"\n    elif [ $(echo \"$grade >= 0.0\" | bc) -eq 1 ];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local\
    \ gpa=$1\n    if [ \"$gpa\" -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ \"\
    $gpa\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$gpa\" -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ \"$gpa\" -ge 3.0 ]; then\n        echo \"B+\"\
    \n    elif [ \"$gpa\" -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"$gpa\"\
    \ -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$gpa\" -ge 2.0 ]; then\n\
    \        echo \"C+\"\n    elif [ \"$gpa\" -ge 1.7 ]; then\n        echo \"C\"\n\
    \    elif [ \"$gpa\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$gpa\"\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$gpa\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$gpa\" -ge 0.0 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    # This function takes a numerical\
    \ grade and returns the letter grade\n    # Example:\n    # >>> $(numerical_letter_grade\
    \ \"4.0\")\n    # A+\n    # >>> $(numerical_letter_grade \"3.7\")\n    # A\n \
    \   # >>> $(numerical_letter_grade \"3.3\")\n    # A-\n    # >>> $(numerical_letter_grade\
    \ \"3.0\")\n    # B+\n    # >>> $(numerical_letter_grade \"2.7\")\n    # B\n \
    \   # >>> $(numerical_letter_grade \"2.3\")\n    # B-\n    # >>> $(numerical_letter_grade\
    \ \"2.0\")\n    # C+\n    # >>> $(numerical_letter_grade \"1.7\")\n    # C\n \
    \   # >>> $(numerical_letter_grade \"1.3\")\n    # C-\n    # >>> $(numerical_letter_grade\
    \ \"1.0\")\n    # D+\n    # >>> $(numerical_letter_grade \"0.7\")\n    # D\n \
    \   # >>> $(numerical_letter_grade \"0.0\")\n    # D-\n    # >>> $(numerical_letter_grade\
    \ \"-1.0\")\n    # E\n    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n\
    \    elif [ $(echo \"$1 > 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n \
    \   elif [ $(echo \"$1 > 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n \
    \   elif [ $(echo \"$1 > 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n \
    \   elif [ $(echo \"$1 > 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n  \
    \  elif [ $(echo \"$1 > 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n  \
    \  elif [ $(echo \"$1 > 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n  \
    \  elif [ $(echo \"$", "    if [ $1 == 4.0 ]; then\n        echo \"A+\"\n    elif\
    \ [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -gt 3.3 ]; then\n  \
    \      echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n        echo \"B+\"\n    elif\
    \ [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -gt 2.3 ]; then\n  \
    \      echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -gt 1.3 ]; then\n  \
    \      echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n        echo \"D+\"\n    elif\
    \ [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -gt 0.0 ]; then\n  \
    \      echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $(echo \"\
    $1 >= 4.0\" | bc -l) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo \"\
    $1 > 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$1\
    \ > 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$1\
    \ > 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$1\
    \ > 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$1 >\
    \ 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$1 >\
    \ 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$1 >\
    \ 1.7\" | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$1 > 1.3\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$1 > 1.0\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$1 > 0.7\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$1 > 0.0\" |\
    \ bc -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n    elif [ $(echo\
    \ \"$1 > 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"\
    $1 > 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$1\
    \ > 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$1\
    \ > 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$1 >\
    \ 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$1 >\
    \ 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$1 >\
    \ 1.7\" | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$1 > 1.3\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$1 > 1.0\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$1 > 0.7\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$1 > 0.0\" |\
    \ bc -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    local gpa=$1\n    if [ \"$gpa\" -ge \"4.0\" ]; then\n        echo\
    \ \"A+\"\n    elif [ \"$gpa\" -ge \"3.7\" ]; then\n        echo \"A\"\n    elif\
    \ [ \"$gpa\" -ge \"3.3\" ]; then\n        echo \"A-\"\n    elif [ \"$gpa\" -ge\
    \ \"3.0\" ]; then\n        echo \"B+\"\n    elif [ \"$gpa\" -ge \"2.7\" ]; then\n\
    \        echo \"B\"\n    elif [ \"$gpa\" -ge \"2.3\" ]; then\n        echo \"\
    B-\"\n    elif [ \"$gpa\" -ge \"2.0\" ]; then\n        echo \"C+\"\n    elif [\
    \ \"$gpa\" -ge \"1.7\" ]; then\n        echo \"C\"\n    elif [ \"$gpa\" -ge \"\
    1.3\" ]; then\n        echo \"C-\"\n    elif [ \"$gpa\" -ge \"1.0\" ]; then\n\
    \        echo \"D+\"\n    elif [ \"$gpa\" -ge \"0.7\" ]; then\n        echo \"\
    D\"\n    elif [ \"$gpa\" -ge \"0.0\" ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ $(echo \"$1 >= 4.0\" | bc -l) -eq 1 ];\
    \ then\n        echo \"A+\"\n    elif [ $(echo \"$1 >= 3.7\" | bc -l) -eq 1 ];\
    \ then\n        echo \"A\"\n    elif [ $(echo \"$1 >= 3.3\" | bc -l) -eq 1 ];\
    \ then\n        echo \"A-\"\n    elif [ $(echo \"$1 >= 3.0\" | bc -l) -eq 1 ];\
    \ then\n        echo \"B+\"\n    elif [ $(echo \"$1 >= 2.7\" | bc -l) -eq 1 ];\
    \ then\n        echo \"B\"\n    elif [ $(echo \"$1 >= 2.3\" | bc -l) -eq 1 ];\
    \ then\n        echo \"B-\"\n    elif [ $(echo \"$1 >= 2.0\" | bc -l) -eq 1 ];\
    \ then\n        echo \"C+\"\n    elif [ $(echo \"$1 >= 1.7\" | bc -l) -eq 1 ];\
    \ then\n        echo \"C\"\n    elif [ $(echo \"$1 >= 1.3\" | bc -l) -eq 1 ];\
    \ then\n        echo \"C-\"\n    elif [ $(echo \"$1 >= 1.0\" | bc -l) -eq 1 ];\
    \ then\n        echo \"D+\"\n    elif [ $(echo \"$1 >= 0.7\" | bc -l) -eq 1 ];\
    \ then\n        echo \"D\"\n    elif [ $(echo \"$1 >= 0.0\" | bc -l) -eq 1 ];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO:\
    \ Write your code here\n    # HINT: You can use the following code to convert\
    \ a string to a number\n    # num=$(echo \"$1\" | bc -l)\n    # HINT: You can\
    \ use the following code to convert a number to a string\n    # str=$(printf \"\
    %.2f\" $1)\n    # HINT: You can use the following code to compare two numbers\n\
    \    # if (( $(echo \"$num1 > $num2\" | bc -l) )); then\n    #     echo \"num1\
    \ is greater than num2\"\n    # fi\n    # HINT: You can use the following code\
    \ to compare two strings\n    # if [[ \"$str1\" > \"$str2\" ]]; then\n    #  \
    \   echo \"str1 is greater than str2\"\n    # fi\n    # HINT: You can use the\
    \ following code to compare two strings\n    # if [[ \"$str1\" > \"$str2\" ]];\
    \ then\n    #     echo \"str1 is greater than str2\"\n    # fi\n    # HINT: You\
    \ can use the following code to compare two strings\n    # if [[ \"$str1\" > \"\
    $str2\" ]]; then\n    #     echo \"str1 is greater than str2\"\n    # fi\n   \
    \ # HINT: You can use the following code to compare two strings\n    # if [[ \"\
    $str1\" > \"$str2\" ]]; then\n    #     echo \"str1 is greater than str2\"\n \
    \   # fi\n    # HINT: You can use the following code to compare two strings\n\
    \    # if [[ \"$str1\" > \"$str2\" ]]; then\n    #     echo \"str1 is greater\
    \ than str2\"\n    # fi\n    # HINT: You can use the following code to compare\
    \ two strings\n    # if [[ \"$str1\" > \"$str2\" ]]; then\n    #     echo \"str1\
    \ is greater than str2\"\n    # fi\n    # HINT: You can use the following code\
    \ to compare two strings\n    # if [[ \"$str1\" > \"$str2\" ]]; then\n    #  \
    \   echo \"str1 is greater than str2\"\n    # fi\n    # HINT: You can use the\
    \ following code to compare two strings\n    # if [[", "    local grade=$1\n \
    \   if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n        echo \"A+\"\n  \
    \  elif (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n        echo \"A\"\n  \
    \  elif (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n        echo \"A-\"\n \
    \   elif (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n        echo \"B+\"\n\
    \    elif (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n        echo \"B\"\n\
    \    elif (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n        echo \"B-\"\n\
    \    elif (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n        echo \"C+\"\n\
    \    elif (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n        echo \"C\"\n\
    \    elif (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n        echo \"C-\"\n\
    \    elif (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n\
    \    elif (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n        echo \"D\"\n\
    \    elif (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    # Write your code here\n    # Use\
    \ the following command to output the result\n    # echo \"[$(echo $1 | tr ' '\
    \ ',')]\"", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\" | bc -l) )); then\n\
    \        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" | bc -l) )); then\n \
    \       echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc -l) )); then\n   \
    \     echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l) )); then\n    \
    \    echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) )); then\n     \
    \   echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n       \
    \ echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n        echo\
    \ \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n        echo \"\
    C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n        echo \"C-\"\
    \n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n\
    \    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n        echo \"D\"\n  \
    \  elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n   \
    \ else\n        echo \"E\"\n    fi", "    # Write your code here\n    # You can\
    \ use the following code to convert a string to a number\n    # number=$(echo\
    \ \"$1\" | bc -l)\n    # You can use the following code to convert a number to\
    \ a string\n    # string=$(printf \"%.1f\" $1)\n    # You can use the following\
    \ code to convert a number to a letter grade\n    # if (( $(echo \"$1 > 3.7\"\
    \ | bc -l) )); then\n    #     echo \"A+\"\n    # fi", "    if [ $1 -ge 4.0 ];\
    \ then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\
    \n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ];\
    \ then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\
    \n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\
    \n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ];\
    \ then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\
    \n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"\
    E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1\
    \ -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n       \
    \ echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [\
    \ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n    \
    \    echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n  \
    \      echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif\
    \ [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n  \
    \      echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local grade=$1\n\
    \    if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n        echo \"A+\"\n \
    \   elif (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n        echo \"A\"\n \
    \   elif (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n        echo \"A-\"\n\
    \    elif (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n        echo \"B+\"\n\
    \    elif (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n        echo \"B\"\n\
    \    elif (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n        echo \"B-\"\n\
    \    elif (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n        echo \"C+\"\n\
    \    elif (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n        echo \"C\"\n\
    \    elif (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n        echo \"C-\"\n\
    \    elif (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n\
    \    elif (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n        echo \"D\"\n\
    \    elif (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n   \
    \     echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n   \
    \ elif [ \"$1\" -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0\
    \ ]; then\n        echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo\
    \ \"B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"\
    $1\" -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n\
    \        echo \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n\
    \    elif [ \"$1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge\
    \ 0.7 ]; then\n        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n       \
    \ echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ];\
    \ then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\
    \n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ];\
    \ then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\
    \n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\
    \n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ];\
    \ then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\
    \n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"\
    E\"\n    fi", "    # Write your code here\n    # Use the echo command to output\
    \ results\n    # Example:\n    # echo \"A+\"\n    # echo \"B\"\n    # echo \"\
    C-\"\n    # echo \"C\"\n    # echo \"A-\"", "    if [ $1 -ge 4.0 ]; then\n   \
    \     echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    local grade=$1\n    if [ $(echo \"$grade >= 4.0\" | bc) -eq 1 ];\
    \ then\n        echo '\"A+\"'\n    elif [ $(echo \"$grade >= 3.7\" | bc) -eq 1\
    \ ]; then\n        echo '\"A\"'\n    elif [ $(echo \"$grade >= 3.3\" | bc) -eq\
    \ 1 ]; then\n        echo '\"A-\"'\n    elif [ $(echo \"$grade >= 3.0\" | bc)\
    \ -eq 1 ]; then\n        echo '\"B+\"'\n    elif [ $(echo \"$grade >= 2.7\" |\
    \ bc) -eq 1 ]; then\n        echo '\"B\"'\n    elif [ $(echo \"$grade >= 2.3\"\
    \ | bc) -eq 1 ]; then\n        echo '\"B-\"'\n    elif [ $(echo \"$grade >= 2.0\"\
    \ | bc) -eq 1 ]; then\n        echo '\"C+\"'\n    elif [ $(echo \"$grade >= 1.7\"\
    \ | bc) -eq 1 ]; then\n        echo '\"C\"'\n    elif [ $(echo \"$grade >= 1.3\"\
    \ | bc) -eq 1 ]; then\n        echo '\"C-\"'\n    elif [ $(echo \"$grade >= 1.0\"\
    \ | bc) -eq 1 ]; then\n        echo '\"D+\"'\n    elif [ $(echo \"$grade >= 0.7\"\
    \ | bc) -eq 1 ]; then\n        echo '\"D\"'\n    elif [ $(echo \"$grade >= 0.0\"\
    \ | bc) -eq 1 ]; then\n        echo '\"D-\"'\n    else\n        echo '\"E\"'\n\
    \    fi", "    # Write your code here\n    # Hint: Use the following command to\
    \ convert a string to a number\n    # $((<string>))\n    # Example:\n    # >>>\
    \ $((4.0))\n    # 4\n    # >>> $((3.7))\n    # 3\n    # >>> $((3.3))\n    # 3\n\
    \    # >>> $((3.0))\n    # 3\n    # >>> $((2.7))\n    # 2\n    # >>> $((2.3))\n\
    \    # 2\n    # >>> $((2.0))\n    # 2\n    # >>> $((1.7))\n    # 1\n    # >>>\
    \ $((1.3))\n    # 1\n    # >>> $((1.0))\n    # 1\n    # >>> $((0.7))\n    # 0\n\
    \    # >>> $((0.0))\n    # 0\n    # >>> $((0.1))\n    # 0\n    # >>> $((0.2))\n\
    \    # 0\n    # >>> $((0.3))\n    # 0\n    # >>> $((0.4))\n    # 0\n    # >>>\
    \ $((0.5))\n    # 0\n    # >>> $((0.6))\n    # 0\n    # >>> $((0.7))\n    # 0\n\
    \    # >>> $((0.8))\n    # 0\n    # >>> $((0.9))\n    # 0\n    # >>> $((1.0))\n\
    \    # 1\n    # >>> $((1.1))\n    # 1\n    # >>> $((1.2))\n    # 1\n    # >>>\
    \ $((1.3))\n    # 1\n    # >>> $((1.4))\n    # 1\n    # >>> $((1.5))\n    # 1\n\
    \    # >>> $((1.6))\n    # 1\n    # >>> $((1.7))\n    # 1\n    # >>> $((1.8))\n\
    \    # 1\n    # >>> $((1.9))\n    # 1\n    # >>> $((2.0))\n    # 2\n    # >>>\
    \ $((2.1))\n    # 2\n    # >>> $((2.2))\n   ", "    if [ $1 -eq 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    local gpa=$1\n    if [ $(echo\
    \ \"$gpa >= 4.0\" | bc -l) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo\
    \ \"$gpa >= 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo\
    \ \"$gpa >= 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo\
    \ \"$gpa >= 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo\
    \ \"$gpa >= 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo\
    \ \"$gpa >= 2.3\" | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo\
    \ \"$gpa >= 2.0\" | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo\
    \ \"$gpa >= 1.7\" | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo\
    \ \"$gpa >= 1.3\" | bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo\
    \ \"$gpa >= 1.0\" | bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo\
    \ \"$gpa >= 0.7\" | bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo\
    \ \"$gpa >= 0.0\" | bc -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n    \
    \    echo \"E\"\n    fi", "    # Write your code here\n    # You can use the following\
    \ variables:\n    # $1 - the first argument\n    # $2 - the second argument\n\
    \    # $3 - the third argument\n    # $4 - the fourth argument\n    # $5 - the\
    \ fifth argument\n    # $# - the number of arguments\n    # $@ - all arguments\n\
    \    # $* - all arguments\n    # $? - the exit status of the last command\n  \
    \  # $$ - the process ID of the current shell\n    # $! - the process ID of the\
    \ last background command\n    # $0 - the name of the shell or shell script\n\
    \    # $_ - the last argument of the previous command\n    # $- - current options\
    \ set for the shell\n    # $PS1 - the value of the PS1 variable\n    # $PS2 -\
    \ the value of the PS2 variable\n    # $IFS - the value of the IFS variable\n\
    \    # $UID - the user ID of the user running the current instance of the shell\n\
    \    # $EUID - the effective user ID of the user running the current instance\
    \ of the shell\n    # $GROUPS - an array variable containing the list of groups\
    \ of which the current user is a member\n    # $RANDOM - a random integer between\
    \ 0 and 32767\n    # $SECONDS - the number of seconds since the shell was started\n\
    \    # $LINENO - the line number in the script of the command currently executing\n\
    \    # $HOSTNAME - the name of the computer\n    # $HOSTTYPE - the machine type\
    \ on which the shell is running\n    # $MACHTYPE - the machine type on which the\
    \ shell is running\n    # $OSTYPE - the operating system the shell is running\
    \ on\n    # $PWD - the current working directory as set by the cd command\n  \
    \  # $OLDPWD - the previous working directory as set by the cd command\n    #\
    \ $SHELL - the full pathname to the shell or shell script being executed\n   \
    \ # $TMOUT - the value of the TMOUT variable\n    # $TMPDIR - the value of the\
    \ TMPDIR variable\n    # $TERM - the value of the TERM variable\n    # $PATH -\
    \ the value of the PATH variable\n    # $MAIL - the name of the user's mail",
  "    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n    elif [ $(echo \"$1\
    \ > 3.7\" | bc -l) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo \"$1 >\
    \ 3.3\" | bc -l) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo \"$1 >\
    \ 3.0\" | bc -l) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo \"$1 >\
    \ 2.7\" | bc -l) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo \"$1 > 2.3\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo \"$1 > 2.0\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo \"$1 > 1.7\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo \"$1 > 1.3\" |\
    \ bc -l) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo \"$1 > 1.0\" |\
    \ bc -l) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo \"$1 > 0.7\" |\
    \ bc -l) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo \"$1 > 0.0\" | bc\
    \ -l) -eq 1 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi",
  "    # Write your code here\n    # You can add more functions if you want\n    #\
    \ You can also use external programs like bc\n    # You can also use external\
    \ programs like bc\n    # You can also use external programs like bc\n    # You\
    \ can also use external programs like bc\n    # You can also use external programs\
    \ like bc\n    # You can also use external programs like bc\n    # You can also\
    \ use external programs like bc\n    # You can also use external programs like\
    \ bc\n    # You can also use external programs like bc\n    # You can also use\
    \ external programs like bc\n    # You can also use external programs like bc\n\
    \    # You can also use external programs like bc\n    # You can also use external\
    \ programs like bc\n    # You can also use external programs like bc\n    # You\
    \ can also use external programs like bc\n    # You can also use external programs\
    \ like bc\n    # You can also use external programs like bc\n    # You can also\
    \ use external programs like bc\n    # You can also use external programs like\
    \ bc\n    # You can also use external programs like bc\n    # You can also use\
    \ external programs like bc\n    # You can also use external programs like bc\n\
    \    # You can also use external programs like bc\n    # You can also use external\
    \ programs like bc\n    # You can also use external programs like bc\n    # You\
    \ can also use external programs like bc\n    # You can also use external programs\
    \ like bc\n    # You can also use external programs like bc\n    # You can also\
    \ use external programs like bc\n    # You can also use external programs like\
    \ bc\n    # You can also use external programs like bc\n    # You can also use\
    \ external programs like bc\n    # You can also use external programs like bc\n\
    \    # You can also use external programs like bc\n    # You can also use external\
    \ programs like bc\n    # You can also use external programs like bc\n    # You\
    \ can also use external programs like bc\n    # You can also use external programs\
    \ like bc\n    # You can also use external programs like bc\n    # You can also\
    \ use external programs like bc\n    # You can also use external programs like\
    \ bc\n    # You can also use external programs like bc\n    # You can also use\
    \ external programs like bc\n    # You can also use external programs like bc\n\
    \    # You can also use external programs like", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo A+\n    elif [ $1 -ge 3.7 ]; then\n        echo A\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo A-\n    elif [ $1 -ge 3.0 ]; then\n        echo\
    \ B+\n    elif [ $1 -ge 2.7 ]; then\n        echo B\n    elif [ $1 -ge 2.3 ];\
    \ then\n        echo B-\n    elif [ $1 -ge 2.0 ]; then\n        echo C+\n    elif\
    \ [ $1 -ge 1.7 ]; then\n        echo C\n    elif [ $1 -ge 1.3 ]; then\n      \
    \  echo C-\n    elif [ $1 -ge 1.0 ]; then\n        echo D+\n    elif [ $1 -ge\
    \ 0.7 ]; then\n        echo D\n    elif [ $1 -ge 0.0 ]; then\n        echo D-\n\
    \    else\n        echo E\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo\
    \ \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge\
    \ 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\" | bc -l) )); then\n       \
    \ echo '\"A+\"'\n    elif (( $(echo \"$gpa >= 3.7\" | bc -l) )); then\n      \
    \  echo '\"A\"'\n    elif (( $(echo \"$gpa >= 3.3\" | bc -l) )); then\n      \
    \  echo '\"A-\"'\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l) )); then\n     \
    \   echo '\"B+\"'\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) )); then\n    \
    \    echo '\"B\"'\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n    \
    \    echo '\"B-\"'\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n   \
    \     echo '\"C+\"'\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n  \
    \      echo '\"C\"'\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n  \
    \      echo '\"C-\"'\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n \
    \       echo '\"D+\"'\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n\
    \        echo '\"D\"'\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n\
    \        echo '\"D-\"'\n    else\n        echo '\"E\"'\n    fi", "    # Write\
    \ your code here\n    # You can use the following variables:\n    # $1: the first\
    \ argument\n    # $2: the second argument\n    # $3: the third argument\n    #\
    \ $4: the fourth argument\n    # $5: the fifth argument\n    # $#: the number\
    \ of arguments\n    # $@: all arguments\n    # $*: all arguments\n    # $?: the\
    \ exit code of the last command\n    # $$: the process ID of the current shell\n\
    \    # $!: the process ID of the last background command\n    # $0: the name of\
    \ the shell or shell script\n    # $_: the last argument of the previous command\n\
    \    # $IFS: the Internal Field Separator that is used for word splitting after\n\
    \    #       expansion and to split lines into words with the read builtin\n \
    \   #       command\n    # $PS1: the value of the primary prompt string, which\
    \ is displayed before\n    #       the user enters a command\n    # $PS2: the\
    \ value of the secondary prompt string, which is displayed when\n    #       a\
    \ command needs more input\n    # $PS3: the value of the select prompt string,\
    \ which is used by the select\n    #       command\n    # $PS4: the value of the\
    \ debug prompt string, which is the prompt printed\n    #       before the command\
    \ line is echoed when the -x option is set\n    # $LINENO: the line number in\
    \ the script or shell function currently being\n    #          executed\n    #\
    \ $SECONDS: the number of seconds since the shell was started\n    # $RANDOM:\
    \ a random integer between 0 and 32767\n    # $UID: the numeric, real user ID\
    \ of the current user\n    # $EUID: the numeric, effective user ID of the current\
    \ user\n    # $PPID: the numeric process ID of the parent of the current shell\n\
    \    # $SHELL: the full pathname to the shell or shell script being executed\n\
    \    # $SHLVL: the number of nested shells\n    # $BASH: the full pathname used\
    \ to execute the current instance of bash\n    # $BASH_VERSION: the version number\
    \ of the current instance of bash\n    # $BASH_VERSINFO: a readonly array variable\
    \ whose members hold version\n    #                 information for", "    # Write\
    \ your code here\n    # Use the following variables:\n    # $1: the first argument\n\
    \    # $2: the second argument\n    # ...\n    # $n: the nth argument\n    # $#:\
    \ the number of arguments\n    # $@: all arguments\n    # $*: all arguments\n\
    \    # $0: the name of the script\n    # $?: the exit status of the last command\n\
    \    # $$: the process ID of the current shell\n    # $!: the process ID of the\
    \ last background command\n    # $_: the last argument of the last command\n \
    \   # $IFS: the field separator\n    # $-: the current options set for the shell\n\
    \    # $PS1: the value of the prompt\n    # $PS2: the value of the continuation\
    \ prompt\n    # $PS3: the value of the select prompt\n    # $PS4: the value of\
    \ the debug prompt\n    # $RANDOM: a random number between 0 and 32767\n    #\
    \ $SECONDS: the number of seconds since the shell was started\n    # $LINENO:\
    \ the current line number in the script\n    # $OLDPWD: the previous working directory\n\
    \    # $PWD: the current working directory\n    # $REPLY: the default variable\
    \ for the read command\n    # $MACHTYPE: the system type\n    # $HOSTNAME: the\
    \ name of the current host\n    # $HOSTTYPE: the machine type\n    # $OSTYPE:\
    \ the operating system\n    # $DIRSTACK: an array that contains the current contents\
    \ of the directory stack\n    # $EUID: the effective user ID\n    # $UID: the\
    \ user ID\n    # $GROUPS: an array that contains the list of groups of which the\
    \ user is a member\n    # $SHELLOPTS: a list of enabled shell options\n    # $BASH:\
    \ the full pathname used to execute the current instance of bash\n    # $BASH_VERSION:\
    \ the version number of the current instance of bash\n    # $BASH_VERSINFO: a\
    \ readonly array whose members hold version information for this instance of bash\n\
    \    # $BASH_SUBSHELL: the subshell level of the current shell\n    # $BASH_SOURCE:\
    \ an array variable", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\" -ge\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$1\"\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n  \
    \      echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n  \
    \  else\n        echo \"E\"\n    fi", "    if [ $1 -eq 4.0 ]; then\n        echo\
    \ \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -gt\
    \ 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n        echo\
    \ \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -gt\
    \ 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n        echo\
    \ \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -gt\
    \ 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -gt\
    \ 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", " \
    \   # Write your code here\n    # Use the following command to output the result\n\
    \    # echo \"[\\\"$letter_grade\\\"]\"", "    if [ $1 -ge 4.0 ]; then\n     \
    \   echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [\
    \ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n   \
    \     echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ \"$1\" -eq \"4.0\" ]; then\n        echo \"A+\"\n    elif [\
    \ \"$1\" -gt \"3.7\" ]; then\n        echo \"A\"\n    elif [ \"$1\" -gt \"3.3\"\
    \ ]; then\n        echo \"A-\"\n    elif [ \"$1\" -gt \"3.0\" ]; then\n      \
    \  echo \"B+\"\n    elif [ \"$1\" -gt \"2.7\" ]; then\n        echo \"B\"\n  \
    \  elif [ \"$1\" -gt \"2.3\" ]; then\n        echo \"B-\"\n    elif [ \"$1\" -gt\
    \ \"2.0\" ]; then\n        echo \"C+\"\n    elif [ \"$1\" -gt \"1.7\" ]; then\n\
    \        echo \"C\"\n    elif [ \"$1\" -gt \"1.3\" ]; then\n        echo \"C-\"\
    \n    elif [ \"$1\" -gt \"1.0\" ]; then\n        echo \"D+\"\n    elif [ \"$1\"\
    \ -gt \"0.7\" ]; then\n        echo \"D\"\n    elif [ \"$1\" -gt \"0.0\" ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Implement\
    \ this function\n    # Hint: Use the following command to convert a string to\
    \ a number\n    # number=$(echo $string | bc -l)\n    # Hint: Use the following\
    \ command to convert a number to a string\n    # string=$(printf \"%.2f\" $number)\n\
    \    # Hint: Use the following command to convert a string to an array\n    #\
    \ array=($string)\n    # Hint: Use the following command to convert an array to\
    \ a string\n    # string=$(printf \"%s\\n\" \"${array[@]}\")\n    # Hint: Use\
    \ the following command to convert a string to an array\n    # array=($string)\n\
    \    # Hint: Use the following command to convert an array to a string\n    #\
    \ string=$(printf \"%s\\n\" \"${array[@]}\")\n    # Hint: Use the following command\
    \ to convert a string to an array\n    # array=($string)\n    # Hint: Use the\
    \ following command to convert an array to a string\n    # string=$(printf \"\
    %s\\n\" \"${array[@]}\")\n    # Hint: Use the following command to convert a string\
    \ to an array\n    # array=($string)\n    # Hint: Use the following command to\
    \ convert an array to a string\n    # string=$(printf \"%s\\n\" \"${array[@]}\"\
    )\n    # Hint: Use the following command to convert a string to an array\n   \
    \ # array=($string)\n    # Hint: Use the following command to convert an array\
    \ to a string\n    # string=$(printf \"%s\\n\" \"${array[@]}\")\n    # Hint: Use\
    \ the following command to convert a string to an array\n    # array=($string)\n\
    \    # Hint: Use the following command to convert an array to a string\n    #\
    \ string=$(printf \"%s\\n\" \"${array[@]}\")\n    # Hint: Use the following command\
    \ to convert a string to an array\n    # array=($string)\n    # Hint: Use the\
    \ following command to convert an array to a string\n    # string=$(printf \"\
    %s\\n\" \"${array[@]}\")\n    # Hint: Use the following command to convert a",
  "    # Write your code here\n    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n   \
    \ elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n   \
    \ elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n\
    \        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n   \
    \ elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your\
    \ code here\n    # You can use the following variables:\n    # $1: the first argument\n\
    \    # $2: the second argument\n    # ...\n    # $n: the nth argument\n    # $#:\
    \ the number of arguments\n    # $@: all arguments\n    # $*: all arguments\n\
    \    # $0: the name of the script\n    # $?: the exit status of the last command\n\
    \    # $$: the process ID of the current shell\n    # $!: the process ID of the\
    \ last background command\n    # $_: the last argument of the last command\n \
    \   # $IFS: the field separator\n    # $-: the current options set for the shell\n\
    \    # $PS1: the value of the prompt\n    # $PS2: the value of the continuation\
    \ prompt\n    # $RANDOM: a random number between 0 and 32767\n    # $SECONDS:\
    \ the number of seconds since the shell was started\n    # $LINENO: the current\
    \ line number in the script\n    # $OLDPWD: the previous working directory\n \
    \   # $PWD: the current working directory\n    # $REPLY: the default variable\
    \ for the read command\n    # $MACHTYPE: the system type\n    # $HOSTNAME: the\
    \ name of the current host\n    # $HOSTTYPE: the machine type\n    # $OSTYPE:\
    \ the operating system\n    # $SHELL: the pathname of the current shell\n    #\
    \ $BASH_VERSION: the version number of the current instance of Bash\n    # $EUID:\
    \ the effective user ID of the current user\n    # $UID: the real user ID of the\
    \ current user\n    # $GROUPS: an array variable containing the list of groups\
    \ of which the current user is a member\n    # $TMOUT: the default timeout for\
    \ the read builtin\n    # $TMPDIR: the directory pathname used for temporary files\n\
    \    # $HISTCMD: the history number of the current command\n    # $HISTSIZE: the\
    \ maximum number of commands to remember on the history list\n    # $HISTFILE:\
    \ the name of the file in which the command history is saved\n    # $HISTFILESIZE:\
    \ the maximum number of lines contained in the history file\n   ", "    if [ $1\
    \ -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [\
    \ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n   \
    \     echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\"\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n  \
    \      echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n  \
    \  elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"\
    $1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    # TODO: Write your code here\n  \
    \  # HINT: You can use the following table to help you\n    # GPA       |    Letter\
    \ grade\n    # 4.0                A+\n    # > 3.7                A \n    # > 3.3\
    \                A- \n    # > 3.0                B+\n    # > 2.7             \
    \   B \n    # > 2.3                B-\n    # > 2.0                C+\n    # >\
    \ 1.7                C\n    # > 1.3                C-\n    # > 1.0           \
    \     D+ \n    # > 0.7                D \n    # > 0.0                D-\n    #\
    \ 0.0                E\n    # Example:\n    # >>> $(numerical_letter_grade \"\
    4.0\")\n    # \"A+\"\n    # >>> $(numerical_letter_grade \"3.0\")\n    # \"B+\"\
    \n    # >>> $(numerical_letter_grade \"1.7\")\n    # \"C\"\n    # >>> $(numerical_letter_grade\
    \ \"0.0\")\n    # \"D-\"\n    # >>> $(numerical_letter_grade \"0.1\")\n    # \"\
    E\"\n    # >>> $(numerical_letter_grade \"4.1\")\n    # \"E\"\n    # >>> $(numerical_letter_grade\
    \ \"3.8\")\n    # \"A\"\n    # >>> $(numerical_letter_grade \"3.3\")\n    # \"\
    A-\"\n    # >>> $(numerical_letter_grade \"3.2\")\n    # \"B+\"\n    # >>> $(numerical_letter_grade\
    \ \"2.7\")\n    # \"B\"\n    # >>> $(numerical_letter_grade \"2.3\")\n    # \"\
    B-\"\n    # >>> $(numerical_letter_grade \"2.0\")\n    # \"C+\"\n    # >>> $(numerical_letter_grade\
    \ \"1.7\")\n    # \"C\"\n    # >>> $(numerical_letter_grade \"1.3\")\n    # \"\
    C-\"\n    # >>> $(numerical_letter_grade \"1.0\")\n   ", "    if [ $1 -ge 4.0\
    \ ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"\
    A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0\
    \ ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"\
    B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0\
    \ ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"\
    D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo\
    \ \"E\"\n    fi", "    # Write your code here\n    # You can use the following\
    \ command to convert the string to a number:\n    # number=$(echo \"$1\" | bc\
    \ -l)\n    # You can use the following command to convert a number to a string:\n\
    \    # string=$(printf \"%.0f\" $number)\n    # You can use the following command\
    \ to print the output:\n    # echo \"[\\\"$string\\\"]\"\n    # You can use the\
    \ following command to print the output:\n    # echo \"[\\\"$string\\\"]\"\n \
    \   number=$(echo \"$1\" | bc -l)\n    if [ $(echo \"$number >= 4.0\" | bc -l)\
    \ -eq 1 ]; then\n        echo \"[\\\"A+\\\"]\"\n    elif [ $(echo \"$number >=\
    \ 3.7\" | bc -l) -eq 1 ]; then\n        echo \"[\\\"A\\\"]\"\n    elif [ $(echo\
    \ \"$number >= 3.3\" | bc -l) -eq 1 ]; then\n        echo \"[\\\"A-\\\"]\"\n \
    \   elif [ $(echo \"$number >= 3.0\" | bc -l) -eq 1 ]; then\n        echo \"[\\\
    \"B+\\\"]\"\n    elif [ $(echo \"$number >= 2.7\" | bc -l) -eq 1 ]; then\n   \
    \     echo \"[\\\"B\\\"]\"\n    elif [ $(echo \"$number >= 2.3\" | bc -l) -eq\
    \ 1 ]; then\n        echo \"[\\\"B-\\\"]\"\n    elif [ $(echo \"$number >= 2.0\"\
    \ | bc -l) -eq 1 ]; then\n        echo \"[\\\"C+\\\"]\"\n    elif [ $(echo \"\
    $number >= 1.7\" | bc -l) -eq 1 ]; then\n        echo \"[\\\"C\\\"]\"\n    elif\
    \ [ $(echo \"$number >= 1.3\" | bc -l) -eq 1 ]; then\n        echo \"[\\\"C-\\\
    \"]\"\n    elif [ $(echo \"$number >= 1.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"[\\\"D+\\\"]\"\n    elif [ $(echo \"$number >= 0.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"[\\\"D\\\"]\"\n    elif [ $(echo \"$number >= 0.0\" | bc -l) -eq",
  "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\"\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n  \
    \      echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n  \
    \  elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"\
    $1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    local grade=$1\n    if [ $grade -ge\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ $grade -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ $grade -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $grade -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $grade -ge 2.7 ];\
    \ then\n        echo \"B\"\n    elif [ $grade -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $grade -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $grade\
    \ -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $grade -ge 1.3 ]; then\n   \
    \     echo \"C-\"\n    elif [ $grade -ge 1.0 ]; then\n        echo \"D+\"\n  \
    \  elif [ $grade -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $grade -ge 0.0\
    \ ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if\
    \ [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n    elif [ \"$1\" -gt \"3.7\"\
    \ ]; then\n        echo \"A\"\n    elif [ \"$1\" -gt \"3.3\" ]; then\n       \
    \ echo \"A-\"\n    elif [ \"$1\" -gt \"3.0\" ]; then\n        echo \"B+\"\n  \
    \  elif [ \"$1\" -gt \"2.7\" ]; then\n        echo \"B\"\n    elif [ \"$1\" -gt\
    \ \"2.3\" ]; then\n        echo \"B-\"\n    elif [ \"$1\" -gt \"2.0\" ]; then\n\
    \        echo \"C+\"\n    elif [ \"$1\" -gt \"1.7\" ]; then\n        echo \"C\"\
    \n    elif [ \"$1\" -gt \"1.3\" ]; then\n        echo \"C-\"\n    elif [ \"$1\"\
    \ -gt \"1.0\" ]; then\n        echo \"D+\"\n    elif [ \"$1\" -gt \"0.7\" ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -gt \"0.0\" ]; then\n        echo \"D-\"\
    \n    else\n        echo \"E\"\n    fi", "    local grade=$1\n    if [ $(echo\
    \ \"$grade >= 4.0\" | bc) -eq 1 ]; then\n        echo \"A+\"\n    elif [ $(echo\
    \ \"$grade >= 3.7\" | bc) -eq 1 ]; then\n        echo \"A\"\n    elif [ $(echo\
    \ \"$grade >= 3.3\" | bc) -eq 1 ]; then\n        echo \"A-\"\n    elif [ $(echo\
    \ \"$grade >= 3.0\" | bc) -eq 1 ]; then\n        echo \"B+\"\n    elif [ $(echo\
    \ \"$grade >= 2.7\" | bc) -eq 1 ]; then\n        echo \"B\"\n    elif [ $(echo\
    \ \"$grade >= 2.3\" | bc) -eq 1 ]; then\n        echo \"B-\"\n    elif [ $(echo\
    \ \"$grade >= 2.0\" | bc) -eq 1 ]; then\n        echo \"C+\"\n    elif [ $(echo\
    \ \"$grade >= 1.7\" | bc) -eq 1 ]; then\n        echo \"C\"\n    elif [ $(echo\
    \ \"$grade >= 1.3\" | bc) -eq 1 ]; then\n        echo \"C-\"\n    elif [ $(echo\
    \ \"$grade >= 1.0\" | bc) -eq 1 ]; then\n        echo \"D+\"\n    elif [ $(echo\
    \ \"$grade >= 0.7\" | bc) -eq 1 ]; then\n        echo \"D\"\n    elif [ $(echo\
    \ \"$grade >= 0.0\" | bc) -eq 1 ]; then\n        echo \"D-\"\n    else\n     \
    \   echo \"E\"\n    fi", "    # This function takes a number as input and returns\
    \ the letter grade\n    # associated with that number.\n    # Example:\n    #\
    \ >>> $(numerical_letter_grade \"4.0\")\n    # A+\n    # >>> $(numerical_letter_grade\
    \ \"3.5\")\n    # A-\n    # >>> $(numerical_letter_grade \"2.5\")\n    # B-\n\
    \    # >>> $(numerical_letter_grade \"1.5\")\n    # C-\n    # >>> $(numerical_letter_grade\
    \ \"0.5\")\n    # D-\n    # >>> $(numerical_letter_grade \"0.0\")\n    # E\n \
    \   # >>> $(numerical_letter_grade \"5.0\")\n    # Error: Invalid GPA\n    # >>>\
    \ $(numerical_letter_grade \"-1.0\")\n    # Error: Invalid GPA\n    # >>> $(numerical_letter_grade\
    \ \"a\")\n    # Error: Invalid GPA\n    # >>> $(numerical_letter_grade \"\")\n\
    \    # Error: Invalid GPA\n    # >>> $(numerical_letter_grade)\n    # Error: Invalid\
    \ GPA\n    # >>> $(numerical_letter_grade \"1.0 2.0 3.0\")\n    # Error: Invalid\
    \ GPA\n    if [ $# -ne 1 ]; then\n        echo \"Error: Invalid GPA\"\n      \
    \  return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+(\\.[0-9]+)?$ ]]; then\n       \
    \ echo \"Error: Invalid GPA\"\n        return 1\n    fi\n    if [ $1 -gt 4 ] ||\
    \ [ $1 -lt 0 ]; then\n        echo \"Error: Invalid GPA\"\n        return 1\n\
    \    fi\n    if [ $1 -ge 4 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    # Use the following command to output\
    \ the result\n    # echo \"[\\\"$letter_grade\\\"]\"", "    if [ $1 -eq 4.0 ];\
    \ then\n        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\
    \n    elif [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt 3.0 ];\
    \ then\n        echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\
    \n    elif [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt 2.0 ];\
    \ then\n        echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\
    \n    elif [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt 1.0 ];\
    \ then\n        echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\
    \n    elif [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"\
    E\"\n    fi", "    # TODO: Implement this function\n    # Hint: Use the following\
    \ command to convert a string to a floating point number\n    #       float=$(echo\
    \ $string | bc -l)\n    #       echo $float\n    #       echo $float | bc -l\n\
    \    #       echo $float | bc -l | awk '{printf \"%.1f\", $0}'\n    #       echo\
    \ $float | bc -l | awk '{printf \"%.1f\", $0}' | xargs\n    #       echo $float\
    \ | bc -l | awk '{printf \"%.1f\", $0}' | xargs printf \"%.1f\"\n    #       echo\
    \ $float | bc -l | awk '{printf \"%.1f\", $0}' | xargs printf \"%.1f\" | xargs\n\
    \    #       echo $float | bc -l | awk '{printf \"%.1f\", $0}' | xargs printf\
    \ \"%.1f\" | xargs echo\n    #       echo $float | bc -l | awk '{printf \"%.1f\"\
    , $0}' | xargs printf \"%.1f\" | xargs echo | xargs\n    #       echo $float |\
    \ bc -l | awk '{printf \"%.1f\", $0}' | xargs printf \"%.1f\" | xargs echo | xargs\
    \ echo\n    #       echo $float | bc -l | awk '{printf \"%.1f\", $0}' | xargs\
    \ printf \"%.1f\" | xargs echo | xargs echo | xargs\n    #       echo $float |\
    \ bc -l | awk '{printf \"%.1f\", $0}' | xargs printf \"%.1f\" | xargs echo | xargs\
    \ echo | xargs echo\n    #       echo $float | bc -l | awk '{printf \"%.1f\",\
    \ $0}' | xargs printf \"%.1f\" | xargs echo | xargs echo | xargs echo | xargs\n\
    \    #       echo $float | bc -l | awk '{printf \"%.1f\", $0}' | xargs printf\
    \ \"%.1f\" | xargs echo | xargs echo | xargs echo | xargs echo\n    #       echo",
  "    # Write your code here\n    # Hint: You can use if-else statements or case\
    \ statements\n    # Hint: You can use the bc command to do floating point arithmetic\n\
    \    # Hint: You can use the echo command to output the result\n    # Hint: You\
    \ can use the printf command to format the output\n    #       For example, printf\
    \ '\"%s\"' \"A+\" will output \"A+\"\n    #       For example, printf '\"%s\"\
    ' \"A\" will output \"A\"\n    #       For example, printf '\"%s\"' \"A-\" will\
    \ output \"A-\"\n    #       For example, printf '\"%s\"' \"B+\" will output \"\
    B+\"\n    #       For example, printf '\"%s\"' \"B\" will output \"B\"\n    #\
    \       For example, printf '\"%s\"' \"B-\" will output \"B-\"\n    #       For\
    \ example, printf '\"%s\"' \"C+\" will output \"C+\"\n    #       For example,\
    \ printf '\"%s\"' \"C\" will output \"C\"\n    #       For example, printf '\"\
    %s\"' \"C-\" will output \"C-\"\n    #       For example, printf '\"%s\"' \"D+\"\
    \ will output \"D+\"\n    #       For example, printf '\"%s\"' \"D\" will output\
    \ \"D\"\n    #       For example, printf '\"%s\"' \"D-\" will output \"D-\"\n\
    \    #       For example, printf '\"%s\"' \"E\" will output \"E\"\n    # Hint:\
    \ You can use the echo command to output the result\n    # Hint: You can use the\
    \ printf command to format the output\n    #       For example, printf '\"%s\"\
    ' \"A+\" will output \"A+\"\n    #       For example, printf '\"%s\"' \"A\" will\
    \ output \"A\"\n    #       For example, printf '\"%s\"' \"A-\" will output \"\
    A-\"\n    #       For example, printf '\"%s\"' \"B+\" will output \"B+\"\n   \
    \ #       For example, printf '\"%s\"' \"B\" will output \"B\"\n    #       For\
    \ example, printf '\"%s\"' \"B-\" will output", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ $1 -eq 4 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3 ]\
    \ && [ $1 -lt 4 ]; then\n        echo \"A\"\n    elif [ $1 -ge 2 ] && [ $1 -lt\
    \ 3 ]; then\n        echo \"B\"\n    elif [ $1 -ge 1 ] && [ $1 -lt 2 ]; then\n\
    \        echo \"C\"\n    elif [ $1 -ge 0 ] && [ $1 -lt 1 ]; then\n        echo\
    \ \"D\"\n    else\n        echo \"E\"\n    fi", "    local grade=$1\n    if [\
    \ $(echo \"$grade >= 4.0\" | bc) -eq 1 ]; then\n        echo \"A+\"\n    elif\
    \ [ $(echo \"$grade >= 3.7\" | bc) -eq 1 ]; then\n        echo \"A\"\n    elif\
    \ [ $(echo \"$grade >= 3.3\" | bc) -eq 1 ]; then\n        echo \"A-\"\n    elif\
    \ [ $(echo \"$grade >= 3.0\" | bc) -eq 1 ]; then\n        echo \"B+\"\n    elif\
    \ [ $(echo \"$grade >= 2.7\" | bc) -eq 1 ]; then\n        echo \"B\"\n    elif\
    \ [ $(echo \"$grade >= 2.3\" | bc) -eq 1 ]; then\n        echo \"B-\"\n    elif\
    \ [ $(echo \"$grade >= 2.0\" | bc) -eq 1 ]; then\n        echo \"C+\"\n    elif\
    \ [ $(echo \"$grade >= 1.7\" | bc) -eq 1 ]; then\n        echo \"C\"\n    elif\
    \ [ $(echo \"$grade >= 1.3\" | bc) -eq 1 ]; then\n        echo \"C-\"\n    elif\
    \ [ $(echo \"$grade >= 1.0\" | bc) -eq 1 ]; then\n        echo \"D+\"\n    elif\
    \ [ $(echo \"$grade >= 0.7\" | bc) -eq 1 ]; then\n        echo \"D\"\n    elif\
    \ [ $(echo \"$grade >= 0.0\" | bc) -eq 1 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\
    \n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ];\
    \ then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\
    \n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ];\
    \ then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\
    \n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ];\
    \ then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\
    \n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write\
    \ your code here\n    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [\
    \ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n    \
    \    echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif\
    \ [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n  \
    \      echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif\
    \ [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n  \
    \      echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif\
    \ [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n  \
    \      echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ \"$1\" -ge\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ \"$1\" -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ \"$1\" -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ];\
    \ then\n        echo \"B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ \"$1\"\
    \ -ge 1.7 ]; then\n        echo \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n   \
    \     echo \"C-\"\n    elif [ \"$1\" -ge 1.0 ]; then\n        echo \"D+\"\n  \
    \  elif [ \"$1\" -ge 0.7 ]; then\n        echo \"D\"\n    elif [ \"$1\" -ge 0.0\
    \ ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if\
    \ [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n \
    \       echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n        echo '\"A+\"\
    '\n    elif [ $1 -ge 3.7 ]; then\n        echo '\"A\"'\n    elif [ $1 -ge 3.3\
    \ ]; then\n        echo '\"A-\"'\n    elif [ $1 -ge 3.0 ]; then\n        echo\
    \ '\"B+\"'\n    elif [ $1 -ge 2.7 ]; then\n        echo '\"B\"'\n    elif [ $1\
    \ -ge 2.3 ]; then\n        echo '\"B-\"'\n    elif [ $1 -ge 2.0 ]; then\n    \
    \    echo '\"C+\"'\n    elif [ $1 -ge 1.7 ]; then\n        echo '\"C\"'\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo '\"C-\"'\n    elif [ $1 -ge 1.0 ]; then\n\
    \        echo '\"D+\"'\n    elif [ $1 -ge 0.7 ]; then\n        echo '\"D\"'\n\
    \    elif [ $1 -ge 0.0 ]; then\n        echo '\"D-\"'\n    else\n        echo\
    \ '\"E\"'\n    fi", "    # Write your code here\n    # You can use the following\
    \ variables:\n    # $1: the numerical grade\n    # $2: the letter grade\n    #\
    \ $3: the grade point\n    # $4: the grade point average\n    # $5: the number\
    \ of credits\n    # $6: the number of credits for the course\n    # $7: the number\
    \ of credits for the semester\n    # $8: the number of credits for the year\n\
    \    # $9: the number of credits for the program\n    # $10: the number of credits\
    \ for the program\n    # $11: the number of credits for the program\n    # $12:\
    \ the number of credits for the program\n    # $13: the number of credits for\
    \ the program\n    # $14: the number of credits for the program\n    # $15: the\
    \ number of credits for the program\n    # $16: the number of credits for the\
    \ program\n    # $17: the number of credits for the program\n    # $18: the number\
    \ of credits for the program\n    # $19: the number of credits for the program\n\
    \    # $20: the number of credits for the program\n    # $21: the number of credits\
    \ for the program\n    # $22: the number of credits for the program\n    # $23:\
    \ the number of credits for the program\n    # $24: the number of credits for\
    \ the program\n    # $25: the number of credits for the program\n    # $26: the\
    \ number of credits for the program\n    # $27: the number of credits for the\
    \ program\n    # $28: the number of credits for the program\n    # $29: the number\
    \ of credits for the program\n    # $30: the number of credits for the program\n\
    \    # $31: the number of credits for the program\n    # $32: the number of credits\
    \ for the program\n    # $33: the number of credits for the program\n    # $34:\
    \ the number of credits for the program\n    # $35: the number of credits for\
    \ the program\n    # $36: the number of credits for the program\n    # $37: the\
    \ number of credits for the program\n    # $38: the number of credits for the\
    \ program\n    # $39: the number of credits for the program\n    # $40:", "  \
    \  if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    # TODO: Write your code here\n    # HINT: You\
    \ can use the following if-else statement\n    # if [ $1 -eq 4.0 ]; then\n   \
    \ #     echo \"A+\"\n    # else\n    #     echo \"A\"\n    # fi\n    if [ $1 -eq\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n        echo\
    \ \"A\"\n    elif [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -gt\
    \ 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n        echo\
    \ \"B\"\n    elif [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -gt\
    \ 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -gt\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n        echo\
    \ \"D\"\n    elif [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n      \
    \  echo \"E\"\n    fi", "    # Write your code here\n    # Hint: You can use the\
    \ following command to convert a string to a number\n    # number=$(echo \"$string\"\
    \ | bc -l)\n    # Hint: You can use the following command to convert a number\
    \ to a string\n    # string=$(printf \"%.1f\" $number)\n    # Hint: You can use\
    \ the following command to compare two numbers\n    # if (( $(echo \"$number1\
    \ > $number2\" | bc -l) )); then\n    #     echo \"number1 is greater than number2\"\
    \n    # fi\n    # Hint: You can use the following command to compare two strings\n\
    \    # if [[ $string1 > $string2 ]]; then\n    #     echo \"string1 is greater\
    \ than string2\"\n    # fi\n    # Hint: You can use the following command to compare\
    \ two strings\n    # if [[ $string1 < $string2 ]]; then\n    #     echo \"string1\
    \ is less than string2\"\n    # fi\n    # Hint: You can use the following command\
    \ to compare two strings\n    # if [[ $string1 == $string2 ]]; then\n    #   \
    \  echo \"string1 is equal to string2\"\n    # fi\n    # Hint: You can use the\
    \ following command to compare two strings\n    # if [[ $string1 != $string2 ]];\
    \ then\n    #     echo \"string1 is not equal to string2\"\n    # fi\n    # Hint:\
    \ You can use the following command to compare two strings\n    # if [[ $string1\
    \ =~ $string2 ]]; then\n    #     echo \"string1 matches string2\"\n    # fi\n\
    \    # Hint: You can use the following command to compare two strings\n    # if\
    \ [[ $string1 =~ $string2 ]]; then\n    #     echo \"string1 matches string2\"\
    \n    # fi\n    # Hint: You can use the following command to compare two strings\n\
    \    # if [[ $string1 =~ $string2 ]]; then\n    #     echo \"string1 matches string2\"\
    \n    # fi\n    # Hint: You can use the following command to compare two strings\n\
    \    # if [[ $string1 =~ $string2 ]]; then\n    #     echo \"string1", "    if\
    \ [ \"$1\" -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ \"$1\" -ge 3.7 ];\
    \ then\n        echo \"A\"\n    elif [ \"$1\" -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$1\"\
    \ -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"$1\" -ge 2.3 ]; then\n   \
    \     echo \"B-\"\n    elif [ \"$1\" -ge 2.0 ]; then\n        echo \"C+\"\n  \
    \  elif [ \"$1\" -ge 1.7 ]; then\n        echo \"C\"\n    elif [ \"$1\" -ge 1.3\
    \ ]; then\n        echo \"C-\"\n    elif [ \"$1\" -ge 1.0 ]; then\n        echo\
    \ \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n        echo \"D\"\n    elif [ \"\
    $1\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi",
  "    if [ $1 -eq 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -gt 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -gt 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -gt 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    # Write your code here\n    # You can use the\
    \ following command to convert a string to a number\n    # number=$(echo $string\
    \ | bc -l)\n    # You can use the following command to convert a number to a string\n\
    \    # string=$(printf \"%.2f\" $number)\n    # You can use the following command\
    \ to print a string\n    # echo $string\n    # You can use the following command\
    \ to print a list\n    # echo [$string1, $string2, $string3]\n    # You can use\
    \ the following command to print a list of lists\n    # echo [[$string1, $string2,\
    \ $string3], [$string4, $string5, $string6]]\n    # You can use the following\
    \ command to print a list of lists of lists\n    # echo [[[$string1, $string2,\
    \ $string3], [$string4, $string5, $string6]], [[$string7, $string8, $string9],\
    \ [$string10, $string11, $string12]]]\n    # You can use the following command\
    \ to print a list of lists of lists of lists\n    # echo [[[[$string1, $string2,\
    \ $string3], [$string4, $string5, $string6]], [[$string7, $string8, $string9],\
    \ [$string10, $string11, $string12]]], [[[$string13, $string14, $string15], [$string16,\
    \ $string17, $string18]], [[$string19, $string20, $string21], [$string22, $string23,\
    \ $string24]]]]\n    # You can use the following command to print a list of lists\
    \ of lists of lists of lists\n    # echo [[[[[$string1, $string2, $string3], [$string4,\
    \ $string5, $string6]], [[$string7, $string8, $string9], [$string10, $string11,\
    \ $string12]]], [[[$string13, $string14, $string15], [$string16, $string17, $string18]],\
    \ [[$string19, $string20, $string21], [$string22, $string23, $string24]]]], [[[[$string",
  "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    local grade=$1\n    if [ \"$grade\" -ge 4.0\
    \ ]; then\n        echo \"A+\"\n    elif [ \"$grade\" -ge 3.7 ]; then\n      \
    \  echo \"A\"\n    elif [ \"$grade\" -ge 3.3 ]; then\n        echo \"A-\"\n  \
    \  elif [ \"$grade\" -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ \"$grade\"\
    \ -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"$grade\" -ge 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ \"$grade\" -ge 2.0 ]; then\n        echo \"C+\"\
    \n    elif [ \"$grade\" -ge 1.7 ]; then\n        echo \"C\"\n    elif [ \"$grade\"\
    \ -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$grade\" -ge 1.0 ]; then\n\
    \        echo \"D+\"\n    elif [ \"$grade\" -ge 0.7 ]; then\n        echo \"D\"\
    \n    elif [ \"$grade\" -ge 0.0 ]; then\n        echo \"D-\"\n    else\n     \
    \   echo \"E\"\n    fi", "    if [ $1 -eq 4.0 ]; then\n        echo \"A+\"\n \
    \   elif [ $1 -gt 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -gt 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ $1 -gt 3.0 ]; then\n        echo \"B+\"\n   \
    \ elif [ $1 -gt 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -gt 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ $1 -gt 2.0 ]; then\n        echo \"C+\"\n   \
    \ elif [ $1 -gt 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -gt 1.3 ]; then\n\
    \        echo \"C-\"\n    elif [ $1 -gt 1.0 ]; then\n        echo \"D+\"\n   \
    \ elif [ $1 -gt 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -gt 0.0 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your\
    \ code here\n    # Use the following variables:\n    # $1 - the numerical grade\n\
    \    # $2 - the letter grade\n    # $3 - the grade point\n    # $4 - the grade\
    \ point range\n    # $5 - the letter grade range\n    # $6 - the grade point increment\n\
    \    # $7 - the letter grade increment\n    # $8 - the grade point increment sign\n\
    \    # $9 - the letter grade increment sign\n    # $10 - the grade point increment\
    \ sign\n    # $11 - the letter grade increment sign\n    # $12 - the grade point\
    \ increment sign\n    # $13 - the letter grade increment sign\n    # $14 - the\
    \ grade point increment sign\n    # $15 - the letter grade increment sign\n  \
    \  # $16 - the grade point increment sign\n    # $17 - the letter grade increment\
    \ sign\n    # $18 - the grade point increment sign\n    # $19 - the letter grade\
    \ increment sign\n    # $20 - the grade point increment sign\n    # $21 - the\
    \ letter grade increment sign\n    # $22 - the grade point increment sign\n  \
    \  # $23 - the letter grade increment sign\n    # $24 - the grade point increment\
    \ sign\n    # $25 - the letter grade increment sign\n    # $26 - the grade point\
    \ increment sign\n    # $27 - the letter grade increment sign\n    # $28 - the\
    \ grade point increment sign\n    # $29 - the letter grade increment sign\n  \
    \  # $30 - the grade point increment sign\n    # $31 - the letter grade increment\
    \ sign\n    # $32 - the grade point increment sign\n    # $33 - the letter grade\
    \ increment sign\n    # $34 - the grade point increment sign\n    # $35 - the\
    \ letter grade increment sign\n    # $36 - the grade point increment sign\n  \
    \  # $37 - the letter grade increment sign\n    # $38 - the grade point increment\
    \ sign\n    # $39 - the letter grade increment sign\n    # $40 - the grade point\
    \ increment sign\n    # $41 - the letter grade increment sign\n    # $42 - the\
    \ grade point increment sign\n    # $43 - the letter grade increment sign\n  \
    \  # $44 - the grade point increment sign\n    # $45 - the letter grade increment\
    \ sign\n    # $46 - the grade point increment sign\n", "    local grade=$1\n \
    \   if [ \"$grade\" -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ \"$grade\"\
    \ -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$grade\" -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ \"$grade\" -ge 3.0 ]; then\n        echo \"B+\"\
    \n    elif [ \"$grade\" -ge 2.7 ]; then\n        echo \"B\"\n    elif [ \"$grade\"\
    \ -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$grade\" -ge 2.0 ]; then\n\
    \        echo \"C+\"\n    elif [ \"$grade\" -ge 1.7 ]; then\n        echo \"C\"\
    \n    elif [ \"$grade\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"$grade\"\
    \ -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$grade\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$grade\" -ge 0.0 ]; then\n        echo \"D-\"\
    \n    else\n        echo \"E\"\n    fi", "    local gpa=$1\n    if (( $(echo \"\
    $gpa >= 4.0\" | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa\
    \ >= 3.7\" | bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >=\
    \ 3.3\" | bc -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\"\
    \ | bc -l) )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" |\
    \ bc -l) )); then\n        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc\
    \ -l) )); then\n        echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l)\
    \ )); then\n        echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) ));\
    \ then\n        echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n\
    \        echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n \
    \       echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n  \
    \      echo \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n    \
    \    echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Write your\
    \ code here\n    # HINT: You can use if-else statements and the test command\n\
    \    # to check if a number is greater than another number.\n    # For example,\
    \ to check if a is greater than b, you can use:\n    # if [ $a -gt $b ]; then\n\
    \    #     echo \"a is greater than b\"\n    # fi\n    # You can also use the\
    \ -lt (less than), -ge (greater than or equal to),\n    # -le (less than or equal\
    \ to), -eq (equal to), and -ne (not equal to)\n    # operators.\n    # You can\
    \ also use the && (and) and || (or) operators to combine\n    # multiple conditions.\n\
    \    # For example, to check if a is greater than b and c is less than d, you\
    \ can use:\n    # if [ $a -gt $b ] && [ $c -lt $d ]; then\n    #     echo \"a\
    \ is greater than b and c is less than d\"\n    # fi\n    # To check if a is greater\
    \ than b or c is less than d, you can use:\n    # if [ $a -gt $b ] || [ $c -lt\
    \ $d ]; then\n    #     echo \"a is greater than b or c is less than d\"\n   \
    \ # fi\n    # You can also use the -a (and) and -o (or) operators to combine\n\
    \    # multiple conditions.\n    # For example, to check if a is greater than\
    \ b and c is less than d, you can use:\n    # if [ $a -gt $b -a $c -lt $d ]; then\n\
    \    #     echo \"a is greater than b and c is less than d\"\n    # fi\n    #\
    \ To check if a is greater than b or c is less than d, you can use:\n    # if\
    \ [ $a -gt $b -o $c -lt $d ]; then\n    #     echo \"a is greater than b or c\
    \ is less than d\"\n    # fi\n    # You can also use the -z (zero length) operator\
    \ to check if a string is empty.\n    # For example, to check if a is empty, you\
    \ can use:\n    # if [ -", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n\
    \    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n\
    \        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n   \
    \ elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n\
    \        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n   \
    \ elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n\
    \        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n   \
    \ elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    if [ $1 -ge\
    \ 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo\
    \ \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge\
    \ 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo\
    \ \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge\
    \ 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge\
    \ 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo\
    \ \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n      \
    \  echo \"E\"\n    fi", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\" |\
    \ bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" | bc\
    \ -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc -l)\
    \ )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l) ));\
    \ then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) )); then\n\
    \        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n  \
    \      echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n   \
    \     echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n    \
    \    echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n      \
    \  echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n       \
    \ echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n        echo\
    \ \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    # TODO: Write your code here\n\
    \    # HINT: You can use the following if statement to check if a number is\n\
    \    # greater than another number:\n    # if [ $1 -gt $2 ]; then\n    #     echo\
    \ \"Greater\"\n    # else\n    #     echo \"Lesser\"\n    # fi\n    # HINT: You\
    \ can use the following if statement to check if a number is\n    # greater than\
    \ or equal to another number:\n    # if [ $1 -ge $2 ]; then\n    #     echo \"\
    Greater\"\n    # else\n    #     echo \"Lesser\"\n    # fi\n    # HINT: You can\
    \ use the following if statement to check if a number is\n    # equal to another\
    \ number:\n    # if [ $1 -eq $2 ]; then\n    #     echo \"Equal\"\n    # else\n\
    \    #     echo \"Not Equal\"\n    # fi\n    # HINT: You can use the following\
    \ if statement to check if a number is\n    # less than or equal to another number:\n\
    \    # if [ $1 -le $2 ]; then\n    #     echo \"Lesser\"\n    # else\n    #  \
    \   echo \"Greater\"\n    # fi\n    # HINT: You can use the following if statement\
    \ to check if a number is\n    # less than another number:\n    # if [ $1 -lt\
    \ $2 ]; then\n    #     echo \"Lesser\"\n    # else\n    #     echo \"Greater\"\
    \n    # fi\n    # HINT: You can use the following if statement to check if a number\
    \ is\n    # not equal to another number:\n    # if [ $1 -ne $2 ]; then\n    #\
    \     echo \"Not Equal\"\n    # else\n    #     echo \"Equal\"\n    # fi\n   \
    \ # HINT: You can use the following if statement to check if a number is\n   \
    \ # between two numbers:\n    # if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n    #\
    \     echo \"Between\"\n    # else\n    #     echo \"Not Between\"\n    # fi\n\
    \    # HINT: You can use the following if statement to check if a number is\n\
    \    # between two numbers or", "    # Write your code here\n    # Hint: You can\
    \ use a case statement\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use echo to print a string\n    # Hint: You can use printf\
    \ to print a string with a format\n    # Hint: You can use tr to translate characters\n\
    \    # Hint: You can use sed to replace characters\n    # Hint: You can use awk\
    \ to print a string with a format\n    # Hint: You can use bc to do floating point\
    \ arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n   \
    \ # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating point arithmetic\n    # Hint: You can\
    \ use bc to do floating point arithmetic\n    # Hint: You can use bc to do floating\
    \ point arithmetic\n    # Hint: You can use bc to do floating point arithmetic\n\
    \    # Hint: You can use bc to do floating", "    local grade=$1\n    if [ $grade\
    \ -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $grade -ge 3.7 ]; then\n  \
    \      echo \"A\"\n    elif [ $grade -ge 3.3 ]; then\n        echo \"A-\"\n  \
    \  elif [ $grade -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $grade -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $grade -ge 2.3 ]; then\n        echo\
    \ \"B-\"\n    elif [ $grade -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $grade\
    \ -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $grade -ge 1.3 ]; then\n   \
    \     echo \"C-\"\n    elif [ $grade -ge 1.0 ]; then\n        echo \"D+\"\n  \
    \  elif [ $grade -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $grade -ge 0.0\
    \ ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    #\
    \ Write your code here\n    # You can use the following variables:\n    # $1:\
    \ the first argument\n    # $2: the second argument\n    # $3: the third argument\n\
    \    # $4: the fourth argument\n    # $5: the fifth argument\n    # $#: the number\
    \ of arguments\n    # $@: all arguments\n    # $?: the exit code of the last command\n\
    \    # $!: the process ID of the last command\n    # $$: the process ID of the\
    \ current script\n    # $USER: the username of the user running the script\n \
    \   # $HOSTNAME: the hostname of the machine the script is running on\n    # $SECONDS:\
    \ the number of seconds since the script was started\n    # $RANDOM: returns a\
    \ different random number each time is it referred to\n    # $LINENO: returns\
    \ the current line number in the Bash script\n    # $0: the filename of the current\
    \ script\n    # $FUNCNAME: the name of the current function\n    # $DIR: the directory\
    \ of the current script\n    # $PWD: the current working directory\n    # $BASH_VERSION:\
    \ the version of Bash running\n    # $MACHTYPE: the system type on which Bash\
    \ is running\n    # $BASH_LINENO: an array variable whose members are the line\
    \ numbers in\n    #               source files where each corresponding member\
    \ of\n    #               FUNCNAME was invoked\n    # $BASH_SOURCE: an array variable\
    \ whose members are the source filenames\n    #               where each corresponding\
    \ member of FUNCNAME was invoked\n    # $BASH_COMMAND: the command currently being\
    \ executed or about to be\n    #                executed, unless the shell is\
    \ executing a command as\n    #                the result of a trap, in which\
    \ case it is the command\n    #                executing at the time of the trap\n\
    \    # $BASH_SUBSHELL: the subshell level (0 for the top level)\n    # $BASH_ARGC:\
    \ the number of parameters in the current function\n    # $BASH_ARGV: an array\
    \ variable containing all of the parameters in the\n    #             current\
    \ function\n    # $BASH_REMATCH: an array variable whose members are assigned\
    \ by the =~\n    #                binary", "    if [ $1 -ge 4.0 ]; then\n    \
    \    echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    # Use the following command to return\
    \ a letter grade\n    # echo \"\\\"$letter_grade\\\"\"\n    echo \"\\\"E\\\"\"",
  "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    local gpa=$1\n    if (( $(echo \"$gpa >= 4.0\"\
    \ | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >= 3.7\" |\
    \ bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa >= 3.3\" | bc\
    \ -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa >= 3.0\" | bc -l)\
    \ )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa >= 2.7\" | bc -l) ));\
    \ then\n        echo \"B\"\n    elif (( $(echo \"$gpa >= 2.3\" | bc -l) )); then\n\
    \        echo \"B-\"\n    elif (( $(echo \"$gpa >= 2.0\" | bc -l) )); then\n \
    \       echo \"C+\"\n    elif (( $(echo \"$gpa >= 1.7\" | bc -l) )); then\n  \
    \      echo \"C\"\n    elif (( $(echo \"$gpa >= 1.3\" | bc -l) )); then\n    \
    \    echo \"C-\"\n    elif (( $(echo \"$gpa >= 1.0\" | bc -l) )); then\n     \
    \   echo \"D+\"\n    elif (( $(echo \"$gpa >= 0.7\" | bc -l) )); then\n      \
    \  echo \"D\"\n    elif (( $(echo \"$gpa >= 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your code here\n\
    \    # Hint: Use the following command to convert a string to a decimal number\n\
    \    # echo \"scale=1; $1\" | bc", "    local gpa=$1\n    if (( $(echo \"$gpa\
    \ == 4.0\" | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$gpa >\
    \ 3.7\" | bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$gpa > 3.3\"\
    \ | bc -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$gpa > 3.0\" |\
    \ bc -l) )); then\n        echo \"B+\"\n    elif (( $(echo \"$gpa > 2.7\" | bc\
    \ -l) )); then\n        echo \"B\"\n    elif (( $(echo \"$gpa > 2.3\" | bc -l)\
    \ )); then\n        echo \"B-\"\n    elif (( $(echo \"$gpa > 2.0\" | bc -l) ));\
    \ then\n        echo \"C+\"\n    elif (( $(echo \"$gpa > 1.7\" | bc -l) )); then\n\
    \        echo \"C\"\n    elif (( $(echo \"$gpa > 1.3\" | bc -l) )); then\n   \
    \     echo \"C-\"\n    elif (( $(echo \"$gpa > 1.0\" | bc -l) )); then\n     \
    \   echo \"D+\"\n    elif (( $(echo \"$gpa > 0.7\" | bc -l) )); then\n       \
    \ echo \"D\"\n    elif (( $(echo \"$gpa > 0.0\" | bc -l) )); then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your code here\n\
    \    # You can use the following variables:\n    # $1: the GPA\n    # $2: the\
    \ letter grade\n    # You can use the following functions:\n    # echo: print\
    \ to the screen\n    # bc: a command line calculator\n    # You can use the following\
    \ operators:\n    # -gt: greater than\n    # -lt: less than\n    # -ge: greater\
    \ than or equal to\n    # -le: less than or equal to\n    # -eq: equal to\n  \
    \  # -ne: not equal to\n    # -a: and\n    # -o: or\n    # &&: and\n    # ||:\
    \ or\n    # !: not\n    # You can use the following control structures:\n    #\
    \ if: if statement\n    # fi: end of if statement\n    # else: else statement\n\
    \    # elif: else if statement\n    # for: for loop\n    # do: start of for loop\n\
    \    # done: end of for loop\n    # while: while loop\n    # do: start of while\
    \ loop\n    # done: end of while loop\n    # case: case statement\n    # esac:\
    \ end of case statement\n    # You can use the following arithmetic operators:\n\
    \    # +: addition\n    # -: subtraction\n    # *: multiplication\n    # /: division\n\
    \    # %: modulo\n    # You can use the following comparison operators:\n    #\
    \ -eq: equal to\n    # -ne: not equal to\n    # -gt: greater than\n    # -ge:\
    \ greater than or equal to\n    # -lt: less than\n    # -le: less than or equal\
    \ to\n    # You can use the following logical operators:\n    # !: not\n    #\
    \ -a: and\n    # -o: or\n    # You can use the following string operators:\n \
    \   # =: equal to\n    # !=: not equal to\n    # -z: string is null\n    # -n:\
    \ string is not null\n    # You can use the following string operators:\n    #\
    \ =: equal to\n    # !=: not equal to\n    # -z: string is null\n    # -n: string\
    \ is not null\n    # You can use the following string operators:\n   ", "    #\
    \ TODO: Implement this function\n    # Hint: Use a case statement\n    case $1\
    \ in\n        4.0)\n            echo \"A+\"\n            ;;\n        3.7)\n  \
    \          echo \"A\"\n            ;;\n        3.3)\n            echo \"A-\"\n\
    \            ;;\n        3.0)\n            echo \"B+\"\n            ;;\n     \
    \   2.7)\n            echo \"B\"\n            ;;\n        2.3)\n            echo\
    \ \"B-\"\n            ;;\n        2.0)\n            echo \"C+\"\n            ;;\n\
    \        1.7)\n            echo \"C\"\n            ;;\n        1.3)\n        \
    \    echo \"C-\"\n            ;;\n        1.0)\n            echo \"D+\"\n    \
    \        ;;\n        0.7)\n            echo \"D\"\n            ;;\n        0.0)\n\
    \            echo \"D-\"\n            ;;\n        *)\n            echo \"E\"\n\
    \            ;;\n    esac", "    local grade=$1\n    if (( $(echo \"$grade >=\
    \ 4.0\" | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo \"$grade >=\
    \ 3.7\" | bc -l) )); then\n        echo \"A\"\n    elif (( $(echo \"$grade >=\
    \ 3.3\" | bc -l) )); then\n        echo \"A-\"\n    elif (( $(echo \"$grade >=\
    \ 3.0\" | bc -l) )); then\n        echo \"B+\"\n    elif (( $(echo \"$grade >=\
    \ 2.7\" | bc -l) )); then\n        echo \"B\"\n    elif (( $(echo \"$grade >=\
    \ 2.3\" | bc -l) )); then\n        echo \"B-\"\n    elif (( $(echo \"$grade >=\
    \ 2.0\" | bc -l) )); then\n        echo \"C+\"\n    elif (( $(echo \"$grade >=\
    \ 1.7\" | bc -l) )); then\n        echo \"C\"\n    elif (( $(echo \"$grade >=\
    \ 1.3\" | bc -l) )); then\n        echo \"C-\"\n    elif (( $(echo \"$grade >=\
    \ 1.0\" | bc -l) )); then\n        echo \"D+\"\n    elif (( $(echo \"$grade >=\
    \ 0.7\" | bc -l) )); then\n        echo \"D\"\n    elif (( $(echo \"$grade >=\
    \ 0.0\" | bc -l) )); then\n        echo \"D-\"\n    else\n        echo \"E\"\n\
    \    fi", "    if [ \"$1\" == \"4.0\" ]; then\n        echo \"A+\"\n    elif [\
    \ \"$1\" == \"3.7\" ]; then\n        echo \"A\"\n    elif [ \"$1\" == \"3.3\"\
    \ ]; then\n        echo \"A-\"\n    elif [ \"$1\" == \"3.0\" ]; then\n       \
    \ echo \"B+\"\n    elif [ \"$1\" == \"2.7\" ]; then\n        echo \"B\"\n    elif\
    \ [ \"$1\" == \"2.3\" ]; then\n        echo \"B-\"\n    elif [ \"$1\" == \"2.0\"\
    \ ]; then\n        echo \"C+\"\n    elif [ \"$1\" == \"1.7\" ]; then\n       \
    \ echo \"C\"\n    elif [ \"$1\" == \"1.3\" ]; then\n        echo \"C-\"\n    elif\
    \ [ \"$1\" == \"1.0\" ]; then\n        echo \"D+\"\n    elif [ \"$1\" == \"0.7\"\
    \ ]; then\n        echo \"D\"\n    elif [ \"$1\" == \"0.0\" ]; then\n        echo\
    \ \"D-\"\n    elif [ \"$1\" == \"0.0\" ]; then\n        echo \"E\"\n    fi", " \
    \   if [ $1 -eq 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -gt 3.7 ]; then\n\
    \        echo \"A\"\n    elif [ $1 -gt 3.3 ]; then\n        echo \"A-\"\n    elif\
    \ [ $1 -gt 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -gt 2.7 ]; then\n \
    \       echo \"B\"\n    elif [ $1 -gt 2.3 ]; then\n        echo \"B-\"\n    elif\
    \ [ $1 -gt 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -gt 1.7 ]; then\n \
    \       echo \"C\"\n    elif [ $1 -gt 1.3 ]; then\n        echo \"C-\"\n    elif\
    \ [ $1 -gt 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -gt 0.7 ]; then\n \
    \       echo \"D\"\n    elif [ $1 -gt 0.0 ]; then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi", "    if [ \"$1\" -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\"\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n  \
    \      echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n  \
    \  elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"\
    $1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    if [ $1 -ge 4.0 ]; then\n       \
    \ echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [\
    \ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    # Write your code here\n    # Use the following command to output\
    \ the result\n    # echo \"\\\"$letter_grade\\\"\"", "    if [ $1 -ge 4.0 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n \
    \       echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n \
    \       echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7\
    \ ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"\
    A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"\
    B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7\
    \ ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"\
    C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7\
    \ ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"\
    D-\"\n    else\n        echo \"E\"\n    fi", "    local grade=$1\n    if [ $grade\
    \ -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $grade -ge 3.7 ]; then\n  \
    \      echo \"A\"\n    elif [ $grade -ge 3.3 ]; then\n        echo \"A-\"\n  \
    \  elif [ $grade -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $grade -ge 2.7\
    \ ]; then\n        echo \"B\"\n    elif [ $grade -ge 2.3 ]; then\n        echo\
    \ \"B-\"\n    elif [ $grade -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $grade\
    \ -ge 1.7 ]; then\n        echo \"C\"\n    elif [ $grade -ge 1.3 ]; then\n   \
    \     echo \"C-\"\n    elif [ $grade -ge 1.0 ]; then\n        echo \"D+\"\n  \
    \  elif [ $grade -ge 0.7 ]; then\n        echo \"D\"\n    elif [ $grade -ge 0.0\
    \ ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local\
    \ grade=$1\n    if [ $grade -eq 4 ]; then\n        echo \"A+\"\n    elif [ $grade\
    \ -gt 3 ]; then\n        echo \"A\"\n    elif [ $grade -gt 2 ]; then\n       \
    \ echo \"B\"\n    elif [ $grade -gt 1 ]; then\n        echo \"C\"\n    elif [\
    \ $grade -gt 0 ]; then\n        echo \"D\"\n    else\n        echo \"E\"\n   \
    \ fi", "    # Write your code here\n    # Hint: Use if-elif-else statement\n \
    \   # Hint: Use echo to output the result\n    # Hint: Use bc to do floating point\
    \ calculation\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating point\
    \ comparison\n    # Hint: Use bc to do floating point comparison\n    # Hint:\
    \ Use bc to do floating point comparison\n    # Hint: Use bc to do floating"]
stop_tokens:
- "\n}"

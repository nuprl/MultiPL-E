name: HumanEval_93_encode
language: sh
prompt: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
  \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the message\
  \ with the letter that appears 2 places ahead of that \n# vowel in the english alphabet.\
  \ \n# Assume only letters. \n# Examples:\n# >>> $(encode \"test\")\n# \"TGST\"\n\
  # >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\nencode() {\n"
tests: "}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n  \
  \  [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
  ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\")\
  \ = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' |\
    \ tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' |\
    \ tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'EGIOA'", "  echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "  echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'CDEFGHIJKLMNOPQRSTUVWXYZAB' | tr 'AEIOU'\
    \ 'EGIKMO' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA' | tr '[:upper:]' '[:lower:]'", "  \
    \  echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B'\
    \ | tr 'AEIOU' 'EIOUA'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "  echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", " \
    \   local msg=$1\n    local msg_len=${#msg}\n    local i=0\n    local encoded_msg=\"\
    \"\n    while [ $i -lt $msg_len ]; do\n        local char=${msg:$i:1}\n      \
    \  local char_ascii=$(printf \"%d\" \"'$char\")\n        if [ $char_ascii -ge\
    \ 65 -a $char_ascii -le 90 ]; then\n            char_ascii=$((char_ascii + 32))\n\
    \        elif [ $char_ascii -ge 97 -a $char_ascii -le 122 ]; then\n          \
    \  char_ascii=$((char_ascii - 32))\n        fi\n        if [ $char_ascii -eq 97\
    \ ]; then\n            char_ascii=99\n        elif [ $char_ascii -eq 101 ]; then\n\
    \            char_ascii=103\n        elif [ $char_ascii -eq 105 ]; then\n    \
    \        char_ascii=107\n        elif [ $char_ascii -eq 111 ]; then\n        \
    \    char_ascii=113\n        elif [ $char_ascii -eq 117 ]; then\n            char_ascii=119\n\
    \        fi\n        encoded_msg=\"$encoded_msg$(printf \\\\$(printf '%03o' $char_ascii))\"\
    \n        i=$((i + 1))\n    done\n    echo $encoded_msg", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "  echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    local message=$1\n\
    \    local encoded=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ char=${message:$i:1}\n        if [[ $char =~ [a-z] ]]; then\n            if\
    \ [[ $char =~ [aeiou] ]]; then\n                local char_code=$(printf \"%d\"\
    \ \"'$char\")\n                local new_char_code=$(( char_code + 2 ))\n    \
    \            local new_char=$(printf \\\\$(printf '%03o' $new_char_code))\n  \
    \              encoded+=$new_char\n            else\n                encoded+=$(echo\
    \ $char | tr '[:lower:]' '[:upper:]')\n            fi\n        elif [[ $char =~\
    \ [A-Z] ]]; then\n            if [[ $char =~ [AEIOU] ]]; then\n              \
    \  local char_code=$(printf \"%d\" \"'$char\")\n                local new_char_code=$((\
    \ char_code + 2 ))\n                local new_char=$(printf \\\\$(printf '%03o'\
    \ $new_char_code))\n                encoded+=$(echo $new_char | tr '[:upper:]'\
    \ '[:lower:]')\n            else\n                encoded+=$char\n           \
    \ fi\n        else\n            encoded+=$char\n        fi\n    done\n    echo\
    \ $encoded", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr '[:upper:]' '[:lower:]' | tr\
    \ 'aeiou' 'cdfghj'", "    echo $1 | tr 'a-zA-Z' 'b-zaB-ZA' | tr 'aeiou' 'cdfokr'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFJKPV' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "\techo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", " \
    \   echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | sed 's/[AEIOU]/\\\
    U&/g' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'CDEFGHIJKLMNOPQRSTUVWXYZAB'", "    echo\
    \ \"$1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"$1\" |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo $1 | tr 'a-zA-Z' 'c-za-bC-ZA-B'\
    \ | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "\techo \"\
    $1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo $1 | tr '[:lower:]' '[:upper:]' |\
    \ tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU'\
    \ 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOV'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIPA' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CFKPRU'\
    \ | tr '[:upper:]' '[:lower:]'", "    local message=\"$1\"\n    local encoded=\"\
    \"\n    local vowels=\"aeiou\"\n    local vowel_index=0\n    local vowel_count=0\n\
    \    local char=\"\"\n    local char_lower=\"\"\n    local char_upper=\"\"\n \
    \   local char_index=0\n    local char_count=0\n    local char_ascii=0\n    local\
    \ char_ascii_lower=0\n    local char_ascii_upper=0\n    local char_ascii_lower_offset=0\n\
    \    local char_ascii_upper_offset=0\n    local char_ascii_lower_offset_mod=0\n\
    \    local char_ascii_upper_offset_mod=0\n    local char_ascii_lower_offset_mod_char=\"\
    \"\n    local char_ascii_upper_offset_mod_char=\"\"\n    local char_ascii_lower_offset_mod_char_ascii=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii=0\n    local char_ascii_lower_offset_mod_char_ascii_lower=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii_lower=0\n    local char_ascii_lower_offset_mod_char_ascii_upper=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii_upper=0\n    local char_ascii_lower_offset_mod_char_ascii_lower_offset=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii_lower_offset=0\n    local char_ascii_lower_offset_mod_char_ascii_upper_offset=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii_upper_offset=0\n    local char_ascii_lower_offset_mod_char_ascii_lower_offset_mod=0\n\
    \    local char_ascii_upper_offset_mod_char_ascii_lower_offset_mod=0\n    local\
    \ char_ascii_lower", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "\techo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    local message=$1\n    local new_message=\"\"\n    local letter=\"\
    \"\n    local new_letter=\"\"\n    local ascii_value=\"\"\n    local new_ascii_value=\"\
    \"\n    local vowels=\"aeiou\"\n    local vowels_upper=\"AEIOU\"\n    for (( i=0;\
    \ i<${#message}; i++ )); do\n        letter=${message:$i:1}\n        ascii_value=$(printf\
    \ \"%d\" \"'$letter\")\n        if [[ $vowels =~ $letter ]]; then\n          \
    \  new_ascii_value=$((ascii_value+2))\n            new_letter=$(printf \\\\$(printf\
    \ '%03o' $new_ascii_value))\n        elif [[ $vowels_upper =~ $letter ]]; then\n\
    \            new_ascii_value=$((ascii_value+2))\n            new_letter=$(printf\
    \ \\\\$(printf '%03o' $new_ascii_value))\n        elif [[ $ascii_value -ge 65\
    \ && $ascii_value -le 90 ]]; then\n            new_ascii_value=$((ascii_value+32))\n\
    \            new_letter=$(printf \\\\$(printf '%03o' $new_ascii_value))\n    \
    \    elif [[ $ascii_value -ge 97 && $ascii_value -le 122 ]]; then\n          \
    \  new_ascii_value=$((ascii_value-32))\n            new_letter=$(printf \\\\$(printf\
    \ '%03o' $new_ascii_value))\n        else\n            new_letter=$letter\n  \
    \      fi\n        new_message+=$new_letter\n    done\n    echo $new_message",
  "    local message=$1\n    local encoded=\"\"\n    for (( i=0; i<${#message}; i++\
    \ )); do\n        local char=${message:$i:1}\n        if [[ $char =~ [A-Z] ]];\
    \ then\n            encoded+=$(echo $char | tr '[A-Z]' '[a-z]')\n        elif\
    \ [[ $char =~ [a-z] ]]; then\n            encoded+=$(echo $char | tr '[a-z]' '[A-Z]')\n\
    \        else\n            encoded+=$char\n        fi\n    done\n    echo $encoded",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'EGIOA' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "  echo $1 |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CEGIK' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "  echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CFKPV' | tr '[:upper:]' '[:lower:]'", "  echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "\techo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGKOS'\
    \ | tr '[:upper:]' '[:lower:]'", "  echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CFKPV' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA' | tr 'a-z' 'c-za-b' | tr\
    \ 'aeiou' 'eioua'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[a-z]' '[c-za-b]'\
    \ | tr '[aeiou]' '[eoiu]'", "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr\
    \ 'aeiou' 'cgkos'", "  echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "  echo \"\
    $1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    local message=$1\n\
    \    local encoded=\"\"\n    local char=\"\"\n    local char_ascii=\"\"\n    local\
    \ char_ascii_encoded=\"\"\n    local char_encoded=\"\"\n    local vowels=\"aeiou\"\
    \n    local vowels_encoded=\"cgjkr\"\n    local vowels_encoded_index=0\n    for\
    \ (( i=0; i<${#message}; i++ )); do\n        char=${message:$i:1}\n        char_ascii=$(printf\
    \ \"%d\" \"'$char\")\n        if [[ $char =~ [A-Z] ]]; then\n            char_ascii_encoded=$((\
    \ char_ascii + 32 ))\n        elif [[ $char =~ [a-z] ]]; then\n            char_ascii_encoded=$((\
    \ char_ascii - 32 ))\n        else\n            char_ascii_encoded=$char_ascii\n\
    \        fi\n        char_encoded=$(printf \\\\$(printf '%03o' $char_ascii_encoded))\n\
    \        if [[ $vowels =~ $char ]]; then\n            vowels_encoded_index=$((\
    \ ${#vowels} - ${#vowels##*$char} ))\n            char_encoded=${vowels_encoded:$vowels_encoded_index:1}\n\
    \        fi\n        encoded+=$char_encoded\n    done\n    echo $encoded", " \
    \   echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    # your\
    \ code here\n    echo $1 | tr [a-z] [c-za-b] | tr [aeiou] [eioau]", "    echo\
    \ $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "  echo \"\
    $1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CFKPS' | tr '[:upper:]'\
    \ '[:lower:]'", "    local message=$1\n    local encoded=\"\"\n    local char=\"\
    \"\n    local ascii=\"\"\n    local new_ascii=\"\"\n    local new_char=\"\"\n\
    \    for (( i=0; i<${#message}; i++ )); do\n        char=${message:$i:1}\n   \
    \     ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii\
    \ -le 90 ]]; then\n            new_ascii=$(( $ascii + 32 ))\n        elif [[ $ascii\
    \ -ge 97 && $ascii -le 122 ]]; then\n            new_ascii=$(( $ascii - 32 ))\n\
    \        elif [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            new_ascii=$((\
    \ $ascii + 32 ))\n        elif [[ $ascii -ge 97 && $ascii -le 122 ]]; then\n \
    \           new_ascii=$(( $ascii - 32 ))\n        elif [[ $ascii -eq 97 ]]; then\n\
    \            new_ascii=99\n        elif [[ $ascii -eq 101 ]]; then\n         \
    \   new_ascii=103\n        elif [[ $ascii -eq 105 ]]; then\n            new_ascii=107\n\
    \        elif [[ $ascii -eq 111 ]]; then\n            new_ascii=113\n        elif\
    \ [[ $ascii -eq 117 ]]; then\n            new_ascii=121\n        else\n      \
    \      new_ascii=$ascii\n        fi\n        new_char=$(printf \\\\$(printf '%03o'\
    \ $new_ascii))\n        encoded+=$new_char\n    done\n    echo $encoded", "  \
    \  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    local message=$1\n    local encoded=\"\"\
    \n    local char=\"\"\n    local ascii=\"\"\n    local new_ascii=\"\"\n    local\
    \ new_char=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        char=${message:$i:1}\n\
    \        ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii\
    \ -le 90 ]]; then\n            new_ascii=$((ascii + 32))\n        elif [[ $ascii\
    \ -ge 97 && $ascii -le 122 ]]; then\n            new_ascii=$((ascii - 32))\n \
    \       elif [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            new_ascii=$((ascii\
    \ + 32))\n        elif [[ $ascii -ge 97 && $ascii -le 122 ]]; then\n         \
    \   new_ascii=$((ascii - 32))\n        elif [[ $ascii -eq 97 ]]; then\n      \
    \      new_ascii=99\n        elif [[ $ascii -eq 101 ]]; then\n            new_ascii=103\n\
    \        elif [[ $ascii -eq 105 ]]; then\n            new_ascii=107\n        elif\
    \ [[ $ascii -eq 111 ]]; then\n            new_ascii=113\n        elif [[ $ascii\
    \ -eq 117 ]]; then\n            new_ascii=121\n        else\n            new_ascii=$ascii\n\
    \        fi\n        new_char=$(printf \\\\$(printf '%03o' $new_ascii))\n    \
    \    encoded+=$new_char\n    done\n    echo $encoded", "\techo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    local\
    \ message=$1\n    local encoded_message=\"\"\n    local char=\"\"\n    local char_ascii=\"\
    \"\n    local char_ascii_encoded=\"\"\n    local char_encoded=\"\"\n    local\
    \ i=0\n    local len=${#message}\n    while [ $i -lt $len ]; do\n        char=${message:$i:1}\n\
    \        char_ascii=$(printf \"%d\" \"'$char\")\n        if [ $char_ascii -ge\
    \ 65 ] && [ $char_ascii -le 90 ]; then\n            char_ascii_encoded=$((char_ascii\
    \ + 32))\n        elif [ $char_ascii -ge 97 ] && [ $char_ascii -le 122 ]; then\n\
    \            char_ascii_encoded=$((char_ascii - 32))\n        else\n         \
    \   char_ascii_encoded=$char_ascii\n        fi\n        char_encoded=$(printf\
    \ \\\\$(printf '%03o' $char_ascii_encoded))\n        encoded_message+=$char_encoded\n\
    \        i=$((i + 1))\n    done\n    echo $encoded_message", "  echo \"$1\" |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLORT' | tr '[:upper:]' '[:lower:]'", "\techo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOSZ' 'CFLMTVX' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIPT'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "  echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "\techo \"$1\" | tr 'a-zA-Z'\
    \ 'c-za-bC-ZA-B' | tr 'aeiou' 'cgjkr'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRTX'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU'\
    \ 'CFLRVX'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA'", "    echo \"$1\" | tr '[a-z]' '[c-za-b]'\
    \ | tr '[aeiou]' '[eoiu]'", "  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGKOS' | tr\
    \ '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    local message=$1\n    local encoded=\"\
    \"\n    local vowels=\"aeiou\"\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local i=0\n    local char=\"\"\n    local index=0\n    local new_char=\"\
    \"\n    local new_index=0\n    local new_vowel=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new_vowel_char=\"\"\n    local new_vowel_index=0\n    local new_vowel_char=\"\
    \"\n    local new_vowel_index=0\n    local new_vowel_char=\"\"\n    local new_vowel_index=0\n\
    \    local new", "  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]'\
    \ '[eoiu]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' |\
    \ tr '[:upper:]' '[:lower:]'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVY' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    local message=\"\
    $1\"\n    local encoded=\"\"\n    local char=\"\"\n    local char_code=\"\"\n\
    \    local char_code_encoded=\"\"\n    local char_encoded=\"\"\n    for (( i=0;\
    \ i<${#message}; i++ )); do\n        char=\"${message:$i:1}\"\n        char_code=\"\
    $(printf \"%d\" \"'$char\")\"\n        if [[ $char_code -ge 65 && $char_code -le\
    \ 90 ]]; then\n            char_code_encoded=$(( $char_code + 32 ))\n        elif\
    \ [[ $char_code -ge 97 && $char_code -le 122 ]]; then\n            char_code_encoded=$((\
    \ $char_code - 32 ))\n        else\n            char_code_encoded=$char_code\n\
    \        fi\n        char_encoded=\"$(printf \\\\$(printf '%03o' $char_code_encoded))\"\
    \n        encoded=\"$encoded$char_encoded\"\n    done\n    echo \"$encoded\"",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B'\
    \ | tr 'AEIOU' 'EIOUA'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'"]
stop_tokens:
- "\n}"

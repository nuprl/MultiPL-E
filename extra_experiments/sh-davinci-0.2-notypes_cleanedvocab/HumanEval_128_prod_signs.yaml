name: HumanEval_128_prod_signs
language: sh
prompt: "#!/bin/bash\n# You are given an array arr of integers and you need to return\n\
  # sum of magnitudes of integers multiplied by product of all signs\n# of each number\
  \ in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n\
  # Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>> $(prod_signs \"0 1\"\
  )\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs() {\n"
tests: "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\"\
  \ ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\
  \") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
  \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[\
  \ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
completions: ["    local arr=\"$1\"\n    local prod=1\n    local sum=0\n    for i\
    \ in $arr; do\n        if [ $i -eq 0 ]; then\n            prod=0\n           \
    \ break\n        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n  \
    \      fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))", "  \
    \  local arr=($@)\n    local prod=1\n    local sum=0\n    local i=0\n    if [\
    \ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n  \
    \  while [ $i -lt ${#arr[@]} ]; do\n        if [ ${arr[$i]} -gt 0 ]; then\n  \
    \          prod=$((prod * 1))\n        elif [ ${arr[$i]} -lt 0 ]; then\n     \
    \       prod=$((prod * -1))\n        else\n            prod=0\n        fi\n  \
    \      sum=$((sum + ${arr[$i]}))\n        i=$((i + 1))\n    done\n    echo $((sum\
    \ * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n \
    \       return\n    fi\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0\
    \ ]]; then\n            prod=0\n            break\n        fi\n        if [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((sum * prod))\"", "    local arr=(\"$@\")\n  \
    \  local prod=1\n    local sum=0\n    local len=${#arr[@]}\n    if [ $len -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"\
    ; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        elif\
    \ [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n        \
    \    prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum\
    \ * prod))\"", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n    fi\n    ((sum += i))\n\
    \  done\n  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]];\
    \ then\n    echo \"None\"\n  else\n    echo \"$((prod * sum))\"\n  fi", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local len=${#arr[@]}\n\
    \    if [[ $len -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        sum=$((sum + i))\n    done\n    echo \"\
    $((sum * prod))\"", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    local len=${#arr[@]}\n    if [[ $len -eq 0 ]]; then\n        echo \"None\"\
    \n        return\n    fi\n    for ((i=0; i<$len; i++)); do\n        local num=${arr[$i]}\n\
    \        if [[ $num -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $num -eq 0 ]]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + num))\n    done\n    echo $((sum * prod))", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n       \
    \     prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n\
    \    fi", "    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=(\"$@\")\n  local res=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    res=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      res=$((res * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  if [[ $res -eq 0 ]]; then\n    echo \"\
    0\"\n  else\n    echo \"$((res * sum))\"\n  fi", "    local arr=($@)\n    local\
    \ prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ];\
    \ then\n            prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n   \
    \         prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [ $sum\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n\
    \    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i > 0 )); then\n            prod=$(( prod\
    \ * 1 ))\n        elif (( i < 0 )); then\n            prod=$(( prod * -1 ))\n\
    \        else\n            prod=0\n        fi\n        sum=$(( sum + i ))\n  \
    \  done\n    if (( sum == 0 )); then\n        echo \"None\"\n    else\n      \
    \  echo \"$(( sum * prod ))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if (( i > 0 )); then\n\
    \            prod=$(( prod * 1 ))\n        elif (( i < 0 )); then\n          \
    \  prod=$(( prod * -1 ))\n        else\n            prod=0\n        fi\n     \
    \   sum=$(( sum + i ))\n    done\n    if (( sum == 0 )); then\n        echo \"\
    None\"\n    else\n        echo $(( sum * prod ))\n    fi", "    local arr=$@\n\
    \    local prod=1\n    local sum=0\n    for i in $arr; do\n        if [[ $i -gt\
    \ 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n          \
    \  prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n    if\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    local arr=($@)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=$1\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n\
    \        echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n  \
    \      fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((prod * sum))", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=($@)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    fi\n    prod=$((prod * (i < 0 ? -1 : 1)))\n    sum=$((sum + (i\
    \ < 0 ? -i : i)))\n  done\n  echo $((prod * sum))", "    local arr=(\"$@\")\n\
    \    local prod=1\n    local sum=0\n    if [ ${#arr[@]} -eq 0 ]; then\n      \
    \  echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"; do\n   \
    \     if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $i\
    \ -eq 0 ]; then\n            prod=0\n            break\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((sum * prod))\"", "  local arr=(\"$@\")\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    if [[ -z \"$1\" ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$@\" | awk '{\n            for (i = 1; i <= NF; i++)\
    \ {\n                if ($i == 0) {\n                    sign = 0\n          \
    \      } else if ($i > 0) {\n                    sign = 1\n                } else\
    \ {\n                    sign = -1\n                }\n                prod *=\
    \ sign\n                sum += abs($i)\n            }\n            print sum *\
    \ prod\n        }'\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"", "    local arr=($@)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n       \
    \     prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local\
    \ arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n         \
    \   prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n    if\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n  \
    \  fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((prod * sum))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    local sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt\
    \ 0 ]]; then\n            sign=1\n        elif [[ $i -lt 0 ]]; then\n        \
    \    sign=-1\n        else\n            sign=0\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif\
    \ [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n      \
    \      prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n  \
    \  if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n\
    \    fi\n    ((sum += i))\n  done\n  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\
    \n  elif [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((prod\
    \ * sum))\"\n  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n           \
    \ prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    local len=${#arr[@]}\n    if [[ $len -eq 0 ]];\
    \ then\n        echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + $(abs $i)))\n\
    \    done\n    echo $((prod * sum))", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n      \
    \  fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "  \
    \  local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq\
    \ 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ \"$((sum * prod))\"", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  local len=${#arr[@]}\n\
    \  if [[ $len -eq 0 ]]; then\n    echo \"None\"\n    return\n  fi\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n \
    \   elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo \"$((prod * sum))\"", "    local\
    \ arr=($@)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -gt 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n\
    \            prod=$((prod * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign\n   \
    \ for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | awk '{if ($1>0) print\
    \ 1; else if ($1<0) print -1; else print 0}')\n        prod=$((prod * sign))\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((prod * sum))\n    fi", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $prod\
    \ -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n    echo \"None\"\
    \n  else\n    echo \"$((sum * prod))\"\n  fi", "    if [ $# -eq 0 ]; then\n  \
    \      echo \"None\"\n    else\n        local prod=1\n        local sum=0\n  \
    \      for i in $@; do\n            if [ $i -lt 0 ]; then\n                prod=$((prod\
    \ * -1))\n            elif [ $i -gt 0 ]; then\n                prod=$((prod *\
    \ 1))\n            else\n                prod=0\n            fi\n            sum=$((sum\
    \ + i))\n        done\n        echo $((sum * prod))\n    fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=$@\n    local prod=1\n\
    \    local sum=0\n    for i in $arr; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((prod * sum))\"", "  local arr=($@)\n  local prod=1\n\
    \  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n \
    \       return\n    fi\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0\
    \ ]]; then\n            prod=0\n            break\n        fi\n        if [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((sum * prod))\"", "  local arr=(\"$@\")\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($@)\n    local prod=1\n\
    \    local sum=0\n    local sign=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0 ]]; then\n \
    \           sign=-1\n        else\n            sign=1\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local sign=0\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        sum=$((sum + i))\n        prod=$((prod * sign))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=$((prod * 0))\n      \
    \  fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n   \
    \     echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  \
    \  local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=($@)\n    local prod=1\n    local\
    \ sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n       \
    \     prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo \"$((prod * sum))\"", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i == 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum == 0 ]]; then\n        echo \"None\"\n    else\n        echo \"\
    $((sum * prod))\"\n    fi", "    local arr=($@)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"", "    local arr=$@\n    local sum=0\n    local prod=1\n\
    \    for i in $arr; do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n \
    \           sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n \
    \   for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=($@)\n    local prod=1\n\
    \    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($@)\n    local sum=0\n    local prod=1\n\
    \    local sign=0\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            sign=-1\n        elif [[ $i -gt 0 ]]; then\n            sign=1\n\
    \        else\n            sign=0\n        fi\n        sum=$((sum + i))\n    \
    \    prod=$((prod * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    local sign=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i\
    \ -lt 0 ]]; then\n            sign=-1\n        else\n            sign=1\n    \
    \    fi\n        prod=$((prod * sign))\n        sum=$((sum + i))\n    done\n \
    \   if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n\
    \        return\n    fi\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ];\
    \ then\n            prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n   \
    \         prod=0\n            break\n        fi\n        sum=$((sum + i))\n  \
    \  done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for num in \"${arr[@]}\"; do\n        if (( num > 0 ));\
    \ then\n            prod=$(( prod * 1 ))\n        elif (( num < 0 )); then\n \
    \           prod=$(( prod * -1 ))\n        else\n            prod=0\n        fi\n\
    \        sum=$(( sum + num ))\n    done\n    if (( sum == 0 )); then\n       \
    \ echo \"None\"\n    else\n        echo $(( sum * prod ))\n    fi", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  \
    \  local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n          \
    \  prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        case $i in\n            0)\n        \
    \        prod=0\n                ;;\n            *)\n                prod=$((prod\
    \ * (i > 0 ? 1 : -1)))\n                sum=$((sum + (i > 0 ? i : -i)))\n    \
    \            ;;\n        esac\n    done\n    if [[ $prod -eq 0 ]]; then\n    \
    \    echo \"0\"\n    elif [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((prod * sum))\"\n    fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=($@)\n    local sum=0\n    local prod=1\n    if [ ${#arr[@]} -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n    \
    \        prod=0\n            break\n        fi\n        sum=$((sum + i))\n   \
    \ done\n    echo $((sum * prod))", "  if [[ -z \"$1\" ]]; then\n    echo \"None\"\
    \n  else\n    local prod=1\n    local sum=0\n    for i in $@; do\n      if [[\
    \ $i -lt 0 ]]; then\n        prod=$((prod * -1))\n      elif [[ $i -eq 0 ]]; then\n\
    \        prod=0\n      fi\n      sum=$((sum + i))\n    done\n    echo $((sum *\
    \ prod))\n  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n  \
    \  fi\n    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n       \
    \     prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n\
    \            break\n        fi\n        sum=$((sum + i))\n    done\n    echo \"\
    $((sum * prod))\"", "    local arr=($@)\n    local prod=1\n    local sum=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))",
  "  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n   \
    \ if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "    local arr=($@)\n    local prod=1\n    local sum=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
    \ | tr ' ' '\\n' | awk '{\n            if ($1 > 0) {\n                sign = 1\n\
    \            } else if ($1 < 0) {\n                sign = -1\n            } else\
    \ {\n                sign = 0\n            }\n            sum += sign * abs($1)\n\
    \            prod *= sign\n        } END {\n            if (sum == 0) {\n    \
    \            print \"0\"\n            } else {\n                print sum * prod\n\
    \            }\n        }'\n    fi", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n\
    \        return\n    fi\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo \"$((sum * prod))\"", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n      \
    \  fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n   \
    \     echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      sign=-1\n    else\n      sign=1\n    fi\n    prod=$((prod * sign))\n  \
    \  sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "    local arr=$@\n    local sum=0\n \
    \   local prod=1\n    for i in $arr; do\n        if [[ $i -gt 0 ]]; then\n   \
    \         sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum + i * -1))\n            prod=$((prod\
    \ * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"\
    None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=(\"$@\"\
    )\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif\
    \ [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "  local arr=($@)\n  local prod=1\n\
    \  local sum=0\n  if [[ ${#arr[@]} -eq 0 ]]; then\n    echo \"None\"\n    return\n\
    \  fi\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n \
    \     break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=(\"$@\"\
    )\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n  \
    \  echo \"$((sum * prod))\"\n  fi", "    local arr=($@)\n    local prod=1\n  \
    \  local sum=0\n    local sign=0\n    for i in ${arr[@]}; do\n        if [[ $i\
    \ -gt 0 ]]; then\n            sign=1\n        elif [[ $i -lt 0 ]]; then\n    \
    \        sign=-1\n        else\n            sign=0\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in \"${arr[@]}\"; do\n        if [ $i -gt 0 ]; then\n     \
    \       prod=$((prod * 1))\n        elif [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((prod * sum))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n  \
    \    prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod *\
    \ 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  \
    \  local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq\
    \ 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((prod * sum))\"",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"", "    local -a arr\n    IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local\
    \ arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n       \
    \     prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n\
    \    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        fi\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((prod * sum))\"", "    local arr=($@)\n    local\
    \ prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ];\
    \ then\n            prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n   \
    \         prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n   \
    \     local sum=0\n        local prod=1\n        for i in $@; do\n           \
    \ if [ $i -eq 0 ]; then\n                prod=0\n                break\n     \
    \       elif [ $i -lt 0 ]; then\n                prod=$((prod * -1))\n       \
    \     fi\n            sum=$((sum + i))\n        done\n        echo $((sum * prod))\n\
    \    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local\
    \ sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n  \
    \          sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n  \
    \      else\n            sign=1\n        fi\n        prod=$((prod * sign))\n \
    \       sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((prod * sum))\"", "    if [ $# -eq 0 ]; then\n\
    \        echo \"None\"\n    else\n        local prod=1\n        local sum=0\n\
    \        for i in $@; do\n            if [ $i -lt 0 ]; then\n                prod=$((prod\
    \ * -1))\n            elif [ $i -gt 0 ]; then\n                prod=$((prod *\
    \ 1))\n            fi\n            sum=$((sum + i))\n        done\n        echo\
    \ $((sum * prod))\n    fi", "    local arr\n    read -ra arr <<< \"$1\"\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((prod * sum))\"", " \
    \   local arr=($@)\n    local prod=1\n    local sum=0\n    local i=0\n    local\
    \ len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n       \
    \ return\n    fi\n    while [ $i -lt $len ]; do\n        local n=${arr[$i]}\n\
    \        if [ $n -eq 0 ]; then\n            prod=0\n            break\n      \
    \  fi\n        if [ $n -lt 0 ]; then\n            prod=$((prod * -1))\n      \
    \  fi\n        sum=$((sum + n))\n        i=$((i + 1))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if (( i > 0 )); then\n      prod=$(( prod * 1 ))\n  \
    \  elif (( i < 0 )); then\n      prod=$(( prod * -1 ))\n    else\n      prod=0\n\
    \    fi\n    sum=$(( sum + i ))\n  done\n  if (( sum == 0 )); then\n    echo \"\
    None\"\n  else\n    echo \"$(( sum * prod ))\"\n  fi", "    local arr=($@)\n \
    \   local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i\
    \ -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt\
    \ 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    elif [[ $sum -eq 0 ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=(\"$@\")\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $prod -eq\
    \ 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n    echo \"None\"\
    \n  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($@)\n    local\
    \ prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=($@)\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]} -eq 0\
    \ ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local\
    \ arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n      \
    \  fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n    \
    \    fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n \
    \       echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq 0\
    \ ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=($@)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n       \
    \     prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if\
    \ [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local prod=1\n\
    \        local sum=0\n        for i in $@; do\n            if [ $i -lt 0 ]; then\n\
    \                prod=$((prod * -1))\n            elif [ $i -gt 0 ]; then\n  \
    \              prod=$((prod * 1))\n            else\n                prod=0\n\
    \            fi\n            sum=$((sum + i))\n        done\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n\
    \    local sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]];\
    \ then\n            sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n\
    \        else\n            sign=1\n        fi\n        prod=$((prod * sign))\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod\
    \ * sum))", "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  local sign=0\n\
    \  local num=0\n  for num in \"${arr[@]}\"; do\n    if [[ $num -gt 0 ]]; then\n\
    \      sign=1\n    elif [[ $num -lt 0 ]]; then\n      sign=-1\n    else\n    \
    \  sign=0\n    fi\n    sum=$((sum + num))\n    prod=$((prod * sign))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"", "    local arr=($@)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n       \
    \     prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if\
    \ [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "  local arr=($@)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($@)\n    local prod=1\n\
    \    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   fi\n        sum=$((sum + i))\n    done\n    echo \"$((prod * sum))\"", " \
    \   local arr=($@)\n    local res=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            res=$((res * 1))\n        elif\
    \ [[ $i -lt 0 ]]; then\n            res=$((res * -1))\n        else\n        \
    \    res=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum * res))\n \
    \   fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local\
    \ sign=0\n    for num in \"${arr[@]}\"; do\n        if [[ $num -eq 0 ]]; then\n\
    \            sign=0\n        elif [[ $num -lt 0 ]]; then\n            sign=-1\n\
    \        else\n            sign=1\n        fi\n        sum=$((sum + num))\n  \
    \      prod=$((prod * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n      \
    \  echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    local sign=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0\
    \ ]]; then\n            sign=-1\n        else\n            sign=1\n        fi\n\
    \        prod=$((prod * sign))\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt\
    \ 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "   \
    \ local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    local sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0 ]]; then\n        \
    \    sign=-1\n        else\n            sign=1\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=($@)\n    local prod=1\n    local sum=0\n    local sign=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n  \
    \      elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n        \
    \    sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo $((sum * prod))\n    fi", "    if [[ $# -eq 0 ]]; then\n        echo\
    \ \"None\"\n        return\n    fi\n    local prod=1\n    local sum=0\n    for\
    \ i in \"$@\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod *\
    \ 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum\
    \ * prod))\"", "    local arr=($@)\n    local prod=1\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n  \
    \          break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq\
    \ 0 ]]; then\n        echo \"0\"\n    elif [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=(\"\
    $@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum\
    \ * prod))\"", "  local arr=($@)\n  local prod=1\n  local sum=0\n  local sign=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      sign=-1\n    elif\
    \ [[ $i -gt 0 ]]; then\n      sign=1\n    else\n      sign=0\n    fi\n    prod=$((prod\
    \ * sign))\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ \"None\"\n  else\n    echo $((sum * prod))\n  fi", "    local arr=($@)\n   \
    \ local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]];\
    \ then\n            prod=$((prod * 1))\n        else\n            prod=0\n   \
    \     fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((prod * sum))\"", "    local arr=($@)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n       \
    \     prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo $((sum * prod))\n    fi", "    local arr=($@)\n    local prod=1\n\
    \    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n  \
    \  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n   \
    \         prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n           \
    \ prod=$((prod * 1))\n        else\n            prod=$((prod * 0))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum\
    \ * prod))\"", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    echo \"$((sum * prod))\"", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"\
    None\"\n        return\n    fi\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        fi\n     \
    \   if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local arr=($@)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=($@)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [ $i -lt 0 ];\
    \ then\n      prod=$((prod * -1))\n    elif [ $i -eq 0 ]; then\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo \"$((prod * sum))\"", "    local\
    \ arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    local len=${#arr[@]}\n    if [[ $len -eq 0 ]]; then\n    \
    \    echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n     \
    \   fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n   \
    \     fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "   \
    \ local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n   \
    \         prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((sum * prod))\"", "    local arr=($@)\n    local\
    \ prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        else\n            prod=0\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ ${#arr[@]} -eq 0 ]]; then\n   \
    \     echo \"None\"\n    else\n        echo $((sum * prod))\n    fi"]
stop_tokens:
- "\n}"

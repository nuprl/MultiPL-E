language: sh
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\twhile [ $j -le $number ]\n\t\tdo\n\t\t\twhile [ $k -le $number ]\n\t\
    \t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\
    \tresult=0\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tj=$(( $j +\
    \ 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $result -eq 0 ]\n\tthen\n\
    \t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79\
    \ 83 89 97)\n\tlocal prime_factors=()\n\tfor prime in ${prime_numbers[@]}; do\n\
    \t\tif [ $(($number % $prime)) -eq 0 ]; then\n\t\t\tprime_factors+=($prime)\n\t\
    \tfi\n\tdone\n\tif [ ${#prime_factors[@]} -eq 3 ]; then\n\t\techo \"true\"\n\t\
    else\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divisor=2\n\tlocal prime_factors=()\n\twhile [ $number -gt 1 ]; do\n\t\tif [\
    \ $((number % divisor)) -eq 0 ]; then\n\t\t\tprime_factors+=($divisor)\n\t\t\t\
    number=$((number / divisor))\n\t\telse\n\t\t\tdivisor=$((divisor + 1))\n\t\tfi\n\
    \tdone\n\tif [ ${#prime_factors[@]} -eq 3 ]; then\n\t\techo \"true\"\n\telse\n\
    \t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\twhile [ $i -lt $number\
    \ ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\twhile [ $k -lt $number\
    \ ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\t\tthen\n\t\
    \t\t\t\tresult=true\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tj=$((\
    \ $j + 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal i=2\n\tlocal j=0\n\tlocal is_prime=true\n\tlocal is_multiply_prime=false\n\
    \tlocal prime_number_count=0\n\tlocal prime_number_product=1\n\tlocal prime_number_product_count=0\n\
    \tlocal prime_number_product_count_max=3\n\tlocal prime_number_product_max=100\n\
    \tlocal prime_number_product_max_reached=false\n\tlocal prime_number_product_max_reached_count=0\n\
    \tlocal prime_number_product_max_reached_count_max=3\n\tlocal prime_number_product_max_reached_count_max_reached=false\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count=0\n\tlocal prime_number_product_max_reached_count_max_reached_count_max=3\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached=false\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count=0\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max=3\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max_reached=false\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max_reached_count=0\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max_reached_count_max=3\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max_reached_count_max_reached=false\n\
    \tlocal prime_number_product_max_reached_count_max_reached_count_max_reached_count_max_reached\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal result=1\n\tlocal prime_numbers=\"\"\n\twhile [ $i -le $number\
    \ ]\n\tdo\n\t\tif [ $(($number % $i)) -eq 0 ]\n\t\tthen\n\t\t\tif [ $i -eq 2 ]\n\
    \t\t\tthen\n\t\t\t\tprime_numbers=\"$i\"\n\t\t\t\tnumber=$(($number / $i))\n\t\
    \t\t\ti=1\n\t\t\telif [ $(is_prime $i) -eq 1 ]\n\t\t\tthen\n\t\t\t\tprime_numbers=\"\
    $prime_numbers $i\"\n\t\t\t\tnumber=$(($number / $i))\n\t\t\t\ti=1\n\t\t\tfi\n\
    \t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $(echo $prime_numbers | wc -w) -eq 3\
    \ ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpkv3teayb.sh: line 23: is_prime: command not found\n/tmp/tmpkv3teayb.sh:
    line 23: [: -eq: unary operator expected\n/tmp/tmpkv3teayb.sh: line 23: is_prime:
    command not found\n/tmp/tmpkv3teayb.sh: line 23: [: -eq: unary operator expected\n/tmp/tmpkv3teayb.sh:
    line 23: is_prime: command not found\n/tmp/tmpkv3teayb.sh: line 23: [: -eq: unary
    operator expected\n/tmp/tmpkv3teayb.sh: line 23: is_prime: command not found\n/tmp/tmpkv3teayb.sh:
    line 23: [: -eq: unary operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\twhile [ $i -lt $num ]\n\tdo\n\
    \t\twhile [ $j -lt $num ]\n\t\tdo\n\t\t\twhile [ $k -lt $num ]\n\t\t\tdo\n\t\t\
    \t\tif [ $((i*j*k)) -eq $num ]\n\t\t\t\tthen\n\t\t\t\t\tresult=true\n\t\t\t\t\
    fi\n\t\t\t\tk=$((k+1))\n\t\t\tdone\n\t\t\tj=$((j+1))\n\t\tdone\n\t\ti=$((i+1))\n\
    \tdone\n\techo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [[ $1 -lt 100 ]]; then\n\
    \t\tfor (( i=2; i<$1; i++ )); do\n\t\t\tif [[ $1%$i -eq 0 ]]; then\n\t\t\t\tfor\
    \ (( j=$i+1; j<$1; j++ )); do\n\t\t\t\t\tif [[ $1%$j -eq 0 ]]; then\n\t\t\t\t\t\
    \tfor (( k=$j+1; k<$1; k++ )); do\n\t\t\t\t\t\t\tif [[ $1%$k -eq 0 ]]; then\n\t\
    \t\t\t\t\t\t\tif [[ $1 -eq $(( $i * $j * $k )) ]]; then\n\t\t\t\t\t\t\t\t\techo\
    \ \"true\"\n\t\t\t\t\t\t\t\t\treturn 0\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tfi\n\
    \t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\tdone\n\tfi\n\techo\
    \ \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal prime_nums=$(seq\
    \ 2 $num | awk '{n=1; for(i=2;i<=sqrt($1);i++) if($1%i==0) n=0; if(n) print $1}')\n\
    \tlocal prime_nums_count=$(echo $prime_nums | wc -w)\n\tlocal prime_nums_array=($prime_nums)\n\
    \tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal is_multiply_prime=false\n\tfor\
    \ ((i=0; i<$prime_nums_count; i++)); do\n\t\tfor ((j=0; j<$prime_nums_count; j++));\
    \ do\n\t\t\tfor ((k=0; k<$prime_nums_count; k++)); do\n\t\t\t\tif [ $((prime_nums_array[i]\
    \ * prime_nums_array[j] * prime_nums_array[k])) -eq $num ]; then\n\t\t\t\t\tis_multiply_prime=true\n\
    \t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=10>
  stdout: <_io.BufferedReader name=7>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal count=0\n\twhile [ $i -le $num ]\n\tdo\n\t\tif [ $((num%i)) -eq 0 ]\n\t\
    \tthen\n\t\t\tif [ $i -eq 2 ] || [ $i -eq 3 ] || [ $i -eq 5 ] || [ $i -eq 7 ]\n\
    \t\t\tthen\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\
    \tif [ $count -eq 3 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\
    \tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=1\n    while [ $i\
    \ -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n      \
    \      while [ $k -lt $number ]\n            do\n                if [ $(( $i *\
    \ $j * $k )) -eq $number ]\n                then\n                    result=0\n\
    \                fi\n                k=$(( $k + 1 ))\n            done\n     \
    \       j=$(( $j + 1 ))\n            k=2\n        done\n        i=$(( $i + 1 ))\n\
    \        j=2\n    done\n    if [ $result -eq 0 ]\n    then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=21>
  stdout: <_io.BufferedReader name=15>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ primes=(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89\
    \ 97)\n    local result=1\n    for prime in ${primes[@]}; do\n        if [ $((num\
    \ % prime)) -eq 0 ]; then\n            result=$((result * prime))\n        fi\n\
    \    done\n    if [ $result -eq $num ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ a=2\n\tlocal b=3\n\tlocal c=5\n\tlocal result=1\n\twhile [ $result -ne $number\
    \ ]\n\tdo\n\t\tresult=$((a*b*c))\n\t\tif [ $result -eq $number ]\n\t\tthen\n\t\
    \t\techo \"true\"\n\t\t\treturn\n\t\tfi\n\t\tif [ $c -eq 5 ]\n\t\tthen\n\t\t\t\
    c=$((c+2))\n\t\telse\n\t\t\tc=$((c+4))\n\t\tfi\n\t\tif [ $c -gt $number ]\n\t\t\
    then\n\t\t\tif [ $b -eq 3 ]\n\t\t\tthen\n\t\t\t\tb=$((b+2))\n\t\t\telse\n\t\t\t\
    \tb=$((b+4))\n\t\t\tfi\n\t\t\tc=5\n\t\tfi\n\t\tif [ $b -gt $number ]\n\t\tthen\n\
    \t\t\tif [ $a -eq 2 ]\n\t\t\tthen\n\t\t\t\ta=$((a+1))\n\t\t\telse\n\t\t\t\ta=$((a+2))\n\
    \t\t\tfi\n\t\t\tb=3\n\t\t\tc=5\n\t\tfi\n\tdone\n\techo \"false\"\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=25>
  stdout: <_io.BufferedReader name=6>
  timestamp: 1660357373
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n  local number=$1\n  local\
    \ i=2\n  local j=2\n  local k=2\n  local result=false\n  while [ $i -lt $number\
    \ ]\n  do\n    while [ $j -lt $number ]\n    do\n      while [ $k -lt $number\
    \ ]\n      do\n        if [ $((i*j*k)) -eq $number ]\n        then\n         \
    \ result=true\n        fi\n        k=$((k+1))\n      done\n      j=$((j+1))\n\
    \      k=2\n    done\n    i=$((i+1))\n    j=2\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=26>
  stdout: <_io.BufferedReader name=20>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local prime_numbers=\"\"\n    local prime_numbers_count=0\n \
    \   local is_prime=true\n    local is_multiply_prime=false\n    while [ $i -lt\
    \ $number ]\n    do\n        is_prime=true\n        for j in $(seq 2 $((i-1)))\n\
    \        do\n            if [ $((i%j)) -eq 0 ]\n            then\n           \
    \     is_prime=false\n                break\n            fi\n        done\n  \
    \      if [ $is_prime = true ]\n        then\n            prime_numbers=\"$prime_numbers\
    \ $i\"\n            prime_numbers_count=$((prime_numbers_count+1))\n        fi\n\
    \        i=$((i+1))\n    done\n    for i in $prime_numbers\n    do\n        if\
    \ [ $((number%i)) -eq 0 ]\n        then\n            number=$((number/i))\n  \
    \          prime_numbers_count=$((prime_numbers_count-1))\n        fi\n    done\n\
    \    if [ $prime_numbers_count -eq 0 ]\n    then\n        is_multiply_prime=true\n\
    \    fi\n    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [ $1 -lt 100 ]; then\n\
    \t\tfor (( i=2; i<=$1; i++ ))\n\t\tdo\n\t\t\tif [ $(($1%$i)) -eq 0 ]; then\n\t\
    \t\t\tfor (( j=2; j<=$i; j++ ))\n\t\t\t\tdo\n\t\t\t\t\tif [ $(($i%$j)) -eq 0 ];\
    \ then\n\t\t\t\t\t\tif [ $i -eq $j ]; then\n\t\t\t\t\t\t\techo $i\n\t\t\t\t\t\t\
    fi\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=false\n    local i=2\n    local j=2\n    local k=2\n    local a=0\n\
    \    local b=0\n    local c=0\n    while [ $i -lt $number ]\n    do\n        while\
    \ [ $j -lt $number ]\n        do\n            while [ $k -lt $number ]\n     \
    \       do\n                if [ $(( $i * $j * $k )) -eq $number ]\n         \
    \       then\n                    a=$i\n                    b=$j\n           \
    \         c=$k\n                    result=true\n                fi\n        \
    \        k=$(( $k + 1 ))\n            done\n            j=$(( $j + 1 ))\n    \
    \        k=2\n        done\n        i=$(( $i + 1 ))\n        j=2\n    done\n \
    \   echo \"$result\"\n    echo \"$a * $b * $c\"\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_nums=()\n    local is_prime=true\n    local is_multiply_prime=false\n\
    \    local is_multiply_prime_count=0\n    local is_multiply_prime_result=1\n \
    \   while [ $i -lt $num ]; do\n        for (( j=2; j<$i; j++ )); do\n        \
    \    if [ $(( $i % $j )) -eq 0 ]; then\n                is_prime=false\n     \
    \           break\n            fi\n        done\n        if [ $is_prime = true\
    \ ]; then\n            prime_nums+=($i)\n        fi\n        is_prime=true\n \
    \       i=$(( $i + 1 ))\n    done\n    for (( i=0; i<${#prime_nums[@]}; i++ ));\
    \ do\n        for (( j=0; j<${#prime_nums[@]}; j++ )); do\n            for ((\
    \ k=0; k<${#prime_nums[@]}; k++ )); do\n                if [ $(( ${prime_nums[$i]}\
    \ * ${prime_nums[$j]} * ${prime_nums[$k]} )) -eq $num ]; then\n              \
    \      is_multiply_prime_count=$(( $is_multiply_prime_count + 1 ))\n         \
    \           is_multiply_prime_result=$(( $is_multiply_prime_result * ${prime_nums[$i]}\
    \ * ${prime_nums[$j]} * ${prime_nums[$k]} ))\n                fi\n           \
    \ done\n        done\n    done\n    if [ $is_multiply_prime_count -eq 1 ] && [\
    \ $is_multiply_prime_result -eq $num ]; then\n        is_multiply_prime=true\n\
    \    fi\n    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \tlocal is_multiply_prime_result=false\n\twhile [ $i -lt $number ]\n\tdo\n\t\t\
    is_prime=$(is_prime $i)\n\t\tif [ $is_prime -eq 1 ]\n\t\tthen\n\t\t\twhile [ $j\
    \ -lt $number ]\n\t\t\tdo\n\t\t\t\tis_prime=$(is_prime $j)\n\t\t\t\tif [ $is_prime\
    \ -eq 1 ]\n\t\t\t\tthen\n\t\t\t\t\twhile [ $k -lt $number ]\n\t\t\t\t\tdo\n\t\t\
    \t\t\t\tis_prime=$(is_prime $k)\n\t\t\t\t\t\tif [ $is_prime -eq 1 ]\n\t\t\t\t\t\
    \tthen\n\t\t\t\t\t\t\tif [ $((i*j*k)) -eq $number ]\n\t\t\t\t\t\t\tthen\n\t\t\t\
    \t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tfi\n\t\t\t\
    \t\t\tfi\n\t\t\t\t\t\tk=$((k+1))\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tj=$((j+1))\n\
    \t\t\tdone\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\tif [ $is_multiply_prime -eq 1 ]\n\
    \tthen\n\t\tis_multiply_prime_result=true\n\tfi\n\techo $is_multiply_prime_result\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh:
    line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh:
    line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh:
    line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh:
    line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh:
    line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime: command not found\n/tmp/tmp3qpzb9df.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmp3qpzb9df.sh: line 19: is_prime:
    command not found\n/tmp/tmp3qpzb9df.sh: line 20: [: -e'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal prime_numbers=\"\"\n\tlocal prime_number_count=0\n\twhile [ $i\
    \ -lt $number ]\n\tdo\n\t\tif [ $(is_prime $i) == \"true\" ]\n\t\tthen\n\t\t\t\
    prime_numbers=\"$prime_numbers $i\"\n\t\t\tprime_number_count=$((prime_number_count+1))\n\
    \t\tfi\n\t\ti=$((i+1))\n\tdone\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal\
    \ prime_numbers_array=($prime_numbers)\n\twhile [ $j -lt $prime_number_count ]\n\
    \tdo\n\t\twhile [ $k -lt $prime_number_count ]\n\t\tdo\n\t\t\twhile [ $l -lt $prime_number_count\
    \ ]\n\t\t\tdo\n\t\t\t\tif [ $((prime_numbers_array[$j]*prime_numbers_array[$k]*prime_numbers_array[$l]))\
    \ == $number ]\n\t\t\t\tthen\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\
    \tfi\n\t\t\t\tl=$((l+1))\n\t\t\tdone\n\t\t\tk=$((k+1))\n\t\tdone\n\t\tj=$((j+1))\n\
    \tdone\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh:
    line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh:
    line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh:
    line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh:
    line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh:
    line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime: command not found\n/tmp/tmpt4nic37k.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpt4nic37k.sh: line 16: is_prime:
    command not found\n/tmp/tmpt4nic37k.sh: line 16: [: ==: unary operator'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local is_prime=true\n    local i=2\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local divisor=2\n    local prime_numbers=\"\"\n    local is_prime=true\n   \
    \ local is_multiply_prime=false\n    local number_of_prime_numbers=0\n    local\
    \ number_of_divisors=0\n    local number_of_prime_divisors=0\n    local number_of_prime_divisors_multiplied=1\n\
    \    local prime_divisors=\"\"\n    local prime_divisors_multiplied=\"\"\n   \
    \ local prime_divisors_multiplied_string=\"\"\n    local prime_divisors_multiplied_string_length=0\n\
    \    local prime_divisors_multiplied_string_length_minus_one=0\n    local prime_divisors_multiplied_string_length_minus_two=0\n\
    \    local prime_divisors_multiplied_string_length_minus_three=0\n    local prime_divisors_multiplied_string_length_minus_four=0\n\
    \    local prime_divisors_multiplied_string_length_minus_five=0\n    local prime_divisors_multiplied_string_length_minus_six=0\n\
    \    local prime_divisors_multiplied_string_length_minus_seven=0\n    local prime_divisors_multiplied_string_length_minus_eight=0\n\
    \    local prime_divisors_multiplied_string_length_minus_nine=0\n    local prime_divisors_multiplied_string_length_minus_ten=0\n\
    \    local prime_divisors_multiplied_string_length_minus_eleven=0\n    local prime_divisors_multiplied_string_length_minus_twelve=0\n\
    \    local prime_divisors_multiplied_string_length_minus_thirteen=0\n    local\
    \ prime_divisors_multiplied_string_length_minus_fourteen=0\n    local prime_divisors_multiplied_string_length_minus_fifteen=0\n\
    \    local prime_divisors_multiplied_string_length_minus_sixteen=0\n    local\
    \ prime_divisors_multiplied_string_length_minus_sevent\n}\n\ncandidate() {\n \
    \   is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local is_prime=true\n    for (( i=2; i<$number;\
    \ i++ )); do\n        for (( j=2; j<$i; j++ )); do\n            if (( $i % $j\
    \ == 0 )); then\n                is_prime=false\n                break\n     \
    \       fi\n        done\n        if [[ \"$is_prime\" == true ]]; then\n     \
    \       prime_numbers+=($i)\n        fi\n        is_prime=true\n    done\n   \
    \ for (( i=0; i<${#prime_numbers[@]}; i++ )); do\n        for (( j=0; j<${#prime_numbers[@]};\
    \ j++ )); do\n            for (( k=0; k<${#prime_numbers[@]}; k++ )); do\n   \
    \             if (( ${prime_numbers[$i]} * ${prime_numbers[$j]} * ${prime_numbers[$k]}\
    \ == $number )); then\n                    echo \"true\"\n                   \
    \ return 0\n                fi\n            done\n        done\n    done\n   \
    \ echo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=11>
  stdout: <_io.BufferedReader name=3>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal prime_num=0\n\
    \tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tprime_num=$(( $i * $j * $k ))\n\t\t\t\tif [\
    \ $prime_num -eq $num ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\
    \tbreak\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\
    \t\tif [ $is_multiply_prime -eq 1 ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$((\
    \ $i + 1 ))\n\tdone\n\tif [ $is_multiply_prime -eq 1 ]\n\tthen\n\t\techo \"true\"\
    \n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ prime_num=0\n    local prime_count=0\n    local prime_list=()\n    for (( i=2;\
    \ i<=$num; i++ )); do\n        prime_num=0\n        for (( j=2; j<=$i; j++ ));\
    \ do\n            if [[ $(( $i % $j )) -eq 0 ]]; then\n                (( prime_num++\
    \ ))\n            fi\n        done\n        if [[ $prime_num -eq 1 ]]; then\n\
    \            prime_list+=($i)\n        fi\n    done\n    for (( i=0; i<${#prime_list[@]};\
    \ i++ )); do\n        for (( j=i+1; j<${#prime_list[@]}; j++ )); do\n        \
    \    for (( k=j+1; k<${#prime_list[@]}; k++ )); do\n                if [[ $((\
    \ ${prime_list[$i]} * ${prime_list[$j]} * ${prime_list[$k]} )) -eq $num ]]; then\n\
    \                    (( prime_count++ ))\n                fi\n            done\n\
    \        done\n    done\n    if [[ $prime_count -gt 0 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=$(seq 2 $number | awk '{for(i=2;i<=sqrt($1);i++)if($1%i==0){next};print\
    \ $1}')\n    local prime_numbers_count=$(echo \"$prime_numbers\" | wc -l)\n  \
    \  local prime_numbers_sum=0\n    local prime_numbers_sum_count=0\n    local prime_numbers_sum_count_max=0\n\
    \    local prime_numbers_sum_count_max_number=0\n    for ((i=0; i<$prime_numbers_count;\
    \ i++)); do\n        for ((j=0; j<$prime_numbers_count; j++)); do\n          \
    \  for ((k=0; k<$prime_numbers_count; k++)); do\n                prime_numbers_sum=$(($(echo\
    \ \"$prime_numbers\" | awk 'NR=='$((i+1))'') * $(echo \"$prime_numbers\" | awk\
    \ 'NR=='$((j+1))'') * $(echo \"$prime_numbers\" | awk 'NR=='$((k+1))'')))\n  \
    \              if [ $prime_numbers_sum -eq $number ]; then\n                 \
    \   prime_numbers_sum_count=$(($prime_numbers_sum_count + 1))\n              \
    \      if [ $prime_numbers_sum_count -gt $prime_numbers_sum_count_max ]; then\n\
    \                        prime_numbers_sum_count_max=$prime_numbers_sum_count\n\
    \                        prime_numbers_sum_count_max_number=$number\n        \
    \            fi\n                fi\n            done\n        done\n    done\n\
    \    if [ $prime_numbers_sum_count_max -gt 0 ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=52>
  stdout: <_io.BufferedReader name=50>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    while [ $i -lt $number ]\n    do\n \
    \       if [ $(($number % $i)) -eq 0 ]\n        then\n            is_prime=false\n\
    \            break\n        fi\n        i=$(($i + 1))\n    done\n    if [ $is_prime\
    \ = true ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [ $1 -lt 3 ]; then\n\
    \t\techo \"false\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 3 ]; then\n\t\techo \"true\"\
    \n\t\treturn\n\tfi\n\tfor (( i=2; i<$1; i++ )); do\n\t\tif [ $(($1 % $i)) -eq\
    \ 0 ]; then\n\t\t\tif [ $(is_prime $i) == \"true\" ]; then\n\t\t\t\tif [ $(is_multiply_prime\
    \ $(($1 / $i))) == \"true\" ]; then\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\
    \t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n \
    \   is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpats63t5o.sh: line 20: is_prime: command not found\n/tmp/tmpats63t5o.sh:
    line 20: [: ==: unary operator expected\n/tmp/tmpats63t5o.sh: line 20: is_prime:
    command not found\n/tmp/tmpats63t5o.sh: line 20: [: ==: unary operator expected\n/tmp/tmpats63t5o.sh:
    line 20: is_prime: command not found\n/tmp/tmpats63t5o.sh: line 20: [: ==: unary
    operator expected\n/tmp/tmpats63t5o.sh: line 20: is_prime: command not found\n/tmp/tmpats63t5o.sh:
    line 20: [: ==: unary operator expected\n/tmp/tmpats63t5o.sh: line 20: is_prime:
    command not found\n/tmp/tmpats63t5o.sh: line 20: [: ==: unary operator expected\n/tmp/tmpats63t5o.sh:
    line 20: is_prime: command not found\n/tmp/tmpats63t5o.sh: line 20: [: ==: unary
    operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [ $1 -lt 3 ]; then\n\
    \t\techo \"false\"\n\t\treturn\n\tfi\n\tfor (( i=2; i<$1; i++ )); do\n\t\tif [\
    \ $(($1 % $i)) -eq 0 ]; then\n\t\t\tif [ $(is_prime $i) == \"true\" ]; then\n\t\
    \t\t\tif [ $(is_multiply_prime $(($1 / $i))) == \"true\" ]; then\n\t\t\t\t\techo\
    \ \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo \"\
    false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpz6ujj30q.sh: line 16: is_prime: command not found\n/tmp/tmpz6ujj30q.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpz6ujj30q.sh: line 16: is_prime:
    command not found\n/tmp/tmpz6ujj30q.sh: line 16: [: ==: unary operator expected\n/tmp/tmpz6ujj30q.sh:
    line 16: is_prime: command not found\n/tmp/tmpz6ujj30q.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpz6ujj30q.sh: line 16: is_prime: command not found\n/tmp/tmpz6ujj30q.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpz6ujj30q.sh: line 16: is_prime:
    command not found\n/tmp/tmpz6ujj30q.sh: line 16: [: ==: unary operator expected\n/tmp/tmpz6ujj30q.sh:
    line 16: is_prime: command not found\n/tmp/tmpz6ujj30q.sh: line 16: [: ==: unary
    operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local is_prime=0\n    local is_multiply_prime=0\n\
    \    while [ $i -lt 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n\
    \            while [ $k -lt 100 ]\n            do\n                if [ $((num%i))\
    \ -eq 0 ] && [ $((num%j)) -eq 0 ] && [ $((num%k)) -eq 0 ]\n                then\n\
    \                    is_multiply_prime=1\n                    if [ $((i%2)) -eq\
    \ 0 ] || [ $((i%3)) -eq 0 ] || [ $((i%5)) -eq 0 ] || [ $((i%7)) -eq 0 ] || [ $((i%11))\
    \ -eq 0 ] || [ $((i%13)) -eq 0 ] || [ $((i%17)) -eq 0 ] || [ $((i%19)) -eq 0 ]\
    \ || [ $((i%23)) -eq 0 ] || [ $((i%29)) -eq 0 ] || [ $((i%31)) -eq 0 ] || [ $((i%37))\
    \ -eq 0 ] || [ $((i%41)) -eq 0 ] || [ $((i%43)) -eq 0 ] || [ $((i%47)) -eq 0 ]\
    \ || [ $((i%53)) -eq 0 ] || [ $((i%59)) -eq 0 ] || [ $((i%61)) -eq 0 ] || [ $((i%67))\
    \ -eq 0 ] || [ $((i%71)) -eq 0 ] || [ $((i%73)) -eq 0 ] || [ $((i%79)) -eq 0 ]\
    \ || [ $((i%83)) -eq 0 ] || [ $((i%89)) -eq 0 ] || [ $((i%97)) -eq 0 ]\n     \
    \               then\n                        is_prime=1\n                   \
    \ fi\n                    if [ $((j%2)) -eq 0 ] || [ $((j%3)) -eq 0 ] || [ $((j%5))\
    \ -eq 0 ] || [ $((j%7)) -eq 0 ] || [ $((j%11)) -eq 0 ]\n}\n\ncandidate() {\n \
    \   is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpz5bt606r.sh: line 30: syntax error near unexpected token `}''\n/tmp/tmpz5bt606r.sh:
    line 30: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local i=2\n    while [[ $i -le $number ]]; do\n\
    \        if [[ $number%$i -eq 0 ]]; then\n            prime_numbers+=($i)\n  \
    \          number=$((number/i))\n        else\n            i=$((i+1))\n      \
    \  fi\n    done\n    if [[ ${#prime_numbers[@]} -eq 3 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    if [[ $1 -le 0 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 1 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 2 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 3 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 5 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 7 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 11 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 13 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 17 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 19 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 23 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 29 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 31 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 37 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 41 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 43 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 47 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 53 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 59 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 61 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq 67 ]]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpe5mnwjiz.sh: line 94: unexpected argument `newline'' to conditional
    binary operator\n/tmp/tmpe5mnwjiz.sh: line 94: syntax error near `-eq''\n/tmp/tmpe5mnwjiz.sh:
    line 94: `    if [[ $1 -eq''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=1\n    for ((i=2; i<=$number; i++))\n    do\n        if [ $(($number%$i))\
    \ -eq 0 ]\n        then\n            result=$(($result*$i))\n            number=$(($number/$i))\n\
    \            i=$(($i-1))\n        fi\n    done\n    if [ $result -eq $1 ]\n  \
    \  then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal res=0\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\tis_prime=$(is_prime $i)\n\t\tif [ $is_prime\
    \ -eq 1 ]\n\t\tthen\n\t\t\twhile [ $j -lt 100 ]\n\t\t\tdo\n\t\t\t\tis_prime=$(is_prime\
    \ $j)\n\t\t\t\tif [ $is_prime -eq 1 ]\n\t\t\t\tthen\n\t\t\t\t\twhile [ $k -lt\
    \ 100 ]\n\t\t\t\t\tdo\n\t\t\t\t\t\tis_prime=$(is_prime $k)\n\t\t\t\t\t\tif [ $is_prime\
    \ -eq 1 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tres=$(( $i * $j * $k ))\n\t\t\t\t\t\
    \t\tif [ $res -eq $num ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_multiply_prime=1\n\
    \t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tk=$(( $k\
    \ + 1 ))\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tj=$(( $j + 1 ))\n\t\t\tdone\n\t\t\
    fi\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh:
    line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh:
    line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh:
    line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh:
    line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh:
    line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -eq: unary
    operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime: command not found\n/tmp/tmpdra1u0km.sh:
    line 20: [: -eq: unary operator expected\n/tmp/tmpdra1u0km.sh: line 19: is_prime:
    command not found\n/tmp/tmpdra1u0km.sh: line 20: [: -e'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $(( $i\
    \ * $j * $k )) -eq $number ]\n                then\n                    result=true\n\
    \                fi\n                k=$(( $k + 1 ))\n            done\n     \
    \       j=$(( $j + 1 ))\n        done\n        i=$(( $i + 1 ))\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    # TODO\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp7zsrfbwm.sh: line 11: syntax error near unexpected token `}''\n/tmp/tmp7zsrfbwm.sh:
    line 11: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal count=0\n\twhile [ $i -le $num ]\n\tdo\n\t\tif [ $(($num % $i)) -eq 0\
    \ ]\n\t\tthen\n\t\t\tlocal prime=$(is_prime $i)\n\t\t\tif [ $prime -eq 1 ]\n\t\
    \t\tthen\n\t\t\t\tcount=$(($count + 1))\n\t\t\tfi\n\t\tfi\n\t\ti=$(($i + 1))\n\
    \tdone\n\tif [ $count -eq 3 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"\
    false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpomzjzah3.sh: line 17: is_prime: command not found\n/tmp/tmpomzjzah3.sh:
    line 18: [: -eq: unary operator expected\n/tmp/tmpomzjzah3.sh: line 17: is_prime:
    command not found\n/tmp/tmpomzjzah3.sh: line 18: [: -eq: unary operator expected\n/tmp/tmpomzjzah3.sh:
    line 17: is_prime: command not found\n/tmp/tmpomzjzah3.sh: line 18: [: -eq: unary
    operator expected\n/tmp/tmpomzjzah3.sh: line 17: is_prime: command not found\n/tmp/tmpomzjzah3.sh:
    line 18: [: -eq: unary operator expected\n/tmp/tmpomzjzah3.sh: line 17: is_prime:
    command not found\n/tmp/tmpomzjzah3.sh: line 18: [: -eq: unary operator expected\n/tmp/tmpomzjzah3.sh:
    line 17: is_prime: command not found\n/tmp/tmpomzjzah3.sh: line 18: [: -eq: unary
    operator expected\n/tmp/tmpomzjzah3.sh: line 17: is_prime: command not found\n/tmp/tmpomzjzah3.sh:
    line 18: [: -eq: unary operator expected\n/tmp/tmpomzjzah3.sh: line 17: is_prime:
    command not found\n/tmp/tmpomzjzah3.sh: line 18: [: -eq: unary operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_number=2\n\tlocal is_prime=true\n\tlocal is_multiply_prime=false\n\
    \tlocal counter=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal\
    \ m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal\
    \ s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal\
    \ y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal\
    \ e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\tlocal\
    \ k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal\
    \ q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal\
    \ w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal\
    \ c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal\
    \ i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal\
    \ o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal\
    \ u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal\
    \ a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\tlocal\
    \ g=0\n\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local n=$1\n    local\
    \ i=2\n    local divisors=()\n    while [ $i -lt $n ]; do\n        if [ $((n %\
    \ i)) -eq 0 ]; then\n            divisors+=($i)\n        fi\n        i=$((i +\
    \ 1))\n    done\n    if [ ${#divisors[@]} -eq 2 ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local count=0\n    local is_prime=0\n\
    \    local is_multiply_prime=0\n    while [ $i -lt $num ]\n    do\n        while\
    \ [ $j -lt $num ]\n        do\n            while [ $k -lt $num ]\n           \
    \ do\n                if [ $((num%i)) -eq 0 ] && [ $((num%j)) -eq 0 ] && [ $((num%k))\
    \ -eq 0 ]\n                then\n                    if [ $((i*j*k)) -eq $num\
    \ ]\n                    then\n                        is_multiply_prime=1\n \
    \                   fi\n                fi\n                k=$((k+1))\n     \
    \       done\n            j=$((j+1))\n            k=2\n        done\n        i=$((i+1))\n\
    \        j=2\n    done\n    if [ $is_multiply_prime -eq 1 ]\n    then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=30>
  stdout: <_io.BufferedReader name=62>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=true\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\twhile\
    \ [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\twhile\
    \ [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tresult=$(($i * $j * $k))\n\t\t\t\tif [\
    \ $result -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\
    \t\t\t\tfi\n\t\t\t\tk=$(($k + 1))\n\t\t\tdone\n\t\t\tj=$(($j + 1))\n\t\t\tk=2\n\
    \t\tdone\n\t\ti=$(($i + 1))\n\t\tj=2\n\tdone\n\techo \"false\"\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=1\n    while [ $i\
    \ -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n      \
    \      while [ $k -lt $number ]\n            do\n                if [ $((i*j*k))\
    \ -eq $number ]\n                then\n                    result=0\n        \
    \        fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \            k=2\n        done\n        i=$((i+1))\n        j=2\n    done\n  \
    \  if [ $result -eq 0 ]\n    then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=64>
  stdout: <_io.BufferedReader name=54>
  timestamp: 1660357373
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    local j=2\n    local k=2\n    local\
    \ result=0\n    local max=0\n    local min=0\n    local max_number=0\n    local\
    \ min_number=0\n    local middle_number=0\n    local middle=0\n    local is_multiply_prime=false\n\
    \    if [[ $number -eq 1 ]]; then\n        echo \"false\"\n        return\n  \
    \  fi\n    if [[ $number -eq 2 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 3 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 5 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 7 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 11 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 13 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 17 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 19 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 23 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 29 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 31 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 37 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 41 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 43 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 47 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 53 ]]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [[ $number -eq 59 ]]; then\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpyfrykj61.sh: line 92: syntax error near unexpected token `}''\n/tmp/tmpyfrykj61.sh:
    line 92: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_index=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\t\
    local m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\t\
    local s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\t\
    local y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\t\
    local e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal i1=0\n\tlocal j1=0\n\
    \tlocal k1=0\n\tlocal l1=0\n\tlocal m1=0\n\tlocal n1=0\n\tlocal o1=0\n\tlocal\
    \ p1=0\n\tlocal q1=0\n\tlocal r1=0\n\tlocal s1=0\n\tlocal t1=0\n\tlocal u1=0\n\
    \tlocal v1=0\n\tlocal w1=0\n\tlocal x1=0\n\tlocal y1=0\n\tlocal z1=0\n\tlocal\
    \ a1=0\n\tlocal b1=0\n\tlocal c1=0\n\tlocal d1=0\n\tlocal e1=0\n\tlocal f1=0\n\
    \tlocal g1=0\n\tlocal h1=0\n\tlocal i2=0\n\tlocal j2=0\n\tlocal k2=0\n\tlocal\
    \ l2=0\n\tlocal m2=0\n\tlocal n2=0\n\tlocal o2=0\n\tlocal p2=0\n\tlocal q2=0\n\
    \tlocal r2=0\n\tlocal s2=0\n\tlocal t2=0\n\tlocal u2=0\n\tlocal v2=0\n\tlocal\
    \ w2=0\n\tlocal x2=0\n\tlocal y2=0\n\tlocal z2=0\n\t\n}\n\ncandidate() {\n   \
    \ is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divisor=2\n\tlocal prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal\
    \ is_prime=true\n\tlocal is_multiply_prime=false\n\t\n\twhile [ $number -gt 1\
    \ ]\n\tdo\n\t\tis_prime=true\n\t\tfor (( i=2; i<$divisor; i++ ))\n\t\tdo\n\t\t\
    \tif [ $(( $divisor % $i )) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=false\n\t\t\t\
    \tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_prime = true ]\n\t\tthen\n\t\t\tif [\
    \ $(( $number % $divisor )) -eq 0 ]\n\t\t\tthen\n\t\t\t\tprime_numbers[$prime_numbers_count]=$divisor\n\
    \t\t\t\tprime_numbers_count=$(( $prime_numbers_count + 1 ))\n\t\t\t\tnumber=$((\
    \ $number / $divisor ))\n\t\t\telse\n\t\t\t\tdivisor=$(( $divisor + 1 ))\n\t\t\
    \tfi\n\t\telse\n\t\t\tdivisor=$(( $divisor + 1 ))\n\t\tfi\n\tdone\n\tif [ $prime_numbers_count\
    \ -eq 3 ]\n\tthen\n\t\tis_multiply_prime=true\n\tfi\n\techo $is_multiply_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \t\n\twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile\
    \ [ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tresult=$(( $i * $j * $k ))\n\t\t\t\tif [ $result\
    \ -eq $num ]\n\t\t\t\tthen\n\t\t\t\t\tis_prime=0\n\t\t\t\t\tfor (( l=2; l<$i;\
    \ l++ ))\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [ $(( $i % $l )) -eq 0 ]\n\t\t\t\t\t\t\
    then\n\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\t\t\t\
    done\n\t\t\t\t\tif [ $is_prime -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_prime=0\n\
    \t\t\t\t\t\tfor (( l=2; l<$j; l++ ))\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [ $(( $j\
    \ % $l )) -eq 0 ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\
    \t\tbreak\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\t\tif [ $is_prime -eq\
    \ 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=0\n\t\t\t\t\t\t\tfor (( l=2; l<$k;\
    \ l++ ))\n\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\tif [ $(( $k % $l )) -eq 0 ]\n\t\t\t\
    \t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\
    \t\t\t\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpn03pt29k.sh: line 57: syntax error near unexpected token `}''\n/tmp/tmpn03pt29k.sh:
    line 57: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal i=2\n\tlocal j=0\n\t\
    local is_prime=true\n\tlocal is_multiply_prime=false\n\t\n\twhile [ $i -le $number\
    \ ]\n\tdo\n\t\tj=2\n\t\tis_prime=true\n\t\twhile [ $j -lt $i ]\n\t\tdo\n\t\t\t\
    if [ $(($i % $j)) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=false\n\t\t\t\tbreak\n\
    \t\t\tfi\n\t\t\tj=$(($j + 1))\n\t\tdone\n\t\tif [ $is_prime = true ]\n\t\tthen\n\
    \t\t\tprime_numbers[$prime_numbers_count]=$i\n\t\t\tprime_numbers_count=$(($prime_numbers_count\
    \ + 1))\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\t\n\ti=0\n\twhile [ $i -lt $prime_numbers_count\
    \ ]\n\tdo\n\t\tj=$(($i + 1))\n\t\twhile [ $j -lt $prime_numbers_count ]\n\t\t\
    do\n\t\t\tk=$(($j + 1))\n\t\t\twhile [ $k -lt $prime_numbers_count ]\n\t\t\tdo\n\
    \t\t\t\tif [ $((${prime_numbers[$i]} * ${prime_numbers[$j]} * ${prime_numbers[$k]}))\
    \ -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\t\tbreak\n\
    \t\t\t\tfi\n\t\t\t\tk=$(($k + 1))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime =\
    \ true ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(($j + 1))\n\t\tdone\n\
    \t\tif [ $is_multiply_prime = true ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(($\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpujhep9e6.sh: line 65: unexpected EOF while looking for matching
    `)''\n/tmp/tmpujhep9e6.sh: line 87: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_number=0\n\tlocal counter=0\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \tlocal prime_numbers=()\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\
    \tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\
    \tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\
    \tlocal y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\
    \tlocal e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\
    \tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\
    \tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\
    \tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal aa=0\n\tlocal bb=0\n\
    \tlocal cc=0\n\tlocal dd=0\n\tlocal ee=0\n\tlocal ff=0\n\tlocal gg=0\n\tlocal\
    \ hh=0\n\tlocal ii=0\n\tlocal jj=0\n\tlocal kk=0\n\tlocal ll=0\n\tlocal mm=0\n\
    \tlocal nn=0\n\tlocal oo=0\n\tlocal pp=0\n\tlocal qq=0\n\tlocal rr=0\n\tlocal\
    \ ss=0\n\tlocal tt=0\n\tlocal uu=0\n\tlocal vv=0\n\tlocal ww=0\n\tlocal xx=0\n\
    \tlocal yy=0\n\tlocal zz=0\n\tlocal aaa=0\n\tlocal bbb=0\n\tlocal ccc=0\n\tlocal\
    \ ddd\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal flag=0\n\tlocal count=0\n\tlocal arr=()\n\t\
    while [ $i -le $num ]\n\tdo\n\t\twhile [ $j -le $i ]\n\t\tdo\n\t\t\tif [ $((i%j))\
    \ -eq 0 ]\n\t\t\tthen\n\t\t\t\tflag=1\n\t\t\tfi\n\t\t\tj=$((j+1))\n\t\tdone\n\t\
    \tif [ $flag -eq 0 ]\n\t\tthen\n\t\t\tarr[$count]=$i\n\t\t\tcount=$((count+1))\n\
    \t\tfi\n\t\tflag=0\n\t\tj=2\n\t\ti=$((i+1))\n\tdone\n\ti=0\n\tj=0\n\tk=0\n\twhile\
    \ [ $i -lt $count ]\n\tdo\n\t\twhile [ $j -lt $count ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt $count ]\n\t\t\tdo\n\t\t\t\tif [ $((num%(arr[$i]*arr[$j]*arr[$k]))) -eq\
    \ 0 ]\n\t\t\t\tthen\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\
    \t\t\tk=$((k+1))\n\t\t\tdone\n\t\t\tk=0\n\t\t\tj=$((j+1))\n\t\tdone\n\t\tj=0\n\
    \t\ti=$((i+1))\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local is_prime=0\n    local is_multiply_prime=0\n\
    \    while [ $i -lt $number ]\n    do\n        is_prime=0\n        j=2\n     \
    \   while [ $j -lt $i ]\n        do\n            if [ $(($i % $j)) -eq 0 ]\n \
    \           then\n                is_prime=1\n            fi\n            j=$(($j\
    \ + 1))\n        done\n        if [ $is_prime -eq 0 ]\n        then\n        \
    \    k=2\n            while [ $k -lt $number ]\n            do\n             \
    \   is_prime=0\n                j=2\n                while [ $j -lt $k ]\n   \
    \             do\n                    if [ $(($k % $j)) -eq 0 ]\n            \
    \        then\n                        is_prime=1\n                    fi\n  \
    \                  j=$(($j + 1))\n                done\n                if [ $is_prime\
    \ -eq 0 ]\n                then\n                    if [ $(($number % $(($i *\
    \ $k)))) -eq 0 ]\n                    then\n                        is_multiply_prime=1\n\
    \                    fi\n                fi\n                k=$(($k + 1))\n \
    \           done\n        fi\n        i=$(($i + 1))\n    done\n    if [ $is_multiply_prime\
    \ -eq 1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    local j=2\n    local k=2\n    local\
    \ result=0\n    while [ $i -lt $number ]\n    do\n        while [ $j -lt $number\
    \ ]\n        do\n            while [ $k -lt $number ]\n            do\n      \
    \          result=$((i*j*k))\n                if [ $result -eq $number ]\n   \
    \             then\n                    echo \"true\"\n                    return\n\
    \                fi\n                k=$((k+1))\n            done\n          \
    \  j=$((j+1))\n            k=2\n        done\n        i=$((i+1))\n        j=2\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $((i*j*k))\
    \ -eq $number ]\n                then\n                    result=true\n     \
    \           fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=\"$1\"\n\t\
    local i=2\n\tlocal prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal is_prime=0\n\
    \tlocal is_multiply_prime=0\n\tlocal is_multiply_prime_count=0\n\tlocal is_multiply_prime_count_max=3\n\
    \tlocal is_multiply_prime_result=false\n\twhile [ $i -lt $number ]; do\n\t\tis_prime=0\n\
    \t\tfor (( j=2; j<$i; j++ )); do\n\t\t\tif [ $(( $i % $j )) -eq 0 ]; then\n\t\t\
    \t\tis_prime=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_prime -eq 0 ];\
    \ then\n\t\t\tprime_numbers[$prime_numbers_count]=$i\n\t\t\tprime_numbers_count=$((\
    \ $prime_numbers_count + 1 ))\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tfor (( i=0;\
    \ i<$prime_numbers_count; i++ )); do\n\t\tfor (( j=0; j<$prime_numbers_count;\
    \ j++ )); do\n\t\t\tfor (( k=0; k<$prime_numbers_count; k++ )); do\n\t\t\t\tis_multiply_prime=$((\
    \ ${prime_numbers[$i]} * ${prime_numbers[$j]} * ${prime_numbers[$k]} ))\n\t\t\t\
    \tif [ $is_multiply_prime -eq $number ]; then\n\t\t\t\t\tis_multiply_prime_count=$((\
    \ $is_multiply_prime_count + 1 ))\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\tdone\n\t\
    if [ $is_multiply_prime_count -eq $is_multiply_prime_count_max ]; then\n\t\tis_multiply_prime_result=true\n\
    \tfi\n\techo $is_multiply_prime_result\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal is_prime=true\n\tfor (( i=2; i<$number; i++ )); do\n\
    \t\tfor (( j=2; j<i; j++ )); do\n\t\t\tif (( $i % $j == 0 )); then\n\t\t\t\tis_prime=false\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif $is_prime; then\n\t\t\tprime_numbers+=($i)\n\
    \t\tfi\n\t\tis_prime=true\n\tdone\n\tfor (( i=0; i<${#prime_numbers[@]}; i++ ));\
    \ do\n\t\tfor (( j=i+1; j<${#prime_numbers[@]}; j++ )); do\n\t\t\tif (( $number\
    \ % (${prime_numbers[$i]} * ${prime_numbers[$j]}) == 0 )); then\n\t\t\t\tfor ((\
    \ k=j+1; k<${#prime_numbers[@]}; k++ )); do\n\t\t\t\t\tif (( $number % (${prime_numbers[$i]}\
    \ * ${prime_numbers[$j]} * ${prime_numbers[$k]}) == 0 )); then\n\t\t\t\t\t\techo\
    \ \"true\"\n\t\t\t\t\t\treturn\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\tdone\n\
    \tdone\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=1\n    local counter=0\n    local i=2\n    while [ $i -le $number\
    \ ] && [ $counter -lt 3 ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n\
    \            result=$(($result * $i))\n            counter=$(($counter + 1))\n\
    \        fi\n        i=$(($i + 1))\n    done\n    if [ $result -eq $number ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local divisor=2\n    local prime_factors=()\n    while [ $number -gt 1 ]; do\n\
    \        if [ $(($number % $divisor)) -eq 0 ]; then\n            number=$(($number\
    \ / $divisor))\n            prime_factors+=($divisor)\n        else\n        \
    \    divisor=$(($divisor + 1))\n        fi\n    done\n    if [ ${#prime_factors[@]}\
    \ -eq 3 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal prime_factors=()\n\tlocal is_prime=1\n\twhile [ $number -gt 1 ]\n\
    \tdo\n\t\tif [ $((number % i)) -eq 0 ]\n\t\tthen\n\t\t\tnumber=$((number / i))\n\
    \t\t\tprime_factors+=($i)\n\t\telse\n\t\t\ti=$((i + 1))\n\t\tfi\n\tdone\n\tfor\
    \ ((j=0; j<${#prime_factors[@]}; j++))\n\tdo\n\t\tfor ((k=2; k<${prime_factors[j]};\
    \ k++))\n\t\tdo\n\t\t\tif [ $((prime_factors[j] % k)) -eq 0 ]\n\t\t\tthen\n\t\t\
    \t\tis_prime=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tdone\n\tif [ $is_prime -eq\
    \ 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_factors=()\n    while [ $i -lt $num ]; do\n        if [\
    \ $((num % i)) -eq 0 ]; then\n            prime_factors+=($i)\n            num=$((num\
    \ / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n    prime_factors+=($num)\n\
    \    if [ ${#prime_factors[@]} -eq 3 ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=0\n    local is_prime=0\n\
    \    local is_multiply_prime=0\n    local is_multiply_prime_result=0\n    while\
    \ [ $i -lt 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n         \
    \   while [ $k -lt 100 ]\n            do\n                result=$((i*j*k))\n\
    \                if [ $result -eq $number ]\n                then\n          \
    \          is_multiply_prime=1\n                    break\n                fi\n\
    \                k=$((k+1))\n            done\n            if [ $is_multiply_prime\
    \ -eq 1 ]\n            then\n                break\n            fi\n         \
    \   j=$((j+1))\n        done\n        if [ $is_multiply_prime -eq 1 ]\n      \
    \  then\n            break\n        fi\n        i=$((i+1))\n    done\n    if [\
    \ $is_multiply_prime -eq 1 ]\n    then\n        is_prime=1\n        for (( i=2;\
    \ i<$i; i++ ))\n        do\n            if [ $((i%i)) -eq 0 ]\n            then\n\
    \                is_prime=0\n                break\n            fi\n        done\n\
    \        if [ $is_prime -eq 1 ]\n        then\n            is_prime=1\n      \
    \      for (( j=2; j<$j; j++ ))\n            do\n                if [ $((j%j))\
    \ -eq 0 ]\n                then\n                    is_prime=0\n            \
    \        break\n                fi\n            done\n            if [ $is_prime\
    \ -eq 1 ]\n            then\n                is_prime=1\n                for ((\
    \ k=2; k<$k; k++ ))\n                do\n                    if [ $((k%k)) -eq\
    \ 0 ]\n                    then\n                        is_prime=0\n        \
    \                break\n                    fi\n                done\n       \
    \         if [ $is_prime -eq 1 ]\n                then\n                    is_multiply_prime_result=1\n\
    \                fi\n            fi\n        fi\n    fi\n    if [ $is_multiply_prime_result\
    \ -\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptxa1qn9o.sh: line 85: syntax error near unexpected token `}''\n/tmp/tmptxa1qn9o.sh:
    line 85: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local divisor=2\n    local result=0\n    local prime_numbers=()\n\
    \    local prime_numbers_count=0\n    local prime_numbers_string=\"\"\n    local\
    \ is_multiply_prime=false\n\n    while [ $divisor -lt $number ]\n    do\n    \
    \    result=$((number % divisor))\n        if [ $result -eq 0 ]\n        then\n\
    \            is_prime=false\n            break\n        fi\n        divisor=$((divisor\
    \ + 1))\n    done\n\n    if [ $is_prime = true ]\n    then\n        prime_numbers+=($number)\n\
    \        prime_numbers_count=$((prime_numbers_count + 1))\n    fi\n\n    if [\
    \ $prime_numbers_count -eq 3 ]\n    then\n        is_multiply_prime=true\n   \
    \ fi\n\n    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=\"2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71\
    \ 73 79 83 89 97\"\n    local result=1\n    for prime in $prime_numbers; do\n\
    \        if [[ $number -eq $prime ]]; then\n            result=0\n           \
    \ break\n        elif [[ $number -gt $prime ]]; then\n            if [[ $((number\
    \ % prime)) -eq 0 ]]; then\n                result=0\n                break\n\
    \            fi\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local result=false\n    while [ $i -lt\
    \ 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n            while [\
    \ $k -lt 100 ]\n            do\n                if [ $((i*j*k)) -eq $num ]\n \
    \               then\n                    result=true\n                fi\n  \
    \              ((k++))\n            done\n            ((j++))\n        done\n\
    \        ((i++))\n    done\n    echo $result\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    local j=2\n    local k=2\n    local\
    \ result=0\n    local is_multiply_prime=false\n    while [ $i -lt $number ]\n\
    \    do\n        while [ $j -lt $number ]\n        do\n            while [ $k\
    \ -lt $number ]\n            do\n                result=$(( i * j * k ))\n   \
    \             if [ $result -eq $number ]\n                then\n             \
    \       is_multiply_prime=true\n                    break\n                fi\n\
    \                k=$(( k + 1 ))\n            done\n            if [ $is_multiply_prime\
    \ = true ]\n            then\n                break\n            fi\n        \
    \    j=$(( j + 1 ))\n        done\n        if [ $is_multiply_prime = true ]\n\
    \        then\n            break\n        fi\n        i=$(( i + 1 ))\n    done\n\
    \    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal count=0\n\tlocal prime_nums=\"\"\n\twhile [ $i -le $num ]\n\tdo\n\t\t\
    if [ $(($num % $i)) -eq 0 ]\n\t\tthen\n\t\t\tif [ $(is_prime $i) -eq 1 ]\n\t\t\
    \tthen\n\t\t\t\tprime_nums=\"$prime_nums $i\"\n\t\t\t\tcount=$(($count + 1))\n\
    \t\t\tfi\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $count -eq 3 ]\n\tthen\n\t\
    \techo \"$prime_nums\"\n\t\treturn 1\n\telse\n\t\treturn 0\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwkc5x362.sh: line 18: is_prime: command not found\n/tmp/tmpwkc5x362.sh:
    line 18: [: -eq: unary operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_num=0\n    local prime_nums=()\n    while [ $i -lt $num\
    \ ]; do\n        if [ $(is_prime $i) == \"true\" ]; then\n            prime_nums+=($i)\n\
    \            prime_num=$((prime_num + 1))\n        fi\n        i=$((i + 1))\n\
    \    done\n    local j=0\n    local k=0\n    local l=0\n    local sum=0\n    while\
    \ [ $j -lt $prime_num ]; do\n        while [ $k -lt $prime_num ]; do\n       \
    \     while [ $l -lt $prime_num ]; do\n                sum=$((prime_nums[$j] *\
    \ prime_nums[$k] * prime_nums[$l]))\n                if [ $sum -eq $num ]; then\n\
    \                    echo \"true\"\n                    return\n             \
    \   fi\n                l=$((l + 1))\n            done\n            k=$((k + 1))\n\
    \        done\n        j=$((j + 1))\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh:
    line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh:
    line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh:
    line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh:
    line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh:
    line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime: command not found\n/tmp/tmp62h9son0.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp62h9son0.sh: line 15: is_prime:
    command not found\n/tmp/tmp62h9son0.sh: line 15: [: ==: unary operator'
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local prime_numbers=()\n    while [[ $number -gt 1 ]]; do\n \
    \       if [[ $((number % i)) -eq 0 ]]; then\n            prime_numbers+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    if [[ ${#prime_numbers[@]} -eq 3 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal prime_num=0\n\
    \tlocal prime_num_1=0\n\tlocal prime_num_2=0\n\tlocal prime_num_3=0\n\tlocal is_prime=0\n\
    \tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\
    \tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\
    \tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\
    \tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\
    \tlocal g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\
    \tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\
    \tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\
    \tlocal y=0\n\tlocal z=0\n\tlocal aa=0\n\tlocal bb=0\n\tlocal cc=0\n\tlocal dd=0\n\
    \tlocal ee=0\n\tlocal ff=0\n\tlocal gg=0\n\tlocal hh=0\n\tlocal ii=0\n\tlocal\
    \ jj=0\n\tlocal kk=0\n\tlocal ll=0\n\tlocal mm=0\n\tlocal nn=0\n\tlocal oo=0\n\
    \tlocal pp=0\n\tlocal qq=0\n\tlocal rr=0\n\tlocal ss=0\n\tlocal tt=0\n\tlocal\
    \ uu=0\n\tlocal vv=0\n\tlocal ww=0\n\tlocal xx=0\n\tlocal yy=0\n\tlocal zz=0\n\
    \tlocal aaa=0\n\tlocal bbb=0\n\tlocal ccc=0\n\t\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local factors=()\n    local factor=2\n    local i=0\n    local is_prime=true\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors[$i]=$factor\n\
    \            i=$((i + 1))\n        done\n        factor=$((factor + 1))\n    done\n\
    \    if [ ${#factors[@]} -ne 3 ]; then\n        is_prime=false\n    else\n   \
    \     for ((i = 0; i < ${#factors[@]}; i++)); do\n            for ((j = 2; j <\
    \ ${factors[$i]}; j++)); do\n                if [ $((factors[$i] % j)) -eq 0 ];\
    \ then\n                    is_prime=false\n                    break\n      \
    \          fi\n            done\n        done\n    fi\n    echo $is_prime\n}\n\
    \ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal a=$(($num/3))\n\
    \tlocal b=$(($num/5))\n\tlocal c=$(($num/7))\n\tlocal d=$(($num/11))\n\tlocal\
    \ e=$(($num/13))\n\tlocal f=$(($num/17))\n\tlocal g=$(($num/19))\n\tlocal h=$(($num/23))\n\
    \tlocal i=$(($num/29))\n\tlocal j=$(($num/31))\n\tlocal k=$(($num/37))\n\tlocal\
    \ l=$(($num/41))\n\tlocal m=$(($num/43))\n\tlocal n=$(($num/47))\n\tlocal o=$(($num/53))\n\
    \tlocal p=$(($num/59))\n\tlocal q=$(($num/61))\n\tlocal r=$(($num/67))\n\tlocal\
    \ s=$(($num/71))\n\tlocal t=$(($num/73))\n\tlocal u=$(($num/79))\n\tlocal v=$(($num/83))\n\
    \tlocal w=$(($num/89))\n\tlocal x=$(($num/97))\n\tlocal y=$(($num/101))\n\tlocal\
    \ z=$(($num/103))\n\tlocal aa=$(($num/107))\n\tlocal bb=$(($num/109))\n\tlocal\
    \ cc=$(($num/113))\n\tlocal dd=$(($num/127))\n\tlocal ee=$(($num/131))\n\tlocal\
    \ ff=$(($num/137))\n\tlocal gg=$(($num/139))\n\tlocal hh=$(($num/149))\n\tlocal\
    \ ii=$(($num/151))\n\tlocal jj=$(($num/157))\n\tlocal kk=$(($num/163))\n\tlocal\
    \ ll=$(($num/167))\n\tlocal mm=$(($num/173))\n\tlocal nn=$(($num/179))\n\tlocal\
    \ oo=$(($num/181))\n\tlocal pp=$(($num/191))\n\tlocal qq=$(($num/193))\n\tlocal\
    \ rr=$(($num/197))\n\tlocal ss=$(($num/199))\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local n=$1\n    local\
    \ a=$(factor $n | cut -d \":\" -f 2 | cut -d \" \" -f 2)\n    local b=$(factor\
    \ $n | cut -d \":\" -f 3 | cut -d \" \" -f 2)\n    local c=$(factor $n | cut -d\
    \ \":\" -f 4 | cut -d \" \" -f 2)\n    local d=$(factor $n | cut -d \":\" -f 5\
    \ | cut -d \" \" -f 2)\n    local e=$(factor $n | cut -d \":\" -f 6 | cut -d \"\
    \ \" -f 2)\n    local f=$(factor $n | cut -d \":\" -f 7 | cut -d \" \" -f 2)\n\
    \    local g=$(factor $n | cut -d \":\" -f 8 | cut -d \" \" -f 2)\n    local h=$(factor\
    \ $n | cut -d \":\" -f 9 | cut -d \" \" -f 2)\n    local i=$(factor $n | cut -d\
    \ \":\" -f 10 | cut -d \" \" -f 2)\n    local j=$(factor $n | cut -d \":\" -f\
    \ 11 | cut -d \" \" -f 2)\n    local k=$(factor $n | cut -d \":\" -f 12 | cut\
    \ -d \" \" -f 2)\n    local l=$(factor $n | cut -d \":\" -f 13 | cut -d \" \"\
    \ -f 2)\n    local m=$(factor $n | cut -d \":\" -f 14 | cut -d \" \" -f 2)\n \
    \   local o=$(factor $n | cut -d \":\" -f 15 | cut -d \" \" -f 2)\n    local p=$(factor\
    \ $n | cut -d \":\" -f 16 | cut -d \" \" -f 2)\n    local q=$(factor $n | cut\
    \ -d \":\" -f 17 | cut -d \" \" -f 2)\n    local r=$(factor $n | cut -d \":\"\
    \ -f 18 | cut -d \" \" -f 2)\n    local s=$(factor $n | cut -d \":\" -f 19 | cut\
    \ -d \" \" -f 2)\n   \n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\twhile [ $i -lt\
    \ $num ]\n\tdo\n\t\twhile [ $j -lt $num ]\n\t\tdo\n\t\t\twhile [ $k -lt $num ]\n\
    \t\t\tdo\n\t\t\t\tresult=$(( $i * $j * $k ))\n\t\t\t\tif [ $result -eq $num ]\n\
    \t\t\t\tthen\n\t\t\t\t\tis_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tk=$((\
    \ $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_prime -eq 1 ]\n\t\t\tthen\n\t\t\t\tbreak\n\
    \t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_prime -eq 1 ]\n\t\tthen\n\
    \t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $is_prime -eq 1 ]\n\t\
    then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=$(seq 2 $number | awk '{for(i=2;i<=sqrt($1);i++)if($1%i==0){next};print\
    \ $1}')\n    for prime_number in $prime_numbers; do\n        if [ $((number %\
    \ prime_number)) -eq 0 ]; then\n            local result=$(is_multiply_prime $((number\
    \ / prime_number)))\n            if [ \"$result\" == \"true\" ]; then\n      \
    \          echo \"true\"\n                return\n            fi\n        fi\n\
    \    done\n    echo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\twhile [ $i -lt $number\
    \ ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\twhile [ $k -lt $number\
    \ ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\t\tthen\n\t\
    \t\t\t\tresult=true\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tj=$((\
    \ $j + 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal count=0\n\tlocal prime_num=0\n\tlocal prime_num_1=0\n\tlocal prime_num_2=0\n\
    \tlocal prime_num_3=0\n\tlocal is_prime=0\n\tlocal is_prime_1=0\n\tlocal is_prime_2=0\n\
    \tlocal is_prime_3=0\n\tlocal is_multiply_prime=0\n\t\n\twhile [ $i -lt $num ]\n\
    \tdo\n\t\tif [ $((num%i)) -eq 0 ]\n\t\tthen\n\t\t\tprime_num=$i\n\t\t\tis_prime=1\n\
    \t\t\tbreak\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\t\n\tif [ $is_prime -eq 1 ]\n\t\
    then\n\t\ti=2\n\t\twhile [ $i -lt $prime_num ]\n\t\tdo\n\t\t\tif [ $((prime_num%i))\
    \ -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\ti=$((i+1))\n\
    \t\tdone\n\tfi\n\t\n\tif [ $is_prime -eq 1 ]\n\tthen\n\t\tprime_num_1=$prime_num\n\
    \t\tnum=$((num/prime_num))\n\t\ti=2\n\t\twhile [ $i -lt $num ]\n\t\tdo\n\t\t\t\
    if [ $((num%i)) -eq 0 ]\n\t\t\tthen\n\t\t\t\tprime_num=$i\n\t\t\t\tis_prime_1=1\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\t\ti=$((i+1))\n\t\tdone\n\t\t\n\t\tif [ $is_prime_1\
    \ -eq 1 ]\n\t\tthen\n\t\t\ti=2\n\t\t\twhile [ $i -lt $prime_num ]\n\t\t\tdo\n\t\
    \t\t\tif [ $((prime_num%i)) -eq 0 ]\n\t\t\t\tthen\n\t\t\t\t\tis_prime_1=0\n\t\t\
    \t\t\tbreak\n\t\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp8rxp1cqz.sh: line 74: syntax error near unexpected token `}''\n/tmp/tmp8rxp1cqz.sh:
    line 74: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal count=0\n\tlocal is_prime=0\n\
    \tlocal is_multiply_prime=0\n\twhile [ $i -le $number ]\n\tdo\n\t\twhile [ $j\
    \ -le $i ]\n\t\tdo\n\t\t\twhile [ $k -le $j ]\n\t\t\tdo\n\t\t\t\tif [ $(( $j %\
    \ $k )) -eq 0 ]\n\t\t\t\tthen\n\t\t\t\t\tcount=$(( $count + 1 ))\n\t\t\t\tfi\n\
    \t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $count -eq 2 ]\n\t\t\tthen\n\t\
    \t\t\tis_prime=1\n\t\t\telse\n\t\t\t\tis_prime=0\n\t\t\tfi\n\t\t\tif [ $(( $number\
    \ % $j )) -eq 0 ] && [ $is_prime -eq 1 ]\n\t\t\tthen\n\t\t\t\tresult=$(( $result\
    \ * $j ))\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\t\tcount=0\n\t\tdone\n\t\tif [\
    \ $result -eq $number ]\n\t\tthen\n\t\t\tis_multiply_prime=1\n\t\telse\n\t\t\t\
    is_multiply_prime=0\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\t\tj=2\n\t\tresult=1\n\tdone\n\
    \tif [ $is_multiply_prime -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo\
    \ \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\twhile [ $i -le $number ]\n\tdo\n\t\tif [ $(($number\
    \ % $i)) -eq 0 ]\n\t\tthen\n\t\t\tresult=$(($result * $i))\n\t\t\tnumber=$(($number\
    \ / $i))\n\t\t\ti=1\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $result -eq $1\
    \ ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=true\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\t\
    while [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number\
    \ ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\tfi\n\t\t\t\tk=$((\
    \ $k + 1 ))\n\t\t\tdone\n\t\t\tj=$(( $j + 1 ))\n\t\t\tk=2\n\t\tdone\n\t\ti=$((\
    \ $i + 1 ))\n\t\tj=2\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=63>
  stdout: <_io.BufferedReader name=14>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # To get\
    \ the output of a command in a variable in bash you can use the following syntax:\n\
    \    # var=$(cmd)\n    #\n    # For example, if you want to store the result of\
    \ \"ls -l\" in a variable called \"myvar\" you can use:\n    # myvar=$(ls -l)\n\
    \    #\n    # You can find more information about this topic running:\n    # man\
    \ bash\n    # There's also the following link:\n    # http://tldp.org/LDP/abs/html/comparison-ops.html\n\
    \    #\n    # Good luck!\n    echo \"true\"\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\tlocal is_prime=false\n\twhile\
    \ [ $i -lt $num ]\n\tdo\n\t\twhile [ $j -lt $num ]\n\t\tdo\n\t\t\twhile [ $k -lt\
    \ $num ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $num ]\n\t\t\t\tthen\n\
    \t\t\t\t\tis_prime=true\n\t\t\t\t\tfor (( l=2; l<$i; l++ ))\n\t\t\t\t\tdo\n\t\t\
    \t\t\t\tif [ $(( $i % $l )) -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=false\n\
    \t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\tif [ $is_prime\
    \ == true ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_prime=true\n\t\t\t\t\t\tfor (( l=2;\
    \ l<$j; l++ ))\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [ $(( $j % $l )) -eq 0 ]\n\t\t\
    \t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_prime=false\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\
    \t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\t\tif [ $is_prime == true ]\n\t\t\t\t\t\t\
    then\n\t\t\t\t\t\t\tis_prime=true\n\t\t\t\t\t\t\tfor (( l=2; l<$k; l++ ))\n\t\t\
    \t\t\t\t\tdo\n\t\t\t\t\t\t\t\tif [ $(( $k % $l )) -eq 0 ]\n\t\t\t\t\t\t\t\tthen\n\
    \t\t\t\t\t\t\t\t\tis_prime=false\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\
    \t\t\t\t\t\t\tdone\n\t\t\t\t\t\t\tif [ $is\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpfwpv8hj7.sh: line 56: syntax error near unexpected token `}''\n/tmp/tmpfwpv8hj7.sh:
    line 56: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal divisor=2\n\
    \tlocal is_prime=1\n\tlocal prime_factors=()\n\tlocal i=0\n\tlocal is_multiply_prime=0\n\
    \t\n\twhile [ $divisor -lt $num ]\n\tdo\n\t\tif [ $(($num % $divisor)) -eq 0 ]\n\
    \t\tthen\n\t\t\tis_prime=0\n\t\t\tfor (( i=2; i<$divisor; i++ ))\n\t\t\tdo\n\t\
    \t\t\tif [ $(($divisor % $i)) -eq 0 ]\n\t\t\t\tthen\n\t\t\t\t\tis_prime=1\n\t\t\
    \t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tif [ $is_prime -eq 0 ]\n\t\t\tthen\n\
    \t\t\t\tprime_factors+=($divisor)\n\t\t\tfi\n\t\tfi\n\t\tdivisor=$(($divisor +\
    \ 1))\n\tdone\n\tif [ ${#prime_factors[@]} -eq 3 ]\n\tthen\n\t\tis_multiply_prime=1\n\
    \tfi\n\techo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal prime_factors=()\n\twhile [[ $number -gt 1 ]]; do\n\t\tif [[ $((number\
    \ % i)) -eq 0 ]]; then\n\t\t\tprime_factors+=($i)\n\t\t\tnumber=$((number / i))\n\
    \t\telse\n\t\t\ti=$((i + 1))\n\t\tfi\n\tdone\n\tif [[ ${#prime_factors[@]} -eq\
    \ 3 ]]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\twhile [ $j -le $number ]\n\t\tdo\n\t\t\twhile [ $k -le $number ]\n\t\
    \t\tdo\n\t\t\t\tresult=$((i*j*k))\n\t\t\t\tif [ $result -eq $number ]\n\t\t\t\t\
    then\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\t\tk=$((k+1))\n\
    \t\t\tdone\n\t\t\tj=$((j+1))\n\t\t\tk=2\n\t\tdone\n\t\ti=$((i+1))\n\t\tj=2\n\t\
    done\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local result=1\n    local prime_numbers=\"\"\n    while [ $i\
    \ -le $number ]\n    do\n        while [ $(($number % $i)) -eq 0 ]\n        do\n\
    \            prime_numbers=\"$prime_numbers $i\"\n            number=$(($number\
    \ / $i))\n        done\n        i=$(($i + 1))\n    done\n    for i in $prime_numbers\n\
    \    do\n        result=$(($result * $i))\n    done\n    if [ $result -eq $1 ]\n\
    \    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=true\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal a=0\n\tlocal b=0\n\
    \tlocal c=0\n\tlocal result=0\n\twhile [ $i -lt $number ]\n\tdo\n\t\tis_prime=true\n\
    \t\tj=2\n\t\twhile [ $j -lt $i ]\n\t\tdo\n\t\t\tif [ $(($i % $j)) -eq 0 ]\n\t\t\
    \tthen\n\t\t\t\tis_prime=false\n\t\t\tfi\n\t\t\tj=$(($j + 1))\n\t\tdone\n\t\t\
    if [ $is_prime = true ]\n\t\tthen\n\t\t\tk=2\n\t\t\twhile [ $k -lt $number ]\n\
    \t\t\tdo\n\t\t\t\tis_prime=true\n\t\t\t\tj=2\n\t\t\t\twhile [ $j -lt $k ]\n\t\t\
    \t\tdo\n\t\t\t\t\tif [ $(($k % $j)) -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_prime=false\n\
    \t\t\t\t\tfi\n\t\t\t\t\tj=$(($j + 1))\n\t\t\t\tdone\n\t\t\t\tif [ $is_prime =\
    \ true ]\n\t\t\t\tthen\n\t\t\t\t\tresult=$(($i * $k))\n\t\t\t\t\tif [ $result\
    \ -eq $number ]\n\t\t\t\t\tthen\n\t\t\t\t\t\ta=$i\n\t\t\t\t\t\tb=$k\n\t\t\t\t\t\
    \tc=$(($number / $result))\n\t\t\t\t\t\techo \"true\"\n\t\t\t\t\t\techo \"$number\
    \ = $a * $b * $c\"\n\t\t\t\t\t\treturn\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tk=$(($k\
    \ + 1))\n\t\t\tdone\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\techo \"false\"\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local i=2\n    local j=0\n    local is_prime=true\n\
    \    local is_multiply_prime=false\n    local prime_number_count=0\n    local\
    \ prime_number_product=1\n    while [ $i -le $number ]; do\n        is_prime=true\n\
    \        j=2\n        while [ $j -lt $i ]; do\n            if [ $(($i % $j)) -eq\
    \ 0 ]; then\n                is_prime=false\n                break\n         \
    \   fi\n            j=$(($j + 1))\n        done\n        if [ $is_prime = true\
    \ ]; then\n            prime_numbers+=($i)\n        fi\n        i=$(($i + 1))\n\
    \    done\n    for prime_number in ${prime_numbers[@]}; do\n        if [ $(($number\
    \ % $prime_number)) -eq 0 ]; then\n            prime_number_count=$(($prime_number_count\
    \ + 1))\n            prime_number_product=$(($prime_number_product * $prime_number))\n\
    \        fi\n    done\n    if [ $prime_number_count -eq 3 ] && [ $prime_number_product\
    \ -eq $number ]; then\n        is_multiply_prime=true\n    fi\n    echo $is_multiply_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\twhile [ $i -lt $num ]\n\tdo\n\
    \t\twhile [ $j -lt $num ]\n\t\tdo\n\t\t\twhile [ $k -lt $num ]\n\t\t\tdo\n\t\t\
    \t\tif [ $(( $i * $j * $k )) -eq $num ]\n\t\t\t\tthen\n\t\t\t\t\tresult=true\n\
    \t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tj=$((\
    \ $j + 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\twhile [ $j -le $number ]\n\t\tdo\n\t\t\twhile [ $k -le $number ]\n\t\
    \t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\
    \techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\t\
    done\n\t\t\tj=$(( $j + 1 ))\n\t\t\tk=2\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\t\tj=2\n\
    \tdone\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local is_prime=0\n    local is_multiply_prime=0\n\
    \    while [ $i -lt 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n\
    \            while [ $k -lt 100 ]\n            do\n                if [ $((i*j*k))\
    \ -eq $num ]\n                then\n                    is_multiply_prime=1\n\
    \                    break\n                fi\n                k=$((k+1))\n \
    \           done\n            if [ $is_multiply_prime -eq 1 ]\n            then\n\
    \                break\n            fi\n            j=$((j+1))\n        done\n\
    \        if [ $is_multiply_prime -eq 1 ]\n        then\n            break\n  \
    \      fi\n        i=$((i+1))\n    done\n    if [ $is_multiply_prime -eq 1 ]\n\
    \    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal result=1\n\
    \tfor (( i=2; i<=$num; i++ ))\n\tdo\n\t\tif [ $(($num%$i)) -eq 0 ]\n\t\tthen\n\
    \t\t\tresult=$(($result*$i))\n\t\t\tnum=$(($num/$i))\n\t\t\ti=$(($i-1))\n\t\t\
    fi\n\tdone\n\tif [ $result -eq $1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo\
    \ \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    while [ $i -lt $number ]\n    do\n \
    \       if [ $((number % i)) -eq 0 ]\n        then\n            is_prime=false\n\
    \            break\n        fi\n        i=$((i + 1))\n    done\n    if [ $is_prime\
    \ == true ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # To access\
    \ arguments use \"$@\"\n    # To access the first argument use \"$1\"\n    # To\
    \ access the second argument use \"$2\"\n    # To access the nth argument use\
    \ \"$n\"\n    echo \"true\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \tlocal is_multiply_prime_result=0\n\tlocal is_prime_result=0\n\tlocal is_prime_result_1=0\n\
    \tlocal is_prime_result_2=0\n\tlocal is_prime_result_3=0\n\tlocal is_prime_result_4=0\n\
    \tlocal is_prime_result_5=0\n\tlocal is_prime_result_6=0\n\tlocal is_prime_result_7=0\n\
    \tlocal is_prime_result_8=0\n\tlocal is_prime_result_9=0\n\tlocal is_prime_result_10=0\n\
    \tlocal is_prime_result_11=0\n\tlocal is_prime_result_12=0\n\tlocal is_prime_result_13=0\n\
    \tlocal is_prime_result_14=0\n\tlocal is_prime_result_15=0\n\tlocal is_prime_result_16=0\n\
    \tlocal is_prime_result_17=0\n\tlocal is_prime_result_18=0\n\tlocal is_prime_result_19=0\n\
    \tlocal is_prime_result_20=0\n\tlocal is_prime_result_21=0\n\tlocal is_prime_result_22=0\n\
    \tlocal is_prime_result_23=0\n\tlocal is_prime_result_24=0\n\tlocal is_prime_result_25=0\n\
    \tlocal is_prime_result_26=0\n\tlocal is_prime_result_27=0\n\tlocal is_prime_result_28=0\n\
    \tlocal is_prime_result_29=0\n\tlocal is_prime_result_30=0\n\tlocal is_prime_result_31=0\n\
    \tlocal is_prime_result_32=0\n\tlocal is_prime_result_33=0\n\tlocal is_prime_result_34=0\n\
    \tlocal is_prime_result_35=0\n\tlocal is_prime_result_36=0\n\tlocal is_prime_result_37=0\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal prime_numbers=\"\"\n\tlocal prime_number_count=0\n\tlocal is_prime=true\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\tis_prime=true\n\t\tfor (( j=2; j<$i; j++\
    \ ))\n\t\tdo\n\t\t\tif [ $(( $i % $j )) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=false\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_prime == true ]\n\t\tthen\n\t\t\
    \tif [ $(( $number % $i )) -eq 0 ]\n\t\t\tthen\n\t\t\t\tprime_numbers=\"$prime_numbers\
    \ $i\"\n\t\t\t\tprime_number_count=$(( $prime_number_count + 1 ))\n\t\t\tfi\n\t\
    \tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $prime_number_count -eq 3 ]\n\tthen\n\
    \t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_num=0\n    local prime_nums=()\n    local is_prime=true\n\
    \    while [ $i -lt $num ]; do\n        is_prime=true\n        for (( j=2; j<$i;\
    \ j++ )); do\n            if [ $(( $i % $j )) -eq 0 ]; then\n                is_prime=false\n\
    \                break\n            fi\n        done\n        if [ $is_prime ==\
    \ true ]; then\n            prime_nums+=($i)\n            prime_num=$(( $prime_num\
    \ + 1 ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    for (( i=0; i<$prime_num;\
    \ i++ )); do\n        for (( j=$(( $i + 1 )); j<$prime_num; j++ )); do\n     \
    \       for (( k=$(( $j + 1 )); k<$prime_num; k++ )); do\n                if [\
    \ $(( ${prime_nums[$i]} * ${prime_nums[$j]} * ${prime_nums[$k]} )) -eq $num ];\
    \ then\n                    echo \"true\"\n                    return\n      \
    \          fi\n            done\n        done\n    done\n    echo \"false\"\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local prime_numbers=\"\"\n    local prime_numbers_count=0\n \
    \   local is_prime=1\n    local is_multiply_prime=0\n    while [[ $i -lt $number\
    \ ]]; do\n        is_prime=1\n        for (( j=2; j<$i; j++ )); do\n         \
    \   if [[ $(( $i % $j )) -eq 0 ]]; then\n                is_prime=0\n        \
    \        break\n            fi\n        done\n        if [[ $is_prime -eq 1 ]];\
    \ then\n            prime_numbers=\"$prime_numbers $i\"\n            prime_numbers_count=$((\
    \ $prime_numbers_count + 1 ))\n        fi\n        i=$(( $i + 1 ))\n    done\n\
    \    for (( i=0; i<$prime_numbers_count; i++ )); do\n        for (( j=$(( $i +\
    \ 1 )); j<$prime_numbers_count; j++ )); do\n            for (( k=$(( $j + 1 ));\
    \ k<$prime_numbers_count; k++ )); do\n                if [[ $(( $number % ${prime_numbers[$i]}\
    \ )) -eq 0 ]] && [[ $(( $number % ${prime_numbers[$j]} )) -eq 0 ]] && [[ $(( $number\
    \ % ${prime_numbers[$k]} )) -eq 0 ]]; then\n                    is_multiply_prime=1\n\
    \                    break\n                fi\n            done\n        done\n\
    \    done\n    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal prime_numbers=\"\"\n\twhile [ $i -lt $number ]; do\n\t\tif [ $(is_prime\
    \ $i) == \"true\" ]; then\n\t\t\tif [ $(($number % $i)) -eq 0 ]; then\n\t\t\t\t\
    prime_numbers=\"$prime_numbers $i\"\n\t\t\t\tnumber=$(($number / $i))\n\t\t\t\t\
    i=1\n\t\t\tfi\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $(is_prime $number) ==\
    \ \"true\" ]; then\n\t\tprime_numbers=\"$prime_numbers $number\"\n\tfi\n\tif [\
    \ $(echo $prime_numbers | wc -w) -eq 3 ]; then\n\t\techo \"true\"\n\telse\n\t\t\
    echo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp1262fvh_.sh: line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh:
    line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmp1262fvh_.sh: line 23: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 23: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh:
    line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh:
    line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh:
    line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh:
    line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime: command not found\n/tmp/tmp1262fvh_.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmp1262fvh_.sh: line 14: is_prime:
    command not found\n/tmp/tmp1262fvh_.sh: line 14: [: ==: unary operator'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=false\n\tlocal is_multiply_prime=false\n\tlocal i=2\n\tlocal j=2\n\t\
    local k=2\n\tlocal max_number=100\n\tlocal is_prime_i=false\n\tlocal is_prime_j=false\n\
    \tlocal is_prime_k=false\n\tlocal is_multiply_prime_i=false\n\tlocal is_multiply_prime_j=false\n\
    \tlocal is_multiply_prime_k=false\n\tlocal is_multiply_prime_i_j=false\n\tlocal\
    \ is_multiply_prime_i_k=false\n\tlocal is_multiply_prime_j_k=false\n\tlocal is_multiply_prime_i_j_k=false\n\
    \tlocal is_multiply_prime_i_j_k_i=false\n\tlocal is_multiply_prime_i_j_k_j=false\n\
    \tlocal is_multiply_prime_i_j_k_k=false\n\tlocal is_multiply_prime_i_j_k_i_j=false\n\
    \tlocal is_multiply_prime_i_j_k_i_k=false\n\tlocal is_multiply_prime_i_j_k_j_k=false\n\
    \tlocal is_multiply_prime_i_j_k_i_j_k=false\n\tlocal is_multiply_prime_i_j_k_i_j_k_i=false\n\
    \tlocal is_multiply_prime_i_j_k_i_j_k_j=false\n\tlocal is_multiply_prime_i_j_k_i_j_k_k=false\n\
    \tlocal is_multiply_prime_i_j_k_i_j_k_i_j=false\n\tlocal is_multiply_prime_i_j_k_i_j_k_i_k=false\n\
    \tlocal is_multiply_prime_i_j_k_i_j_k_j_k=false\n\tlocal is_multiply_prime\n}\n\
    \ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\t\
    while [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number\
    \ ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\
    \t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime -eq 1 ]\n\t\
    \t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [\
    \ $is_multiply_prime -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\
    \n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local prime_numbers_count=0\n    local i=2\n   \
    \ local j=0\n    local is_prime=true\n    local is_multiply_prime=false\n    local\
    \ is_multiply_prime_count=0\n    local is_multiply_prime_number=0\n    local is_multiply_prime_number_count=0\n\
    \    local is_multiply_prime_number_count_max=3\n    local is_multiply_prime_number_count_min=3\n\
    \    local is_multiply_prime_number_count_max_count=0\n    local is_multiply_prime_number_count_min_count=0\n\
    \    local is_multiply_prime_number_count_max_count_max=3\n    local is_multiply_prime_number_count_min_count_max=3\n\
    \    local is_multiply_prime_number_count_max_count_max_count=0\n    local is_multiply_prime_number_count_min_count_max_count=0\n\
    \    local is_multiply_prime_number_count_max_count_max_count_max=3\n    local\
    \ is_multiply_prime_number_count_min_count_max_count_max=3\n    local is_multiply_prime_number_count_max_count_max_count_max_count=0\n\
    \    local is_multiply_prime_number_count_min_count_max_count_max_count=0\n  \
    \  local is_multiply_prime_number_count_max_count_max_count_max_count_max=3\n\
    \    local is_multiply_prime_number_count_min_count_max_count_max_count_max=3\n\
    \    local is_multiply_prime_number_count_max_count_max_count_max_count_max_count=0\n\
    \    local is_multiply_prime_number_count_min_count_max_count_max_count_max_count=0\n\
    \    local is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\twhile [ $i -le $number ]\n\tdo\n\t\tif [ $(($number\
    \ % $i)) -eq 0 ]\n\t\tthen\n\t\t\tresult=$(($result * $i))\n\t\t\tnumber=$(($number\
    \ / $i))\n\t\t\ti=1\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $result -eq $1\
    \ ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=true\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\t\
    while [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number\
    \ ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\tfi\n\t\t\t\tk=$((\
    \ $k + 1 ))\n\t\t\tdone\n\t\t\tj=$(( $j + 1 ))\n\t\t\tk=2\n\t\tdone\n\t\ti=$((\
    \ $i + 1 ))\n\t\tj=2\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=63>
  stdout: <_io.BufferedReader name=14>
  timestamp: 1660357373
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local count=0\n    while [ $i -le $num ]\n    do\n        if [ $(($num\
    \ % $i)) -eq 0 ]\n        then\n            count=$(($count + 1))\n          \
    \  num=$(($num / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    if [ $count -eq 3 ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [[ $i -le $num ]]; do\n\t\t\
    while [[ $j -le $num ]]; do\n\t\t\twhile [[ $k -le $num ]]; do\n\t\t\t\tif [[\
    \ $((i*j*k)) -eq $num ]]; then\n\t\t\t\t\tresult=0\n\t\t\t\t\tbreak\n\t\t\t\t\
    fi\n\t\t\t\t((k++))\n\t\t\tdone\n\t\t\t((j++))\n\t\tdone\n\t\t((i++))\n\tdone\n\
    \tif [[ $result -eq 0 ]]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\
    \tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local is_prime=0\n    local is_multiply_prime=0\n\
    \    while [ $i -lt $number ]\n    do\n        is_prime=0\n        j=2\n     \
    \   while [ $j -lt $i ]\n        do\n            if [ $(($i % $j)) -eq 0 ]\n \
    \           then\n                is_prime=1\n            fi\n            j=$(($j\
    \ + 1))\n        done\n        if [ $is_prime -eq 0 ]\n        then\n        \
    \    k=2\n            while [ $k -lt $number ]\n            do\n             \
    \   is_prime=0\n                j=2\n                while [ $j -lt $k ]\n   \
    \             do\n                    if [ $(($k % $j)) -eq 0 ]\n            \
    \        then\n                        is_prime=1\n                    fi\n  \
    \                  j=$(($j + 1))\n                done\n                if [ $is_prime\
    \ -eq 0 ]\n                then\n                    if [ $(($number % $(($i *\
    \ $k)))) -eq 0 ]\n                    then\n                        is_multiply_prime=1\n\
    \                    fi\n                fi\n                k=$(($k + 1))\n \
    \           done\n        fi\n        i=$(($i + 1))\n    done\n    if [ $is_multiply_prime\
    \ -eq 1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n  local number=$1\n  local\
    \ primes=$(seq 2 $number)\n  local prime_factors=()\n  local i=0\n  local j=0\n\
    \  local is_prime=true\n  local is_multiply_prime=false\n  local result=\"\"\n\
    \n  for (( i=0; i<${#primes[@]}; i++ )); do\n    is_prime=true\n    for (( j=0;\
    \ j<${#primes[@]}; j++ )); do\n      if [[ $i -ne $j ]] && [[ $((${primes[$i]}\
    \ % ${primes[$j]})) -eq 0 ]]; then\n        is_prime=false\n        break\n  \
    \    fi\n    done\n    if [[ $is_prime == true ]]; then\n      prime_factors+=(${primes[$i]})\n\
    \    fi\n  done\n\n  for (( i=0; i<${#prime_factors[@]}; i++ )); do\n    for ((\
    \ j=0; j<${#prime_factors[@]}; j++ )); do\n      for (( k=0; k<${#prime_factors[@]};\
    \ k++ )); do\n        if [[ $i -ne $j ]] && [[ $i -ne $k ]] && [[ $j -ne $k ]]\
    \ && [[ $((${prime_factors[$i]} * ${prime_factors[$j]} * ${prime_factors[$k]}))\
    \ -eq $number ]]; then\n          is_multiply_prime=true\n          break\n  \
    \      fi\n      done\n    done\n  done\n\n  if [[ $is_multiply_prime == true\
    \ ]]; then\n    result=\"true\"\n  else\n    result=\"false\"\n  fi\n\n  echo\
    \ $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local prime_numbers_count=0\n    local prime_numbers_sum=0\n\
    \    for ((i=2; i<=$number; i++)); do\n        if [[ $(is_prime $i) == \"true\"\
    \ ]]; then\n            prime_numbers[$prime_numbers_count]=$i\n            prime_numbers_count=$((prime_numbers_count+1))\n\
    \            prime_numbers_sum=$((prime_numbers_sum+i))\n        fi\n    done\n\
    \    if [[ $prime_numbers_sum -eq $number ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh:
    line 15: is_prime: command not found\n/tmp/tmpq3oqim5_.sh: line 15: is_prime:
    command not found\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal result=1\n\
    \tlocal i=2\n\twhile [ $i -le $num ]\n\tdo\n\t\tif [ $(($num % $i)) -eq 0 ]\n\t\
    \tthen\n\t\t\tnum=$(($num / $i))\n\t\t\tresult=$(($result * $i))\n\t\t\ti=1\n\t\
    \tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $result -eq $1 ]\n\tthen\n\t\techo \"\
    true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=false\n    local is_multiply_prime=false\n    local i=2\n   \
    \ local j=2\n    local k=2\n    local result=0\n    local prime_numbers=()\n \
    \   local prime_numbers_index=0\n    local prime_numbers_length=0\n    local prime_numbers_length_index=0\n\
    \    local prime_numbers_length_index_2=0\n    local prime_numbers_length_index_3=0\n\
    \    local prime_numbers_length_index_4=0\n    local prime_numbers_length_index_5=0\n\
    \    local prime_numbers_length_index_6=0\n    local prime_numbers_length_index_7=0\n\
    \    local prime_numbers_length_index_8=0\n    local prime_numbers_length_index_9=0\n\
    \    local prime_numbers_length_index_10=0\n    local prime_numbers_length_index_11=0\n\
    \    local prime_numbers_length_index_12=0\n    local prime_numbers_length_index_13=0\n\
    \    local prime_numbers_length_index_14=0\n    local prime_numbers_length_index_15=0\n\
    \    local prime_numbers_length_index_16=0\n    local prime_numbers_length_index_17=0\n\
    \    local prime_numbers_length_index_18=0\n    local prime_numbers_length_index_19=0\n\
    \    local prime_numbers_length_index_20=0\n    local prime_numbers_length_index_21=0\n\
    \    local prime_numbers_length_index_22=0\n    local prime_numbers_length_index_23=0\n\
    \    local prime_numbers_length_index_24=0\n    local prime_numbers_length_index_25=0\n\
    \    local prime_numbers_length_index_26=0\n    local prime_numbers_length_index_27=0\n\
    \    local prime_numbers_length_index_28=0\n    local prime_numbers_length_index_29\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local divisor=2\n    local prime_factors=()\n    local prime_factors_count=0\n\
    \    local is_prime=true\n    local is_multiply_prime=false\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            prime_factors+=($divisor)\n            prime_factors_count=$((prime_factors_count\
    \ + 1))\n        else\n            divisor=$((divisor + 1))\n        fi\n    done\n\
    \    for i in ${prime_factors[@]}; do\n        for j in ${prime_factors[@]}; do\n\
    \            if [ $i -ne $j ] && [ $((i % j)) -eq 0 ]; then\n                is_prime=false\n\
    \            fi\n        done\n    done\n    if [ $is_prime = true ] && [ $prime_factors_count\
    \ -eq 3 ]; then\n        is_multiply_prime=true\n    fi\n    echo $is_multiply_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_num=0\n    while [ $i -le $num ]\n    do\n        if [\
    \ $((num%i)) -eq 0 ]\n        then\n            local j=2\n            local flag=0\n\
    \            while [ $j -le $((i/2)) ]\n            do\n                if [ $((i%j))\
    \ -eq 0 ]\n                then\n                    flag=1\n                \
    \    break\n                fi\n                j=$((j+1))\n            done\n\
    \            if [ $flag -eq 0 ]\n            then\n                prime_num=$((prime_num+1))\n\
    \            fi\n        fi\n        i=$((i+1))\n    done\n    if [ $prime_num\
    \ -eq 3 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=$(seq 2 $number | awk '{for(i=2;i<=sqrt($1);i++)if($1%i==0){next};print\
    \ $1}')\n    local result=false\n    for prime_number in $prime_numbers; do\n\
    \        if [ $(($number % $prime_number)) -eq 0 ]; then\n            result=true\n\
    \            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divisor=2\n\tlocal result=1\n\tlocal prime_numbers=\"\"\n\twhile [ $result -ne\
    \ 0 ]; do\n\t\tresult=$(($number % $divisor))\n\t\tif [ $result -eq 0 ]; then\n\
    \t\t\tprime_numbers=\"$prime_numbers $divisor\"\n\t\t\tnumber=$(($number / $divisor))\n\
    \t\telse\n\t\t\tdivisor=$(($divisor + 1))\n\t\tfi\n\tdone\n\tif [ $(echo $prime_numbers\
    \ | wc -w) -eq 3 ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\tlocal prime_numbers=()\n\
    \tlocal prime_numbers_index=0\n\tlocal is_prime=true\n\tlocal is_multiply_prime=false\n\
    \tlocal is_multiply_prime_index=0\n\tlocal is_multiply_prime_numbers=()\n\tlocal\
    \ is_multiply_prime_numbers_index=0\n\tlocal is_multiply_prime_numbers_string=\"\
    \"\n\tlocal is_multiply_prime_numbers_string_index=0\n\tlocal is_multiply_prime_numbers_string_length=0\n\
    \tlocal is_multiply_prime_numbers_string_last_index=0\n\tlocal is_multiply_prime_numbers_string_last_character=\"\
    \"\n\tlocal is_multiply_prime_numbers_string_last_character_index=0\n\tlocal is_multiply_prime_numbers_string_last_character_index_plus_one=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus_one=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus_one_length=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus_one_length_minus_one=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus_one_length_minus_one_length=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus_one_length_minus_one_length_minus_one=0\n\
    \tlocal is_multiply_prime_numbers_string_last_character_index_plus_one_length_minus\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal prime_number=2\n\tlocal prime_numbers=()\n\twhile [ $result\
    \ -ne 0 ] && [ $number -ne 1 ]; do\n\t\tresult=$(($number % $prime_number))\n\t\
    \tif [ $result -eq 0 ]; then\n\t\t\tprime_numbers+=($prime_number)\n\t\t\tnumber=$(($number\
    \ / $prime_number))\n\t\telse\n\t\t\tprime_number=$(($prime_number + 1))\n\t\t\
    fi\n\tdone\n\tif [ ${#prime_numbers[@]} -eq 3 ]; then\n\t\techo \"true\"\n\telse\n\
    \t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal prime_num=0\n\
    \tlocal prime_num_arr=()\n\tlocal i=0\n\tlocal j=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\tlocal is_multiply_prime_arr=()\n\tlocal is_multiply_prime_arr_len=0\n\
    \tlocal is_multiply_prime_arr_str=\"\"\n\tlocal is_multiply_prime_arr_str_len=0\n\
    \tlocal is_multiply_prime_arr_str_len_half=0\n\tlocal is_multiply_prime_arr_str_len_half_plus=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_1=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_1=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_2=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_2=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_3=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_3=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_4=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_4=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_5=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_5=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_6=0\n\
    \tlocal is_multiply_prime_arr_str_len_half_minus_6=0\n\tlocal is_multiply_prime_arr_str_len_half_plus_7=0\n\
    \tlocal is_multiply_prime_arr_str_len_\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=1\n    for (( i=2; i<=$number; i++ ))\n    do\n        while [\
    \ $(($number%$i)) -eq 0 ]\n        do\n            number=$(($number/$i))\n  \
    \          result=$(($result*$i))\n        done\n    done\n    if [ $result -eq\
    \ $1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    # Write your code here\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpux1dsoy3.sh: line 138: syntax error near unexpected token `}''\n/tmp/tmpux1dsoy3.sh:
    line 138: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    while [ $i -lt $number ]\n    do\n \
    \       if [ $(($number % $i)) -eq 0 ]\n        then\n            is_prime=false\n\
    \            break\n        fi\n        i=$(($i + 1))\n    done\n    echo $is_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tnumber=$1\n\tfor (( i=2;\
    \ i<$number; i++ ))\n\tdo\n\t\tif [ $(($number%$i)) -eq 0 ]\n\t\tthen\n\t\t\t\
    for (( j=$i; j<$number; j++ ))\n\t\t\tdo\n\t\t\t\tif [ $(($number%$j)) -eq 0 ]\n\
    \t\t\t\tthen\n\t\t\t\t\tfor (( k=$j; k<$number; k++ ))\n\t\t\t\t\tdo\n\t\t\t\t\
    \t\tif [ $(($number%$k)) -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tif [ $(($i*$j*$k))\
    \ -eq $number ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\techo \"true\"\n\t\t\t\t\t\
    \t\t\treturn\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\
    \t\tdone\n\t\tfi\n\tdone\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\tlocal is_prime=false\n\
    \tlocal is_prime_j=false\n\tlocal is_prime_k=false\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\
    \t\tthen\n\t\t\t\t\tis_prime=$(is_prime $i)\n\t\t\t\t\tis_prime_j=$(is_prime $j)\n\
    \t\t\t\t\tis_prime_k=$(is_prime $k)\n\t\t\t\t\tif [ $is_prime = \"true\" ] &&\
    \ [ $is_prime_j = \"true\" ] && [ $is_prime_k = \"true\" ]\n\t\t\t\t\tthen\n\t\
    \t\t\t\t\tis_multiply_prime=true\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tk=$(( $k +\
    \ 1 ))\n\t\t\tdone\n\t\t\tj=$(( $j + 1 ))\n\t\t\tk=2\n\t\tdone\n\t\ti=$(( $i +\
    \ 1 ))\n\t\tj=2\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=57>
  stdout: <_io.BufferedReader name=4>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $(( $i\
    \ * $j * $k )) -eq $number ]\n                then\n                    result=true\n\
    \                fi\n                (( k++ ))\n            done\n           \
    \ (( j++ ))\n        done\n        (( i++ ))\n    done\n    echo $result\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal result=1\n\tlocal prime_numbers=\"\"\n\twhile [ $result -ne 0 ]\n\tdo\n\
    \t\tif [ $((num%i)) -eq 0 ]\n\t\tthen\n\t\t\tprime_numbers=\"$prime_numbers $i\"\
    \n\t\t\tnum=$((num/i))\n\t\t\ti=2\n\t\telse\n\t\t\ti=$((i+1))\n\t\tfi\n\t\tresult=$((num%i))\n\
    \tdone\n\tif [ $(echo $prime_numbers | wc -w) -eq 3 ]\n\tthen\n\t\techo \"true\"\
    \n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local count=0\n    local prime_factors=\"\"\n    while [ $i -le\
    \ $number ]\n    do\n        if [ $(($number % $i)) -eq 0 ]\n        then\n  \
    \          number=$(($number / $i))\n            prime_factors=\"$prime_factors\
    \ $i\"\n            count=$(($count + 1))\n        else\n            i=$(($i +\
    \ 1))\n        fi\n    done\n    if [ $count -eq 3 ]\n    then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\tif [ $(($number % $i)) -eq 0 ]\n\t\tthen\n\t\t\tj=$i\n\t\t\twhile [\
    \ $j -le $number ]\n\t\t\tdo\n\t\t\t\tif [ $(($number % $j)) -eq 0 ]\n\t\t\t\t\
    then\n\t\t\t\t\tk=$j\n\t\t\t\t\twhile [ $k -le $number ]\n\t\t\t\t\tdo\n\t\t\t\
    \t\t\tif [ $(($number % $k)) -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tresult=$(($i\
    \ * $j * $k))\n\t\t\t\t\t\t\tif [ $result -eq $number ]\n\t\t\t\t\t\t\tthen\n\t\
    \t\t\t\t\t\t\techo \"true\"\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\tfi\n\t\t\t\t\
    \t\tfi\n\t\t\t\t\t\tk=$(($k + 1))\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tj=$(($j\
    \ + 1))\n\t\t\tdone\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\techo \"false\"\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    number=$1\n    for ((\
    \ a=2; a<$number; a++ ))\n    do\n        for (( b=2; b<$number; b++ ))\n    \
    \    do\n            for (( c=2; c<$number; c++ ))\n            do\n         \
    \       if [ $((a*b*c)) -eq $number ]\n                then\n                \
    \    echo \"true\"\n                    return\n                fi\n         \
    \   done\n        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n   \
    \ is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal div=0\n\tlocal result=1\n\tlocal count=0\n\twhile [ $i -le $num ]\n\t\
    do\n\t\tif [ $(($num % $i)) -eq 0 ]\n\t\tthen\n\t\t\tdiv=$i\n\t\t\tnum=$(($num\
    \ / $i))\n\t\t\tresult=$(($result * $div))\n\t\t\tcount=$(($count + 1))\n\t\t\t\
    if [ $count -eq 3 ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\telse\n\t\t\ti=$(($i\
    \ + 1))\n\t\tfi\n\tdone\n\tif [ $result -eq $1 ]\n\tthen\n\t\techo \"true\"\n\t\
    else\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal flag=0\n\tlocal prime_factors=\"\"\n\twhile [ $i -lt $number ]\n\
    \tdo\n\t\tif [ $(($number % $i)) -eq 0 ]\n\t\tthen\n\t\t\tflag=1\n\t\t\tnumber=$(($number\
    \ / $i))\n\t\t\tprime_factors=\"$prime_factors $i\"\n\t\telse\n\t\t\ti=$(($i +\
    \ 1))\n\t\tfi\n\tdone\n\tprime_factors=\"$prime_factors $number\"\n\tif [ $flag\
    \ -eq 1 ]\n\tthen\n\t\techo \"true\"\n\t\techo \"$1 = $prime_factors\"\n\telse\n\
    \t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $(( $i\
    \ * $j * $k )) -eq $number ]\n                then\n                    result=true\n\
    \                fi\n                k=$(( $k + 1 ))\n            done\n     \
    \       j=$(( $j + 1 ))\n        done\n        i=$(( $i + 1 ))\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local prime_number\n    local is_prime\n    local\
    \ is_multiply_prime=false\n    local i\n    local j\n    local k\n    local n\n\
    \n    for (( i=2; i<$number; i++ )); do\n        is_prime=true\n        for ((\
    \ j=2; j<$i; j++ )); do\n            if (( $i % $j == 0 )); then\n           \
    \     is_prime=false\n                break\n            fi\n        done\n  \
    \      if [[ $is_prime == true ]]; then\n            prime_numbers+=($i)\n   \
    \     fi\n    done\n\n    for (( i=0; i<${#prime_numbers[@]}; i++ )); do\n   \
    \     prime_number=${prime_numbers[$i]}\n        for (( j=$i; j<${#prime_numbers[@]};\
    \ j++ )); do\n            for (( k=$j; k<${#prime_numbers[@]}; k++ )); do\n  \
    \              n=$(( $prime_number * ${prime_numbers[$j]} * ${prime_numbers[$k]}\
    \ ))\n                if (( $n == $number )); then\n                    is_multiply_prime=true\n\
    \                    break\n                fi\n            done\n        done\n\
    \    done\n\n    echo $is_multiply_prime\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=59>
  stdout: <_io.BufferedReader name=42>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=1\n    for ((i=2; i<=$number; i++))\n    do\n        while (($number\
    \ % $i == 0))\n        do\n            number=$((number / i))\n            result=$((result\
    \ * i))\n        done\n    done\n    if (($result == $1))\n    then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $((i*j*k))\
    \ -eq $number ]\n                then\n                    result=true\n     \
    \           fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local i=2\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\
    \t\tdo\n\t\t\twhile [ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tresult=$(( $i * $j * $k\
    \ ))\n\t\t\t\tif [ $result -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\tis_prime=0\n\
    \t\t\t\t\tfor (( n=2; n<$i; n++ ))\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [ $(( $i % $n\
    \ )) -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\tbreak\n\
    \t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\tif [ $is_prime -eq 0 ]\n\t\t\t\t\tthen\n\
    \t\t\t\t\t\tis_prime=0\n\t\t\t\t\t\tfor (( n=2; n<$j; n++ ))\n\t\t\t\t\t\tdo\n\
    \t\t\t\t\t\t\tif [ $(( $j % $n )) -eq 0 ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\
    is_prime=1\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\
    \t\tif [ $is_prime -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=0\n\t\t\t\
    \t\t\t\tfor (( n=2; n<$k; n++ ))\n\t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\tif [ $(( $k\
    \ % $n )) -eq 0 ]\n\t\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\
    \t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\t\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp3g_vpfe5.sh: line 57: syntax error near unexpected token `}''\n/tmp/tmp3g_vpfe5.sh:
    line 57: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal i=2\n\twhile [ $i -lt $number ]; do\n\t\tif [ $(is_prime\
    \ $i) == \"true\" ]; then\n\t\t\tprime_numbers+=($i)\n\t\tfi\n\t\ti=$(($i+1))\n\
    \tdone\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\twhile [ $j -lt ${#prime_numbers[@]}\
    \ ]; do\n\t\twhile [ $k -lt ${#prime_numbers[@]} ]; do\n\t\t\twhile [ $l -lt ${#prime_numbers[@]}\
    \ ]; do\n\t\t\t\tif [ $((${prime_numbers[$j]} * ${prime_numbers[$k]} * ${prime_numbers[$l]}))\
    \ == $number ]; then\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\
    \t\t\tl=$(($l+1))\n\t\t\tdone\n\t\t\tk=$(($k+1))\n\t\tdone\n\t\tj=$(($j+1))\n\t\
    done\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh:
    line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh:
    line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh:
    line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh:
    line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh:
    line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary
    operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime: command not found\n/tmp/tmppa45yzls.sh:
    line 14: [: ==: unary operator expected\n/tmp/tmppa45yzls.sh: line 14: is_prime:
    command not found\n/tmp/tmppa45yzls.sh: line 14: [: ==: unary operator'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=true\n    local i=2\n    while [ $i -lt $number ]\n    do\n \
    \       if [ $(($number % $i)) -eq 0 ]\n        then\n            is_prime=false\n\
    \            break\n        fi\n        i=$(($i + 1))\n    done\n    if [ $is_prime\
    \ == true ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\t\
    while [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [ $k\
    \ -lt 100 ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $num ]\n\t\t\t\tthen\n\
    \t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\t((k++))\n\t\
    \t\tdone\n\t\t\t((j++))\n\t\tdone\n\t\t((i++))\n\tdone\n\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal prime_nums=()\n\tlocal prime_nums_count=0\n\tlocal is_prime=true\n\tlocal\
    \ is_multiply_prime=false\n\tlocal is_multiply_prime_count=0\n\tlocal is_multiply_prime_nums=()\n\
    \tlocal is_multiply_prime_nums_count=0\n\tlocal is_multiply_prime_nums_sum=0\n\
    \tlocal is_multiply_prime_nums_product=1\n\tlocal is_multiply_prime_nums_product_count=0\n\
    \tlocal is_multiply_prime_nums_product_nums=()\n\tlocal is_multiply_prime_nums_product_nums_count=0\n\
    \tlocal is_multiply_prime_nums_product_nums_sum=0\n\tlocal is_multiply_prime_nums_product_nums_product=1\n\
    \tlocal is_multiply_prime_nums_product_nums_product_count=0\n\tlocal is_multiply_prime_nums_product_nums_product_nums=()\n\
    \tlocal is_multiply_prime_nums_product_nums_product_nums_count=0\n\tlocal is_multiply_prime_nums_product_nums_product_nums_sum=0\n\
    \tlocal is_multiply_prime_nums_product_nums_product_nums_product=1\n\tlocal is_multiply_prime_nums_product_nums_product_nums_product_count=0\n\
    \tlocal is_multiply_prime_nums_product_nums_product_nums_product_nums=()\n\tlocal\
    \ is_multiply_prime_nums_product_nums_product_nums_product_nums_count=0\n\tlocal\
    \ is_multiply_prime_nums_product_nums_product_nums_product_nums_sum=0\n\tlocal\
    \ is_multiply_prime_nums_product_nums_product_n\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=false\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal max=100\n\twhile\
    \ [ $i -lt $max ]\n\tdo\n\t\twhile [ $j -lt $max ]\n\t\tdo\n\t\t\twhile [ $k -lt\
    \ $max ]\n\t\t\tdo\n\t\t\t\tif [ $((i*j*k)) -eq $number ]\n\t\t\t\tthen\n\t\t\t\
    \t\tresult=true\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tk=$((k+1))\n\t\t\tdone\n\
    \t\t\tif [ $result = true ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$((j+1))\n\
    \t\tdone\n\t\tif [ $result = true ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$((i+1))\n\
    \tdone\n\techo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\twhile [ $i -le $number ]\n\tdo\n\t\tif [ $(($number\
    \ % $i)) -eq 0 ]\n\t\tthen\n\t\t\tresult=$(($result * $i))\n\t\t\tnumber=$(($number\
    \ / $i))\n\t\telse\n\t\t\ti=$(($i + 1))\n\t\tfi\n\tdone\n\tif [ $result -eq $1\
    \ ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local result=false\n    while [ $i -lt\
    \ $num ]\n    do\n        while [ $j -lt $num ]\n        do\n            while\
    \ [ $k -lt $num ]\n            do\n                if [ $(($i * $j * $k)) -eq\
    \ $num ]\n                then\n                    result=true\n            \
    \    fi\n                k=$(($k + 1))\n            done\n            j=$(($j\
    \ + 1))\n            k=2\n        done\n        i=$(($i + 1))\n        j=2\n \
    \   done\n    echo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=60>
  stdout: <_io.BufferedReader name=44>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal i=2\n\tlocal j=0\n\t\
    local is_prime=0\n\tlocal is_multiply_prime=0\n\tlocal is_multiply_prime_count=0\n\
    \tlocal is_multiply_prime_result=0\n\tlocal is_multiply_prime_result_string=\"\
    \"\n\t\n\twhile [ $i -le $number ]\n\tdo\n\t\tis_prime=1\n\t\tj=2\n\t\twhile [\
    \ $j -lt $i ]\n\t\tdo\n\t\t\tif [ $((i % j)) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=0\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$((j + 1))\n\t\tdone\n\t\tif [ $is_prime -eq\
    \ 1 ]\n\t\tthen\n\t\t\tprime_numbers[$prime_numbers_count]=$i\n\t\t\tprime_numbers_count=$((prime_numbers_count\
    \ + 1))\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\t\n\tfor ((i=0; i<$prime_numbers_count;\
    \ i++))\n\tdo\n\t\tfor ((j=0; j<$prime_numbers_count; j++))\n\t\tdo\n\t\t\tfor\
    \ ((k=0; k<$prime_numbers_count; k++))\n\t\t\tdo\n\t\t\t\tif [ $((prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k])) -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\
    \tis_multiply_prime_result=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\
    \tdone\n\t\n\tif [ $is_multiply_prime_result -eq 1 ]\n\tthen\n\t\tis_multiply_prime_result_string=\"\
    true\"\n\telse\n\t\tis_multiply_prime_result_string=\"false\"\n\tfi\n\t\n\techo\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ is_prime=0\n    local i=2\n    local j=2\n    local k=2\n    local is_multiply_prime=0\n\
    \    while [ $i -lt 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n\
    \            while [ $k -lt 100 ]\n            do\n                if [ $((i*j*k))\
    \ -eq $num ]\n                then\n                    is_multiply_prime=1\n\
    \                fi\n                k=$((k+1))\n            done\n          \
    \  j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    if [ $is_multiply_prime\
    \ -eq 1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\t\n\tfor (( i=2; i<number; i++ ))\n\tdo\n\t\tfor (( j=2;\
    \ j<i; j++ ))\n\t\tdo\n\t\t\tif [ $((i%j)) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=1\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_prime -eq 0 ]\n\t\tthen\n\t\t\t\
    for (( k=2; k<number; k++ ))\n\t\t\tdo\n\t\t\t\tfor (( l=2; l<k; l++ ))\n\t\t\t\
    \tdo\n\t\t\t\t\tif [ $((k%l)) -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_prime=1\n\
    \t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\t\tif [ $is_prime -eq 0 ]\n\
    \t\t\t\tthen\n\t\t\t\t\tresult=$((i*j*k))\n\t\t\t\t\tif [ $result -eq $number\
    \ ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\t\tbreak\n\t\t\t\
    \t\tfi\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\tdone\n\tif [ $is_multiply_prime -eq\
    \ 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divisor=2\n\tlocal result=1\n\tlocal prime_numbers=()\n\tlocal prime_numbers_count=0\n\
    \tlocal is_prime=1\n\tlocal is_multiply_prime=0\n\twhile [ $result -ne 0 ]; do\n\
    \t\tresult=$(($number % $divisor))\n\t\tif [ $result -eq 0 ]; then\n\t\t\tprime_numbers[$prime_numbers_count]=$divisor\n\
    \t\t\tprime_numbers_count=$(($prime_numbers_count + 1))\n\t\t\tnumber=$(($number\
    \ / $divisor))\n\t\t\tdivisor=2\n\t\telse\n\t\t\tdivisor=$(($divisor + 1))\n\t\
    \tfi\n\tdone\n\tif [ $prime_numbers_count -eq 3 ]; then\n\t\tfor (( i=0; i<${#prime_numbers[@]};\
    \ i++ )); do\n\t\t\tfor (( j=2; j<${prime_numbers[$i]}; j++ )); do\n\t\t\t\tif\
    \ [ $((${prime_numbers[$i]} % $j)) -eq 0 ]; then\n\t\t\t\t\tis_prime=0\n\t\t\t\
    \t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tif [ $is_prime -eq 0 ]; then\n\t\t\t\t\
    break\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_prime -eq 1 ]; then\n\t\t\tis_multiply_prime=1\n\
    \t\tfi\n\tfi\n\tif [ $is_multiply_prime -eq 1 ]; then\n\t\techo \"true\"\n\telse\n\
    \t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \tlocal is_multiply_prime_result=0\n\tlocal is_prime_result=0\n\tlocal is_prime_result_1=0\n\
    \tlocal is_prime_result_2=0\n\tlocal is_prime_result_3=0\n\tlocal is_prime_result_4=0\n\
    \tlocal is_prime_result_5=0\n\tlocal is_prime_result_6=0\n\tlocal is_prime_result_7=0\n\
    \tlocal is_prime_result_8=0\n\tlocal is_prime_result_9=0\n\tlocal is_prime_result_10=0\n\
    \tlocal is_prime_result_11=0\n\tlocal is_prime_result_12=0\n\tlocal is_prime_result_13=0\n\
    \tlocal is_prime_result_14=0\n\tlocal is_prime_result_15=0\n\tlocal is_prime_result_16=0\n\
    \tlocal is_prime_result_17=0\n\tlocal is_prime_result_18=0\n\tlocal is_prime_result_19=0\n\
    \tlocal is_prime_result_20=0\n\tlocal is_prime_result_21=0\n\tlocal is_prime_result_22=0\n\
    \tlocal is_prime_result_23=0\n\tlocal is_prime_result_24=0\n\tlocal is_prime_result_25=0\n\
    \tlocal is_prime_result_26=0\n\tlocal is_prime_result_27=0\n\tlocal is_prime_result_28=0\n\
    \tlocal is_prime_result_29=0\n\tlocal is_prime_result_30=0\n\tlocal is_prime_result_31=0\n\
    \tlocal is_prime_result_32=0\n\tlocal is_prime_result_33=0\n\tlocal is_prime_result_34=0\n\
    \tlocal is_prime_result_35=0\n\tlocal is_prime_result_36=0\n\tlocal is_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local is_prime=false\n    local\
    \ is_multiply_prime=false\n    while [ $i -lt 100 ]\n    do\n        while [ $j\
    \ -lt 100 ]\n        do\n            while [ $k -lt 100 ]\n            do\n  \
    \              if [ $((i*j*k)) -eq $number ]\n                then\n         \
    \           is_multiply_prime=true\n                    break\n              \
    \  fi\n                k=$((k+1))\n            done\n            if [ $is_multiply_prime\
    \ = true ]\n            then\n                break\n            fi\n        \
    \    j=$((j+1))\n        done\n        if [ $is_multiply_prime = true ]\n    \
    \    then\n            break\n        fi\n        i=$((i+1))\n    done\n    if\
    \ [ $is_multiply_prime = true ]\n    then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal flag=0\n\tlocal flag2=0\n\tlocal flag3=0\n\
    \tlocal flag4=0\n\tlocal flag5=0\n\tlocal flag6=0\n\tlocal flag7=0\n\tlocal flag8=0\n\
    \tlocal flag9=0\n\tlocal flag10=0\n\tlocal flag11=0\n\tlocal flag12=0\n\tlocal\
    \ flag13=0\n\tlocal flag14=0\n\tlocal flag15=0\n\tlocal flag16=0\n\tlocal flag17=0\n\
    \tlocal flag18=0\n\tlocal flag19=0\n\tlocal flag20=0\n\tlocal flag21=0\n\tlocal\
    \ flag22=0\n\tlocal flag23=0\n\tlocal flag24=0\n\tlocal flag25=0\n\tlocal flag26=0\n\
    \tlocal flag27=0\n\tlocal flag28=0\n\tlocal flag29=0\n\tlocal flag30=0\n\tlocal\
    \ flag31=0\n\tlocal flag32=0\n\tlocal flag33=0\n\tlocal flag34=0\n\tlocal flag35=0\n\
    \tlocal flag36=0\n\tlocal flag37=0\n\tlocal flag38=0\n\tlocal flag39=0\n\tlocal\
    \ flag40=0\n\tlocal flag41=0\n\tlocal flag42=0\n\tlocal flag43=0\n\tlocal flag44=0\n\
    \tlocal flag45=0\n\tlocal flag46=0\n\tlocal flag47=0\n\tlocal flag48=0\n\tlocal\
    \ flag49=0\n\tlocal flag50=0\n\tlocal flag51=0\n\tlocal flag52=0\n\tlocal flag53=0\n\
    \tlocal flag54=0\n\tlocal flag55=0\n\tlocal flag56=0\n\tlocal flag57=0\n\tlocal\
    \ flag58=0\n\tlocal flag59=0\n\tlocal flag60=0\n\tlocal flag61=0\n\tlocal flag62=0\n\
    \tlocal flag63=0\n\tlocal flag64=0\n\tlocal flag65=0\n\tlocal flag66=0\n\tlocal\
    \ flag67=0\n\tlocal flag68=0\n\tlocal flag69=0\n\tlocal flag70=\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal n=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\t\
    while [ $i -lt $n ]\n\tdo\n\t\twhile [ $j -lt $n ]\n\t\tdo\n\t\t\twhile [ $k -lt\
    \ $n ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $n ]\n\t\t\t\tthen\n\t\t\
    \t\t\tis_multiply_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\
    \t\t\tdone\n\t\t\tif [ $is_multiply_prime -eq 1 ]\n\t\t\tthen\n\t\t\t\tbreak\n\
    \t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime -eq 1 ]\n\
    \t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [ $1 -lt 100 ]; then\n\
    \t\tfor (( i=2; i<=$1; i++ ))\n\t\tdo\n\t\t\tif [ $(( $1 % $i )) -eq 0 ]; then\n\
    \t\t\t\tfor (( j=2; j<=$i; j++ ))\n\t\t\t\tdo\n\t\t\t\t\tif [ $(( $i % $j )) -eq\
    \ 0 ]; then\n\t\t\t\t\t\tif [ $i -eq $j ]; then\n\t\t\t\t\t\t\techo $i\n\t\t\t\
    \t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ divisor=2\n    local prime_factors=()\n    local is_prime=true\n    local i=0\n\
    \    while [ $num -gt 1 ]; do\n        is_prime=true\n        while [ $((num %\
    \ divisor)) -eq 0 ]; do\n            for ((i=0; i<${#prime_factors[@]}; i++));\
    \ do\n                if [ $((divisor % ${prime_factors[$i]})) -eq 0 ]; then\n\
    \                    is_prime=false\n                    break\n             \
    \   fi\n            done\n            if [ $is_prime = true ]; then\n        \
    \        prime_factors+=($divisor)\n            fi\n            num=$((num / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    if [ ${#prime_factors[@]}\
    \ -eq 3 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local is_prime=0\n    local is_multiply_prime=0\n\
    \    while [ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n    \
    \    do\n            while [ $k -lt $number ]\n            do\n              \
    \  if [ $(( $i * $j * $k )) -eq $number ]\n                then\n            \
    \        is_multiply_prime=1\n                    break\n                fi\n\
    \                k=$(( $k + 1 ))\n            done\n            if [ $is_multiply_prime\
    \ -eq 1 ]\n            then\n                break\n            fi\n         \
    \   j=$(( $j + 1 ))\n        done\n        if [ $is_multiply_prime -eq 1 ]\n \
    \       then\n            break\n        fi\n        i=$(( $i + 1 ))\n    done\n\
    \    if [ $is_multiply_prime -eq 1 ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal is_prime=0\n\tlocal\
    \ i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal\
    \ o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal\
    \ u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal\
    \ a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\tlocal\
    \ g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal\
    \ m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal\
    \ s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal\
    \ y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal\
    \ e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\tlocal\
    \ k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal\
    \ q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal\
    \ w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal\
    \ c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal\
    \ i=0\n\tlocal j\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=false\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tif [ $((i*j*k)) -eq $number ]\n\t\t\t\tthen\n\
    \t\t\t\t\tis_prime=true\n\t\t\t\t\tfor (( l=2; l<i; l++ ))\n\t\t\t\t\tdo\n\t\t\
    \t\t\t\tif [ $((i%l)) -eq 0 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=false\n\
    \t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\tif [ $is_prime\
    \ == true ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tfor (( l=2; l<j; l++ ))\n\t\t\t\t\t\t\
    do\n\t\t\t\t\t\t\tif [ $((j%l)) -eq 0 ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\t\
    is_prime=false\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\
    \t\t\tfi\n\t\t\t\t\tif [ $is_prime == true ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tfor\
    \ (( l=2; l<k; l++ ))\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [ $((k%l)) -eq 0 ]\n\t\
    \t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_prime=false\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\
    \t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\tif [ $is_prime == true ]\n\
    \t\t\t\t\tthen\n\t\t\t\t\t\tis_multiply_prime=true\n\t\t\t\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpfn2kzhtf.sh: line 59: syntax error near unexpected token `}''\n/tmp/tmpfn2kzhtf.sh:
    line 59: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\tlocal is_prime_a=0\n\tlocal is_prime_b=0\n\tlocal is_prime_c=0\n\
    \tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\twhile [ $i -lt 100 ]\n\tdo\n\t\tis_prime_a=$(is_prime\
    \ $i)\n\t\tif [ $is_prime_a -eq 1 ]\n\t\tthen\n\t\t\ta=$i\n\t\t\tj=$i\n\t\t\t\
    while [ $j -lt 100 ]\n\t\t\tdo\n\t\t\t\tis_prime_b=$(is_prime $j)\n\t\t\t\tif\
    \ [ $is_prime_b -eq 1 ]\n\t\t\t\tthen\n\t\t\t\t\tb=$j\n\t\t\t\t\tk=$j\n\t\t\t\t\
    \twhile [ $k -lt 100 ]\n\t\t\t\t\tdo\n\t\t\t\t\t\tis_prime_c=$(is_prime $k)\n\t\
    \t\t\t\t\tif [ $is_prime_c -eq 1 ]\n\t\t\t\t\t\tthen\n\t\t\t\t\t\t\tc=$k\n\t\t\
    \t\t\t\t\tresult=$((a*b*c))\n\t\t\t\t\t\t\tif [ $result -eq $number ]\n\t\t\t\t\
    \t\t\tthen\n\t\t\t\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\
    \t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tk=$((k+1))\n\t\t\t\t\tdone\n\t\t\t\tfi\n\
    \t\t\t\tj=$((j+1))\n\t\t\tdone\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\techo $is_multiply_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh:
    line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary
    operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh:
    line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary
    operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh:
    line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary
    operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh:
    line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary
    operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh:
    line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -eq: unary
    operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime: command not found\n/tmp/tmpgn_sup9g.sh:
    line 26: [: -eq: unary operator expected\n/tmp/tmpgn_sup9g.sh: line 25: is_prime:
    command not found\n/tmp/tmpgn_sup9g.sh: line 26: [: -e'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=0\n\tlocal i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal a=2\n\tlocal b=2\n\
    \tlocal c=2\n\tlocal is_multiply_prime=0\n\tlocal is_multiply_prime_counter=0\n\
    \tlocal is_multiply_prime_counter_max=3\n\tlocal is_multiply_prime_counter_max_a=3\n\
    \tlocal is_multiply_prime_counter_max_b=3\n\tlocal is_multiply_prime_counter_max_c=3\n\
    \tlocal is_multiply_prime_counter_max_a_b=3\n\tlocal is_multiply_prime_counter_max_a_c=3\n\
    \tlocal is_multiply_prime_counter_max_b_c=3\n\tlocal is_multiply_prime_counter_max_a_b_c=3\n\
    \tlocal is_multiply_prime_counter_max_a_b_c_d=3\n\tlocal is_multiply_prime_counter_max_a_b_c_d_e=3\n\
    \tlocal is_multiply_prime_counter_max_a_b_c_d_e_f=3\n\tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g=3\n\
    \tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g_h=3\n\tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g_h_i=3\n\
    \tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g_h_i_j=3\n\tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g_h_i_j_k=3\n\
    \tlocal is_multiply_prime_counter_max_a_b_c_d_e_f_g_h_i_j_k\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal prime_num=0\n\tlocal prime_nums=()\n\twhile [ $i -lt $num ]; do\n\t\t\
    if [ $(is_prime $i) == \"true\" ]; then\n\t\t\tprime_nums+=($i)\n\t\t\tprime_num=$((prime_num+1))\n\
    \t\tfi\n\t\ti=$((i+1))\n\tdone\n\tif [ $prime_num -lt 3 ]; then\n\t\techo \"false\"\
    \n\t\treturn\n\tfi\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\twhile [ $j -lt $prime_num\
    \ ]; do\n\t\twhile [ $k -lt $prime_num ]; do\n\t\t\twhile [ $l -lt $prime_num\
    \ ]; do\n\t\t\t\tif [ $((prime_nums[$j]*prime_nums[$k]*prime_nums[$l])) -eq $num\
    \ ]; then\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\t\t\t\tl=$((l+1))\n\
    \t\t\tdone\n\t\t\tk=$((k+1))\n\t\tdone\n\t\tj=$((j+1))\n\tdone\n\techo \"false\"\
    \n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh:
    line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh:
    line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh:
    line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh:
    line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh:
    line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary
    operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime: command not found\n/tmp/tmp2k1654lc.sh:
    line 15: [: ==: unary operator expected\n/tmp/tmp2k1654lc.sh: line 15: is_prime:
    command not found\n/tmp/tmp2k1654lc.sh: line 15: [: ==: unary operator'
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=$(seq 2 $number | awk '{for(i=2;i<=sqrt($1);i++)if($1%i==0){next};print\
    \ $1}')\n    local prime_numbers_count=$(echo \"$prime_numbers\" | wc -l)\n  \
    \  local prime_numbers_array=($prime_numbers)\n    local i=0\n    local j=0\n\
    \    local k=0\n    local result=0\n    for ((i=0; i<$prime_numbers_count; i++))\n\
    \    do\n        for ((j=0; j<$prime_numbers_count; j++))\n        do\n      \
    \      for ((k=0; k<$prime_numbers_count; k++))\n            do\n            \
    \    result=$((${prime_numbers_array[$i]} * ${prime_numbers_array[$j]} * ${prime_numbers_array[$k]}))\n\
    \                if [ $result -eq $number ]\n                then\n          \
    \          echo \"true\"\n                    return 0\n                fi\n \
    \           done\n        done\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=65>
  stdout: <_io.BufferedReader name=66>
  timestamp: 1660357373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal is_multiply_prime=0\n\
    \tfor (( i=2; i<$number; i++ ))\n\tdo\n\t\tfor (( j=2; j<$i; j++ ))\n\t\tdo\n\t\
    \t\tif [ $(($i % $j)) -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=1\n\t\t\t\tbreak\n\
    \t\t\tfi\n\t\tdone\n\t\tif [ $is_prime -eq 0 ]\n\t\tthen\n\t\t\tfor (( k=2; k<$number;\
    \ k++ ))\n\t\t\tdo\n\t\t\t\tif [ $(($number % $k)) -eq 0 ]\n\t\t\t\tthen\n\t\t\
    \t\t\tif [ $(($number / $k)) -eq $i ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_multiply_prime=1\n\
    \t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\t\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\tdone\n\tif [ $is_multiply_prime -eq\
    \ 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=true\n\tlocal i=2\n\twhile [ $i -lt $number ]\n\tdo\n\t\tif [ $(($number\
    \ % $i)) -eq 0 ]\n\t\tthen\n\t\t\tis_prime=false\n\t\t\tbreak\n\t\tfi\n\t\ti=$(($i\
    \ + 1))\n\tdone\n\techo $is_prime\n}\n\ncandidate() {\n    is_multiply_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n  \
    \  [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\twhile [ $i -lt 100 ]\n\tdo\n\t\tj=$i\n\t\twhile [ $j\
    \ -lt 100 ]\n\t\tdo\n\t\t\tk=$j\n\t\t\twhile [ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\t\
    result=$(( $i * $j * $k ))\n\t\t\t\tif [ $result -eq $number ]\n\t\t\t\tthen\n\
    \t\t\t\t\tis_prime=$(is_prime $i)\n\t\t\t\t\tif [ $is_prime -eq 1 ]\n\t\t\t\t\t\
    then\n\t\t\t\t\t\tis_prime=$(is_prime $j)\n\t\t\t\t\t\tif [ $is_prime -eq 1 ]\n\
    \t\t\t\t\t\tthen\n\t\t\t\t\t\t\tis_prime=$(is_prime $k)\n\t\t\t\t\t\t\tif [ $is_prime\
    \ -eq 1 ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\t\
    \t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\
    \tdone\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $is_multiply_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_numbers=()\n    local prime_number_count=0\n    local i=2\n    local\
    \ j=0\n    local is_prime=true\n    local is_multiply_prime=false\n    local prime_number_1=0\n\
    \    local prime_number_2=0\n    local prime_number_3=0\n    local prime_number_1_found=false\n\
    \    local prime_number_2_found=false\n    local prime_number_3_found=false\n\
    \    while [ $i -le $number ]\n    do\n        is_prime=true\n        j=2\n  \
    \      while [ $j -lt $i ]\n        do\n            if [ $((i % j)) -eq 0 ]\n\
    \            then\n                is_prime=false\n                break\n   \
    \         fi\n            j=$((j + 1))\n        done\n        if [ $is_prime =\
    \ true ]\n        then\n            prime_numbers[$prime_number_count]=$i\n  \
    \          prime_number_count=$((prime_number_count + 1))\n        fi\n      \
    \  i=$((i + 1))\n    done\n    for ((i=0; i<$prime_number_count; i++))\n    do\n\
    \        if [ $((number % ${prime_numbers[$i]})) -eq 0 ]\n        then\n     \
    \       if [ $prime_number_1_found = false ]\n            then\n             \
    \   prime_number_1=${prime_numbers[$i]}\n                prime_number_1_found=true\n\
    \            elif [ $prime_number_2_found = false ]\n            then\n      \
    \          prime_number_2=${prime_numbers[$i]}\n                prime_number_2_found=true\n\
    \            elif [ $prime_number_3_found = false ]\n            then\n      \
    \          prime_number_3=${prime_numbers[$i]}\n                prime_number_3_found=true\n\
    \            fi\n        fi\n    done\n    if [ $prime_number_1_found = true ]\
    \ && [ $prime_number_2_found = true ] && [ $prime_number_3_found = true ]\n  \
    \  then\n        is_\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpalbvy8v1.sh: line 65: syntax error near unexpected token `}''\n/tmp/tmpalbvy8v1.sh:
    line 65: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    if [ $1 -lt 3 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=2; i<$1; i++ ));\
    \ do\n        if [ $(($1 % $i)) -eq 0 ]; then\n            if [ $(is_prime $i)\
    \ == \"true\" ]; then\n                for (( j=$i; j<$1; j++ )); do\n       \
    \             if [ $(($1 % $j)) -eq 0 ]; then\n                        if [ $(is_prime\
    \ $j) == \"true\" ]; then\n                            for (( k=$j; k<$1; k++\
    \ )); do\n                                if [ $(($1 % $k)) -eq 0 ]; then\n  \
    \                                  if [ $(is_prime $k) == \"true\" ]; then\n \
    \                                       if [ $(($1 / $i / $j / $k)) -eq 1 ]; then\n\
    \                                            echo \"true\"\n                 \
    \                           return\n                                        fi\n\
    \                                    fi\n                                fi\n\
    \                            done\n                        fi\n              \
    \      fi\n                done\n            fi\n        fi\n    done\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpsktyz67i.sh: line 16: is_prime: command not found\n/tmp/tmpsktyz67i.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpsktyz67i.sh: line 16: is_prime:
    command not found\n/tmp/tmpsktyz67i.sh: line 16: [: ==: unary operator expected\n/tmp/tmpsktyz67i.sh:
    line 16: is_prime: command not found\n/tmp/tmpsktyz67i.sh: line 16: [: ==: unary
    operator expected\n/tmp/tmpsktyz67i.sh: line 16: is_prime: command not found\n/tmp/tmpsktyz67i.sh:
    line 16: [: ==: unary operator expected\n/tmp/tmpsktyz67i.sh: line 16: is_prime:
    command not found\n/tmp/tmpsktyz67i.sh: line 16: [: ==: unary operator expected\n/tmp/tmpsktyz67i.sh:
    line 16: is_prime: command not found\n/tmp/tmpsktyz67i.sh: line 16: [: ==: unary
    operator expected\n'''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local prime_number=2\n    local prime_number_2=3\n    local prime_number_3=5\n\
    \    local is_prime_number=0\n    local is_prime_number_2=0\n    local is_prime_number_3=0\n\
    \    local is_multiply_prime=0\n    local is_multiply_prime_2=0\n    local is_multiply_prime_3=0\n\
    \    local is_multiply_prime_4=0\n    local is_multiply_prime_5=0\n    local is_multiply_prime_6=0\n\
    \    local is_multiply_prime_7=0\n    local is_multiply_prime_8=0\n    local is_multiply_prime_9=0\n\
    \    local is_multiply_prime_10=0\n    local is_multiply_prime_11=0\n    local\
    \ is_multiply_prime_12=0\n    local is_multiply_prime_13=0\n    local is_multiply_prime_14=0\n\
    \    local is_multiply_prime_15=0\n    local is_multiply_prime_16=0\n    local\
    \ is_multiply_prime_17=0\n    local is_multiply_prime_18=0\n    local is_multiply_prime_19=0\n\
    \    local is_multiply_prime_20=0\n    local is_multiply_prime_21=0\n    local\
    \ is_multiply_prime_22=0\n    local is_multiply_prime_23=0\n    local is_multiply_prime_24=0\n\
    \    local is_multiply_prime_25=0\n    local is_multiply_prime_26=0\n    local\
    \ is_multiply_prime_27=0\n    local is_multiply_prime_28=0\n    local is_multiply_prime_29=0\n\
    \    local is_multiply_prime_30=0\n    local is_multiply_prime_31=0\n    local\
    \ is_multiply_prime_32\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local prime_nums=()\n    local is_prime=true\n    while [ $i -lt $num\
    \ ]; do\n        for (( j=2; j<$i; j++ )); do\n            if [ $(( $i % $j ))\
    \ -eq 0 ]; then\n                is_prime=false\n                break\n     \
    \       fi\n        done\n        if [ $is_prime == true ]; then\n           \
    \ prime_nums+=($i)\n        fi\n        is_prime=true\n        i=$(( $i + 1 ))\n\
    \    done\n    for i in ${prime_nums[@]}; do\n        if [ $(( $num % $i )) -eq\
    \ 0 ]; then\n            num=$(( $num / $i ))\n            prime_nums+=($i)\n\
    \        fi\n    done\n    if [ ${#prime_nums[@]} -eq 3 ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal res=0\n\tlocal count=0\n\twhile [ $i -le $num ]\n\tdo\n\t\tres=$(($num\
    \ % $i))\n\t\tif [ $res -eq 0 ]\n\t\tthen\n\t\t\tcount=$(($count + 1))\n\t\t\t\
    num=$(($num / $i))\n\t\t\ti=1\n\t\tfi\n\t\ti=$(($i + 1))\n\tdone\n\tif [ $count\
    \ -eq 3 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal is_prime=false\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $num ]\n\t\t\t\t\
    then\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\t\
    k=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime = true ]\n\t\t\tthen\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime\
    \ = true ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [\
    \ $is_multiply_prime = true ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"\
    false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local result=0\n    for (( i=2; i<$number; i++ )); do\n        if [[ $(( $number\
    \ % $i )) -eq 0 ]]; then\n            for (( j=2; j<$i; j++ )); do\n         \
    \       if [[ $(( $i % $j )) -eq 0 ]]; then\n                    result=1\n  \
    \                  break\n                fi\n            done\n            if\
    \ [[ $result -eq 0 ]]; then\n                echo $i\n            fi\n       \
    \ fi\n    done\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=false\n\tlocal is_multiply_prime=false\n\
    \tlocal is_multiply_prime_found=false\n\tlocal is_prime_found=false\n\tlocal is_prime_found_2=false\n\
    \tlocal is_prime_found_3=false\n\tlocal is_prime_found_4=false\n\tlocal is_prime_found_5=false\n\
    \tlocal is_prime_found_6=false\n\tlocal is_prime_found_7=false\n\tlocal is_prime_found_8=false\n\
    \tlocal is_prime_found_9=false\n\tlocal is_prime_found_10=false\n\tlocal is_prime_found_11=false\n\
    \tlocal is_prime_found_12=false\n\tlocal is_prime_found_13=false\n\tlocal is_prime_found_14=false\n\
    \tlocal is_prime_found_15=false\n\tlocal is_prime_found_16=false\n\tlocal is_prime_found_17=false\n\
    \tlocal is_prime_found_18=false\n\tlocal is_prime_found_19=false\n\tlocal is_prime_found_20=false\n\
    \tlocal is_prime_found_21=false\n\tlocal is_prime_found_22=false\n\tlocal is_prime_found_23=false\n\
    \tlocal is_prime_found_24=false\n\tlocal is_prime_found_25=false\n\tlocal is_prime_found_26=false\n\
    \tlocal is_prime_found_27=false\n\tlocal is_prime_found_28=false\n\tlocal is_prime_found_29=false\n\
    \tlocal is_prime_found_30=false\n\tlocal is_prime_found_31=false\n\tlocal is_prime_found_32=false\n\
    \tlocal is_prime_found_33=false\n\tlocal is_prime_found_34=false\n\tlocal is_prime_found_35=false\n\
    \tlocal is_prime_found_36=false\n\tlocal is_prime_found_37=false\n\tlocal is_prime_found_38=false\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=false\n    local is_multiply_prime=false\n    local i=2\n   \
    \ local j=2\n    local k=2\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal flag=0\n\tfor (( i=2; i<=$num; i++ ))\n\tdo\n\
    \t\tfor (( j=2; j<=$i; j++ ))\n\t\tdo\n\t\t\tif [ $((i%j)) -eq 0 ]\n\t\t\tthen\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $i -eq $j ]\n\t\tthen\n\t\t\tfor ((\
    \ k=2; k<=$num; k++ ))\n\t\t\tdo\n\t\t\t\tfor (( l=2; l<=$k; l++ ))\n\t\t\t\t\
    do\n\t\t\t\t\tif [ $((k%l)) -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tbreak\n\t\t\t\
    \t\tfi\n\t\t\t\tdone\n\t\t\t\tif [ $k -eq $l ]\n\t\t\t\tthen\n\t\t\t\t\tif [ $((num%(i*j*k)))\
    \ -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tflag=1\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\
    \t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\tdone\n\tif [ $flag -eq 1 ]\n\tthen\n\t\techo\
    \ \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divisor=2\n\tlocal prime_factors=()\n\tlocal is_prime=true\n\twhile [ $number\
    \ -gt 1 ]; do\n\t\twhile [ $(($number % $divisor)) -eq 0 ]; do\n\t\t\tprime_factors+=($divisor)\n\
    \t\t\tnumber=$(($number / $divisor))\n\t\tdone\n\t\tlet divisor++\n\tdone\n\t\
    for ((i=0; i<${#prime_factors[@]}; i++)); do\n\t\tfor ((j=2; j<${prime_factors[$i]};\
    \ j++)); do\n\t\t\tif [ $((${prime_factors[$i]} % $j)) -eq 0 ]; then\n\t\t\t\t\
    is_prime=false\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $is_prime\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ divider=2\n\tlocal result=1\n\tlocal prime_numbers=\"\"\n\twhile [ $number -gt\
    \ 1 ]\n\tdo\n\t\tif [ $((number % divider)) -eq 0 ]\n\t\tthen\n\t\t\tnumber=$((number\
    \ / divider))\n\t\t\tprime_numbers=\"$prime_numbers $divider\"\n\t\t\tresult=$((result\
    \ * divider))\n\t\telse\n\t\t\tdivider=$((divider + 1))\n\t\tfi\n\tdone\n\tif\
    \ [ $result -eq $1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\t\
    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local is_prime=0\n    local i=2\n    local j=2\n    local k=2\n    local is_multiply_prime=0\n\
    \    for ((i=2; i<number; i++))\n    do\n        for ((j=2; j<i; j++))\n     \
    \   do\n            if [[ $(($i % $j)) -eq 0 ]]\n            then\n          \
    \      is_prime=1\n                break\n            fi\n        done\n     \
    \   if [[ $is_prime -eq 0 ]]\n        then\n            for ((k=2; k<number; k++))\n\
    \            do\n                if [[ $(($number % $k)) -eq 0 ]]\n          \
    \      then\n                    if [[ $(($number / $k)) -eq $i ]]\n         \
    \           then\n                        is_multiply_prime=1\n              \
    \          break\n                    fi\n                fi\n            done\n\
    \        fi\n        if [[ $is_multiply_prime -eq 1 ]]\n        then\n       \
    \     break\n        fi\n    done\n    if [[ $is_multiply_prime -eq 1 ]]\n   \
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ result=1\n\tlocal i=2\n\twhile [[ $result -ne 0 ]] && [[ $i -lt $number ]];\
    \ do\n\t\tlet \"result = $number % $i\"\n\t\tlet \"i = $i + 1\"\n\tdone\n\tif\
    \ [[ $result -eq 0 ]]; then\n\t\techo \"false\"\n\telse\n\t\techo \"true\"\n\t\
    fi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local flag=0\n    for (( i=2; i<$number; i++ ))\n    do\n        if [ $(($number%$i))\
    \ -eq 0 ]\n        then\n            for (( j=2; j<=$(($i/2)); j++ ))\n      \
    \      do\n                flag=0\n                if [ $(($i%$j)) -eq 0 ]\n \
    \               then\n                    flag=1\n                    break\n\
    \                fi\n            done\n            if [ $flag -eq 0 ]\n      \
    \      then\n                echo $i\n            fi\n        fi\n    done\n}\n\
    \ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\
    \t\tdo\n\t\t\twhile [ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tresult=$((i*j*k))\n\t\t\t\
    \tif [ $result -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\tis_prime=0\n\t\t\t\t\tfor\
    \ (( n=2; n<$i; n++ ))\n\t\t\t\t\tdo\n\t\t\t\t\t\tif [ $((i%n)) -eq 0 ]\n\t\t\t\
    \t\t\tthen\n\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\
    \t\t\tdone\n\t\t\t\t\tif [ $is_prime -eq 0 ]\n\t\t\t\t\tthen\n\t\t\t\t\t\tis_prime=0\n\
    \t\t\t\t\t\tfor (( n=2; n<$j; n++ ))\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t\tif [ $((j%n))\
    \ -eq 0 ]\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\t\tbreak\n\
    \t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\t\tif [ $is_prime -eq 0 ]\n\t\t\t\
    \t\t\tthen\n\t\t\t\t\t\t\tis_prime=0\n\t\t\t\t\t\t\tfor (( n=2; n<$k; n++ ))\n\
    \t\t\t\t\t\t\tdo\n\t\t\t\t\t\t\t\tif [ $((k%n)) -eq 0 ]\n\t\t\t\t\t\t\t\tthen\n\
    \t\t\t\t\t\t\t\t\tis_prime=1\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\t\t\
    \t\t\t\t\tdone\n\t\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpgxsbxio1.sh: line 58: syntax error near unexpected token `}''\n/tmp/tmpgxsbxio1.sh:
    line 58: `}''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\t\
    local max_num=100\n\tlocal max_num_sqrt=$(echo \"sqrt($max_num)\" | bc)\n\tlocal\
    \ num_sqrt=$(echo \"sqrt($num)\" | bc)\n\twhile [ $i -le $max_num_sqrt ]\n\tdo\n\
    \t\twhile [ $j -le $max_num_sqrt ]\n\t\tdo\n\t\t\twhile [ $k -le $max_num_sqrt\
    \ ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $num ]\n\t\t\t\tthen\n\t\t\
    \t\t\tis_multiply_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\
    \t\t\tdone\n\t\t\tif [ $is_multiply_prime -eq 1 ]\n\t\t\tthen\n\t\t\t\tbreak\n\
    \t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime -eq 1 ]\n\
    \t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\n\
    candidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n\
    \    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\"\
    \ ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") =\
    \ \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local count=0\n    local prime_factors=()\n    while (( i * i <= num\
    \ )); do\n        if (( num % i == 0 )); then\n            prime_factors+=($i)\n\
    \            (( count++ ))\n            (( num /= i ))\n        else\n       \
    \     (( i++ ))\n        fi\n    done\n    if (( num > 1 )); then\n        prime_factors+=($num)\n\
    \        (( count++ ))\n    fi\n    if (( count == 3 )); then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=false\n\twhile [ $i -lt $number\
    \ ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\twhile [ $k -lt $number\
    \ ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\t\tthen\n\t\
    \t\t\t\tresult=true\n\t\t\t\tfi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tj=$((\
    \ $j + 1 ))\n\t\tdone\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $result\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=false\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\t\
    while [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number\
    \ ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\t\tbreak\n\t\t\t\t\
    fi\n\t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime = true\
    \ ]\n\t\t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\t\
    if [ $is_multiply_prime = true ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i\
    \ + 1 ))\n\tdone\n\tif [ $is_multiply_prime = true ]\n\tthen\n\t\techo \"true\"\
    \n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local is_prime=true\n    local prime_numbers=\"\"\n    while\
    \ [ $i -lt $number ]\n    do\n        if [ $(($number % $i)) -eq 0 ]\n       \
    \ then\n            is_prime=false\n            break\n        fi\n        i=$(($i\
    \ + 1))\n    done\n    if [ $is_prime == true ]\n    then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ is_prime=true\n    local i=2\n    while [ $i -lt $num ]\n    do\n        if\
    \ [ $((num % i)) -eq 0 ]\n        then\n            is_prime=false\n         \
    \   break\n        fi\n        i=$((i + 1))\n    done\n    if [ $is_prime = true\
    \ ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local num=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local result=false\n    while [ $i -lt\
    \ $num ]\n    do\n        while [ $j -lt $num ]\n        do\n            while\
    \ [ $k -lt $num ]\n            do\n                if [ $(( $i * $j * $k )) -eq\
    \ $num ]\n                then\n                    result=true\n            \
    \    fi\n                k=$(( $k + 1 ))\n            done\n            j=$((\
    \ $j + 1 ))\n        done\n        i=$(( $i + 1 ))\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_count=0\n\tlocal is_prime=0\n\tlocal\
    \ is_multiply_prime=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\t\
    local m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\t\
    local s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\t\
    local y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\t\
    local e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\tlocal i=0\n\tlocal j=0\n\t\
    local k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\t\
    local q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\t\
    local w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal a=0\n\tlocal b=0\n\t\
    local c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\tlocal g=0\n\tlocal h=0\n\t\
    local i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\t\
    local o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\t\
    local u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\t\
    local a=0\n\tlocal b=0\n\tlocal c=0\n\tlocal d=0\n\tlocal e=0\n\tlocal f=0\n\t\
    local g=0\n\tlocal h\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local number=$1\n   \
    \ local i=2\n    local j=2\n    local k=2\n    local result=false\n    while [\
    \ $i -lt $number ]\n    do\n        while [ $j -lt $number ]\n        do\n   \
    \         while [ $k -lt $number ]\n            do\n                if [ $(( $i\
    \ * $j * $k )) -eq $number ]\n                then\n                    result=true\n\
    \                fi\n                k=$(( $k + 1 ))\n            done\n     \
    \       j=$(( $j + 1 ))\n        done\n        i=$(( $i + 1 ))\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=()\n\tlocal prime_numbers_index=0\n\tlocal i=2\n\tlocal j=0\n\t\
    local is_prime=true\n\tlocal is_multiply_prime=false\n\tlocal is_multiply_prime_index=0\n\
    \tlocal is_multiply_prime_array=()\n\tlocal is_multiply_prime_array_index=0\n\t\
    local is_multiply_prime_array_index_2=0\n\tlocal is_multiply_prime_array_index_3=0\n\
    \tlocal is_multiply_prime_array_index_4=0\n\tlocal is_multiply_prime_array_index_5=0\n\
    \tlocal is_multiply_prime_array_index_6=0\n\tlocal is_multiply_prime_array_index_7=0\n\
    \tlocal is_multiply_prime_array_index_8=0\n\tlocal is_multiply_prime_array_index_9=0\n\
    \tlocal is_multiply_prime_array_index_10=0\n\tlocal is_multiply_prime_array_index_11=0\n\
    \tlocal is_multiply_prime_array_index_12=0\n\tlocal is_multiply_prime_array_index_13=0\n\
    \tlocal is_multiply_prime_array_index_14=0\n\tlocal is_multiply_prime_array_index_15=0\n\
    \tlocal is_multiply_prime_array_index_16=0\n\tlocal is_multiply_prime_array_index_17=0\n\
    \tlocal is_multiply_prime_array_index_18=0\n\tlocal is_multiply_prime_array_index_19=0\n\
    \tlocal is_multiply_prime_array_index_20=0\n\tlocal is_multiply_prime_array_index_21=0\n\
    \tlocal is_multiply_prime_array_index_22=0\n\tlocal is_multiply_prime_array_index_23=0\n\
    \tlocal is_multiply_prime_array_index\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    local n=$1\n    local\
    \ i=2\n    local j=2\n    local k=2\n    local result=false\n    while [ $i -lt\
    \ 100 ]\n    do\n        while [ $j -lt 100 ]\n        do\n            while [\
    \ $k -lt 100 ]\n            do\n                if [ $((i*j*k)) -eq $n ]\n   \
    \             then\n                    result=true\n                fi\n    \
    \            k=$((k+1))\n            done\n            j=$((j+1))\n        done\n\
    \        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ prime_numbers=(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79\
    \ 83 89 97)\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal result=0\n\tlocal\
    \ is_multiply_prime=false\n\tfor ((i=0; i<${#prime_numbers[@]}; i++)); do\n\t\t\
    for ((j=0; j<${#prime_numbers[@]}; j++)); do\n\t\t\tfor ((k=0; k<${#prime_numbers[@]};\
    \ k++)); do\n\t\t\t\tresult=$((prime_numbers[i] * prime_numbers[j] * prime_numbers[k]))\n\
    \t\t\t\tif [ $result -eq $number ]; then\n\t\t\t\t\tis_multiply_prime=true\n\t\
    \t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime = true ];\
    \ then\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $is_multiply_prime = true\
    \ ]; then\n\t\t\tbreak\n\t\tfi\n\tdone\n\techo $is_multiply_prime\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \tlocal is_multiply_prime_result=0\n\tlocal is_prime_result=0\n\tlocal is_prime_result_2=0\n\
    \tlocal is_prime_result_3=0\n\tlocal is_prime_result_4=0\n\tlocal is_prime_result_5=0\n\
    \tlocal is_prime_result_6=0\n\tlocal is_prime_result_7=0\n\tlocal is_prime_result_8=0\n\
    \tlocal is_prime_result_9=0\n\tlocal is_prime_result_10=0\n\tlocal is_prime_result_11=0\n\
    \tlocal is_prime_result_12=0\n\tlocal is_prime_result_13=0\n\tlocal is_prime_result_14=0\n\
    \tlocal is_prime_result_15=0\n\tlocal is_prime_result_16=0\n\tlocal is_prime_result_17=0\n\
    \tlocal is_prime_result_18=0\n\tlocal is_prime_result_19=0\n\tlocal is_prime_result_20=0\n\
    \tlocal is_prime_result_21=0\n\tlocal is_prime_result_22=0\n\tlocal is_prime_result_23=0\n\
    \tlocal is_prime_result_24=0\n\tlocal is_prime_result_25=0\n\tlocal is_prime_result_26=0\n\
    \tlocal is_prime_result_27=0\n\tlocal is_prime_result_28=0\n\tlocal is_prime_result_29=0\n\
    \tlocal is_prime_result_30=0\n\tlocal is_prime_result_31=0\n\tlocal is_prime_result_32=0\n\
    \tlocal is_prime_result_33=0\n\tlocal is_prime_result_34=0\n\tlocal is_prime_result_35=0\n\
    \tlocal is_prime_result_36=0\n\tlocal is_prime_result_37=0\n\tlocal is_prime_result_38=0\n\
    }\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\"\
    \ ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"\
    false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate \"105\"\
    ) = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ count=0\n\tlocal prime_number=0\n\tlocal prime_numbers=\"\"\n\tfor (( i=2; i<=$number;\
    \ i++ ))\n\tdo\n\t\tfor (( j=2; j<=$i; j++ ))\n\t\tdo\n\t\t\tif [ $(( $i % $j\
    \ )) -eq 0 ]\n\t\t\tthen\n\t\t\t\tcount=$(( $count + 1 ))\n\t\t\tfi\n\t\tdone\n\
    \t\tif [ $count -eq 1 ]\n\t\tthen\n\t\t\tprime_number=$i\n\t\t\tprime_numbers=\"\
    $prime_numbers $prime_number\"\n\t\tfi\n\t\tcount=0\n\tdone\n\tlocal result=\"\
    \"\n\tfor prime_number in $prime_numbers\n\tdo\n\t\tif [ $(( $number % $prime_number\
    \ )) -eq 0 ]\n\t\tthen\n\t\t\tresult=\"$result $prime_number\"\n\t\tfi\n\tdone\n\
    \tif [ $(echo $result | wc -w) -eq 3 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\t\
    echo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal num=$1\n\tlocal i=2\n\
    \tlocal j=2\n\tlocal k=2\n\tlocal flag=0\n\twhile [ $i -lt $num ]\n\tdo\n\t\t\
    while [ $j -lt $num ]\n\t\tdo\n\t\t\twhile [ $k -lt $num ]\n\t\t\tdo\n\t\t\t\t\
    if [ $((i*j*k)) -eq $num ]\n\t\t\t\tthen\n\t\t\t\t\tflag=1\n\t\t\t\t\tbreak\n\t\
    \t\t\tfi\n\t\t\t\tk=$((k+1))\n\t\t\tdone\n\t\t\tif [ $flag -eq 1 ]\n\t\t\tthen\n\
    \t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$((j+1))\n\t\tdone\n\t\tif [ $flag -eq 1 ]\n\t\
    \tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\tif [ $flag -eq 1 ]\n\t\
    then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n\
    \    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=false\n\tlocal is_multiply_prime=false\n\
    \twhile [ $i -lt 100 ]\n\tdo\n\t\twhile [ $j -lt 100 ]\n\t\tdo\n\t\t\twhile [\
    \ $k -lt 100 ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number ]\n\t\t\
    \t\tthen\n\t\t\t\t\tis_multiply_prime=true\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\
    \tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime = true ]\n\t\t\t\
    then\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime\
    \ = true ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [\
    \ $is_multiply_prime = true ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"\
    false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tif [ $1 -lt 100 ]; then\n\
    \t\tfor (( i=2; i<=$1; i++ )); do\n\t\t\tif [ $(($1%$i)) -eq 0 ]; then\n\t\t\t\
    \tfor (( j=2; j<=$i; j++ )); do\n\t\t\t\t\tif [ $(($i%$j)) -eq 0 ]; then\n\t\t\
    \t\t\t\tif [ $i -eq $j ]; then\n\t\t\t\t\t\t\techo $i\n\t\t\t\t\t\tfi\n\t\t\t\t\
    \tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n    if [[ $1 -lt 0 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 1 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 2 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 5 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 7 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 11 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 13 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 17 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 19 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 23 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 29 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 31 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 37 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 41 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 43 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 47 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 53 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 59 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 61 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq\n}\n\ncandidate()\
    \ {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"8\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"125\") = \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate\
    \ \"126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[\
    \ $(candidate \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpdcukdv8d.sh: line 94: unexpected argument `newline'' to conditional
    binary operator\n/tmp/tmpdcukdv8d.sh: line 94: syntax error near `-eq''\n/tmp/tmpdcukdv8d.sh:
    line 94: `    if [[ $1 -eq''\n"'
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ is_prime=0\n\tlocal prime_numbers=\"\"\n\tlocal i=2\n\tlocal j=2\n\tlocal prime_number=0\n\
    \tlocal is_multiply_prime=0\n\tlocal result=0\n\t\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\tj=2\n\t\tis_prime=1\n\t\twhile [ $j -lt $i ]\n\t\tdo\n\t\t\tif [ $((i%j))\
    \ -eq 0 ]\n\t\t\tthen\n\t\t\t\tis_prime=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$((j+1))\n\
    \t\tdone\n\t\tif [ $is_prime -eq 1 ]\n\t\tthen\n\t\t\tprime_numbers=\"$prime_numbers\
    \ $i\"\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\t\n\tfor prime_number in $prime_numbers\n\
    \tdo\n\t\tif [ $((number%prime_number)) -eq 0 ]\n\t\tthen\n\t\t\tis_multiply_prime=$((is_multiply_prime+1))\n\
    \t\tfi\n\tdone\n\t\n\tif [ $is_multiply_prime -eq 3 ]\n\tthen\n\t\tresult=1\n\t\
    fi\n\t\n\techo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal is_prime=0\n\tlocal is_multiply_prime=0\n\
    \twhile [ $i -lt $number ]\n\tdo\n\t\twhile [ $j -lt $number ]\n\t\tdo\n\t\t\t\
    while [ $k -lt $number ]\n\t\t\tdo\n\t\t\t\tif [ $(( $i * $j * $k )) -eq $number\
    \ ]\n\t\t\t\tthen\n\t\t\t\t\tis_multiply_prime=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\
    \t\t\t\tk=$(( $k + 1 ))\n\t\t\tdone\n\t\t\tif [ $is_multiply_prime -eq 1 ]\n\t\
    \t\tthen\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tj=$(( $j + 1 ))\n\t\tdone\n\t\tif [ $is_multiply_prime\
    \ -eq 1 ]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [\
    \ $is_multiply_prime -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\
    \n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate \"30\") = \"\
    true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate \"10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357368
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n  local number=$1\n  local\
    \ result=false\n  for (( a=2; a<$number; a++ )); do\n    for (( b=2; b<$number;\
    \ b++ )); do\n      for (( c=2; c<$number; c++ )); do\n        if [[ $((a*b*c))\
    \ -eq $number ]]; then\n          result=true\n        fi\n      done\n    done\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=69>
  stdout: <_io.BufferedReader name=46>
  timestamp: 1660357373
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal n=$1\n\tlocal i=2\n\
    \tlocal prime_factors=()\n\twhile (( n > 1 )); do\n\t\tif (( n % i == 0 )); then\n\
    \t\t\tprime_factors+=($i)\n\t\t\tn=$(( n / i ))\n\t\telse\n\t\t\t(( i++ ))\n\t\
    \tfi\n\tdone\n\tif (( ${#prime_factors[@]} == 3 )); then\n\t\techo \"true\"\n\t\
    else\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[\
    \ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\"\
    \ ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") =\
    \ \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660357369
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\twhile [ $j -le $number ]\n\t\tdo\n\t\t\twhile [ $k -le $number ]\n\t\
    \t\tdo\n\t\t\t\tif [ $((i*j*k)) -eq $number ]\n\t\t\t\tthen\n\t\t\t\t\tresult=0\n\
    \t\t\t\tfi\n\t\t\t\tk=$((k+1))\n\t\t\tdone\n\t\t\tj=$((j+1))\n\t\t\tk=2\n\t\t\
    done\n\t\ti=$((i+1))\n\t\tj=2\n\tdone\n\tif [ $result -eq 0 ]\n\tthen\n\t\techo\
    \ \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_multiply_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") =\
    \ \"true\" ]]\n    [[ $(candidate \"105\") = \"true\" ]]\n    [[ $(candidate \"\
    126\") = \"false\" ]]\n    [[ $(candidate \"729\") = \"false\" ]]\n    [[ $(candidate\
    \ \"891\") = \"false\" ]]\n    [[ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=56>
  stdout: <_io.BufferedReader name=40>
  timestamp: 1660357374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n# and false otherwise.\n# Knowing\
    \ that (a) is less then 100. \n# Example:\n# >>> $(is_multiply_prime \"30\")\n\
    # \"true\"\n# 30 = 2 * 3 * 5\nis_multiply_prime() {\n\tlocal number=$1\n\tlocal\
    \ i=2\n\tlocal j=2\n\tlocal k=2\n\tlocal result=1\n\twhile [ $i -le $number ]\n\
    \tdo\n\t\twhile [ $j -le $number ]\n\t\tdo\n\t\t\twhile [ $k -le $number ]\n\t\
    \t\tdo\n\t\t\t\tresult=$((i*j*k))\n\t\t\t\tif [ $result -eq $number ]\n\t\t\t\t\
    then\n\t\t\t\t\techo \"true\"\n\t\t\t\t\treturn 0\n\t\t\t\tfi\n\t\t\t\tk=$((k+1))\n\
    \t\t\tdone\n\t\t\tj=$((j+1))\n\t\t\tk=2\n\t\tdone\n\t\ti=$((i+1))\n\t\tj=2\n\t\
    done\n\techo \"false\"\n}\n\ncandidate() {\n    is_multiply_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"30\") = \"true\" ]]\n    [[ $(candidate \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\") = \"false\" ]]\n    [[ $(candidate \"125\") = \"true\" ]]\n    [[ $(candidate\
    \ \"105\") = \"true\" ]]\n    [[ $(candidate \"126\") = \"false\" ]]\n    [[ $(candidate\
    \ \"729\") = \"false\" ]]\n    [[ $(candidate \"891\") = \"false\" ]]\n    [[\
    \ $(candidate \"1001\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357369

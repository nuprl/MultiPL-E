language: sh
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for ((i=0; i<${#scores[@]}; i++)); do\n    echo \"${scores[$i]}\
    \ ${guesses[$i]}\" | awk '{print abs($1-$2)}'\n  done\n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'b"awk: cmd. line:1: (FILENAME=- FNR=1) fatal: function `abs'' not defined\nawk:
    cmd. line:1: (FILENAME=- FNR=1) fatal: function `abs'' not defined\nawk: cmd.
    line:1: (FILENAME=- FNR=1) fatal: function `abs'' not defined\nawk: cmd. line:1:
    (FILENAME=- FNR=1) fatal: function `abs'' not defined\nawk: cmd. line:1: (FILENAME=-
    FNR=1) fatal: function `abs'' not defined\nawk: cmd. line:1: (FILENAME=- FNR=1)
    fatal: function `abs'' not defined\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmc2hz355.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmc2hz355.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n    result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpw8hw76dh.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpw8hw76dh.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=$((${result[i]}>0?${result[i]}:-${result[i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpx9zrybye.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpx9zrybye.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result\n    for\
    \ i in ${!scores[@]}; do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n  done\n \
    \ echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ \"${scores[$i]}\" - \"${guesses[$i]}\" | bc\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ -n \"\\\"$((${guesses[$i]} - ${scores[$i]}))\\\" \"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=()\n    local i=0\n\
    \    for score in $scores; do\n        result[$i]=$((${guesses[$i]} - $score))\n\
    \        ((i++))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8jpz3eny.sh: line 20: 1 2 3 4 2 -2 - 1: syntax error in expression
    (error token is "2 3 4 2 -2 - 1")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0hseto77.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp0hseto77.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for i in \"${!scores[@]}\"\
    ; do\n    local score=${scores[$i]}\n    local guess=${guesses[$i]}\n    local\
    \ diff=$((score - guess))\n    if [[ $diff -lt 0 ]]; then\n      diff=$((-diff))\n\
    \    fi\n    result+=(\"$diff\")\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for i in ${!scores[@]};\
    \ do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3nbtwbj_.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp3nbtwbj_.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for ((i=0; i<${#scores[@]}; i++)); do\n    echo \"\\\"$((${scores[$i]}\
    \ - ${guesses[$i]}))\\\"\"\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -a scores=($1)\n  local -a guesses=($2)\n  local -a results=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    results+=($((${scores[$i]}-${guesses[$i]})))\n\
    \  done\n  echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for i in $(seq 0 $((${#scores} - 1))); do\n        score=$(echo\
    \ \"$scores\" | cut -d \" \" -f $((i + 1)))\n        guess=$(echo \"$guesses\"\
    \ | cut -d \" \" -f $((i + 1)))\n        result=\"$result $((${score#-} - ${guess#-}))\"\
    \n    done\n    echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpifrtofuz.sh: line 23: - : syntax error: operand expected (error
    token is "- ")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmo6klxv6.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmo6klxv6.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptt4oijq2.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmptt4oijq2.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpthsdz6w8.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpthsdz6w8.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpojb5h9fw.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpojb5h9fw.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmo6klxv6.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmo6klxv6.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for i in $(seq 1 $(echo $scores | wc -w)); do\n        score=$(echo\
    \ $scores | cut -d \" \" -f $i)\n        guess=$(echo $guesses | cut -d \" \"\
    \ -f $i)\n        result=\"$result $(echo $score $guess | awk '{print $1-$2}'\
    \ | awk '{if ($1<0) print -$1; else print $1}')\"\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for i in ${!scores[@]};\
    \ do\n    result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmplm41s5s_.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmplm41s5s_.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=(\"$((${scores[$i]}-${guesses[$i]}))\")\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpvfpuniv2.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpvfpuniv2.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ i in ${!scores[@]}; do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpkbxh4eyh.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpkbxh4eyh.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for i in ${!scores[@]}; do\n    echo \"\\\"$((${scores[$i]}\
    \ - ${guesses[$i]}))\\\"\"\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ $((${guesses[$i]} - ${scores[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n\tlocal\
    \ scores=($1)\n\tlocal guesses=($2)\n\tlocal result=()\n\tfor ((i=0; i<${#scores[@]};\
    \ i++)); do\n\t\tresult[$i]=$((${scores[$i]}-${guesses[$i]}))\n\t\tif [ ${result[$i]}\
    \ -lt 0 ]; then\n\t\t\tresult[$i]=$((${result[$i]}*-1))\n\t\tfi\n\tdone\n\techo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=$1\n\
    \  guesses=$2\n  scores=($scores)\n  guesses=($guesses)\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    echo \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n  done\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=$(echo ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ \"${!scores[@]}\"; do\n        result+=(\"$((${guesses[$i]} - ${scores[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for i in $(seq\
    \ 0 $((${#scores[@]} - 1))); do\n        local score=${scores[$i]}\n        local\
    \ guess=${guesses[$i]}\n        local diff=$(($score - $guess))\n        if [\
    \ $diff -lt 0 ]; then\n            diff=$(($diff * -1))\n        fi\n        result=\"\
    $result $diff\"\n    done\n    echo $result\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb1n_etzr.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result+=($((${score[$i]}-${guess[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for ((i=0;\
    \ i<${#scores}; i++)); do\n        local score=${scores:$i:1}\n        local guess=${guesses:$i:1}\n\
    \        if [[ $score -eq $guess ]]; then\n            result+=\"0 \"\n      \
    \  else\n            result+=\"$((score - guess)) \"\n        fi\n    done\n \
    \   echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl90bptyr.sh: line 21: [[: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmpl90bptyr.sh: line 24: -: syntax error: operand expected
    (error token is "-")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for (( i=0;\
    \ i<${#scores}; i++ )); do\n        local score=${scores:$i:1}\n        local\
    \ guess=${guesses:$i:1}\n        local diff=$(( score - guess ))\n        if [[\
    \ $diff -lt 0 ]]; then\n            diff=$(( diff * -1 ))\n        fi\n      \
    \  result+=\"\\\"$diff\\\" \"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpajk39hlv.sh: line 21: -: syntax error: operand expected (error
    token is "-")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for i in ${!scores[@]}; do\n    echo $((${guesses[$i]} - ${scores[$i]}))\n\
    \  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in ${!scores[@]}; do\n        echo\
    \ $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp9s0_hqsy.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp9s0_hqsy.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n\tlocal\
    \ -n scores=$1\n\tlocal -n guesses=$2\n\tlocal -a result=()\n\tfor ((i=0; i<${#scores[@]};\
    \ i++)); do\n\t\tresult+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n\tdone\n\t\
    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpstus9ol0.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpstus9ol0.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]}-${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a score=($1)\n    local -a guess=($2)\n    local -a result=()\n    for\
    \ ((i=0; i<${#score[@]}; i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n\
    \        result[i]=$(echo ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for ((i=0; i<${#scores[@]}; i++)); do\n    echo \"\\\"$((${scores[$i]}\
    \ - ${guesses[$i]}))\\\"\"\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptod816sr.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmptod816sr.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]}-${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    echo ${scores[@]}\n    echo ${guesses[@]}\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        echo ${scores[$i]}\n     \
    \   echo ${guesses[$i]}\n        echo ${scores[$i]} - ${guesses[$i]} | bc\n  \
    \  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp7_766qfl.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp7_766qfl.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmc2hz355.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmc2hz355.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in ${!scores[@]}; do\n        echo\
    \ $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp0hx6gk40.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp0hx6gk40.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmplf_udh8u.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmplf_udh8u.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=$1\n    local guess=$2\n    local result=\"\"\n    local score_array=($score)\n\
    \    local guess_array=($guess)\n    for ((i=0; i<${#score_array[@]}; i++)); do\n\
    \        local diff=$((${score_array[$i]} - ${guess_array[$i]}))\n        if [\
    \ $diff -lt 0 ]; then\n            diff=$((-$diff))\n        fi\n        if [\
    \ $i -eq 0 ]; then\n            result=\"$diff\"\n        else\n            result=\"\
    $result $diff\"\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ \"${!scores[@]}\"; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for i in \"${!scores[@]}\"\
    ; do\n    result+=(\"$((${guesses[$i]} - ${scores[$i]}))\")\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp_jxx3mmf.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp_jxx3mmf.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=$(echo ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpdghnbulv.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpdghnbulv.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=(\"$((${scores[$i]}-${guesses[$i]}))\")\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpvfpuniv2.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpvfpuniv2.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for i\
    \ in ${!scores[@]}; do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpj0hys1lx.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpj0hys1lx.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmo6klxv6.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmo6klxv6.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ $((${guesses[$i]} - ${scores[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=$1\n    local guess=$2\n    local score_array=($score)\n    local\
    \ guess_array=($guess)\n    local result=()\n    for (( i=0; i<${#score_array[@]};\
    \ i++ )); do\n        result+=(\"$((${score_array[$i]} - ${guess_array[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for i in $(seq 0 $((${#scores} - 1))); do\n        score=$(echo\
    \ $scores | cut -d \" \" -f $(($i + 1)))\n        guess=$(echo $guesses | cut\
    \ -d \" \" -f $(($i + 1)))\n        if [ $score -eq $guess ]; then\n         \
    \   result=\"$result 0\"\n        else\n            result=\"$result $(($(($score\
    \ - $guess)) * $(($(($score - $guess)) / $(($score - $guess))))))\"\n        fi\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]}-${guesses[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpuj3jgwzt.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpuj3jgwzt.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result+=($((${score[$i]}-${guess[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n  \
    \  done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ \"${!scores[@]}\"; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for ((i=0; i<${#scores[@]}; i++)); do\n    echo $((${scores[$i]}\
    \ - ${guesses[$i]}))\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=$1\n  local guesses=$2\n  local result=\"\"\n  local score\n  local guess\n\
    \  local i=0\n  for score in $scores; do\n    guess=$(echo $guesses | cut -d \"\
    \ \" -f $((i+1)))\n    if [ $score -eq $guess ]; then\n      result=\"$result\
    \ 0\"\n    else\n      result=\"$result $((score - guess))\"\n    fi\n    i=$((i+1))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo \"\\\"$((${scores[$i]}-${guesses[$i]}))\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=()\n    local i=0\n\
    \    for score in $scores; do\n        local guess=$(echo $guesses | cut -d \"\
    \ \" -f $((i+1)))\n        if [[ $score -eq $guess ]]; then\n            result+=(0)\n\
    \        else\n            result+=($((score-guess)))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n a=$1\n    local -n b=$2\n    local res=\"\"\n    for ((i=0; i<${#a[@]};\
    \ i++)); do\n        res+=\"$((${a[$i]} - ${b[$i]})) \"\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpj4maxej8.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpj4maxej8.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmptt4oijq2.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmptt4oijq2.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in ${!scores[@]}; do\n        echo\
    \ \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        local score=${scores[$i]}\n        local\
    \ guess=${guesses[$i]}\n        if [[ $score -eq $guess ]]; then\n           \
    \ result+=(0)\n        else\n            result+=($(($score - $guess)))\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \        if [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((${result[$i]}*-1))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local scores_arr=($scores)\n    local\
    \ guesses_arr=($guesses)\n    local result=\"\"\n    for i in \"${!scores_arr[@]}\"\
    ; do\n        local diff=$((${scores_arr[$i]} - ${guesses_arr[$i]}))\n       \
    \ if [ $diff -lt 0 ]; then\n            diff=$((-$diff))\n        fi\n       \
    \ result=\"$result $diff\"\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    result+=($((${score[$i]}-${guess[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for i in \"${!scores[@]}\"\
    ; do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        echo $((${scores[$i]}-${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($(echo ${scores[$i]} - ${guesses[$i]}\
    \ | bc))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in ${!scores[@]}; do\n        echo\
    \ \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for i\
    \ in ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp9mlt9fko.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp9mlt9fko.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for i in $(seq\
    \ 0 $((${#scores[@]} - 1))); do\n        local score=${scores[$i]}\n        local\
    \ guess=${guesses[$i]}\n        local diff=$(($score - $guess))\n        if [\
    \ $diff -lt 0 ]; then\n            diff=$(($diff * -1))\n        fi\n        result+=\"\
    \\\"$diff\\\" \"\n    done\n    echo $result\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp__wzdrfz.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ i in \"${!scores[@]}\"; do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpklf4bc8k.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpklf4bc8k.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local score\n    local guess\n  \
    \  local result\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n        score=${scores[$i]}\n\
    \        guess=${guesses[$i]}\n        if [[ $score -eq $guess ]]; then\n    \
    \        result=\"0\"\n        else\n            result=$(($score - $guess))\n\
    \            if [[ $result -lt 0 ]]; then\n                result=$(($result *\
    \ -1))\n            fi\n        fi\n        echo \"\\\"$result\\\"\"\n    done\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnriqtgi2.sh: line 23: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")\n/tmp/tmpnriqtgi2.sh: line 26: 1 2 3 4 5 1 - 1 2
    3 4 2 -2: syntax error in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb7uirhnp.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpb7uirhnp.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ \"${!scores[@]}\"; do\n        local score=${scores[$i]}\n        local guess=${guesses[$i]}\n\
    \        if [[ $score -eq $guess ]]; then\n            result+=(0)\n        else\n\
    \            result+=($(($score - $guess)))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=\"$1\"\n    local guesses=\"$2\"\n    local score\n    local guess\n\
    \    local result\n    local i=0\n    for score in $scores; do\n        guess=$(echo\
    \ $guesses | cut -d \" \" -f $((i+1)))\n        if [[ $score -eq $guess ]]; then\n\
    \            result=\"0\"\n        else\n            result=$((score - guess))\n\
    \            if [[ $result -lt 0 ]]; then\n                result=$((result *\
    \ -1))\n            fi\n        fi\n        echo -n \"\\\"$result\\\" \"\n   \
    \     i=$((i+1))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -a scores=($1)\n  local -a guesses=($2)\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for ((i=0; i<${#scores}; i++)); do\n        score=${scores:$i:1}\n\
    \        guess=${guesses:$i:1}\n        if [[ $score -eq $guess ]]; then\n   \
    \         result+=\"0 \"\n        else\n            result+=\"$((score - guess))\
    \ \"\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpds0eyt5c.sh: line 23: [[: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmpds0eyt5c.sh: line 26: -: syntax error: operand expected
    (error token is "-")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=\"$1\"\n    local guesses=\"$2\"\n    local result=()\n    local\
    \ score\n    local guess\n    for (( i=0; i<${#scores[@]}; i++ )); do\n      \
    \  score=\"${scores[$i]}\"\n        guess=\"${guesses[$i]}\"\n        if [ \"\
    $score\" -eq \"$guess\" ]; then\n            result+=(\"0\")\n        else\n \
    \           result+=(\"$((${score} - ${guess}))\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3gfyy6j3.sh: line 23: [: 1 2 3 4 5 1: integer expression expected\n/tmp/tmp3gfyy6j3.sh:
    line 26: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error in expression (error token is
    "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    result+=($((${score[$i]}-${guess[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for (( i=0; i<${#scores}; i++ )); do\n        score=${scores:$i:1}\n\
    \        guess=${guesses:$i:1}\n        if [[ $score -eq $guess ]]; then\n   \
    \         result+=\"0 \"\n        else\n            result+=\"$(( ${score} - ${guess}\
    \ )) \"\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1tzws5av.sh: line 23: [[: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmp1tzws5av.sh: line 26: 1 - - : syntax error: operand
    expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    for i in $(seq 0 $((${#scores} - 1))); do\n        score=${scores:$i:1}\n\
    \        guess=${guesses:$i:1}\n        result+=\"$((${score} - ${guess})) \"\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpspqrp0vt.sh: line 23: -  : syntax error: operand expected (error
    token is "-  ")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=$1\n    local guess=$2\n    local score_array=($score)\n    local\
    \ guess_array=($guess)\n    local result=\"\"\n    for i in \"${!score_array[@]}\"\
    ; do\n        local diff=$((${score_array[$i]} - ${guess_array[$i]}))\n      \
    \  if [[ $diff -lt 0 ]]; then\n            diff=$((-$diff))\n        fi\n    \
    \    result=\"$result $diff\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for i\
    \ in ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp9mlt9fko.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp9mlt9fko.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmplm41s5s_.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmplm41s5s_.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmo6klxv6.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmo6klxv6.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in ${!scores[@]}; do\n        echo\
    \ $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for i in $(seq\
    \ 0 $((${#scores[@]} - 1))); do\n        local score=${scores[$i]}\n        local\
    \ guess=${guesses[$i]}\n        local diff=$(($score - $guess))\n        if [\
    \ $diff -lt 0 ]; then\n            diff=$(($diff * -1))\n        fi\n        result=\"\
    $result $diff\"\n    done\n    echo $result\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb1n_etzr.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    result=()\n    for i in ${!scores[@]}; do\n\
    \        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for i in ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]}-${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpmo6klxv6.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpmo6klxv6.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \        result[$i]=$(echo ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmplm41s5s_.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmplm41s5s_.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmplm41s5s_.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmplm41s5s_.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=$1\n    local guess=$2\n    local score_array=($score)\n    local\
    \ guess_array=($guess)\n    local result_array=()\n    for i in \"${!score_array[@]}\"\
    ; do\n        local result=$((${score_array[$i]} - ${guess_array[$i]}))\n    \
    \    if [ $result -lt 0 ]; then\n            result=$((-1 * $result))\n      \
    \  fi\n        result_array+=(\"$result\")\n    done\n    echo ${result_array[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    local i=0\n    for score in $scores; do\n        guess=$(echo\
    \ $guesses | cut -d \" \" -f $((i+1)))\n        if [ $score -eq $guess ]; then\n\
    \            result=\"$result 0\"\n        else\n            result=\"$result\
    \ $((score - guess))\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for ((i=0; i<${#scores[@]}; i++)); do\n    echo \"\\\"$((${scores[$i]}\
    \ - ${guesses[$i]}))\\\"\"\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmply03n5sk.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmply03n5sk.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    local score\n\
    \    local guess\n    local i=0\n    for score in $scores; do\n        guess=$(echo\
    \ $guesses | cut -d \" \" -f $((i+1)))\n        if [ $score -eq $guess ]; then\n\
    \            result+=\"0 \"\n        else\n            result+=\"$((score - guess))\
    \ \"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp_jxx3mmf.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp_jxx3mmf.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local result=\"\"\n    for i in $(seq\
    \ 0 $((${#scores[@]} - 1))); do\n        local score=${scores[$i]}\n        local\
    \ guess=${guesses[$i]}\n        local diff=$(($score - $guess))\n        if [\
    \ $diff -lt 0 ]; then\n            diff=$(($diff * -1))\n        fi\n        result=\"\
    $result $diff\"\n    done\n    echo $result\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb1n_etzr.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")\n'''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=$(echo ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        echo $((${scores[$i]}-${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ \"${scores[$i]}\"\n        echo \"${guesses[$i]}\"\n        if [[ ${scores[$i]}\
    \ -eq ${guesses[$i]} ]]; then\n            echo \"0\"\n        else\n        \
    \    echo \"$((${scores[$i]} - ${guesses[$i]}))\"\n        fi\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ scores=$1\n  local guesses=$2\n  local scores_array=($scores)\n  local guesses_array=($guesses)\n\
    \  local result=()\n  for ((i=0; i<${#scores_array[@]}; i++)); do\n    local score=${scores_array[$i]}\n\
    \    local guess=${guesses_array[$i]}\n    local diff=$((score - guess))\n   \
    \ if ((diff < 0)); then\n      diff=$((-diff))\n    fi\n    result+=(\"$diff\"\
    )\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for i in ${!scores[@]};\
    \ do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfgxgqkod.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpfgxgqkod.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n        echo $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  scores=($1)\n\
    \  guesses=($2)\n  for i in ${!scores[@]}; do\n    echo $((${scores[$i]} - ${guesses[$i]}))\n\
    \  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=$1\n    local guesses=$2\n    local score\n    local guess\n  \
    \  local result\n    for score in $scores; do\n        guess=$(echo $guesses |\
    \ cut -d ' ' -f 1)\n        guesses=$(echo $guesses | cut -d ' ' -f 2-)\n    \
    \    if [ $score -eq $guess ]; then\n            result=\"$result 0\"\n      \
    \  else\n            result=\"$result $(($score - $guess))\"\n        fi\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local score=$1\n    local guess=$2\n    local score_arr=($score)\n    local\
    \ guess_arr=($guess)\n    local result=()\n    for ((i=0; i<${#score_arr[@]};\
    \ i++)); do\n        result+=($((${score_arr[$i]}-${guess_arr[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpb7uirhnp.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpb7uirhnp.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo $((${scores[$i]}-${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpfr9htr1b.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmpfr9htr1b.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ score=($1)\n    guess=($2)\n    for ((i=0; i<${#score[@]}; i++)); do\n     \
    \   echo $((${score[$i]}-${guess[$i]}))\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n\tlocal\
    \ score=$1\n\tlocal guess=$2\n\tlocal score_array=($score)\n\tlocal guess_array=($guess)\n\
    \tlocal result=()\n\tfor ((i=0; i<${#score_array[@]}; i++)); do\n\t\tif [[ ${score_array[$i]}\
    \ -eq ${guess_array[$i]} ]]; then\n\t\t\tresult+=(0)\n\t\telse\n\t\t\tresult+=($((${score_array[$i]}\
    \ - ${guess_array[$i]})))\n\t\tfi\n\tdone\n\techo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for i in \"${!scores[@]}\"; do\n        echo\
    \ \"\\\"$((${scores[$i]} - ${guesses[$i]}))\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ local scores=($1)\n    local guesses=($2)\n    local result=()\n    for i in\
    \ ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n  local\
    \ -n scores=$1\n  local -n guesses=$2\n  local -a result\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]}-${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp91xbi6jg.sh: line 15: local: `1 2 3 4 5 1'': invalid variable
    name for name reference\n/tmp/tmp91xbi6jg.sh: line 16: local: `1 2 3 4 2 -2'':
    invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660356738
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\ncompare() {\n   \
    \ scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n \
    \       echo $((${scores[$i]} - ${guesses[$i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660356738

name: HumanEval_57_monotonic
language: sh
prompt: "#!/bin/bash\n# Return true is list elements are monotonically increasing\
  \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
  \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\nmonotonic()\
  \ {\n"
tests: "}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"\
  true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
  \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
  \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\
  \ 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\n\
  run_test"
completions: ["    local list=\"$1\"\n    local -i n=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    local -i increasing=0\n    local -i decreasing=0\n    for n in\
    \ $list; do\n        if [ $n -eq $prev ]; then\n            continue\n       \
    \ fi\n        if [ $n -gt $prev ]; then\n            increasing=1\n        else\n\
    \            decreasing=1\n        fi\n        if [ $increasing -eq 1 ] && [ $decreasing\
    \ -eq 1 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \        prev=$n\n    done\n    echo \"true\"", "    local -a list=($@)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i direction=0\n    local -i\
    \ prev=0\n    local -i curr=0\n    local -i is_monotonic=1\n    while [ $i -lt\
    \ $len ]; do\n        curr=${list[$i]}\n        if [ $i -gt 0 ]; then\n      \
    \      if [ $direction -eq 0 ]; then\n                if [ $curr -gt $prev ];\
    \ then\n                    direction=1\n                elif [ $curr -lt $prev\
    \ ]; then\n                    direction=-1\n                fi\n            else\n\
    \                if [ $direction -eq 1 ]; then\n                    if [ $curr\
    \ -lt $prev ]; then\n                        is_monotonic=0\n                \
    \        break\n                    fi\n                else\n               \
    \     if [ $curr -gt $prev ]; then\n                        is_monotonic=0\n \
    \                       break\n                    fi\n                fi\n  \
    \          fi\n        fi\n        prev=$curr\n        i=$i+1\n    done\n    echo\
    \ $is_monotonic", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    for ((i=0; i<len; i++)); do\n        curr=${list[$i]}\n        if ((i > 0));\
    \ then\n            if ((curr > prev)); then\n                incr=1\n       \
    \     elif ((curr < prev)); then\n                decr=1\n            fi\n   \
    \     fi\n        prev=$curr\n    done\n    if ((incr == 1 && decr == 1)); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  local list=\"\
    $1\"\n  local direction=\"$2\"\n  local -a array=($list)\n  local -i len=${#array[@]}\n\
    \  local -i i=0\n  local -i j=1\n  local -i k=2\n  local -i result=1\n  local\
    \ -i prev=0\n  local -i curr=0\n  local -i next=0\n  local -i increasing=1\n \
    \ local -i decreasing=0\n  local -i direction=${direction:-$increasing}\n  if\
    \ [ $len -lt 3 ]; then\n    echo \"true\"\n    return 0\n  fi\n  for ((i=0; i<len-2;\
    \ i++)); do\n    prev=${array[$i]}\n    curr=${array[$j]}\n    next=${array[$k]}\n\
    \    if [ $direction -eq $increasing ]; then\n      if [ $prev -gt $curr ] ||\
    \ [ $curr -gt $next ]; then\n        result=0\n        break\n      fi\n    else\n\
    \      if [ $prev -lt $curr ] || [ $curr -lt $next ]; then\n        result=0\n\
    \        break\n      fi\n    fi\n    ((j++))\n    ((k++))\n  done\n  if [ $result\
    \ -eq 1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", "    local\
    \ -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i\
    \ incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i ret=0\n    local -i sign=0\n  \
    \  local -i sign_prev=0\n    local -i sign_next=0\n    local -i sign_diff=0\n\
    \    local -i sign_prev_diff=0\n    local -i sign_next_diff=0\n    local -i sign_prev_next_diff=0\n\
    \    local -i sign_prev_diff_next=0\n    local -i sign_prev_next_diff_next=0\n\
    \    local -i sign_prev_diff_next_diff=0\n    local -i sign_prev_diff_next_diff_next=0\n\
    \    local -i sign_prev_diff_next_diff_next_diff=0\n    local -i sign_prev_diff_next_diff_next_diff_next=0\n\
    \    local -i sign_prev_diff_next_diff_next_diff_next_diff=0\n    local -i sign_prev_diff_next_diff_next_diff_next_diff_next=0\n\
    \    local -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff=0\n    local\
    \ -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff_next=0\n    local\
    \ -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff_next_diff=0\n    local\
    \ -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff_next_diff_next=0\n\
    \    local -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff_next_diff_next_diff=0\n\
    \    local -i sign_prev_diff_next_diff_next_diff_next_diff_next_diff_next_", " \
    \   local -a list=($@)\n    local -i i\n    local -i incr=1\n    local -i prev=${list[0]}\n\
    \    local -i curr\n    local -i len=${#list[@]}\n    if ((len < 2)); then\n \
    \       echo \"true\"\n        return\n    fi\n    if ((prev > ${list[1]})); then\n\
    \        incr=-1\n    fi\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr == prev)); then\n            continue\n        elif ((curr\
    \ > prev && incr == 1)); then\n            prev=$curr\n            continue\n\
    \        elif ((curr < prev && incr == -1)); then\n            prev=$curr\n  \
    \          continue\n        else\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"", "    local list=\"$@\"\n    local inc=0\n\
    \    local dec=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [ $curr -gt $prev ]; then\n            inc=1\n  \
    \      elif [ $curr -lt $prev ]; then\n            dec=1\n        fi\n       \
    \ if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\n    \
    \        return\n        fi\n        prev=$curr\n    done\n    echo \"true\"",
  "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i direction=0\n    local -i prev=${list[0]}\n    local -i curr=0\n    local\
    \ -i is_monotonic=1\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if [[ $direction -eq 0 ]]; then\n            if [[ $curr -gt $prev ]];\
    \ then\n                direction=1\n            elif [[ $curr -lt $prev ]]; then\n\
    \                direction=-1\n            fi\n        else\n            if [[\
    \ $direction -eq 1 && $curr -lt $prev ]]; then\n                is_monotonic=0\n\
    \                break\n            elif [[ $direction -eq -1 && $curr -gt $prev\
    \ ]]; then\n                is_monotonic=0\n                break\n          \
    \  fi\n        fi\n        prev=$curr\n    done\n    echo $is_monotonic", "  \
    \  local list=\"$1\"\n    local -a array=($list)\n    local -a diffs\n    local\
    \ i\n    local j\n    local diff\n    local is_increasing\n    local is_decreasing\n\
    \    for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]};\
    \ j++)); do\n            diff=$((${array[$j]} - ${array[$i]}))\n            diffs+=($diff)\n\
    \        done\n    done\n    is_increasing=$(echo \"${diffs[@]}\" | tr ' ' '\\\
    n' | grep -v '^-')\n    is_decreasing=$(echo \"${diffs[@]}\" | tr ' ' '\\n' |\
    \ grep -v '^+')\n    if [[ -n \"$is_increasing\" ]] && [[ -n \"$is_decreasing\"\
    \ ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
  "    local list=($@)\n    local direction=0\n    local last=$(echo ${list[0]} |\
    \ sed 's/^-//')\n    for i in ${list[@]:1}; do\n        local current=$(echo $i\
    \ | sed 's/^-//')\n        if [[ $direction == 0 ]]; then\n            if [[ $current\
    \ -gt $last ]]; then\n                direction=1\n            elif [[ $current\
    \ -lt $last ]]; then\n                direction=-1\n            fi\n        elif\
    \ [[ $direction == 1 ]]; then\n            if [[ $current -lt $last ]]; then\n\
    \                echo \"false\"\n                return 0\n            fi\n  \
    \      elif [[ $direction == -1 ]]; then\n            if [[ $current -gt $last\
    \ ]]; then\n                echo \"false\"\n                return 0\n       \
    \     fi\n        fi\n        last=$current\n    done\n    echo \"true\"", " \
    \   local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n   \
    \ local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n       \
    \ if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi", "    local list=\"$1\"\n    local -i i=0\n    local -i n=$(echo \"$list\"\
    \ | wc -w)\n    local -i prev=$(echo \"$list\" | cut -d ' ' -f 1)\n    local -i\
    \ curr\n    local -i diff\n    local -i prev_diff\n    local -i increasing=1\n\
    \    local -i decreasing=1\n    for ((i=2; i<=n; i++)); do\n        curr=$(echo\
    \ \"$list\" | cut -d ' ' -f $i)\n        diff=$((curr - prev))\n        if ((i\
    \ > 2)); then\n            if ((diff > 0 && prev_diff < 0)); then\n          \
    \      increasing=0\n            elif ((diff < 0 && prev_diff > 0)); then\n  \
    \              decreasing=0\n            fi\n        fi\n        prev_diff=$diff\n\
    \        prev=$curr\n    done\n    if ((increasing || decreasing)); then\n   \
    \     echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=($@)\n\
    \    local i=0\n    local increasing=true\n    local decreasing=true\n    while\
    \ (( i < ${#list[@]} - 1 )); do\n        if (( ${list[$i]} > ${list[$i+1]} ));\
    \ then\n            increasing=false\n        fi\n        if (( ${list[$i]} <\
    \ ${list[$i+1]} )); then\n            decreasing=false\n        fi\n        ((\
    \ i++ ))\n    done\n    if $increasing || $decreasing; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ increasing=\"$2\"\n    local decreasing=\"$3\"\n    local prev\n    local curr\n\
    \    local result=\"true\"\n    for curr in $list; do\n        if [[ -n \"$prev\"\
    \ ]]; then\n            if [[ \"$increasing\" == \"true\" ]]; then\n         \
    \       if [[ \"$curr\" -lt \"$prev\" ]]; then\n                    result=\"\
    false\"\n                    break\n                fi\n            elif [[ \"\
    $decreasing\" == \"true\" ]]; then\n                if [[ \"$curr\" -gt \"$prev\"\
    \ ]]; then\n                    result=\"false\"\n                    break\n\
    \                fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n\
    \    echo \"$result\"", "    local list=($@)\n    local i=0\n    local n=${#list[@]}\n\
    \    local inc=0\n    local dec=0\n    while [ $i -lt $n ]; do\n        if [ $i\
    \ -gt 0 ]; then\n            if [ ${list[$i]} -gt ${list[$i-1]} ]; then\n    \
    \            inc=1\n            elif [ ${list[$i]} -lt ${list[$i-1]} ]; then\n\
    \                dec=1\n            fi\n        fi\n        if [ $inc -eq 1 -a\
    \ $dec -eq 1 ]; then\n            echo \"false\"\n            return\n       \
    \ fi\n        i=$((i+1))\n    done\n    echo \"true\"", "    local list=\"$1\"\
    \n    local -i i=0\n    local -i n=$(echo \"$list\" | wc -w)\n    local -i prev=$(echo\
    \ \"$list\" | cut -d' ' -f1)\n    local -i curr\n    local -i increasing=1\n \
    \   local -i decreasing=1\n    while [ $i -lt $n ]; do\n        i=$((i+1))\n \
    \       curr=$(echo \"$list\" | cut -d' ' -f$i)\n        if [ $prev -lt $curr\
    \ ]; then\n            decreasing=0\n        elif [ $prev -gt $curr ]; then\n\
    \            increasing=0\n        fi\n        prev=$curr\n    done\n    if [\
    \ $increasing -eq 1 ] || [ $decreasing -eq 1 ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    local list=$1\n    local -a arr=($list)\n\
    \    local -a diffs\n    local i\n    local prev\n    local curr\n    local diff\n\
    \    local increasing\n    local decreasing\n    for i in $(seq 1 $((${#arr[@]}\
    \ - 1))); do\n        prev=${arr[$((i - 1))]}\n        curr=${arr[$i]}\n     \
    \   diff=$((curr - prev))\n        diffs+=($diff)\n    done\n    increasing=$(all_positive\
    \ \"${diffs[@]}\")\n    decreasing=$(all_negative \"${diffs[@]}\")\n    if [ \"\
    $increasing\" = \"true\" ] || [ \"$decreasing\" = \"true\" ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=($@)\n\
    \    local i\n    local n=${#list[@]}\n    local increasing=${list[0]}\n    local\
    \ decreasing=${list[0]}\n    for ((i=1; i<n; i++)); do\n        if [[ ${list[i]}\
    \ -gt $increasing ]]; then\n            increasing=${list[i]}\n        elif [[\
    \ ${list[i]} -lt $decreasing ]]; then\n            decreasing=${list[i]}\n   \
    \     else\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"", "    local list=($@)\n    local direction=\"${list[1]} -\
    \ ${list[0]}\"\n    local i\n    for ((i=1; i<${#list[@]}-1; i++)); do\n     \
    \   if [[ \"${list[i+1]} - ${list[i]}\" != \"$direction\" ]]; then\n         \
    \   echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
  "    local -a list=($@)\n    local -a diffs\n    local i\n    local diff\n    local\
    \ -i prev_diff\n    local -i increasing=1\n    local -i decreasing=1\n    for\
    \ ((i=1; i<${#list[@]}; i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n\
    \        diffs+=($diff)\n        if ((i > 1)); then\n            if ((diff > 0));\
    \ then\n                if ((prev_diff < 0)); then\n                    increasing=0\n\
    \                fi\n            elif ((diff < 0)); then\n                if ((prev_diff\
    \ > 0)); then\n                    decreasing=0\n                fi\n        \
    \    fi\n        fi\n        prev_diff=$diff\n    done\n    if ((increasing ||\
    \ decreasing)); then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    if (( len < 3 )); then\n      \
    \  echo \"true\"\n        return 0\n    fi\n    for (( i=0; i<len; i++ )); do\n\
    \        prev=${list[i]}\n        curr=${list[i+1]}\n        next=${list[i+2]}\n\
    \        diff=$(( curr - prev ))\n        if (( diff > 0 )); then\n          \
    \  incr=1\n        elif (( diff < 0 )); then\n            decr=1\n        fi\n\
    \        if (( incr && decr )); then\n            echo \"false\"\n           \
    \ return 1\n        fi\n    done\n    echo \"true\"\n    return 0", "    local\
    \ -a list=($@)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n    done\n    local\
    \ -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u))\n    if ((\
    \ ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local -a list=($@)\n    local -a diffs\n    local i\n\
    \    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((${list[$i+1]}-${list[$i]}))\n\
    \    done\n    local first=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[$i]} -ne $first ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"", "    local -a\
    \ arr=(\"$@\")\n    local -a diffs\n    local -i i\n    local -i len=${#arr[@]}\n\
    \    local -i sign=0\n    local -i diff\n    for ((i=1; i<len; i++)); do\n   \
    \     diffs[i-1]=$((arr[i]-arr[i-1]))\n    done\n    for ((i=0; i<len-1; i++));\
    \ do\n        if ((sign==0)); then\n            if ((diffs[i]>0)); then\n    \
    \            sign=1\n            elif ((diffs[i]<0)); then\n                sign=-1\n\
    \            fi\n        else\n            diff=$((diffs[i]*sign))\n         \
    \   if ((diff<0)); then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n    done\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n    local\
    \ -i decr=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n \
    \   local -i first=0\n    local -i last=0\n    local -i diff=0\n    local -i sign=0\n\
    \    local -i result=0\n    local -i is_monotonic=0\n    local -i is_increasing=0\n\
    \    local -i is_decreasing=0\n    local -i is_equal=0\n    local -i is_not_equal=0\n\
    \    local -i is_increasing_or_equal=0\n    local -i is_decreasing_or_equal=0\n\
    \    local -i is_increasing_or_decreasing=0\n    local -i is_decreasing_or_increasing=0\n\
    \    local -i is_increasing_or_decreasing_or_equal=0\n    local -i is_decreasing_or_increasing_or_equal=0\n\
    \    local -i is_increasing_or_equal_or_decreasing=0\n    local -i is_decreasing_or_equal_or_increasing=0\n\
    \    local -i is_increasing_or_decreasing_or_equal_or_equal=0\n    local -i is_decreasing_or_increasing_or_equal_or_equal=0\n\
    \    local -i is_increasing_or_equal_or_decreasing_or_equal=0\n    local -i is_decreasing_or_equal_or_increasing_or_equal=0\n\
    \    local -i is_increasing_or_equal_or_equal_or_decreasing=0\n    local -i is_decreasing_or_equal_or_equal_or_increasing=0\n\
    \    local -i is_increasing_or_equal_or_decreasing_or_equal_or_equal=0\n    local\
    \ -i is_decreasing_or_equal_or_increasing_or_equal_or_equal=0", "    local list=\"\
    $1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local increasing=true\n\
    \    for i in $(echo \"$list\" | tail -n +2); do\n        if [[ $increasing =\
    \ true ]]; then\n            if [[ $i -lt $prev ]]; then\n                increasing=false\n\
    \            fi\n        else\n            if [[ $i -gt $prev ]]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        fi\n\
    \        prev=$i\n    done\n    echo \"true\"", "    local -a list=($@)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i prev=${list[0]}\n    local -i curr=0\n    while [ $i -lt $len ];\
    \ do\n        curr=${list[$i]}\n        if [ $curr -gt $prev ]; then\n       \
    \     incr=1\n        elif [ $curr -lt $prev ]; then\n            decr=1\n   \
    \     fi\n        if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n        prev=$curr\n        i=$i+1\n\
    \    done\n    echo \"true\"", "    local -a arr=(\"$@\")\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i prev=${arr[0]}\n    local -i curr=0\n    for ((i=1; i<len; i++)); do\n  \
    \      curr=${arr[i]}\n        if ((curr > prev)); then\n            incr=1\n\
    \        elif ((curr < prev)); then\n            decr=1\n        fi\n        prev=$curr\n\
    \    done\n    if ((incr && decr)); then\n        echo \"false\"\n    else\n \
    \       echo \"true\"\n    fi", "    local -a arr=(\"$@\")\n    local -i i=0\n\
    \    local -i n=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local\
    \ -i prev=${arr[0]}\n    local -i curr=0\n    for ((i=1; i<n; i++)); do\n    \
    \    curr=${arr[i]}\n        if ((curr > prev)); then\n            inc=1\n   \
    \     elif ((curr < prev)); then\n            dec=1\n        fi\n        if ((inc\
    \ && dec)); then\n            echo \"false\"\n            return\n        fi\n\
    \        prev=$curr\n    done\n    echo \"true\"", "    local list=($@)\n    local\
    \ len=${#list[@]}\n    local i=0\n    local direction=0\n    local prev=${list[0]}\n\
    \    while [ $i -lt $len ]; do\n        local curr=${list[$i]}\n        if [ $direction\
    \ -eq 0 ]; then\n            if [ $curr -gt $prev ]; then\n                direction=1\n\
    \            elif [ $curr -lt $prev ]; then\n                direction=-1\n  \
    \          fi\n        elif [ $direction -eq 1 ]; then\n            if [ $curr\
    \ -lt $prev ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        elif [ $direction -eq -1 ]; then\n            if [ $curr\
    \ -gt $prev ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n        prev=$curr\n        i=$((i+1))\n    done\n\
    \    echo \"true\"", "    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<n; i++)); do\n        if ((prev > ${list[i]})); then\n     \
    \       increasing=0\n        elif ((prev < ${list[i]})); then\n            decreasing=0\n\
    \        fi\n        prev=${list[i]}\n    done\n    if ((increasing || decreasing));\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local -a list=($@)\n    local inc=${list[0]}\n    local dec=${list[0]}\n  \
    \  local i=0\n    for ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]}\
    \ -gt $inc ]]; then\n            inc=${list[$i]}\n        elif [[ ${list[$i]}\
    \ -lt $dec ]]; then\n            dec=${list[$i]}\n        else\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"", " \
    \   local list=($@)\n    local i=0\n    local direction=0\n    local prev=${list[0]}\n\
    \    for i in $(seq 1 $((${#list[@]} - 1))); do\n        if [[ $direction -eq\
    \ 0 ]]; then\n            if [[ ${list[$i]} -gt $prev ]]; then\n             \
    \   direction=1\n            elif [[ ${list[$i]} -lt $prev ]]; then\n        \
    \        direction=-1\n            fi\n        elif [[ $direction -eq 1 ]]; then\n\
    \            if [[ ${list[$i]} -lt $prev ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        elif [[ $direction -eq -1 ]];\
    \ then\n            if [[ ${list[$i]} -gt $prev ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n        fi\n        prev=${list[$i]}\n\
    \    done\n    echo \"true\"", "    local -a list=($@)\n    local -i i=0\n   \
    \ local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n        if ((prev < ${list[i]}));\
    \ then\n            ((incr++))\n        elif ((prev > ${list[i]})); then\n   \
    \         ((decr++))\n        fi\n        prev=${list[i]}\n    done\n    if ((incr\
    \ == len-1 || decr == len-1)); then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi", "    local -i prev=0\n    local -i curr=0\n    local\
    \ -i incr=0\n    local -i decr=0\n    for i in $@; do\n        curr=$i\n     \
    \   if (( prev > curr )); then\n            (( decr++ ))\n        elif (( prev\
    \ < curr )); then\n            (( incr++ ))\n        fi\n        prev=$curr\n\
    \    done\n    (( incr > 0 && decr > 0 )) && echo \"false\" || echo \"true\"",
  "    local list=($@)\n    local inc=0\n    local dec=0\n    local i=0\n    local\
    \ j=1\n    local n=${#list[@]}\n    while [ $j -lt $n ]; do\n        if [ ${list[$i]}\
    \ -lt ${list[$j]} ]; then\n            inc=1\n        elif [ ${list[$i]} -gt ${list[$j]}\
    \ ]; then\n            dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec\
    \ -eq 1 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \        i=$j\n        j=$((j+1))\n    done\n    echo \"true\"", "    local list=($@)\n\
    \    local len=${#list[@]}\n    local i=0\n    local inc=0\n    local dec=0\n\
    \    local prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n        if [[ ${list[i]}\
    \ -gt $prev ]]; then\n            inc=1\n        elif [[ ${list[i]} -lt $prev\
    \ ]]; then\n            dec=1\n        fi\n        if [[ $inc -eq 1 && $dec -eq\
    \ 1 ]]; then\n            echo \"false\"\n            return\n        fi\n   \
    \     prev=${list[i]}\n    done\n    echo \"true\"", "    local list=\"$1\"\n\
    \    local prev=$(echo \"$list\" | head -n 1)\n    local increasing=true\n   \
    \ local decreasing=true\n    for i in $(echo \"$list\" | tail -n +2); do\n   \
    \     if (( i > prev )); then\n            decreasing=false\n        elif (( i\
    \ < prev )); then\n            increasing=false\n        fi\n        prev=$i\n\
    \    done\n    if $increasing || $decreasing; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local list=\"$@\"\n    local -i\
    \ n=0\n    local -i prev=0\n    local -i curr=0\n    local -i increasing=0\n \
    \   local -i decreasing=0\n    for n in $list; do\n        if ((n < prev)); then\n\
    \            decreasing=1\n        elif ((n > prev)); then\n            increasing=1\n\
    \        fi\n        prev=$n\n    done\n    if ((increasing && decreasing)); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ list=\"$1\"\n    local -a arr=($list)\n    local -i len=${#arr[@]}\n    local\
    \ -i i=0\n    local -i prev=${arr[0]}\n    local -i curr=0\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i ret=0\n    for ((i=1; i<len; i++)); do\n  \
    \      curr=${arr[i]}\n        if ((curr > prev)); then\n            ((incr++))\n\
    \        elif ((curr < prev)); then\n            ((decr++))\n        fi\n    \
    \    prev=$curr\n    done\n    if ((incr == len-1 || decr == len-1)); then\n \
    \       ret=1\n    fi\n    echo $ret", "    local list=($@)\n    local incr=1\n\
    \    local decr=1\n    local i=0\n    local j=1\n    while [ $j -lt ${#list[@]}\
    \ ]; do\n        if [ ${list[$i]} -lt ${list[$j]} ]; then\n            incr=0\n\
    \        elif [ ${list[$i]} -gt ${list[$j]} ]; then\n            decr=0\n    \
    \    fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    if [ $incr -eq\
    \ 1 ] || [ $decr -eq 1 ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local list=\"$1\"\n    local direction=\"$2\"\n   \
    \ local prev=\"$(echo \"$list\" | head -n 1)\"\n    local curr=\"\"\n    local\
    \ result=\"true\"\n    for curr in $(echo \"$list\" | tail -n +2); do\n      \
    \  if [[ \"$direction\" == \"increasing\" ]]; then\n            if [[ \"$curr\"\
    \ -lt \"$prev\" ]]; then\n                result=\"false\"\n                break\n\
    \            fi\n        else\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n\
    \                result=\"false\"\n                break\n            fi\n   \
    \     fi\n        prev=\"$curr\"\n    done\n    echo \"$result\"", "    local\
    \ -a list=(\"$@\")\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i prev=0\n    local\
    \ -i next=0\n    local -i ret=0\n    local -i first=0\n    local -i last=0\n \
    \   local -i diff=0\n    local -i sign=0\n    local -i sign_prev=0\n    local\
    \ -i sign_next=0\n    local -i sign_diff=0\n    local -i sign_diff_prev=0\n  \
    \  local -i sign_diff_next=0\n    local -i sign_diff_diff=0\n    local -i sign_diff_diff_prev=0\n\
    \    local -i sign_diff_diff_next=0\n    local -i sign_diff_diff_diff=0\n    local\
    \ -i sign_diff_diff_diff_prev=0\n    local -i sign_diff_diff_diff_next=0\n   \
    \ local -i sign_diff_diff_diff_diff=0\n    local -i sign_diff_diff_diff_diff_prev=0\n\
    \    local -i sign_diff_diff_diff_diff_next=0\n    local -i sign_diff_diff_diff_diff_diff=0\n\
    \    local -i sign_diff_diff_diff_diff_diff_prev=0\n    local -i sign_diff_diff_diff_diff_diff_next=0\n\
    \    local -i sign_diff_diff_diff_diff_diff_diff=0\n    local -i sign_diff_diff_diff_diff_diff_diff_prev=0\n\
    \    local -i sign_diff_diff_diff_diff_diff_diff_next=0\n    local -i sign_diff_diff_diff_diff_diff_diff_diff=0\n\
    \    local -i sign_diff_diff_diff_diff_diff_diff_diff_prev=0\n    local -i sign_diff_diff_diff_diff_diff_diff_diff_next=0\n\
    \    local -i sign_diff_diff_diff_diff_diff", "    local -a list=($@)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local -i dec=0\n\
    \    local -i sign=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i ret=0\n    local -i tmp=0\n    local -i flag=0\n    local -i count=0\n\
    \    local -i max=0\n    local -i min=0\n    local -i sum=0\n    local -i avg=0\n\
    \    local -i median=0\n    local -i mode=0\n    local -i mode_count=0\n    local\
    \ -i mode_tmp=0\n    local -i mode_flag=0\n    local -i mode_max=0\n    local\
    \ -i mode_min=0\n    local -i mode_sum=0\n    local -i mode_avg=0\n    local -i\
    \ mode_median=0\n    local -i mode_mode=0\n    local -i mode_mode_count=0\n  \
    \  local -i mode_mode_tmp=0\n    local -i mode_mode_flag=0\n    local -i mode_mode_max=0\n\
    \    local -i mode_mode_min=0\n    local -i mode_mode_sum=0\n    local -i mode_mode_avg=0\n\
    \    local -i mode_mode_median=0\n    local -i mode_mode_mode=0\n    local -i\
    \ mode_mode_mode_count=0\n    local -i mode_mode_mode_tmp=0\n    local -i mode_mode_mode_flag=0\n\
    \    local -i mode_mode_mode_max=0\n    local -i mode_mode_mode_min=0\n    local\
    \ -i mode_mode_mode_sum=0\n    local -i mode_mode_mode_avg=0\n    local -i mode_mode_mode_median=0\n\
    \    local -i mode_mode_mode_mode=0\n    local -i mode_mode_mode_mode_count=0\n\
    \    local -i mode", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=${list[0]}\n    local -i curr=0\n\
    \    local -i is_monotonic=1\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if [[ $direction -eq 0 ]]; then\n            if [[ $curr -gt $prev ]];\
    \ then\n                direction=1\n            elif [[ $curr -lt $prev ]]; then\n\
    \                direction=-1\n            fi\n        elif [[ $direction -eq\
    \ 1 ]]; then\n            if [[ $curr -lt $prev ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        elif [[ $direction -eq -1 ]];\
    \ then\n            if [[ $curr -gt $prev ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        fi\n        prev=$curr\n    done\n\
    \    echo $is_monotonic", "    local -a list=($@)\n    local -i i=0\n    local\
    \ -i len=${#list[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i cur=0\n\
    \    local -i next=0\n    local -i prev=0\n    if (( len < 2 )); then\n      \
    \  echo \"true\"\n        return\n    fi\n    for (( i=0; i<len; i++ )); do\n\
    \        cur=${list[$i]}\n        if (( i > 0 )); then\n            prev=${list[$((i-1))]}\n\
    \            if (( cur > prev )); then\n                inc=1\n            elif\
    \ (( cur < prev )); then\n                dec=1\n            fi\n        fi\n\
    \        if (( i < len-1 )); then\n            next=${list[$((i+1))]}\n      \
    \      if (( cur > next )); then\n                inc=1\n            elif (( cur\
    \ < next )); then\n                dec=1\n            fi\n        fi\n       \
    \ if (( inc == 1 && dec == 1 )); then\n            echo \"false\"\n          \
    \  return\n        fi\n    done\n    echo \"true\"", "    local list=\"$@\"\n\
    \    local incr=0\n    local decr=0\n    local last=0\n    for i in $list; do\n\
    \        if [ $i -gt $last ]; then\n            incr=1\n        fi\n        if\
    \ [ $i -lt $last ]; then\n            decr=1\n        fi\n        last=$i\n  \
    \  done\n    if [ $incr -eq 1 -a $decr -eq 0 ]; then\n        echo \"true\"\n\
    \    elif [ $incr -eq 0 -a $decr -eq 1 ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$1\"\n    local -a array=($list)\n\
    \    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=1\n\
    \    local -i decreasing=1\n    local -i prev=${array[0]}\n    local -i curr=0\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${array[i]}\n        if ((curr\
    \ > prev)); then\n            decreasing=0\n        elif ((curr < prev)); then\n\
    \            increasing=0\n        fi\n        prev=$curr\n    done\n    if ((increasing\
    \ || decreasing)); then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n \
    \   local -i prev_diff=0\n    local -i first_diff=0\n    local -i first_diff_set=0\n\
    \    local -i ret=0\n    local -i prev_ret=0\n    local -i first_ret=0\n    local\
    \ -i first_ret_set=0\n    local -i is_monotonic=0\n    local -i is_increasing=0\n\
    \    local -i is_decreasing=0\n    local -i is_constant=0\n    local -i is_increasing_or_constant=0\n\
    \    local -i is_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing=0\n\
    \    local -i is_increasing_or_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_or_constant_or_not_monotonic=0\n\
    \    local -i is_not_monotonic=0\n    local -i is_not_increasing=0\n    local\
    \ -i is_not_decreasing=0\n    local -i is_not_constant=0\n    local -i is_not_increasing_or_constant=0\n\
    \    local -i is_not_decreasing_or_constant=0\n    local -i is_not_increasing_or_decreasing=0\n\
    \    local -i is_not_increasing_or_decreasing_or_constant=0\n    local -i is_not_increasing_or_decreasing_or_constant_or_not_monotonic=0\n\
    \    local -i is_increasing_or_decreasing_or_not_monotonic=0\n    local -i is_not_increasing_or_decreasing_or_not_monotonic=0\n\
    \    local -i is_increasing_or_decreasing_or_constant_or_not_monotonic=0\n   ",
  "    local -a list=($@)\n    local -i i\n    local -i n=${#list[@]}\n    local -i\
    \ incr=0\n    local -i decr=0\n    local -i zero=0\n    local -i one=0\n    local\
    \ -i two=0\n    local -i three=0\n    local -i four=0\n    local -i five=0\n \
    \   local -i six=0\n    local -i seven=0\n    local -i eight=0\n    local -i nine=0\n\
    \    local -i ten=0\n    local -i eleven=0\n    local -i twelve=0\n    local -i\
    \ thirteen=0\n    local -i fourteen=0\n    local -i fifteen=0\n    local -i sixteen=0\n\
    \    local -i seventeen=0\n    local -i eighteen=0\n    local -i nineteen=0\n\
    \    local -i twenty=0\n    local -i twentyone=0\n    local -i twentytwo=0\n \
    \   local -i twentythree=0\n    local -i twentyfour=0\n    local -i twentyfive=0\n\
    \    local -i twentysix=0\n    local -i twentyseven=0\n    local -i twentyeight=0\n\
    \    local -i twentynine=0\n    local -i thirty=0\n    local -i thirtyone=0\n\
    \    local -i thirtytwo=0\n    local -i thirtythree=0\n    local -i thirtyfour=0\n\
    \    local -i thirtyfive=0\n    local -i thirtysix=0\n    local -i thirtyseven=0\n\
    \    local -i thirtyeight=0\n    local -i thirtynine=0\n    local -i forty=0\n\
    \    local -i fortyone=0\n    local -i fortytwo=0\n    local -i fortythree=0\n\
    \    local -i fortyfour=0\n    local -i fortyfive=0\n    local -i fortysix=0\n\
    \    local -i fortyseven=0\n    local -i fortyeight=0\n    local -i fortynine=0\n\
    \    local -i fifty=0\n    local -i fiftyone=0\n    local -i fiftytwo=0\n    local\
    \ -i fiftythree=0\n", "    local -a arr\n    arr=($@)\n    local -i i\n    local\
    \ -i len=${#arr[@]}\n    local -i incr=1\n    local -i decr=1\n    for ((i=1;\
    \ i<len; i++)); do\n        if ((arr[i] > arr[i-1])); then\n            ((decr=0))\n\
    \        elif ((arr[i] < arr[i-1])); then\n            ((incr=0))\n        fi\n\
    \    done\n    ((incr || decr)) && echo \"true\" || echo \"false\"", "    local\
    \ -a list=($@)\n    local -i i=0\n    local -i j=1\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i result=0\n\
    \    while [ $j -lt $len ]; do\n        if [ ${list[$i]} -lt ${list[$j]} ]; then\n\
    \            increasing=1\n        fi\n        if [ ${list[$i]} -gt ${list[$j]}\
    \ ]; then\n            decreasing=1\n        fi\n        if [ $increasing -eq\
    \ 1 ] && [ $decreasing -eq 1 ]; then\n            result=1\n            break\n\
    \        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    if [ $result\
    \ -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n   \
    \ fi", "    local -a list=(\"$@\")\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i is_monotonic=0\n    local\
    \ -i is_increasing=0\n    local -i is_decreasing=0\n    for ((i=0; i<len; i++));\
    \ do\n        curr=${list[$i]}\n        if ((i > 0)); then\n            prev=${list[$((i-1))]}\n\
    \            diff=$((curr - prev))\n            if ((diff > 0)); then\n      \
    \          inc=1\n            elif ((diff < 0)); then\n                dec=1\n\
    \            fi\n        fi\n        if ((i < len-1)); then\n            next=${list[$((i+1))]}\n\
    \            diff=$((next - curr))\n            if ((diff > 0)); then\n      \
    \          inc=1\n            elif ((diff < 0)); then\n                dec=1\n\
    \            fi\n        fi\n        if ((inc && dec)); then\n            is_monotonic=0\n\
    \            break\n        fi\n    done\n    if ((inc && !dec)); then\n     \
    \   is_increasing=1\n    elif ((!inc && dec)); then\n        is_decreasing=1\n\
    \    fi\n    if ((is_increasing || is_decreasing)); then\n        is_monotonic=1\n\
    \    fi\n    echo $is_monotonic", "    local -a list=($@)\n    local -i i\n  \
    \  local -i n=${#list[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\
    \    for ((i=1; i<n; i++)); do\n        if ((list[i] < list[i-1])); then\n   \
    \         increasing=0\n        elif ((list[i] > list[i-1])); then\n         \
    \   decreasing=0\n        fi\n    done\n    if ((increasing || decreasing)); then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=\"$@\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local incr=true\n\
    \    local decr=true\n    for i in $list; do\n        if (( i < prev )); then\n\
    \            incr=false\n        fi\n        if (( i > prev )); then\n       \
    \     decr=false\n        fi\n        prev=$i\n    done\n    if $incr || $decr;\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local -a list=($@)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n    done\n    local\
    \ -a unique_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u))\n    if [[\
    \ ${#unique_diffs[@]} -gt 2 ]]; then\n        echo \"false\"\n    else\n     \
    \   echo \"true\"\n    fi", "    local list=($@)\n    local i=0\n    local n=${#list[@]}\n\
    \    local increasing=true\n    local decreasing=true\n    while [ $i -lt $n ];\
    \ do\n        if [ $i -gt 0 ]; then\n            if [ ${list[$i]} -lt ${list[$i-1]}\
    \ ]; then\n                increasing=false\n            fi\n            if [\
    \ ${list[$i]} -gt ${list[$i-1]} ]; then\n                decreasing=false\n  \
    \          fi\n        fi\n        i=$((i+1))\n    done\n    if [ $increasing\
    \ = true ] || [ $decreasing = true ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$@\"\n    local prev=\"$(echo\
    \ \"$list\" | head -n 1)\"\n    local curr=\"\"\n    local incr=\"true\"\n   \
    \ local decr=\"true\"\n    for curr in $list; do\n        if [ \"$curr\" -gt \"\
    $prev\" ]; then\n            decr=\"false\"\n        elif [ \"$curr\" -lt \"$prev\"\
    \ ]; then\n            incr=\"false\"\n        fi\n        prev=\"$curr\"\n  \
    \  done\n    if [ \"$incr\" = \"true\" ] || [ \"$decr\" = \"true\" ]; then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local -a array=($list)\n    local -a sorted=($(echo\
    \ \"${array[@]}\" | tr ' ' '\\n' | sort -n))\n    if [ \"$direction\" == \"desc\"\
    \ ]; then\n        local -a sorted=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort\
    \ -nr))\n    fi\n    local -a result=($(echo \"${array[@]}\" | tr ' ' '\\n' |\
    \ sort -n))\n    if [ \"${sorted[*]}\" == \"${result[*]}\" ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n\
    \    local i=0\n    local n=0\n    local prev=0\n    local curr=0\n    local inc=0\n\
    \    local dec=0\n    for n in $list; do\n        if [ $i -eq 0 ]; then\n    \
    \        prev=$n\n        else\n            curr=$n\n            if [ $curr -gt\
    \ $prev ]; then\n                inc=1\n            elif [ $curr -lt $prev ];\
    \ then\n                dec=1\n            fi\n            if [ $inc -eq 1 ] &&\
    \ [ $dec -eq 1 ]; then\n                echo \"false\"\n                return\n\
    \            fi\n            prev=$curr\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"true\"", "    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        if ((list[i] < list[i+1])); then\n            ((incr++))\n        elif\
    \ ((list[i] > list[i+1])); then\n            ((decr++))\n        fi\n    done\n\
    \    if ((incr == len-1 || decr == len-1)); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n\
    \    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i diff=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n \
    \   local -i result=0\n    if [ $len -gt 1 ]; then\n        prev=${list[0]}\n\
    \        curr=${list[1]}\n        diff=$((curr - prev))\n        if [ $diff -gt\
    \ 0 ]; then\n            incr=1\n        elif [ $diff -lt 0 ]; then\n        \
    \    decr=1\n        fi\n        for ((i=2; i<len; i++)); do\n            next=${list[i]}\n\
    \            diff=$((next - curr))\n            if [ $diff -gt 0 ]; then\n   \
    \             if [ $decr -eq 1 ]; then\n                    result=1\n       \
    \             break\n                fi\n                incr=1\n            elif\
    \ [ $diff -lt 0 ]; then\n                if [ $incr -eq 1 ]; then\n          \
    \          result=1\n                    break\n                fi\n         \
    \       decr=1\n            fi\n            prev=$curr\n            curr=$next\n\
    \        done\n    fi\n    echo $result", "    local -a list=($@)\n    local -i\
    \ i=0\n    local -i n=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i curr=0\n    local -i prev=0\n    local -i next=0\n    local -i diff=0\n\
    \    local -i diff_next=0\n    local -i diff_prev=0\n    local -i diff_prev_next=0\n\
    \    local -i diff_prev_curr=0\n    local -i diff_curr_next=0\n    local -i diff_prev_curr_next=0\n\
    \    local -i diff_prev_curr_next_prev=0\n    local -i diff_prev_curr_next_prev_curr=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next=0\n    local -i diff_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_curr=0\n    local -i diff_prev_curr_next_prev_curr_next_prev_curr_next=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n    local\
    \ -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr=0\n    local\
    \ -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next=0\n    local\
    \ -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev_cur",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    local prev_set=false\n    local curr_set=false\n    local result=true\n \
    \   for i in $list; do\n        if $prev_set; then\n            if $curr_set;\
    \ then\n                if [ \"$direction\" == \"increasing\" ]; then\n      \
    \              if [ \"$curr\" -lt \"$prev\" ]; then\n                        result=false\n\
    \                        break\n                    fi\n                else\n\
    \                    if [ \"$curr\" -gt \"$prev\" ]; then\n                  \
    \      result=false\n                        break\n                    fi\n \
    \               fi\n            fi\n            prev=$curr\n        fi\n     \
    \   curr=$i\n        prev_set=true\n        curr_set=true\n    done\n    echo\
    \ \"$result\"", "    local -a arr=($@)\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i prev=0\n    if [ $len -lt 2 ]; then\n        echo \"true\"\n   \
    \     return 0\n    fi\n    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n\
    \        curr=${arr[i]}\n        if [ $i -eq 1 ]; then\n            if [ $curr\
    \ -gt $prev ]; then\n                incr=1\n            elif [ $curr -lt $prev\
    \ ]; then\n                decr=1\n            fi\n        else\n            if\
    \ [ $incr -eq 1 ]; then\n                if [ $curr -lt $prev ]; then\n      \
    \              echo \"false\"\n                    return 1\n                fi\n\
    \            elif [ $decr -eq 1 ]; then\n                if [ $curr -gt $prev\
    \ ]; then\n                    echo \"false\"\n                    return 1\n\
    \                fi\n            fi\n        fi\n        prev=$curr\n    done\n\
    \    echo \"true\"\n    return 0", "    local -a list=($@)\n    local -i i\n \
    \   local -i n=${#list[@]}\n    local -i incr=${list[1]}-${list[0]}\n    for ((i=1;\
    \ i<n-1; i++)); do\n        if ((incr * (${list[i+1]}-${list[i]}) < 0)); then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i sign=0\n    local -i curr=0\n    local -i prev=0\n    local -i next=0\n\
    \    local -i result=0\n    if [ $len -lt 3 ]; then\n        echo \"true\"\n \
    \       return\n    fi\n    prev=${list[0]}\n    curr=${list[1]}\n    if [ $prev\
    \ -lt $curr ]; then\n        sign=1\n    elif [ $prev -gt $curr ]; then\n    \
    \    sign=-1\n    else\n        echo \"false\"\n        return\n    fi\n    for\
    \ ((i=2; i<len; i++)); do\n        next=${list[i]}\n        if [ $curr -eq $next\
    \ ]; then\n            echo \"false\"\n            return\n        elif [ $curr\
    \ -lt $next ]; then\n            if [ $sign -eq -1 ]; then\n                echo\
    \ \"false\"\n                return\n            fi\n        elif [ $curr -gt\
    \ $next ]; then\n            if [ $sign -eq 1 ]; then\n                echo \"\
    false\"\n                return\n            fi\n        fi\n        prev=$curr\n\
    \        curr=$next\n    done\n    echo \"true\"", "    local list=\"$1\"\n  \
    \  local inc=0\n    local dec=0\n    local prev=0\n    for i in $list; do\n  \
    \      if [[ $i -gt $prev ]]; then\n            inc=1\n        elif [[ $i -lt\
    \ $prev ]]; then\n            dec=1\n        fi\n        prev=$i\n    done\n \
    \   if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local -a list=($@)\n    local -i i\n   \
    \ local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n        if ((prev < ${list[i]}));\
    \ then\n            incr=1\n        elif ((prev > ${list[i]})); then\n       \
    \     decr=1\n        fi\n        prev=${list[i]}\n    done\n    if ((incr &&\
    \ decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
  "    local list=\"$1\"\n    local -a array=($list)\n    local -a diffs\n    local\
    \ i\n    local prev\n    local diff\n    local monotonic=true\n    local direction=0\n\
    \    for i in \"${!array[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n        \
    \    prev=${array[$((i-1))]}\n            diff=$((array[i] - prev))\n        \
    \    diffs+=($diff)\n            if [[ $direction -eq 0 ]]; then\n           \
    \     direction=$((diff / abs $diff))\n            elif [[ $direction -ne $((diff\
    \ / abs $diff)) ]]; then\n                monotonic=false\n                break\n\
    \            fi\n        fi\n    done\n    echo $monotonic", "    local list=\"\
    $1\"\n    local -a arr=($list)\n    local n=${#arr[@]}\n    local i=0\n    local\
    \ inc=0\n    local dec=0\n    local prev=${arr[0]}\n    while [ $i -lt $n ]; do\n\
    \        if [ $prev -lt ${arr[$i]} ]; then\n            inc=1\n        elif [\
    \ $prev -gt ${arr[$i]} ]; then\n            dec=1\n        fi\n        if [ $inc\
    \ -eq 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\n            return\n\
    \        fi\n        prev=${arr[$i]}\n        i=$((i+1))\n    done\n    echo \"\
    true\"", "    local list=($@)\n    local inc=true\n    local dec=true\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        if ((list[i] > list[i+1])); then\n\
    \            inc=false\n        fi\n        if ((list[i] < list[i+1])); then\n\
    \            dec=false\n        fi\n    done\n    if $inc || $dec; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i n=${#list[@]}\n    local -i inc=0\n    local -i\
    \ dec=0\n    local -i res=0\n    if (( n < 2 )); then\n        echo \"true\"\n\
    \        return\n    fi\n    for (( i=1; i<n; i++ )); do\n        if (( list[i]\
    \ > list[i-1] )); then\n            (( inc++ ))\n        elif (( list[i] < list[i-1]\
    \ )); then\n            (( dec++ ))\n        fi\n    done\n    if (( inc > 0 &&\
    \ dec > 0 )); then\n        res=1\n    fi\n    echo \"$res\"", "    local list=\"\
    $1\"\n    local -a array=($list)\n    local -i len=${#array[@]}\n    local -i\
    \ i\n    local -i prev=${array[0]}\n    local -i curr\n    local -i incr=0\n \
    \   local -i decr=0\n    for ((i=1; i<len; i++)); do\n        curr=${array[i]}\n\
    \        if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        if ((incr && decr)); then\n  \
    \          echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local list=\"$@\"\n    local first=$(echo\
    \ \"$list\" | head -n 1)\n    local last=$(echo \"$list\" | tail -n 1)\n    if\
    \ [ \"$first\" -lt \"$last\" ]; then\n        for i in $list; do\n           \
    \ if [ \"$i\" -lt \"$first\" ]; then\n                echo \"false\"\n       \
    \         return\n            fi\n            first=$i\n        done\n    else\n\
    \        for i in $list; do\n            if [ \"$i\" -gt \"$first\" ]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \        first=$i\n        done\n    fi\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i\n    local -i len=${#list[@]}\n    local -i increasing=1\n   \
    \ local -i decreasing=1\n    for ((i=1; i<len; i++)); do\n        if ((list[i]\
    \ > list[i-1])); then\n            decreasing=0\n        elif ((list[i] < list[i-1]));\
    \ then\n            increasing=0\n        fi\n    done\n    if ((increasing ||\
    \ decreasing)); then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i prev=0\n\
    \    for ((i=0; i<len; i++)); do\n        cur=${list[$i]}\n        if ((i > 0));\
    \ then\n            if ((cur > prev)); then\n                inc=1\n         \
    \   elif ((cur < prev)); then\n                dec=1\n            fi\n       \
    \ fi\n        prev=$cur\n    done\n    if ((inc == 1 && dec == 1)); then\n   \
    \     echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local -a\
    \ list=($@)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[$i]=$((${list[$i+1]}-${list[$i]}))\n    done\n    local\
    \ -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u))\n    if [[\
    \ ${#uniq_diffs[@]} -gt 2 ]]; then\n        echo \"false\"\n    else\n       \
    \ echo \"true\"\n    fi", "    local list=\"$1\"\n    local prev=$(echo \"$list\"\
    \ | head -n 1)\n    local curr\n    local increasing=true\n    local decreasing=true\n\
    \    for curr in $(echo \"$list\" | tail -n +2); do\n        if (( prev > curr\
    \ )); then\n            increasing=false\n        elif (( prev < curr )); then\n\
    \            decreasing=false\n        fi\n        prev=$curr\n    done\n    if\
    \ $increasing || $decreasing; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local list=\"$1\"\n    local -i i=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\
    \    for i in $list; do\n        if [ $i -gt $prev ]; then\n            is_increasing=1\n\
    \        elif [ $i -lt $prev ]; then\n            is_decreasing=1\n        fi\n\
    \        prev=$i\n    done\n    if [ $is_increasing -eq 1 ] && [ $is_decreasing\
    \ -eq 0 ]; then\n        echo \"true\"\n    elif [ $is_increasing -eq 0 ] && [\
    \ $is_decreasing -eq 1 ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n    local -i\
    \ len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi", "    local -a list=($@)\n    local -a diffs\n    local i\n    for ((i=0;\
    \ i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local first=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[i]} -ne $first ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"", "    local list=\"\
    $1\"\n    local -i n=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n   \
    \ local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n   \
    \ local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n    local -i qqq=", "    local list=$1\n    local prev=$(echo\
    \ $list | cut -d' ' -f1)\n    local increasing=true\n    for i in $list; do\n\
    \        if [[ $i -lt $prev ]]; then\n            increasing=false\n         \
    \   break\n        fi\n        prev=$i\n    done\n    local decreasing=true\n\
    \    for i in $list; do\n        if [[ $i -gt $prev ]]; then\n            decreasing=false\n\
    \            break\n        fi\n        prev=$i\n    done\n    if [[ $increasing\
    \ == true || $decreasing == true ]]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi", "    local -a arr=(\"$@\")\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i diff=0\n    local -i prev=0\n    local -i curr=0\n    if (( len < 2 )); then\n\
    \        echo \"true\"\n        return 0\n    fi\n    for (( i=0; i<len; i++ ));\
    \ do\n        curr=${arr[$i]}\n        if (( i > 0 )); then\n            diff=$((\
    \ curr - prev ))\n            if (( diff > 0 )); then\n                incr=1\n\
    \            elif (( diff < 0 )); then\n                decr=1\n            fi\n\
    \        fi\n        prev=$curr\n    done\n    if (( incr && decr )); then\n \
    \       echo \"false\"\n        return 1\n    else\n        echo \"true\"\n  \
    \      return 0\n    fi", "    local -a arr\n    IFS=' ' read -r -a arr <<< \"\
    $*\"\n    local -i len=${#arr[@]}\n    local -i i\n    local -i incr=0\n    local\
    \ -i decr=0\n    for ((i=0; i<len-1; i++)); do\n        if (( arr[i] < arr[i+1]\
    \ )); then\n            incr=1\n        elif (( arr[i] > arr[i+1] )); then\n \
    \           decr=1\n        fi\n    done\n    if (( incr && decr )); then\n  \
    \      echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local -a\
    \ list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i direction=0\n\
    \    local -i last=0\n    local -i current=0\n    local -i result=1\n    if [[\
    \ $len -gt 1 ]]; then\n        last=${list[0]}\n        for ((i=1; i<len; i++));\
    \ do\n            current=${list[$i]}\n            if [[ $direction -eq 0 ]];\
    \ then\n                if [[ $current -gt $last ]]; then\n                  \
    \  direction=1\n                elif [[ $current -lt $last ]]; then\n        \
    \            direction=-1\n                fi\n            else\n            \
    \    if [[ $direction -eq 1 ]]; then\n                    if [[ $current -lt $last\
    \ ]]; then\n                        result=0\n                        break\n\
    \                    fi\n                else\n                    if [[ $current\
    \ -gt $last ]]; then\n                        result=0\n                     \
    \   break\n                    fi\n                fi\n            fi\n      \
    \      last=$current\n        done\n    fi\n    echo $result", "    local list=\"\
    $1\"\n    local -a arr=($list)\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i sign=0\n    local -i prev=0\n    local -i curr=0\n    local -i diff=0\n\
    \    local -i is_monotonic=0\n    if [[ $len -lt 2 ]]; then\n        echo \"true\"\
    \n        return 0\n    fi\n    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n\
    \        curr=${arr[i]}\n        diff=$((curr - prev))\n        if [[ $i -eq 1\
    \ ]]; then\n            if [[ $diff -gt 0 ]]; then\n                sign=1\n \
    \           elif [[ $diff -lt 0 ]]; then\n                sign=-1\n          \
    \  else\n                echo \"true\"\n                return 0\n           \
    \ fi\n        else\n            if [[ $((diff * sign)) -lt 0 ]]; then\n      \
    \          echo \"false\"\n                return 1\n            fi\n        fi\n\
    \        prev=$curr\n    done\n    echo \"true\"\n    return 0", "    local list=\"\
    $1\"\n    local -i i=0\n    local -i j=1\n    local -i len=${#list[@]}\n    local\
    \ -i increasing=0\n    local -i decreasing=0\n    local -i equal=0\n    local\
    \ -i result=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i prev_sign=0\n    local -i curr_sign=0\n    local -i next_sign=0\n\
    \    local -i prev_sign_equal=0\n    local -i curr_sign_equal=0\n    local -i\
    \ next_sign_equal=0\n    local -i prev_sign_equal_count=0\n    local -i curr_sign_equal_count=0\n\
    \    local -i next_sign_equal_count=0\n    local -i prev_sign_equal_count_max=0\n\
    \    local -i curr_sign_equal_count_max=0\n    local -i next_sign_equal_count_max=0\n\
    \    local -i prev_sign_equal_count_min=0\n    local -i curr_sign_equal_count_min=0\n\
    \    local -i next_sign_equal_count_min=0\n    local -i prev_sign_equal_count_max_equal=0\n\
    \    local -i curr_sign_equal_count_max_equal=0\n    local -i next_sign_equal_count_max_equal=0\n\
    \    local -i prev_sign_equal_count_min_equal=0\n    local -i curr_sign_equal_count_min_equal=0\n\
    \    local -i next_sign_equal_count_min_equal=0\n    local -i prev_sign_equal_count_max_equal_count=0\n\
    \    local -i curr_sign_equal_count_max_equal_count=0\n    local -i next_sign_equal_count_max_equal_count=0\n\
    \    local -i prev_sign_equal_count_min_equal_count=0\n    local -i curr_sign_equal_count_min_equal_",
  "    local list=\"$1\"\n    local -a array=($list)\n    local -i n=${#array[@]}\n\
    \    local -i i\n    local -i increasing=1\n    local -i decreasing=1\n    if\
    \ (( n < 2 )); then\n        echo \"true\"\n        return 0\n    fi\n    for\
    \ (( i=1; i<n; i++ )); do\n        if (( array[i] < array[i-1] )); then\n    \
    \        increasing=0\n        fi\n        if (( array[i] > array[i-1] )); then\n\
    \            decreasing=0\n        fi\n    done\n    if (( increasing || decreasing\
    \ )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local -i curr=0\n\
    \    while (( i < len )); do\n        curr=${list[i]}\n        if (( curr > prev\
    \ )); then\n            (( incr++ ))\n        elif (( curr < prev )); then\n \
    \           (( decr++ ))\n        fi\n        (( i++ ))\n        prev=$curr\n\
    \    done\n    if (( incr == len - 1 )) || (( decr == len - 1 )); then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local -i i=0\n    local -i n=$(echo \"$list\" | wc -w)\n    local -i\
    \ increasing=0\n    local -i decreasing=0\n    local -i prev=$(echo \"$list\"\
    \ | cut -d \" \" -f 1)\n    local -i curr=0\n    while [ $i -lt $n ]; do\n   \
    \     curr=$(echo \"$list\" | cut -d \" \" -f $((i+1)))\n        if [ $curr -gt\
    \ $prev ]; then\n            increasing=1\n        elif [ $curr -lt $prev ]; then\n\
    \            decreasing=1\n        fi\n        if [ $increasing -eq 1 ] && [ $decreasing\
    \ -eq 1 ]; then\n            echo \"false\"\n            return 0\n        fi\n\
    \        prev=$curr\n        i=$((i+1))\n    done\n    echo \"true\"", "    local\
    \ list=\"$1\"\n    local -a array=($list)\n    local -a diffs\n    local -i i\n\
    \    local -i len=${#array[@]}\n    local -i prev=${array[0]}\n    local -i curr\n\
    \    local -i diff\n    local -i sign=0\n    local -i is_monotonic=1\n\n    for\
    \ ((i=1; i<len; i++)); do\n        curr=${array[i]}\n        diff=$(($curr - $prev))\n\
    \        if [[ $sign -eq 0 ]]; then\n            if [[ $diff -gt 0 ]]; then\n\
    \                sign=1\n            elif [[ $diff -lt 0 ]]; then\n          \
    \      sign=-1\n            fi\n        else\n            if [[ $sign -eq 1 &&\
    \ $diff -lt 0 ]]; then\n                is_monotonic=0\n                break\n\
    \            elif [[ $sign -eq -1 && $diff -gt 0 ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        fi\n        prev=$curr\n    done\n\
    \n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n  \
    \  local -i len=${#list[@]}\n    local -i sign=0\n    local -i diff=0\n    local\
    \ -i prev=0\n    local -i curr=0\n    local -i is_monotonic=1\n    for ((i=0;\
    \ i<len; i++)); do\n        curr=${list[$i]}\n        if ((i > 0)); then\n   \
    \         diff=$((curr - prev))\n            if ((sign == 0)); then\n        \
    \        if ((diff > 0)); then\n                    sign=1\n                elif\
    \ ((diff < 0)); then\n                    sign=-1\n                fi\n      \
    \      elif ((sign > 0 && diff < 0)); then\n                is_monotonic=0\n \
    \               break\n            elif ((sign < 0 && diff > 0)); then\n     \
    \           is_monotonic=0\n                break\n            fi\n        fi\n\
    \        prev=$curr\n    done\n    echo $is_monotonic", "    local list=\"$1\"\
    \n    local direction=\"$2\"\n    local -a array=($list)\n    local -i i\n   \
    \ local -i n=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=0\n\
    \    local -i direction=${direction:-$increasing}\n    local -i prev=${array[0]}\n\
    \    local -i curr\n    for ((i=1; i<n; i++)); do\n        curr=${array[i]}\n\
    \        if ((direction == increasing && curr < prev)) || ((direction == decreasing\
    \ && curr > prev)); then\n            echo \"false\"\n            return\n   \
    \     fi\n        prev=$curr\n    done\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local\
    \ -i dec=0\n    local -i cur=0\n    local -i next=0\n    if [ $len -le 1 ]; then\n\
    \        echo \"true\"\n        return 0\n    fi\n    for ((i=0; i<$len-1; i++));\
    \ do\n        cur=${list[$i]}\n        next=${list[$i+1]}\n        if [ $cur -lt\
    \ $next ]; then\n            inc=1\n        elif [ $cur -gt $next ]; then\n  \
    \          dec=1\n        fi\n        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n\
    \            echo \"false\"\n            return 1\n        fi\n    done\n    echo\
    \ \"true\"\n    return 0", "    local list=\"$1\"\n    local -a array=($list)\n\
    \    local -i len=${#array[@]}\n    local -i i=0\n    local -i prev=${array[0]}\n\
    \    local -i curr=0\n    local -i diff=0\n    local -i direction=0\n    local\
    \ -i is_monotonic=1\n    for ((i=1; i<len; i++)); do\n        curr=${array[i]}\n\
    \        diff=$((curr - prev))\n        if ((i == 1)); then\n            direction=$diff\n\
    \        else\n            if ((direction * diff < 0)); then\n               \
    \ is_monotonic=0\n                break\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    echo $is_monotonic", "    local -a list=($@)\n    local -i i=0\n\
    \    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i prev=${list[0]}\n    local -i curr=0\n    for ((i=1; i<len; i++)); do\n \
    \       curr=${list[i]}\n        if ((prev < curr)); then\n            incr=1\n\
    \        elif ((prev > curr)); then\n            decr=1\n        fi\n        if\
    \ ((incr && decr)); then\n            echo \"false\"\n            return\n   \
    \     fi\n        prev=$curr\n    done\n    echo \"true\"", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=\"$(echo \"$list\" | head -n\
    \ 1)\"\n    local curr\n    for curr in $(echo \"$list\" | tail -n +2); do\n \
    \       if [[ \"$direction\" == \"increasing\" ]]; then\n            if [[ \"\
    $curr\" -lt \"$prev\" ]]; then\n                echo \"false\"\n             \
    \   return\n            fi\n        else\n            if [[ \"$curr\" -gt \"$prev\"\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n        fi\n        prev=\"$curr\"\n    done\n    echo \"true\"", "  \
    \  local list=($@)\n    local inc=0\n    local dec=0\n    local i=0\n    local\
    \ j=1\n    local size=${#list[@]}\n    while [ $j -lt $size ]; do\n        if\
    \ [ ${list[$i]} -lt ${list[$j]} ]; then\n            inc=1\n        elif [ ${list[$i]}\
    \ -gt ${list[$j]} ]; then\n            dec=1\n        fi\n        if [ $inc -eq\
    \ 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\n            return\n\
    \        fi\n        i=$j\n        j=$((j+1))\n    done\n    echo \"true\"", " \
    \   local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i inc=0\n    local -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if\
    \ ((list[i] < list[i+1])); then\n            inc=1\n        elif ((list[i] > list[i+1]));\
    \ then\n            dec=1\n        fi\n    done\n    if ((inc && dec)); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ list=\"$1\"\n    local direction=\"$2\"\n    local -a array=($list)\n    local\
    \ -i len=${#array[@]}\n    local -i i\n    local -i prev\n    local -i curr\n\
    \    local -i diff\n    local -i sign\n    local -i is_monotonic=1\n    if [ \"\
    $direction\" == \"decreasing\" ]; then\n        sign=-1\n    else\n        sign=1\n\
    \    fi\n    for ((i=0; i<len; i++)); do\n        curr=${array[$i]}\n        if\
    \ [ $i -gt 0 ]; then\n            diff=$((curr-prev))\n            if [ $((diff*sign))\
    \ -lt 0 ]; then\n                is_monotonic=0\n                break\n     \
    \       fi\n        fi\n        prev=$curr\n    done\n    echo $is_monotonic",
  "    local list=\"$1\"\n    local -i i=0\n    local -i max=0\n    local -i min=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i len=0\n    local -i ret=0\n    local -a arr=()\n    arr=($list)\n\
    \    len=${#arr[@]}\n    if (( len <= 1 )); then\n        echo \"true\"\n    \
    \    return 0\n    fi\n    for (( i=0; i<len; i++ )); do\n        curr=${arr[$i]}\n\
    \        if (( i == 0 )); then\n            prev=$curr\n            continue\n\
    \        fi\n        if (( curr > prev )); then\n            (( incr++ ))\n  \
    \      elif (( curr < prev )); then\n            (( decr++ ))\n        fi\n  \
    \      prev=$curr\n    done\n    if (( incr == len-1 )); then\n        ret=0\n\
    \    elif (( decr == len-1 )); then\n        ret=0\n    else\n        ret=1\n\
    \    fi\n    if (( ret == 0 )); then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n    return $ret", "    local list=\"$1\"\n    local\
    \ -a array=($list)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i\
    \ inc=0\n    local -i dec=0\n    local -i prev=0\n    local -i curr=0\n    local\
    \ -i next=0\n    local -i result=0\n    if [ $n -le 1 ]; then\n        echo \"\
    true\"\n        return 0\n    fi\n    prev=${array[0]}\n    curr=${array[1]}\n\
    \    if [ $prev -lt $curr ]; then\n        inc=1\n    elif [ $prev -gt $curr ];\
    \ then\n        dec=1\n    fi\n    for ((i=2; i<n; i++)); do\n        next=${array[i]}\n\
    \        if [ $inc -eq 1 ]; then\n            if [ $next -lt $curr ]; then\n \
    \               result=1\n                break\n            fi\n        elif\
    \ [ $dec -eq 1 ]; then\n            if [ $next -gt $curr ]; then\n           \
    \     result=1\n                break\n            fi\n        else\n        \
    \    if [ $next -lt $curr ]; then\n                dec=1\n            elif [ $next\
    \ -gt $curr ]; then\n                inc=1\n            fi\n        fi\n     \
    \   curr=$next\n    done\n    if [ $result -eq 1 ]; then\n        echo \"false\"\
    \n    else\n        echo \"true\"\n    fi", "    local -a list=($@)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i prev=${list[0]}\n    local -i curr=0\n    while [ $i -lt $len ];\
    \ do\n        curr=${list[$i]}\n        if [ $curr -gt $prev ]; then\n       \
    \     incr=1\n        elif [ $curr -lt $prev ]; then\n            decr=1\n   \
    \     fi\n        prev=$curr\n        i=$i+1\n    done\n    if [ $incr -eq 1 -a\
    \ $decr -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi", "    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n    local prev_diff\n    local is_monotonic=\"true\"\n    for ((i=1; i<${#list[@]};\
    \ i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n        diffs+=($diff)\n\
    \    done\n    for ((i=1; i<${#diffs[@]}; i++)); do\n        if [[ ${diffs[$i]}\
    \ -ne ${diffs[$i-1]} ]]; then\n            is_monotonic=\"false\"\n          \
    \  break\n        fi\n    done\n    echo \"$is_monotonic\"", "    local list=($@)\n\
    \    local direction=0\n    local last=${list[0]}\n    for i in ${list[@]:1};\
    \ do\n        if [ $i -gt $last ]; then\n            if [ $direction -eq -1 ];\
    \ then\n                echo \"false\"\n                return\n            fi\n\
    \            direction=1\n        elif [ $i -lt $last ]; then\n            if\
    \ [ $direction -eq 1 ]; then\n                echo \"false\"\n               \
    \ return\n            fi\n            direction=-1\n        fi\n        last=$i\n\
    \    done\n    echo \"true\"", "    local list=($@)\n    local i=0\n    local\
    \ inc=0\n    local dec=0\n    local prev=${list[0]}\n    for i in $(seq 1 $((${#list[@]}-1)));\
    \ do\n        if [[ ${list[$i]} -gt $prev ]]; then\n            inc=1\n      \
    \  elif [[ ${list[$i]} -lt $prev ]]; then\n            dec=1\n        fi\n   \
    \     if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n        prev=${list[$i]}\n    done\n    echo \"\
    true\"", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n    local -i is_monotonic=0\n\
    \    if [ $len -lt 3 ]; then\n        echo \"true\"\n        return 0\n    fi\n\
    \    for ((i=0; i<len; i++)); do\n        if [ $i -eq 0 ]; then\n            prev=${list[$i]}\n\
    \            curr=${list[$i+1]}\n            next=${list[$i+2]}\n        elif\
    \ [ $i -eq $((len-1)) ]; then\n            prev=${list[$i-2]}\n            curr=${list[$i-1]}\n\
    \            next=${list[$i]}\n        else\n            prev=${list[$i-1]}\n\
    \            curr=${list[$i]}\n            next=${list[$i+1]}\n        fi\n  \
    \      diff=$((curr-prev))\n        if [ $diff -gt 0 ]; then\n            incr=1\n\
    \        elif [ $diff -lt 0 ]; then\n            decr=1\n        fi\n        if\
    \ [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n            echo \"false\"\n     \
    \       return 1\n        fi\n    done\n    if [ $incr -eq 1 ]; then\n       \
    \ if [ $curr -gt $next ]; then\n            is_monotonic=1\n        fi\n    elif\
    \ [ $decr -eq 1 ]; then\n        if [ $curr -lt $next ]; then\n            is_monotonic=1\n\
    \        fi\n    fi\n    if [ $is_monotonic -eq 1 ]; then\n        echo \"true\"\
    \n        return 0\n    else\n        echo \"false\"\n        return 1\n    fi",
  "    local list=$1\n    local inc=0\n    local dec=0\n    local prev=0\n    for\
    \ i in $list; do\n        if [ $i -gt $prev ]; then\n            inc=1\n     \
    \   elif [ $i -lt $prev ]; then\n            dec=1\n        fi\n        prev=$i\n\
    \    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n\
    \    else\n        echo \"true\"\n    fi", "    local -a list=($@)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local -i dec=0\n\
    \    local -i cur=0\n    local -i prev=0\n    for ((i=0; i<len; i++)); do\n  \
    \      cur=${list[$i]}\n        if ((i > 0)); then\n            if ((cur > prev));\
    \ then\n                inc=1\n            elif ((cur < prev)); then\n       \
    \         dec=1\n            fi\n        fi\n        prev=$cur\n    done\n   \
    \ if ((inc == 1 && dec == 1)); then\n        echo \"false\"\n    else\n      \
    \  echo \"true\"\n    fi", "    local -r list=($@)\n    local -r len=${#list[@]}\n\
    \    local -r sign=$(echo \"${list[1]} - ${list[0]}\" | bc)\n    local -r sign_str=$(echo\
    \ \"$sign > 0\" | bc)\n    local -r sign_str_neg=$(echo \"$sign < 0\" | bc)\n\
    \    local -r sign_str_eq=$(echo \"$sign == 0\" | bc)\n    local -r sign_str_eq_neg=$(echo\
    \ \"$sign == 0\" | bc)\n    local -r sign_str_eq_neg=$(echo \"$sign == 0\" | bc)\n\
    \    local -r sign_str_eq_neg=$(echo \"$sign == 0\" | bc)\n    for ((i=1; i<len;\
    \ i++)); do\n        local -r curr=$(echo \"${list[$i]} - ${list[$i-1]}\" | bc)\n\
    \        local -r curr_str=$(echo \"$curr > 0\" | bc)\n        local -r curr_str_neg=$(echo\
    \ \"$curr < 0\" | bc)\n        local -r curr_str_eq=$(echo \"$curr == 0\" | bc)\n\
    \        local -r curr_str_eq_neg=$(echo \"$curr == 0\" | bc)\n        if [ \"\
    $sign_str\" == \"1\" ]; then\n            if [ \"$curr_str\" == \"0\" ]; then\n\
    \                echo \"false\"\n                return 1\n            fi\n  \
    \      elif [ \"$sign_str_neg\" == \"1\" ]; then\n            if [ \"$curr_str_neg\"\
    \ == \"0\" ]; then\n                echo \"false\"\n                return 1\n\
    \            fi\n        elif [ \"$sign_str_eq\" == \"1\" ]; then\n          \
    \  if [ \"$curr_str_eq\" == \"0\" ]; then\n                echo \"false\"\n  \
    \              return 1\n            fi\n        elif [ \"$sign_str_eq_neg\" ==\
    \ \"1\" ]; then\n            if [ \"$curr_str_eq_neg\" == \"0\" ]; then\n    \
    \            echo \"false\"\n                return 1\n            fi\n", "  \
    \  local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n \
    \   local prev=0\n    for i in $list; do\n        if [[ $i -lt $prev ]]; then\n\
    \            increasing=false\n        fi\n        if [[ $i -gt $prev ]]; then\n\
    \            decreasing=false\n        fi\n        prev=$i\n    done\n    if [[\
    \ $increasing == true || $decreasing == true ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ list_len=$(echo \"$list\" | wc -w)\n    local i=1\n    local prev=$(echo \"\
    $list\" | cut -d ' ' -f 1)\n    local curr\n    local increasing=true\n    while\
    \ [ $i -lt $list_len ]; do\n        curr=$(echo \"$list\" | cut -d ' ' -f $((i+1)))\n\
    \        if [ $prev -gt $curr ]; then\n            increasing=false\n        \
    \    break\n        fi\n        prev=$curr\n        i=$((i+1))\n    done\n   \
    \ echo $increasing", "    local list=(\"$@\")\n    local len=${#list[@]}\n   \
    \ local i=0\n    local inc=0\n    local dec=0\n    while [ $i -lt $len ]; do\n\
    \        if [ $i -eq 0 ]; then\n            inc=$((${list[$i]} < ${list[$((i+1))]}))\n\
    \            dec=$((${list[$i]} > ${list[$((i+1))]}))\n        else\n        \
    \    inc=$(($inc & ${list[$i]} < ${list[$((i+1))]}))\n            dec=$(($dec\
    \ & ${list[$i]} > ${list[$((i+1))]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $((inc | dec))", "    local -a list=($@)\n    local -a diffs\n    local\
    \ i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((${list[$i+1]}-${list[$i]}))\n\
    \    done\n    local prev=${diffs[0]}\n    for i in \"${diffs[@]}\"; do\n    \
    \    if [[ $i -ne $prev ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"", "    local list=($@)\n    local i=0\n\
    \    local j=1\n    local increasing=true\n    local decreasing=true\n    while\
    \ [ $j -lt ${#list[@]} ]; do\n        if [ ${list[$i]} -gt ${list[$j]} ]; then\n\
    \            increasing=false\n        fi\n        if [ ${list[$i]} -lt ${list[$j]}\
    \ ]; then\n            decreasing=false\n        fi\n        i=$((i+1))\n    \
    \    j=$((j+1))\n    done\n    if [ $increasing = true ] || [ $decreasing = true\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n  \
    \  for i in $list; do\n        if [ $i -gt $prev ]; then\n            inc=1\n\
    \        elif [ $i -lt $prev ]; then\n            dec=1\n        fi\n        prev=$i\n\
    \    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n\
    \    else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n    local first=$(echo\
    \ \"$list\" | head -n 1)\n    local last=$(echo \"$list\" | tail -n 1)\n    local\
    \ increasing=true\n    local decreasing=true\n    if [ \"$first\" -gt \"$last\"\
    \ ]; then\n        increasing=false\n    else\n        decreasing=false\n    fi\n\
    \    for i in $list; do\n        if [ \"$i\" -gt \"$last\" ]; then\n         \
    \   decreasing=false\n        elif [ \"$i\" -lt \"$last\" ]; then\n          \
    \  increasing=false\n        fi\n        last=\"$i\"\n    done\n    if [ \"$increasing\"\
    \ = true ] || [ \"$decreasing\" = true ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local -a list=($@)\n    local -a diffs\n\
    \    local -i i\n    local -i len=${#list[@]}\n    local -i prev=${list[0]}\n\
    \    local -i curr\n    local -i diff\n    local -i sign=0\n    local -i sign_prev=0\n\
    \    local -i sign_curr=0\n    local -i sign_diff=0\n    local -i monotonic=1\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n        diff=$((curr-prev))\n\
    \        sign_prev=$((sign_prev+sign))\n        sign=$((diff/abs(diff)))\n   \
    \     sign_curr=$((sign_curr+sign))\n        sign_diff=$((sign_curr-sign_prev))\n\
    \        if ((sign_diff!=0)); then\n            monotonic=0\n            break\n\
    \        fi\n        prev=$curr\n    done\n    echo $monotonic", "    local list=\"\
    $@\"\n    local list_len=$(echo \"$list\" | wc -w)\n    local list_sorted=$(echo\
    \ \"$list\" | sort -n)\n    local list_sorted_rev=$(echo \"$list\" | sort -nr)\n\
    \    if [[ \"$list\" == \"$list_sorted\" || \"$list\" == \"$list_sorted_rev\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=(\"$@\")\n    local -i i=0\n    local -i len=${#list[@]}\n  \
    \  local -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i prev=0\n\
    \    if [[ $len -le 1 ]]; then\n        echo \"true\"\n        return 0\n    fi\n\
    \    for i in $(seq 1 $len); do\n        cur=${list[$i]}\n        prev=${list[$i-1]}\n\
    \        if [[ $cur -gt $prev ]]; then\n            inc=1\n        elif [[ $cur\
    \ -lt $prev ]]; then\n            dec=1\n        fi\n        if [[ $inc -eq 1\
    \ && $dec -eq 1 ]]; then\n            echo \"false\"\n            return 1\n \
    \       fi\n    done\n    echo \"true\"\n    return 0", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i increasing=0\n \
    \   local -i decreasing=0\n    local -i diff=0\n    local -i prev_diff=0\n   \
    \ local -i prev_diff_sign=0\n    local -i diff_sign=0\n    local -i prev_diff_sign_changed=0\n\
    \    local -i diff_sign_changed=0\n    local -i prev_diff_sign_changed_count=0\n\
    \    local -i diff_sign_changed_count=0\n    local -i prev_diff_sign_changed_count_max=0\n\
    \    local -i diff_sign_changed_count_max=0\n    local -i prev_diff_sign_changed_count_min=0\n\
    \    local -i diff_sign_changed_count_min=0\n    local -i prev_diff_sign_changed_count_max_index=0\n\
    \    local -i diff_sign_changed_count_max_index=0\n    local -i prev_diff_sign_changed_count_min_index=0\n\
    \    local -i diff_sign_changed_count_min_index=0\n    local -i prev_diff_sign_changed_count_max_index_prev=0\n\
    \    local -i diff_sign_changed_count_max_index_prev=0\n    local -i prev_diff_sign_changed_count_min_index_prev=0\n\
    \    local -i diff_sign_changed_count_min_index_prev=0\n    local -i prev_diff_sign_changed_count_max_index_next=0\n\
    \    local -i diff_sign_changed_count_max_index_next=0\n    local -i prev_diff_sign_changed_count_min_index_next=0\n\
    \    local -i diff_sign_changed_count_min_index_next=0\n    local -i prev_diff_sign_changed_count_max_index_prev_value=0\n\
    \    local -i diff_sign_changed_count_max_index_prev_value=0\n    local -i prev_diff_sign_",
  "    local list=\"$1\"\n    local -a arr=()\n    local i=0\n    local inc=0\n  \
    \  local dec=0\n    local prev=0\n    local curr=0\n    local -i len=0\n    local\
    \ -i i=0\n    IFS=' ' read -r -a arr <<< \"$list\"\n    len=${#arr[@]}\n    for\
    \ ((i=0; i<len; i++)); do\n        curr=${arr[$i]}\n        if ((i > 0)); then\n\
    \            if ((curr > prev)); then\n                inc=1\n            elif\
    \ ((curr < prev)); then\n                dec=1\n            fi\n        fi\n \
    \       prev=$curr\n    done\n    if ((inc && dec)); then\n        echo \"false\"\
    \n    else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n    local\
    \ prev=\n    local curr=\n    local increasing=\n    local decreasing=\n    for\
    \ i in $list; do\n        if [ -z \"$prev\" ]; then\n            prev=$i\n   \
    \         continue\n        fi\n        curr=$i\n        if [ $prev -lt $curr\
    \ ]; then\n            increasing=true\n        elif [ $prev -gt $curr ]; then\n\
    \            decreasing=true\n        fi\n        if [ -n \"$increasing\" ] &&\
    \ [ -n \"$decreasing\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n        prev=$curr\n    done\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local\
    \ -i dec=0\n    local -i cur=0\n    local -i prev=0\n    local -i next=0\n   \
    \ local -i diff=0\n    local -i diff_prev=0\n    local -i diff_next=0\n    local\
    \ -i diff_prev_next=0\n    local -i diff_prev_cur=0\n    local -i diff_cur_next=0\n\
    \    local -i diff_prev_next_cur=0\n    local -i diff_prev_cur_next=0\n    local\
    \ -i diff_prev_next_cur_next=0\n    local -i diff_prev_cur_next_cur=0\n    local\
    \ -i diff_prev_cur_cur_next=0\n    local -i diff_prev_cur_cur_next_next=0\n  \
    \  local -i diff_prev_cur_cur_next_next_next=0\n    local -i diff_prev_cur_cur_next_next_next_next=0\n\
    \    local -i diff_prev_cur_cur_next_next_next_next_next=0\n    local -i diff_prev_cur_cur_next_next_next_next_next_next=0\n\
    \    local -i diff_prev_cur_cur_next_next_next_next_next_next_next=0\n    local\
    \ -i diff_prev_cur_cur_next_next_next_next_next_next_next_next=0\n    local -i\
    \ diff_prev_cur_cur_next_next_next_next_next_next_next_next_next=0\n    local\
    \ -i diff_prev_cur_cur_next_next_next_next_next_next_next_next_next_next=0\n \
    \   local -i diff_prev_cur_cur_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local -i diff_prev_cur_cur_next_next_next_next_next_next_next_next_next_",
  "    local list=\"$1\"\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i next=0\n    local\
    \ -i prev=0\n    for i in $(seq 1 $len); do\n        cur=${list[$i]}\n       \
    \ prev=${list[$i-1]}\n        next=${list[$i+1]}\n        if [[ $cur -gt $prev\
    \ ]]; then\n            inc=1\n        elif [[ $cur -lt $prev ]]; then\n     \
    \       dec=1\n        fi\n        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n \
    \           echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"", "    local list=($@)\n    local inc=0\n    local dec=0\n    local\
    \ i=0\n    local j=1\n    local len=${#list[@]}\n    for ((i=0; i<len-1; i++));\
    \ do\n        if ((list[i] < list[j])); then\n            inc=1\n        elif\
    \ ((list[i] > list[j])); then\n            dec=1\n        fi\n        if ((inc\
    \ && dec)); then\n            echo \"false\"\n            return\n        fi\n\
    \        j=$((j+1))\n    done\n    echo \"true\"", "    local list=\"$1\"\n  \
    \  local increasing=\"$2\"\n    local decreasing=\"$3\"\n    local prev=\"$(echo\
    \ \"$list\" | head -n 1)\"\n    local curr=\"\"\n    for curr in $(echo \"$list\"\
    \ | tail -n +2); do\n        if [ \"$prev\" -gt \"$curr\" ]; then\n          \
    \  decreasing=\"true\"\n        elif [ \"$prev\" -lt \"$curr\" ]; then\n     \
    \       increasing=\"true\"\n        fi\n        if [ \"$increasing\" = \"true\"\
    \ ] && [ \"$decreasing\" = \"true\" ]; then\n            echo \"false\"\n    \
    \        return\n        fi\n        prev=\"$curr\"\n    done\n    echo \"true\"",
  "    local list=($@)\n    local i=0\n    local inc=0\n    local dec=0\n    while\
    \ [ $i -lt $((${#list[@]} - 1)) ]; do\n        if [ ${list[$i]} -lt ${list[$(($i\
    \ + 1))]} ]; then\n            inc=1\n        elif [ ${list[$i]} -gt ${list[$(($i\
    \ + 1))]} ]; then\n            dec=1\n        fi\n        i=$(($i + 1))\n    done\n\
    \    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local list=\"$1\"\n    local -i i=0\n  \
    \  local -i n=$(echo \"$list\" | wc -w)\n    local -i prev=$(echo \"$list\" |\
    \ cut -d ' ' -f 1)\n    local -i curr\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i is_monotonic=0\n    while [ $i -lt $n ]; do\n        i=$((i+1))\n\
    \        curr=$(echo \"$list\" | cut -d ' ' -f $i)\n        if [ $curr -gt $prev\
    \ ]; then\n            incr=1\n        elif [ $curr -lt $prev ]; then\n      \
    \      decr=1\n        fi\n        prev=$curr\n    done\n    if [ $incr -eq 1\
    \ -a $decr -eq 0 ]; then\n        is_monotonic=1\n    elif [ $incr -eq 0 -a $decr\
    \ -eq 1 ]; then\n        is_monotonic=1\n    fi\n    echo $is_monotonic", "  \
    \  local -a list=($@)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n    done\n    local\
    \ -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u))\n    if [[\
    \ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    if [ $# -lt 2 ]; then\n        echo \"false\"\n   \
    \     return\n    fi\n    local prev=$1\n    local increasing=true\n    local\
    \ decreasing=true\n    shift\n    for curr in \"$@\"; do\n        if [ $curr -lt\
    \ $prev ]; then\n            increasing=false\n        elif [ $curr -gt $prev\
    \ ]; then\n            decreasing=false\n        fi\n        prev=$curr\n    done\n\
    \    if $increasing || $decreasing; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi", "    local list=\"$@\"\n    local inc=true\n \
    \   local dec=true\n    local prev=0\n    for n in $list; do\n        if (( n\
    \ < prev )); then\n            inc=false\n        fi\n        if (( n > prev ));\
    \ then\n            dec=false\n        fi\n        prev=$n\n    done\n    if $inc\
    \ || $dec; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if ((curr > prev)); then\n            ((inc++))\n        elif ((curr < prev));\
    \ then\n            ((dec++))\n        fi\n        prev=$curr\n    done\n    if\
    \ ((inc == 0 || dec == 0)); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n    local -i\
    \ len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr > prev)); then\n            ((incr++))\n        elif ((curr\
    \ < prev)); then\n            ((decr++))\n        fi\n        prev=$curr\n   \
    \ done\n    if ((incr == len-1)) || ((decr == len-1)); then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local -a list=($@)\n    local\
    \ -a diffs\n    local i\n    local prev\n    local diff\n    local increasing\n\
    \    local decreasing\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[\
    \ $i -gt 0 ]]; then\n            diff=$((list[i] - prev))\n            diffs+=($diff)\n\
    \        fi\n        prev=${list[i]}\n    done\n    increasing=true\n    decreasing=true\n\
    \    for ((i=0; i<${#diffs[@]}; i++)); do\n        if [[ ${diffs[i]} -lt 0 ]];\
    \ then\n            increasing=false\n        fi\n        if [[ ${diffs[i]} -gt\
    \ 0 ]]; then\n            decreasing=false\n        fi\n    done\n    if [[ $increasing\
    \ == true || $decreasing == true ]]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi", "    local list=\"$1\"\n    local -i i=0\n  \
    \  local -i n=$(wc -w <<< \"$list\")\n    local -i prev=$(cut -d ' ' -f 1 <<<\
    \ \"$list\")\n    local -i curr\n    local -i increasing=1\n    local -i decreasing=1\n\
    \    while (( ++i < n )); do\n        curr=$(cut -d ' ' -f $((i+1)) <<< \"$list\"\
    )\n        (( prev > curr )) && (( increasing = 0 ))\n        (( prev < curr ))\
    \ && (( decreasing = 0 ))\n        (( increasing == 0 && decreasing == 0 )) &&\
    \ break\n        prev=$curr\n    done\n    (( increasing == 1 || decreasing ==\
    \ 1 )) && echo \"true\" || echo \"false\"", "    local -a list=($@)\n    local\
    \ -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((${list[$i+1]}-${list[$i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -gt 2 ]]; then\n        echo \"false\"\n \
    \   else\n        echo \"true\"\n    fi", "    local -a list=($@)\n    local -i\
    \ i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local -i dec=0\n\
    \    local -i prev=${list[0]}\n    local -i curr=0\n    for ((i=1; i<len; i++));\
    \ do\n        curr=${list[i]}\n        if ((curr > prev)); then\n            ((inc++))\n\
    \        elif ((curr < prev)); then\n            ((dec++))\n        fi\n     \
    \   prev=$curr\n    done\n    if ((inc == len-1 || dec == len-1)); then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i n=${#list[@]}\n    local -i incr=0\n    local\
    \ -i decr=0\n    local -i d\n    local -i prev=${list[0]}\n    for ((i=1; i<n;\
    \ i++)); do\n        d=$(( ${list[i]} - prev ))\n        if (( d > 0 )); then\n\
    \            incr=1\n        elif (( d < 0 )); then\n            decr=1\n    \
    \    fi\n        prev=${list[i]}\n    done\n    if (( incr && decr )); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i res=0\n    if [ $n -gt 1 ]; then\n        prev=${list[0]}\n    \
    \    curr=${list[1]}\n        if [ $prev -lt $curr ]; then\n            incr=1\n\
    \        elif [ $prev -gt $curr ]; then\n            decr=1\n        fi\n    \
    \    for ((i=1; i<n-1; i++)); do\n            prev=${list[i]}\n            next=${list[i+1]}\n\
    \            if [ $incr -eq 1 ]; then\n                if [ $prev -gt $next ];\
    \ then\n                    res=1\n                    break\n               \
    \ fi\n            elif [ $decr -eq 1 ]; then\n                if [ $prev -lt $next\
    \ ]; then\n                    res=1\n                    break\n            \
    \    fi\n            else\n                if [ $prev -lt $next ]; then\n    \
    \                incr=1\n                elif [ $prev -gt $next ]; then\n    \
    \                decr=1\n                fi\n            fi\n        done\n  \
    \  fi\n    echo $res", "    local -a list=($@)\n    local -a diffs\n    local\
    \ i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a unique_diffs=($(printf \"%s\\n\" \"${diffs[@]}\" | sort\
    \ -u))\n    if [[ ${#unique_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    local list=($@)\n    local len=${#list[@]}\n\
    \    local i=0\n    local inc=0\n    local dec=0\n    local prev=${list[0]}\n\
    \    while [ $i -lt $len ]; do\n        if [ $prev -lt ${list[$i]} ]; then\n \
    \           inc=1\n        elif [ $prev -gt ${list[$i]} ]; then\n            dec=1\n\
    \        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n        prev=${list[$i]}\n      \
    \  i=$((i+1))\n    done\n    echo \"true\"", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local i\n    local prev\n    local current\n    local\
    \ result=\"true\"\n    for i in $list; do\n        current=\"$i\"\n        if\
    \ [[ -n \"$prev\" ]]; then\n            if [[ \"$direction\" == \"increasing\"\
    \ ]]; then\n                if [[ \"$current\" -lt \"$prev\" ]]; then\n      \
    \              result=\"false\"\n                    break\n                fi\n\
    \            else\n                if [[ \"$current\" -gt \"$prev\" ]]; then\n\
    \                    result=\"false\"\n                    break\n           \
    \     fi\n            fi\n        fi\n        prev=\"$current\"\n    done\n  \
    \  echo \"$result\"", "    local -a list=($@)\n    local -a diffs\n    local i\n\
    \    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local list=($@)\n    local direction=0\n\
    \    local last=${list[0]}\n    for i in ${list[@]:1}; do\n        if [[ $i -gt\
    \ $last ]]; then\n            if [[ $direction -eq -1 ]]; then\n             \
    \   echo \"false\"\n                return\n            fi\n            direction=1\n\
    \        elif [[ $i -lt $last ]]; then\n            if [[ $direction -eq 1 ]];\
    \ then\n                echo \"false\"\n                return\n            fi\n\
    \            direction=-1\n        fi\n        last=$i\n    done\n    echo \"\
    true\"", "    local list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n\
    \    local incr=true\n    local decr=true\n    for i in $(echo \"$list\" | tail\
    \ -n +2); do\n        if (( i < prev )); then\n            incr=false\n      \
    \  elif (( i > prev )); then\n            decr=false\n        fi\n        prev=$i\n\
    \    done\n    if $incr || $decr; then\n        echo \"true\"\n    else\n    \
    \    echo \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n    local\
    \ -i n=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n\
    \    local -i prev=0\n    local -i curr=0\n    if (( n < 2 )); then\n        echo\
    \ \"true\"\n        return 0\n    fi\n    prev=${list[0]}\n    for (( i=1; i<n;\
    \ i++ )); do\n        curr=${list[i]}\n        diff=$(( curr - prev ))\n     \
    \   if (( diff > 0 )); then\n            (( incr++ ))\n        elif (( diff <\
    \ 0 )); then\n            (( decr++ ))\n        fi\n        prev=$curr\n    done\n\
    \    if (( incr == n-1 || decr == n-1 )); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local -a list=($@)\n    local -i i=0\n\
    \    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i diff=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n \
    \   local -i result=0\n    if [ $len -gt 1 ]; then\n        prev=${list[0]}\n\
    \        for ((i=1; i<len; i++)); do\n            curr=${list[i]}\n          \
    \  next=${list[i+1]}\n            diff=$((curr - prev))\n            if [ $diff\
    \ -gt 0 ]; then\n                incr=1\n            elif [ $diff -lt 0 ]; then\n\
    \                decr=1\n            fi\n            if [ $incr -eq 1 ] && [ $decr\
    \ -eq 1 ]; then\n                result=1\n                break\n           \
    \ fi\n            prev=$curr\n        done\n    fi\n    echo $result", "    local\
    \ -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i prev=${list[0]}\n    while (( i < n )); do\n\
    \        (( i++ ))\n        local -i curr=${list[i]}\n        if (( curr > prev\
    \ )); then\n            (( incr++ ))\n        elif (( curr < prev )); then\n \
    \           (( decr++ ))\n        fi\n        prev=$curr\n    done\n    if ((\
    \ incr == n-1 || decr == n-1 )); then\n        echo \"true\"\n    else\n     \
    \   echo \"false\"\n    fi", "    local -a list=($@)\n    local -a diffs\n   \
    \ local i\n    local diff\n    local prev_diff\n    local increasing\n    local\
    \ decreasing\n    for ((i=1; i<${#list[@]}; i++)); do\n        diff=$((${list[$i]}\
    \ - ${list[$i-1]}))\n        diffs+=($diff)\n    done\n    prev_diff=${diffs[0]}\n\
    \    for diff in ${diffs[@]}; do\n        if [[ $diff -gt 0 ]]; then\n       \
    \     increasing=true\n        elif [[ $diff -lt 0 ]]; then\n            decreasing=true\n\
    \        fi\n        if [[ $prev_diff -gt 0 && $diff -lt 0 ]]; then\n        \
    \    echo \"false\"\n            return\n        elif [[ $prev_diff -lt 0 && $diff\
    \ -gt 0 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \        prev_diff=$diff\n    done\n    echo \"true\"", "    local list=\"$1\"\
    \n    local direction=\"$2\"\n    local i\n    local prev\n    local curr\n  \
    \  local prev_set=false\n    local curr_set=false\n    local result=true\n   \
    \ for i in $list; do\n        curr=$i\n        if $prev_set; then\n          \
    \  if [ \"$direction\" == \"increasing\" ]; then\n                if [ $curr -lt\
    \ $prev ]; then\n                    result=false\n                    break\n\
    \                fi\n            else\n                if [ $curr -gt $prev ];\
    \ then\n                    result=false\n                    break\n        \
    \        fi\n            fi\n        fi\n        prev=$curr\n        prev_set=true\n\
    \    done\n    echo $result", "    local -a list=($@)\n    local -i i=0\n    local\
    \ -i n=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i delta=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i next=0\n    if (( n <\
    \ 3 )); then\n        echo \"true\"\n        return\n    fi\n    prev=${list[0]}\n\
    \    curr=${list[1]}\n    if (( prev < curr )); then\n        incr=1\n    elif\
    \ (( prev > curr )); then\n        decr=1\n    fi\n    for (( i=2; i<n; i++ ));\
    \ do\n        next=${list[i]}\n        delta=$(( curr - next ))\n        if ((\
    \ incr && delta < 0 )); then\n            echo \"false\"\n            return\n\
    \        elif (( decr && delta > 0 )); then\n            echo \"false\"\n    \
    \        return\n        fi\n        prev=$curr\n        curr=$next\n    done\n\
    \    echo \"true\"", "    local list=\"$1\"\n    local -i n=0\n    local -i m=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n\
    \    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local\
    \ -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i\
    \ jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local\
    \ -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -i qqq=", "    local\
    \ list=$1\n    local -a array=($list)\n    local -i i=0\n    local -i n=${#array[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n \
    \   local -i prev=0\n    local -i curr=0\n    local -i next=0\n    local -i prev_diff=0\n\
    \    local -i curr_diff=0\n    local -i next_diff=0\n    local -i is_monotonic=0\n\
    \    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_increasing_or_decreasing=0\n\
    \    local -i is_increasing_and_decreasing=0\n    local -i is_increasing_or_decreasing_or_constant=0\n\
    \    local -i is_increasing_and_decreasing_and_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing_and_constant=0\n\
    \    local -i is_increasing_and_decreasing", "    local -a list=($@)\n    local\
    \ -i i\n    local -i n=${#list[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\
    \    for ((i=1; i<n; i++)); do\n        if ((list[i] < list[i-1])); then\n   \
    \         increasing=0\n        elif ((list[i] > list[i-1])); then\n         \
    \   decreasing=0\n        fi\n    done\n    if ((increasing || decreasing)); then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n    local -i curr=0\n\
    \    for ((i=0; i<len; i++)); do\n        curr=${list[$i]}\n        if ((i > 0));\
    \ then\n            diff=$((curr - prev))\n            if ((diff > 0)); then\n\
    \                incr=1\n            elif ((diff < 0)); then\n               \
    \ decr=1\n            fi\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ == 1 && decr == 1)); then\n        echo \"false\"\n    else\n        echo \"\
    true\"\n    fi", "    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt prev ]]; then\n      \
    \      incr=1\n        elif [[ ${list[i]} -lt prev ]]; then\n            decr=1\n\
    \        fi\n        prev=${list[i]}\n    done\n    if [[ $incr -eq 1 && $decr\
    \ -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $incr -eq 0 && $decr -eq\
    \ 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i next=0\n \
    \   local -i prev=0\n    local -i result=0\n    local -i first=0\n    local -i\
    \ last=0\n    local -i delta=0\n    local -i sign=0\n    local -i sign_prev=0\n\
    \    local -i sign_next=0\n    local -i sign_delta=0\n    local -i sign_first=0\n\
    \    local -i sign_last=0\n    local -i sign_curr=0\n    local -i sign_next=0\n\
    \    local -i sign_prev=0\n    local -i sign_incr=0\n    local -i sign_decr=0\n\
    \    local -i sign_result=0\n    local -i sign_sign=0\n    local -i sign_sign_prev=0\n\
    \    local -i sign_sign_next=0\n    local -i sign_sign_delta=0\n    local -i sign_sign_first=0\n\
    \    local -i sign_sign_last=0\n    local -i sign_sign_curr=0\n    local -i sign_sign_next=0\n\
    \    local -i sign_sign_prev=0\n    local -i sign_sign_incr=0\n    local -i sign_sign_decr=0\n\
    \    local -i sign_sign_result=0\n    local -i sign_sign_sign=0\n    local -i\
    \ sign_sign_sign_prev=0\n    local -i sign_sign_sign_next=0\n    local -i sign_sign_sign_delta=0\n\
    \    local -i sign_sign_sign_first=0\n    local -i sign_sign_sign_last=0\n   \
    \ local -i sign_sign_sign_curr=0\n    local -i sign_sign_sign_next=0\n    local\
    \ -i sign_sign_sign_prev=0\n    local -i sign_sign_sign_inc", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i sign=0\n    local\
    \ -i prev=0\n    local -i curr=0\n    local -i diff=0\n    local -i is_monotonic=1\n\
    \    if (( len < 2 )); then\n        echo \"true\"\n        return\n    fi\n \
    \   prev=${list[0]}\n    for (( i=1; i<len; i++ )); do\n        curr=${list[i]}\n\
    \        diff=$(( curr - prev ))\n        if (( i == 1 )); then\n            if\
    \ (( diff > 0 )); then\n                sign=1\n            elif (( diff < 0 ));\
    \ then\n                sign=-1\n            fi\n        else\n            if\
    \ (( sign == 1 && diff < 0 )); then\n                is_monotonic=0\n        \
    \        break\n            elif (( sign == -1 && diff > 0 )); then\n        \
    \        is_monotonic=0\n                break\n            fi\n        fi\n \
    \       prev=$curr\n    done\n    if (( is_monotonic )); then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local -a arr=($@)\n  \
    \  local -i i=0\n    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i\
    \ decr=0\n    local -i prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n     \
    \   if [[ ${arr[i]} -gt $prev ]]; then\n            incr=1\n        elif [[ ${arr[i]}\
    \ -lt $prev ]]; then\n            decr=1\n        fi\n        prev=${arr[i]}\n\
    \    done\n    [[ $incr -eq 1 && $decr -eq 0 ]] && echo \"true\" || echo \"false\"",
  "  local list=($@)\n  local direction=0\n  local last=${list[0]}\n  for i in ${list[@]:1};\
    \ do\n    if [[ $i -gt $last ]]; then\n      if [[ $direction -eq -1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n      direction=1\n    elif\
    \ [[ $i -lt $last ]]; then\n      if [[ $direction -eq 1 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n      direction=-1\n    fi\n    last=$i\n\
    \  done\n  echo \"true\"", "    local list=($@)\n    local i\n    local increasing=true\n\
    \    local decreasing=true\n    for ((i=0; i<${#list[@]}-1; i++)); do\n      \
    \  if (( ${list[$i]} > ${list[$i+1]} )); then\n            increasing=false\n\
    \        fi\n        if (( ${list[$i]} < ${list[$i+1]} )); then\n            decreasing=false\n\
    \        fi\n    done\n    if $increasing || $decreasing; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local -a list=($@)\n \
    \   local -i i\n    local -i n=${#list[@]}\n    local -i increasing=1\n    local\
    \ -i decreasing=1\n    for ((i=1; i<n; i++)); do\n        if ((list[i] < list[i-1]));\
    \ then\n            increasing=0\n        elif ((list[i] > list[i-1])); then\n\
    \            decreasing=0\n        fi\n    done\n    ((increasing || decreasing))\
    \ && echo \"true\" || echo \"false\"", "    local list=($@)\n    local direction=0\n\
    \    local last=${list[0]}\n    for i in \"${list[@]:1}\"; do\n        if (( i\
    \ > last )); then\n            if (( direction < 0 )); then\n                echo\
    \ \"false\"\n                return\n            fi\n            direction=1\n\
    \        elif (( i < last )); then\n            if (( direction > 0 )); then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \        direction=-1\n        fi\n        last=$i\n    done\n    echo \"true\"",
  "    local list=\"$@\"\n    local first=$(echo \"$list\" | head -n 1)\n    local\
    \ last=$(echo \"$list\" | tail -n 1)\n    local incr=$(echo \"$first < $last\"\
    \ | bc)\n    local decr=$(echo \"$first > $last\" | bc)\n    if [[ $incr -eq 1\
    \ ]]; then\n        for i in $list; do\n            local prev=$first\n      \
    \      first=$i\n            if [[ $(echo \"$first < $prev\" | bc) -eq 1 ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n    elif [[ $decr -eq 1 ]]; then\n        for i in $list; do\n    \
    \        local prev=$first\n            first=$i\n            if [[ $(echo \"\
    $first > $prev\" | bc) -eq 1 ]]; then\n                echo \"false\"\n      \
    \          return\n            fi\n        done\n    else\n        echo \"false\"\
    \n        return\n    fi\n    echo \"true\"", "    local list=($@)\n    local\
    \ n=${#list[@]}\n    local i=1\n    local increasing=true\n    local decreasing=true\n\
    \    while [ $i -lt $n ]; do\n        if [ ${list[$i]} -lt ${list[$i-1]} ]; then\n\
    \            increasing=false\n        fi\n        if [ ${list[$i]} -gt ${list[$i-1]}\
    \ ]; then\n            decreasing=false\n        fi\n        i=$((i+1))\n    done\n\
    \    if [ $increasing = true ] || [ $decreasing = true ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local list=($@)\n    local\
    \ i=0\n    local increasing=true\n    local decreasing=true\n    local prev=${list[0]}\n\
    \    for ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]} -lt $prev\
    \ ]]; then\n            increasing=false\n        fi\n        if [[ ${list[$i]}\
    \ -gt $prev ]]; then\n            decreasing=false\n        fi\n        prev=${list[$i]}\n\
    \    done\n    if [[ $increasing == true || $decreasing == true ]]; then\n   \
    \     echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a\
    \ list=(\"$@\")\n    local -a diffs\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i prev=${list[0]}\n    local -i curr\n    local -i diff\n    local\
    \ -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\
    \n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n        diff=$((curr\
    \ - prev))\n        diffs[i]=$diff\n        prev=$curr\n    done\n\n    for ((i=1;\
    \ i<len; i++)); do\n        if [[ ${diffs[i]} -lt 0 ]]; then\n            is_increasing=0\n\
    \        elif [[ ${diffs[i]} -gt 0 ]]; then\n            is_decreasing=0\n   \
    \     fi\n    done\n\n    if [[ $is_increasing -eq 1 ]] || [[ $is_decreasing -eq\
    \ 1 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic", "   \
    \ local list=\"$1\"\n    local -a array=($list)\n    local -a diffs\n    local\
    \ i\n    local diff\n    local prev\n    local prev_diff\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ $i -gt 0 ]]; then\n            diff=$((array[i] - array[i-1]))\n\
    \            diffs+=($diff)\n        fi\n    done\n    for ((i=0; i<${#diffs[@]};\
    \ i++)); do\n        if [[ $i -gt 0 ]]; then\n            if [[ $prev_diff -ne\
    \ 0 ]]; then\n                if [[ $prev_diff -ne ${diffs[i]} ]]; then\n    \
    \                echo \"false\"\n                    return\n                fi\n\
    \            fi\n        fi\n        prev_diff=${diffs[i]}\n    done\n    echo\
    \ \"true\"", "    local -a list\n    local -i i\n    local -i len\n    local -i\
    \ direction\n    local -i prev\n    local -i curr\n    list=($@)\n    len=${#list[@]}\n\
    \    if (( len < 2 )); then\n        echo \"true\"\n        return 0\n    fi\n\
    \    prev=${list[0]}\n    direction=0\n    for (( i=1; i<len; i++ )); do\n   \
    \     curr=${list[i]}\n        if (( curr == prev )); then\n            continue\n\
    \        fi\n        if (( direction == 0 )); then\n            if (( curr > prev\
    \ )); then\n                direction=1\n            else\n                direction=-1\n\
    \            fi\n        else\n            if (( direction == 1 && curr < prev\
    \ )); then\n                echo \"false\"\n                return 1\n       \
    \     elif (( direction == -1 && curr > prev )); then\n                echo \"\
    false\"\n                return 1\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"\n    return 0", "    local -a list=($@)\n    local\
    \ -a diffs\n    local -i i\n    local -i len=${#list[@]}\n    local -i diff\n\
    \    local -i prev_diff\n\n    for ((i=1; i<len; i++)); do\n        diffs[i-1]=$((list[i]\
    \ - list[i-1]))\n    done\n\n    prev_diff=${diffs[0]}\n    for ((i=1; i<len-1;\
    \ i++)); do\n        diff=${diffs[i]}\n        if ((prev_diff * diff < 0)); then\n\
    \            echo \"false\"\n            return\n        fi\n        prev_diff=$diff\n\
    \    done\n\n    echo \"true\"", "    local -a list=($@)\n    local -i i\n   \
    \ local -i n=${#list[@]}\n    local -i sign=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    for ((i=0; i<n; i++)); do\n        curr=${list[$i]}\n       \
    \ if ((i > 0)); then\n            if ((sign == 0)); then\n                if ((curr\
    \ > prev)); then\n                    sign=1\n                elif ((curr < prev));\
    \ then\n                    sign=-1\n                fi\n            elif ((sign\
    \ == 1 && curr < prev)) || ((sign == -1 && curr > prev)); then\n             \
    \   echo \"false\"\n                return\n            fi\n        fi\n     \
    \   prev=$curr\n    done\n    echo \"true\"", "  local list=\"$@\"\n  local n=$(echo\
    \ \"$list\" | wc -w)\n  local i=1\n  local prev=$(echo \"$list\" | cut -d' ' -f1)\n\
    \  local curr\n  while [ $i -lt $n ]; do\n    curr=$(echo \"$list\" | cut -d'\
    \ ' -f$((i+1)))\n    if [ $prev -gt $curr ]; then\n      prev=$curr\n      i=$((i+1))\n\
    \      continue\n    else\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i\
    \ len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i last=0\n\
    \    local -i curr=0\n    local -i first=0\n    local -i second=0\n    local -i\
    \ third=0\n    local -i fourth=0\n    local -i fifth=0\n    local -i sixth=0\n\
    \    local -i seventh=0\n    local -i eighth=0\n    local -i ninth=0\n    local\
    \ -i tenth=0\n    local -i eleventh=0\n    local -i twelfth=0\n    local -i thirteenth=0\n\
    \    local -i fourteenth=0\n    local -i fifteenth=0\n    local -i sixteenth=0\n\
    \    local -i seventeenth=0\n    local -i eighteenth=0\n    local -i nineteenth=0\n\
    \    local -i twentieth=0\n    local -i twentyfirst=0\n    local -i twentysecond=0\n\
    \    local -i twentythird=0\n    local -i twentyfourth=0\n    local -i twentyfifth=0\n\
    \    local -i twentysixth=0\n    local -i twentyseventh=0\n    local -i twentyeighth=0\n\
    \    local -i twentyninth=0\n    local -i thirtieth=0\n    local -i thirtyfirst=0\n\
    \    local -i thirtysecond=0\n    local -i thirtythird=0\n    local -i thirtyfourth=0\n\
    \    local -i thirtyfifth=0\n    local -i thirtysixth=0\n    local -i thirtyseventh=0\n\
    \    local -i thirtyeighth=0\n    local -i thirtyninth=0\n    local -i fortieth=0\n\
    \    local -i fortyfirst=0\n    local -i fortysecond=0\n    local -i fortythird=0\n\
    \    local -i fortyfourth=0\n    local -i fortyfifth=0\n    local -i fortysixth=0\n\
    \    local -i fortyseventh=0\n    local -i fortyeighth=0\n    local -i fortyninth=0\n\
    \   ", "    local list=\"$1\"\n    local increasing=\"$2\"\n    local decreasing=\"\
    $3\"\n    local prev=\"\"\n    local curr=\"\"\n    local result=\"true\"\n  \
    \  for curr in $list; do\n        if [[ -n \"$prev\" ]]; then\n            if\
    \ [[ \"$curr\" -gt \"$prev\" ]]; then\n                if [[ -n \"$decreasing\"\
    \ ]]; then\n                    result=\"false\"\n                    break\n\
    \                fi\n            elif [[ \"$curr\" -lt \"$prev\" ]]; then\n  \
    \              if [[ -n \"$increasing\" ]]; then\n                    result=\"\
    false\"\n                    break\n                fi\n            fi\n     \
    \   fi\n        prev=\"$curr\"\n    done\n    echo \"$result\"", "    local -a\
    \ list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i curr=0\n    local -i prev=0\n    local -i next=0\n\
    \    if [ $len -lt 3 ]; then\n        echo \"true\"\n        return\n    fi\n\
    \    for i in $(seq 1 $(($len - 1))); do\n        curr=${list[$i]}\n        prev=${list[$(($i\
    \ - 1))]}\n        next=${list[$(($i + 1))]}\n        if [ $curr -gt $prev ];\
    \ then\n            incr=1\n        elif [ $curr -lt $prev ]; then\n         \
    \   decr=1\n        fi\n        if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"", "    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n\
    \    local -a w=($@)\n    local -a v=($@)\n    local -a u=($@)\n    local -a t=($@)\n\
    \    local -a s=($@)\n    local -a r=($@)\n    local -a q=($@)\n    local -a p=($@)\n\
    \    local -a o=($@)\n    local -a n=($@)\n    local -a m=($@)\n    local -a l=($@)\n\
    \    local -a k=($@)\n    local -a j=($@)\n    local -a i=($@)\n    local -a h=($@)\n\
    \    local -a g=($@)\n    local -a f=($@)\n    local -a e=($@)\n    local -a d=($@)\n\
    \    local -a c=($@)\n    local -a b=($@)\n    local -a a=($@)\n    local -a z=($@)\n\
    \    local -a y=($@)\n    local -a x=($@)\n    local -a w=($@)\n    local -a v=($@)\n\
    \    local -a u=($@)\n    local -a t=($@)\n    local -a s=($@)\n    local -a r=($@)\n\
    \    local -a q=($@)\n    local -a p=($@)\n    local -a o=($@)\n    local -a n=($@)\n\
    \    local -a m=($@)\n    local -a l=($@)\n    local -a k=($@)\n    local -a j=($@)\n\
    \    local -a i=($@)\n    local -a h=($@)\n    local -a g=($@)\n    local -a f=($@)\n\
    \    local -a e=($@)\n    local -a d=($@)\n    local -a c=($@)\n    local -a b=($@)\n\
    \   ", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n    if [ $len\
    \ -lt 3 ]; then\n        echo \"true\"\n        return 0\n    fi\n    for ((i=0;\
    \ i<len; i++)); do\n        curr=${list[$i]}\n        next=${list[$((i+1))]}\n\
    \        diff=$((curr-next))\n        if [ $i -eq 0 ]; then\n            prev=$diff\n\
    \        fi\n        if [ $diff -gt 0 ]; then\n            incr=1\n        elif\
    \ [ $diff -lt 0 ]; then\n            decr=1\n        fi\n        if [ $prev -gt\
    \ 0 -a $diff -lt 0 ]; then\n            result=1\n            break\n        elif\
    \ [ $prev -lt 0 -a $diff -gt 0 ]; then\n            result=1\n            break\n\
    \        fi\n        prev=$diff\n    done\n    if [ $result -eq 0 -a $incr -eq\
    \ 1 -a $decr -eq 1 ]; then\n        result=1\n    fi\n    if [ $result -eq 0 ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local list=($@)\n    local direction=0\n    local last=${list[0]}\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $direction == 0 ]]; then\n        \
    \    if [[ $i -gt $last ]]; then\n                direction=1\n            elif\
    \ [[ $i -lt $last ]]; then\n                direction=-1\n            fi\n   \
    \     elif [[ $direction == 1 ]]; then\n            if [[ $i -lt $last ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    elif [[ $direction == -1 ]]; then\n            if [[ $i -gt $last ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    fi\n        last=$i\n    done\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i inc=0\n    local\
    \ -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if (( list[i] < list[i+1]\
    \ )); then\n            (( inc++ ))\n        elif (( list[i] > list[i+1] )); then\n\
    \            (( dec++ ))\n        fi\n    done\n    if (( inc == len-1 || dec\
    \ == len-1 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $prev -gt $curr ]; then\n            dec=1\n        elif [ $prev -lt $curr\
    \ ]; then\n            inc=1\n        fi\n        prev=$curr\n    done\n    if\
    \ [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n    else\n     \
    \   echo \"true\"\n    fi", "    local list=\"$1\"\n    local direction=\"$2\"\
    \n    local prev=\"$(echo \"$list\" | head -n 1)\"\n    local current=\"\"\n \
    \   local result=\"true\"\n    for current in $(echo \"$list\" | tail -n +2);\
    \ do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n            if\
    \ (( current < prev )); then\n                result=\"false\"\n             \
    \   break\n            fi\n        else\n            if (( current > prev ));\
    \ then\n                result=\"false\"\n                break\n            fi\n\
    \        fi\n        prev=\"$current\"\n    done\n    echo \"$result\"", "   \
    \ local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i sign=0\n    local -i curr=0\n    local -i prev=0\n    local -i next=0\n \
    \   local -i delta=0\n    local -i delta_prev=0\n    local -i delta_next=0\n \
    \   local -i delta_prev_sign=0\n    local -i delta_next_sign=0\n    local -i delta_sign=0\n\
    \    local -i delta_prev_sign_eq=0\n    local -i delta_next_sign_eq=0\n    local\
    \ -i delta_sign_eq=0\n    local -i delta_prev_eq=0\n    local -i delta_next_eq=0\n\
    \    local -i delta_eq=0\n    local -i delta_prev_eq_sign=0\n    local -i delta_next_eq_sign=0\n\
    \    local -i delta_eq_sign=0\n    local -i delta_prev_eq_sign_eq=0\n    local\
    \ -i delta_next_eq_sign_eq=0\n    local -i delta_eq_sign_eq=0\n    local -i delta_prev_eq_eq=0\n\
    \    local -i delta_next_eq_eq=0\n    local -i delta_eq_eq=0\n    local -i delta_prev_eq_eq_sign=0\n\
    \    local -i delta_next_eq_eq_sign=0\n    local -i delta_eq_eq_sign=0\n    local\
    \ -i delta_prev_eq_eq_sign_eq=0\n    local -i delta_next_eq_eq_sign_eq=0\n   \
    \ local -i delta_eq_eq_sign_eq=0\n    local -i delta_prev_eq_eq_eq=0\n    local\
    \ -i delta_next_eq_eq_eq=0\n    local -i delta_eq_eq_eq=0\n    local -i delta_prev_eq_eq_eq_sign=0\n\
    \    local -i delta_next_eq_eq_eq_sign=0\n    local -i delta", "    local list=\"\
    $1\"\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i prev=${list[0]}\n\
    \    local -i curr\n    local -i delta\n    local -i sign\n\n    if [[ $len -le\
    \ 1 ]]; then\n        echo \"true\"\n        return 0\n    fi\n\n    for ((i=1;\
    \ i<len; i++)); do\n        curr=${list[i]}\n        delta=$((curr - prev))\n\
    \        if [[ $i -eq 1 ]]; then\n            sign=$((delta / abs(delta)))\n \
    \       else\n            if [[ $((delta * sign)) -lt 0 ]]; then\n           \
    \     echo \"false\"\n                return 1\n            fi\n        fi\n \
    \       prev=$curr\n    done\n    echo \"true\"\n    return 0", "    local -a\
    \ list=($@)\n    local -i i\n    local -i n=${#list[@]}\n    local -i incr=1\n\
    \    local -i decr=1\n    for ((i=1; i<n; i++)); do\n        if (( list[i] > list[i-1]\
    \ )); then\n            (( decr = 0 ))\n        elif (( list[i] < list[i-1] ));\
    \ then\n            (( incr = 0 ))\n        fi\n    done\n    (( incr || decr\
    \ )) && echo \"true\" || echo \"false\"", "    local -a list=($@)\n    local -a\
    \ diffs\n    local -i i\n    local -i len=${#list[@]}\n    local -i prev=${list[0]}\n\
    \    local -i curr\n    local -i diff\n    local -i sign=0\n    local -i is_monotonic=1\n\
    \n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n        diff=$((curr\
    \ - prev))\n        diffs+=($diff)\n        prev=$curr\n    done\n\n    for diff\
    \ in ${diffs[@]}; do\n        if [[ $sign -eq 0 ]]; then\n            if [[ $diff\
    \ -gt 0 ]]; then\n                sign=1\n            elif [[ $diff -lt 0 ]];\
    \ then\n                sign=-1\n            fi\n        elif [[ $sign -eq 1 ]];\
    \ then\n            if [[ $diff -lt 0 ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        elif [[ $sign -eq -1 ]]; then\n\
    \            if [[ $diff -gt 0 ]]; then\n                is_monotonic=0\n    \
    \            break\n            fi\n        fi\n    done\n\n    echo $is_monotonic",
  "    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n    local\
    \ -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local -i curr=0\n\
    \    local -i next=0\n    for ((i=1; i<n; i++)); do\n        curr=${list[i]}\n\
    \        next=${list[i+1]}\n        if ((curr > prev)); then\n            incr=1\n\
    \        elif ((curr < prev)); then\n            decr=1\n        fi\n        if\
    \ ((incr && decr)); then\n            echo \"false\"\n            return\n   \
    \     fi\n        prev=$curr\n    done\n    echo \"true\"", "    local -a list=($@)\n\
    \    local -i i\n    local -i len=${#list[@]}\n    local -i prev=${list[0]}\n\
    \    local -i curr\n    local -i incr=0\n    local -i decr=0\n    for ((i=1; i<len;\
    \ i++)); do\n        curr=${list[i]}\n        if ((curr > prev)); then\n     \
    \       incr=1\n        elif ((curr < prev)); then\n            decr=1\n     \
    \   fi\n        prev=$curr\n    done\n    ((incr + decr)) && echo \"false\" ||\
    \ echo \"true\"", "    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n    if (( n\
    \ < 3 )); then\n        result=1\n    else\n        for (( i=0; i<n; i++ )); do\n\
    \            curr=${list[$i]}\n            if (( i == 0 )); then\n           \
    \     prev=$curr\n            elif (( i == n-1 )); then\n                next=$curr\n\
    \            else\n                next=${list[$((i+1))]}\n            fi\n  \
    \          if (( i > 0 )); then\n                diff=$((curr-prev))\n       \
    \         if (( diff > 0 )); then\n                    incr=1\n              \
    \  elif (( diff < 0 )); then\n                    decr=1\n                fi\n\
    \                if (( incr && decr )); then\n                    result=0\n \
    \                   break\n                fi\n            fi\n            prev=$curr\n\
    \        done\n        if (( incr && !decr )); then\n            diff=$((next-curr))\n\
    \            if (( diff > 0 )); then\n                result=1\n            fi\n\
    \        elif (( !incr && decr )); then\n            diff=$((next-curr))\n   \
    \         if (( diff < 0 )); then\n                result=1\n            fi\n\
    \        fi\n    fi\n    echo $result", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local -a array\n    local -i i\n    local -i len\n    local -i prev\n\
    \    local -i curr\n    local -i result\n\n    array=($list)\n    len=${#array[@]}\n\
    \    prev=${array[0]}\n    result=0\n\n    for ((i=1; i<len; i++)); do\n     \
    \   curr=${array[i]}\n        if [[ \"$direction\" == \"increasing\" ]]; then\n\
    \            if ((curr < prev)); then\n                result=1\n            \
    \    break\n            fi\n        else\n            if ((curr > prev)); then\n\
    \                result=1\n                break\n            fi\n        fi\n\
    \        prev=$curr\n    done\n\n    echo $result", "    local list=\"$1\"\n \
    \   local prev=\n    local curr=\n    local increasing=\n    for curr in $list;\
    \ do\n        if [ -n \"$prev\" ]; then\n            if [ \"$prev\" -eq \"$curr\"\
    \ ]; then\n                continue\n            fi\n            if [ -z \"$increasing\"\
    \ ]; then\n                if [ \"$prev\" -lt \"$curr\" ]; then\n            \
    \        increasing=true\n                else\n                    increasing=false\n\
    \                fi\n            else\n                if [ \"$increasing\" =\
    \ \"true\" ]; then\n                    if [ \"$prev\" -gt \"$curr\" ]; then\n\
    \                        echo \"false\"\n                        return\n    \
    \                fi\n                else\n                    if [ \"$prev\"\
    \ -lt \"$curr\" ]; then\n                        echo \"false\"\n            \
    \            return\n                    fi\n                fi\n            fi\n\
    \        fi\n        prev=\"$curr\"\n    done\n    echo \"true\"", "    local\
    \ list=\"$1\"\n    local i=0\n    local prev=0\n    local curr=0\n    local incr=0\n\
    \    local decr=0\n    for i in $list; do\n        curr=$i\n        if [ $i -gt\
    \ $prev ]; then\n            incr=1\n        elif [ $i -lt $prev ]; then\n   \
    \         decr=1\n        fi\n        prev=$i\n    done\n    if [ $incr -eq 1\
    \ ] && [ $decr -eq 0 ]; then\n        echo \"true\"\n    elif [ $incr -eq 0 ]\
    \ && [ $decr -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi", "    local list=\"$1\"\n    local -i i=0\n    local -i j=1\n    local\
    \ -i len=${#list[@]}\n    local -i increasing=0\n    local -i decreasing=0\n \
    \   local -i equal=0\n    local -i result=0\n    local -i prev=0\n    local -i\
    \ curr=0\n    local -i next=0\n    local -i prev_sign=0\n    local -i curr_sign=0\n\
    \    local -i next_sign=0\n    local -i prev_sign_equal=0\n    local -i curr_sign_equal=0\n\
    \    local -i next_sign_equal=0\n    local -i prev_sign_increasing=0\n    local\
    \ -i curr_sign_increasing=0\n    local -i next_sign_increasing=0\n    local -i\
    \ prev_sign_decreasing=0\n    local -i curr_sign_decreasing=0\n    local -i next_sign_decreasing=0\n\
    \    local -i prev_sign_zero=0\n    local -i curr_sign_zero=0\n    local -i next_sign_zero=0\n\
    \    local -i prev_sign_nonzero=0\n    local -i curr_sign_nonzero=0\n    local\
    \ -i next_sign_nonzero=0\n    local -i prev_sign_positive=0\n    local -i curr_sign_positive=0\n\
    \    local -i next_sign_positive=0\n    local -i prev_sign_negative=0\n    local\
    \ -i curr_sign_negative=0\n    local -i next_sign_negative=0\n    local -i prev_sign_nonpositive=0\n\
    \    local -i curr_sign_nonpositive=0\n    local -i next_sign_nonpositive=0\n\
    \    local -i prev_sign_nonnegative=0\n    local -i curr_sign_nonnegative=0\n\
    \    local -i next_sign_nonnegative=0\n    local -i prev_sign_nonzero=0\n    local\
    \ -i curr_sign_nonzero=0\n    local -i next_sign_nonzero=", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local last=0\n    local curr=0\n \
    \   for i in $list; do\n        curr=$i\n        if [ $curr -gt $last ]; then\n\
    \            inc=1\n        elif [ $curr -lt $last ]; then\n            dec=1\n\
    \        fi\n        last=$curr\n    done\n    if [ $inc -eq 1 -a $dec -eq 1 ];\
    \ then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  \
    \  local list=\"$1\"\n    local -a array=($list)\n    local -i len=${#array[@]}\n\
    \    local -i i=0\n    local -i incr=0\n    local -i decr=0\n    local -i res=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i next=0\n    local -i first=0\n\
    \    local -i last=0\n    local -i mid=0\n    local -i mid_prev=0\n    local -i\
    \ mid_next=0\n    local -i mid_prev_prev=0\n    local -i mid_next_next=0\n   \
    \ local -i mid_prev_prev_prev=0\n    local -i mid_next_next_next=0\n    local\
    \ -i mid_prev_prev_prev_prev=0\n    local -i mid_next_next_next_next=0\n    local\
    \ -i mid_prev_prev_prev_prev_prev=0\n    local -i mid_next_next_next_next_next=0\n\
    \    local -i mid_prev_prev_prev_prev_prev_prev=0\n    local -i mid_next_next_next_next_next_next=0\n\
    \    local -i mid_prev_prev_prev_prev_prev_prev_prev=0\n    local -i mid_next_next_next_next_next_next_next=0\n\
    \    local -i mid_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i mid_next_next_next_next_next_next_next_next=0\n\
    \    local -i mid_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ mid_next_next_next_next_next_next_next_next_next=0\n    local -i mid_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i mid_next_next_next_next_next_next_next_next_next_next=0\n    local\
    \ -i mid_prev_prev_prev_prev_prev_prev", "    local -a list=($@)\n    local -i\
    \ i\n    local -i len=${#list[@]}\n    local -i direction=0\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        local -i curr=${list[i]}\n        if\
    \ ((direction == 0)); then\n            if ((curr > prev)); then\n           \
    \     direction=1\n            elif ((curr < prev)); then\n                direction=-1\n\
    \            fi\n        elif ((direction == 1 && curr < prev)) || ((direction\
    \ == -1 && curr > prev)); then\n            echo \"false\"\n            return\n\
    \        fi\n        prev=$curr\n    done\n    echo \"true\"", "    local list=\"\
    $@\"\n    local inc=true\n    local dec=true\n    local last=0\n    for i in $list;\
    \ do\n        if [[ $i -lt $last ]]; then\n            inc=false\n        fi\n\
    \        if [[ $i -gt $last ]]; then\n            dec=false\n        fi\n    \
    \    last=$i\n    done\n    if [[ $inc == true || $dec == true ]]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi"]
stop_tokens:
- "\n}"

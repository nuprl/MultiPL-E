language: sh
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -a binary=()\n  local -a ones=()\n \
    \ local -a dec=()\n  local -a sorted=()\n  local -a sorted_dec=()\n  local -a\
    \ sorted_ones=()\n  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local\
    \ -i eee=0\n  local -i fff=0\n  local -i ggg=0\n \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted_array\n  local -a ones_array\n  local -a zeros_array\n\
    \  local -a sorted_ones_array\n  local -a sorted_zeros_array\n  local -a sorted_array\n\
    \  local -a sorted_array_with_ones\n  local -a sorted_array_with_zeros\n  local\
    \ -a sorted_array_with_zeros_and_ones\n  local -a sorted_array_with_zeros_and_ones_and_negatives\n\
    \  local -a sorted_array_with_negatives\n  local -a sorted_array_with_negatives_and_zeros\n\
    \  local -a sorted_array_with_negatives_and_zeros_and_ones\n  local -a sorted_array_with_negatives_and_ones\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros\n  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives_and_zeros\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives_and_zeros_and_ones\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives_and_zeros_and_ones_and_negatives\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives_and_zeros_and_ones_and_negatives_and_zeros\n\
    \  local -a sorted_array_with_negatives_and_ones_and_zeros_and_zeros_and_negatives_and_zeros_and_ones_and_negatives_and_zeros_and_ones\n\
    \  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  # Write\
    \ your code here\n  echo $1 | tr ' ' '\\n' | sort -n -t '-' -k 2 | tr '\\n' '\
    \ '\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a arr2=()\n    local -a arr3=()\n    local -a arr4=()\n\
    \    local -a arr5=()\n    local -a arr6=()\n    local -a arr7=()\n    local -a\
    \ arr8=()\n    local -a arr9=()\n    local -a arr10=()\n    local -a arr11=()\n\
    \    local -a arr12=()\n    local -a arr13=()\n    local -a arr14=()\n    local\
    \ -a arr15=()\n    local -a arr16=()\n    local -a arr17=()\n    local -a arr18=()\n\
    \    local -a arr19=()\n    local -a arr20=()\n    local -a arr21=()\n    local\
    \ -a arr22=()\n    local -a arr23=()\n    local -a arr24=()\n    local -a arr25=()\n\
    \    local -a arr26=()\n    local -a arr27=()\n    local -a arr28=()\n    local\
    \ -a arr29=()\n    local -a arr30=()\n    local -a arr31=()\n    local -a arr32=()\n\
    \    local -a arr33=()\n    local -a arr34=()\n    local -a arr35=()\n    local\
    \ -a arr36=()\n    local -a arr37=()\n    local -a arr38=()\n    local -a arr39=()\n\
    \    local -a arr40=()\n    local -a arr41=()\n    local -a arr42=()\n    local\
    \ -a arr43=()\n    local -a arr44=()\n    local -a arr45=()\n    local -a arr46=()\n\
    \    local -a arr47=()\n    local -a arr48=()\n    local -a arr49=()\n    local\
    \ -a arr50=()\n    local -a arr51=()\n    local -a arr52=()\n    local -a arr53=()\n\
    \    local -a arr54=()\n    local -a arr55=()\n    local -a arr56=()\n    local\
    \ -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a ones\n  local -a zeros\n  local -a result\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n\
    \  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n\
    \  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n\
    \  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local\
    \ -i n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=()\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n  local\
    \ -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n  local\
    \ -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr57=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local num\n  local num_ones\n  local num_zeros\n\
    \  local tmp\n  for ((i=0; i<${#arr[@]}; i++)); do\n    num=${arr[$i]}\n    num_ones=0\n\
    \    num_zeros=0\n    for ((j=0; j<${#num}; j++)); do\n      if [[ \"${num:$j:1}\"\
    \ == \"1\" ]]; then\n        ((num_ones++))\n      else\n        ((num_zeros++))\n\
    \      fi\n    done\n    if [[ \"$num\" == \"-\"* ]]; then\n      ((num_zeros++))\n\
    \    fi\n    if [[ \"$num_ones\" -gt 0 ]]; then\n      ones+=(\"$num\")\n    else\n\
    \      zeros+=(\"$num\")\n    fi\n  done\n  if [[ \"${#ones[@]}\" -gt 0 ]]; then\n\
    \    for ((i=0; i<${#ones[@]}; i++)); do\n      for ((j=i+1; j<${#ones[@]}; j++));\
    \ do\n        if [[ \"${ones[$i]}\" -gt \"${ones[$j]}\" ]]; then\n          tmp=${ones[$i]}\n\
    \          ones[$i]=${ones[$j]}\n          ones[$j]=$tmp\n        fi\n      done\n\
    \    done\n  fi\n  if [[ \"${#zeros[@]}\" -gt 0 ]]; then\n    for ((i=0; i<${#zeros[@]};\
    \ i++)); do\n      for ((j=i+1; j<${#zeros[@]}; j++)); do\n        if [[ \"${zeros[$i]}\"\
    \ -gt \"${zeros[$j]}\" ]]; then\n          tmp=${zeros[$i]}\n          zeros[$i]=${zeros[$j]}\n\
    \          zeros[$j]=$tmp\n        fi\n      done\n    done\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpm9x4eg3d.sh: line 66: syntax error near unexpected token `}''\n/tmp/tmpm9x4eg3d.sh:
    line 66: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ input=($1)\n  local -a output=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a tmp\n  local -i i\n  local -i j\n\
    \  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local\
    \ -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n\
    \  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local\
    \ -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i\
    \ ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n\
    \  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n \
    \ local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local\
    \ -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i\
    \ aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local\
    \ -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a bin=()\n  local -a ones=()\n\
    \  local -a dec=()\n  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a neg=()\n  local -a pos=()\n  local -a tmp=()\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a res=()\n    local -a ones=()\n    local -a zeros=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ res+=(\"$i\")\n        else\n            local ones_count=$(echo \"obase=2;$i\"\
    \ | bc | tr -cd 1 | wc -c)\n            if [[ $ones_count -eq 0 ]]; then\n   \
    \             zeros+=(\"$i\")\n            else\n                ones+=(\"$i\"\
    )\n            fi\n        fi\n    done\n    if [[ ${#ones[@]} -gt 0 ]]; then\n\
    \        IFS=$'\\n' sorted_ones=($(sort -n <<<\"${ones[*]}\"))\n        unset\
    \ IFS\n        res+=(\"${sorted_ones[@]}\")\n    fi\n    if [[ ${#zeros[@]} -gt\
    \ 0 ]]; then\n        IFS=$'\\n' sorted_zeros=($(sort -n <<<\"${zeros[*]}\"))\n\
    \        unset IFS\n        res+=(\"${sorted_zeros[@]}\")\n    fi\n    echo \"\
    [${res[*]}]\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3kd6gyie.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a bin_arr_sorted=()\n  local -a\
    \ bin_arr_sorted_dec=()\n  local -a res=()\n  local -a res_dec=()\n  local -a\
    \ res_dec_sorted=()\n  local -a res_dec_sorted_bin=()\n  local -a res_dec_sorted_bin_sorted=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec=()\n  local -a res_dec_sorted_bin_sorted_dec_sorted=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin=()\n  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec=()\n  local -a\
    \ res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted=()\n  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin_sorted=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin=()\n\
    \  local -a res_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_sorted_bin_sorted_dec_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local -i ones_count=$(echo \"obase=2;$i\" | bc | grep -o\
    \ 1 | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n        zeros+=(\"$i\")\n\
    \      else\n        ones+=(\"$i\")\n      fi\n    fi\n  done\n  if [[ ${#ones[@]}\
    \ -gt 0 ]]; then\n    ones=($(printf \"%s\\n\" \"${ones[@]}\" | sort -n))\n  \
    \  for i in \"${ones[@]}\"; do\n      result+=(\"$i\")\n    done\n  fi\n  if [[\
    \ ${#zeros[@]} -gt 0 ]]; then\n    zeros=($(printf \"%s\\n\" \"${zeros[@]}\" |\
    \ sort -n))\n    for i in \"${zeros[@]}\"; do\n      result+=(\"$i\")\n    done\n\
    \  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp686vt3z1.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      echo \"Negative numbers not allowed\"\n  \
    \    return 1\n    fi\n    local bin=$(echo \"obase=2; $i\" | bc)\n    local count=$(echo\
    \ \"$bin\" | grep -o 1 | wc -l)\n    if [[ $count -eq 0 ]]; then\n      zeros+=(\"\
    $i\")\n    else\n      ones+=(\"$i\")\n    fi\n  done\n  local -a sorted_ones\n\
    \  local -a sorted_zeros\n  if [[ ${#ones[@]} -gt 0 ]]; then\n    sorted_ones=($(echo\
    \ \"${ones[@]}\" | tr ' ' '\\n' | sort -n -k1.1))\n  fi\n  if [[ ${#zeros[@]}\
    \ -gt 0 ]]; then\n    sorted_zeros=($(echo \"${zeros[@]}\" | tr ' ' '\\n' | sort\
    \ -n -k1.1))\n  fi\n  echo \"[$(printf '\"%s\", ' \"${sorted_ones[@]}\" \"${sorted_zeros[@]}\"\
    )]\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu0q781y9.sh: line 17: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i m\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i max_ones\n\
    \  local -i max_zeros\n  local -i max_ones_index\n  local -i max_zeros_index\n\
    \  local -i max_ones_dec\n  local -i max_zeros_dec\n  local -i num_ones\n  local\
    \ -i num_zeros\n  local -i num_ones_dec\n  local -i num_zeros_dec\n  local -i\
    \ num_ones_index\n  local -i num_zeros_index\n  local -i num_ones_dec_index\n\
    \  local -i num_zeros_dec_index\n  local -i num_ones_dec_index_tmp\n  local -i\
    \ num_zeros_dec_index_tmp\n  local -i num_ones_index_tmp\n  local -i num_zeros_index_tmp\n\
    \  local -i num_ones_dec_tmp\n  local -i num_zeros_dec_tmp\n  local -i num_ones_tmp\n\
    \  local -i num_zeros_tmp\n  local -i num_ones_dec_tmp_tmp\n  local -i num_zeros_dec_tmp_tmp\n\
    \  local -i num_ones_tmp_tmp\n  local -i num_zeros_tmp_tmp\n  local -i num_ones_dec_tmp_tmp_tmp\n\
    \  local -i num_zeros_dec_tmp_tmp_tmp\n  local -i num_ones_tmp_tmp_tmp\n  local\
    \ -i num_zeros_tmp_tmp_tmp\n  local -i num_ones_dec_tmp_tmp_tmp_tmp\n  local -i\
    \ num_zeros_dec_tmp_tmp_tmp_tmp\n  local -i num_ones_tmp_tmp_tmp_tmp\n  local\
    \ -i num_zeros_tmp_tmp_tmp_tmp\n  local -i num_ones_dec_tmp_tmp_tmp_tmp_tmp\n\
    \  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a result=()\n    local -a ones=()\n    local -a\
    \ zeros=()\n    local -a sorted=()\n    local -a sorted_ones=()\n    local -a\
    \ sorted_zeros=()\n    local -a sorted_result=()\n    local -a sorted_result_ones=()\n\
    \    local -a sorted_result_zeros=()\n    local -a sorted_result_zeros_ones=()\n\
    \    local -a sorted_result_zeros_zeros=()\n    local -a sorted_result_ones_ones=()\n\
    \    local -a sorted_result_ones_zeros=()\n    local -a sorted_result_zeros_ones_zeros=()\n\
    \    local -a sorted_result_zeros_zeros_ones=()\n    local -a sorted_result_ones_zeros_ones=()\n\
    \    local -a sorted_result_ones_ones_zeros=()\n    local -a sorted_result_zeros_ones_ones=()\n\
    \    local -a sorted_result_zeros_zeros_zeros=()\n    local -a sorted_result_ones_zeros_zeros=()\n\
    \    local -a sorted_result_ones_ones_ones=()\n    local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \    local -a sorted_result_zeros_zeros_ones_zeros=()\n    local -a sorted_result_zeros_zeros_zeros_ones=()\n\
    \    local -a sorted_result_ones_zeros_ones_zeros=()\n    local -a sorted_result_ones_zeros_zeros_ones=()\n\
    \    local -a sorted_result_ones_ones_zeros_zeros=()\n    local -a sorted_result_ones_ones_ones_zeros=()\n\
    \    local -a sorted_result_ones_ones_ones_ones=()\n    local -a sorted_result_zeros_ones_zeros_ones_zeros=()\n\
    \    local -a sorted_result_zeros_ones_ones_zeros_zeros=()\n    local -a sorted\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a zeros_sorted=()\n  local -a ones_sorted=()\n  local -a res_sorted=()\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n \n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local ones_count=$(echo \"obase=2;$i\" | bc | grep -o 1\
    \ | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n        zeros+=(\"$i\")\n\
    \      else\n        ones+=(\"$i\")\n      fi\n    fi\n  done\n  IFS=$'\\n' sorted_ones=($(sort\
    \ -n <<<\"${ones[*]}\"))\n  IFS=$'\\n' sorted_zeros=($(sort -n <<<\"${zeros[*]}\"\
    ))\n  result+=(\"${sorted_zeros[@]}\")\n  result+=(\"${sorted_ones[@]}\")\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsjghl1xn.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a res=()\n    local -a ones=()\n    local -a zeros=()\n\
    \    local -a tmp=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a bin_arr=()\n  local -a ones_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_bin_arr=()\n\
    \  local -a sorted_new_arr=()\n  local -a sorted_arr_ones=()\n  local -a sorted_arr_bin=()\n\
    \  local -a sorted_arr_new=()\n  local -a sorted_arr_ones_bin=()\n  local -a sorted_arr_ones_new=()\n\
    \  local -a sorted_arr_bin_new=()\n  local -a sorted_arr_ones_bin_new=()\n  local\
    \ -a sorted_arr_ones_bin_new_arr=()\n  local -a sorted_arr_ones_bin_new_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr=()\n  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr=()\n  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr_arr=()\n  local -a\
    \ sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr_arr_arr=()\n  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_ones_bin_new_arr_arr_arr_arr_\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local m\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i w\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i s\n  local -i r\n  local -i q\n  local -i p\n  local -i o\n  local -i l\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i max\n  local -i min\n  local -i\
    \ len\n  local -i len1\n  local -i len2\n  local -i len3\n  local -i len4\n  local\
    \ -i len5\n  local -i len6\n  local -i len7\n  local -i len8\n  local -i len9\n\
    \  local -i len10\n  local -i len11\n  local -i len12\n  local -i len13\n  local\
    \ -i len14\n  local -i len15\n  local -i len16\n  local -i len17\n  local -i len18\n\
    \  local -i len19\n  local -i len20\n  local -i len21\n  local -i len22\n  local\
    \ -i len23\n  local -i len24\n  local -i len25\n  local -i len26\n  local -i len27\n\
    \  local -i len28\n  local -i len29\n  local -i len30\n  local -i len31\n  local\
    \ -i len32\n  local -i len33\n  local -i len34\n  local -i len35\n  local -i len36\n\
    \  local -i len37\n  local -i len38\n  local -i len39\n  local -i len40\n  local\
    \ -i len41\n  local -i len42\n  local -i len43\n  local -i len44\n  local -i len45\n\
    \  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local bin=$(echo \"obase=2; $i\" | bc)\n      local count=$(echo\
    \ \"$bin\" | grep -o 1 | wc -l)\n      if [[ $count -eq 0 ]]; then\n        zeros+=(\"\
    $i\")\n      else\n        ones+=(\"$i\")\n      fi\n    fi\n  done\n  local -a\
    \ sorted_ones=()\n  local -a sorted_zeros=()\n  for i in \"${ones[@]}\"; do\n\
    \    local bin=$(echo \"obase=2; $i\" | bc)\n    local count=$(echo \"$bin\" |\
    \ grep -o 1 | wc -l)\n    sorted_ones+=(\"$count $i\")\n  done\n  for i in \"\
    ${zeros[@]}\"; do\n    local bin=$(echo \"obase=2; $i\" | bc)\n    local count=$(echo\
    \ \"$bin\" | grep -o 1 | wc -l)\n    sorted_zeros+=(\"$count $i\")\n  done\n \
    \ IFS=$'\\n' sorted_ones=($(sort -n <<<\"${sorted_ones[*]}\"))\n  IFS=$'\\n' sorted_zeros=($(sort\
    \ -n <<<\"${sorted_zeros[*]}\"))\n  for i in \"${sorted_ones[@]}\"; do\n    result+=(\"\
    ${i##* }\")\n  done\n  for i in \"${sorted_zeros[@]}\"; do\n    result+=(\"${i##*\
    \ }\")\n  done\n  echo \"[${result[*]}]\"\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn3icct59.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n(standard_in) 1: syntax
    error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  for i in ${array[@]}; do\n    if [[ $i -lt 0 ]]; then\n\
    \      result+=($i)\n    else\n      local ones_count=$(echo \"obase=2;$i\" |\
    \ bc | grep -o 1 | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n        zeros+=($i)\n\
    \      else\n        ones+=($i)\n      fi\n    fi\n  done\n  if [[ ${#ones[@]}\
    \ -gt 0 ]]; then\n    temp=($(echo ${ones[@]} | tr ' ' '\\n' | sort -n))\n   \
    \ for i in ${temp[@]}; do\n      result+=($i)\n    done\n  fi\n  if [[ ${#zeros[@]}\
    \ -gt 0 ]]; then\n    temp=($(echo ${zeros[@]} | tr ' ' '\\n' | sort -n))\n  \
    \  for i in ${temp[@]}; do\n      result+=($i)\n    done\n  fi\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n\
    \  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n\
    \  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n\
    \  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n\
    \  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n\
    \  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ret\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n\
    \  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n \
    \ local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local\
    \ -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i\
    \ rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n\
    \  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n\
    \  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n\
    \  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n\
    \  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n\
    \  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n\
    \  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n\
    \  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local c\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    n=${arr[$i]}\n    c=0\n    while ((n > 0)); do\n      ((n & 1)) && ((c++))\n\
    \      ((n >>= 1))\n    done\n    if ((c == 0)); then\n      zeros+=(\"${arr[$i]}\"\
    )\n    else\n      ones+=(\"${arr[$i]}\")\n    fi\n  done\n  for ((i=0; i<${#ones[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#ones[@]}; j++)); do\n      if ((ones[$i] >\
    \ ones[$j])); then\n        n=${ones[$i]}\n        ones[$i]=${ones[$j]}\n    \
    \    ones[$j]=$n\n      fi\n    done\n  done\n  for ((i=0; i<${#zeros[@]}; i++));\
    \ do\n    for ((j=i+1; j<${#zeros[@]}; j++)); do\n      if ((zeros[$i] > zeros[$j]));\
    \ then\n        n=${zeros[$i]}\n        zeros[$i]=${zeros[$j]}\n        zeros[$j]=$n\n\
    \      fi\n    done\n  done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    for ((j=0;\
    \ j<${#zeros[@]}; j++)); do\n      if ((ones[$i] < zeros[$j])); then\n       \
    \ result+=(\"${ones[$i]}\")\n        unset ones[$i]\n        break\n      fi\n\
    \    done\n  done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    result+=(\"${ones[$i]}\"\
    )\n  done\n  for ((i=0; i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp5zeqtir3.sh: line 65: unexpected EOF while looking for matching
    `)''\n/tmp/tmp5zeqtir3.sh: line 85: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=()\n    local -a arr_sorted=()\n    local -a arr_sorted_dec=()\n    local\
    \ -a arr_sorted_bin=()\n    local -a arr_sorted_bin_dec=()\n    local -a arr_sorted_bin_dec_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final=()\n    local -a arr_sorted_bin_dec_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final=()\n    local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \   local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local num\n  local ones_count\n  local\
    \ zeros_count\n  for ((i=0; i<${#arr[@]}; i++)); do\n    num=${arr[$i]}\n    if\
    \ [[ $num -lt 0 ]]; then\n      ones[${#ones[@]}]=$num\n    else\n      zeros[${#zeros[@]}]=$num\n\
    \    fi\n  done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    for ((j=i+1; j<${#ones[@]};\
    \ j++)); do\n      ones_count=$(echo \"obase=2; ${ones[$i]}\" | bc | grep -o 1\
    \ | wc -l)\n      zeros_count=$(echo \"obase=2; ${ones[$j]}\" | bc | grep -o 1\
    \ | wc -l)\n      if [[ $ones_count -gt $zeros_count ]]; then\n        n=${ones[$i]}\n\
    \        ones[$i]=${ones[$j]}\n        ones[$j]=$n\n      elif [[ $ones_count\
    \ -eq $zeros_count ]]; then\n        if [[ ${ones[$i]} -gt ${ones[$j]} ]]; then\n\
    \          n=${ones[$i]}\n          ones[$i]=${ones[$j]}\n          ones[$j]=$n\n\
    \        fi\n      fi\n    done\n  done\n  for ((i=0; i<${#zeros[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#zeros[@]}; j++)); do\n      ones_count=$(echo \"obase=2;\
    \ ${zeros[$i]}\" | bc | grep -o 1 | wc -l)\n      zeros_count=$(echo \"obase=2;\
    \ ${zeros[$j]}\" | bc | grep -o 1 | wc -l)\n      if [[ $\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpgcbuh9k2.sh: line 53: unexpected token `newline'', conditional
    binary operator expected\n/tmp/tmpgcbuh9k2.sh: line 53: syntax error near `$''\n/tmp/tmpgcbuh9k2.sh:
    line 53: `      if [[ $''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a neg=()\n  local -a pos=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local\
    \ -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n\
    \  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i\
    \ bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n \
    \ local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local array=(\"\
    $@\")\n  local -a result=()\n  for i in \"${array[@]}\"; do\n    result+=(\"$(printf\
    \ '%d %s\\n' \"$(echo \"obase=2; $i\" | bc)\" \"$i\")\")\n  done\n  echo \"${result[@]}\"\
    \ | sort -n | cut -d' ' -f2 | sed 's/^/-/' | tr '\\n' ' ' | sed 's/ $//'\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local -i num\n  local -i count\n  local\
    \ -i max_count\n  local -i max_num\n  local -i max_index\n  local -i max_index_ones\n\
    \  local -i max_index_zeros\n  local -i ones_len\n  local -i zeros_len\n  local\
    \ -i result_len\n  local -i arr_len=${#arr[@]}\n  local -i arr_len_minus_one=$((arr_len\
    \ - 1))\n  for ((i=0; i<arr_len; i++)); do\n    num=${arr[i]}\n    if ((num <\
    \ 0)); then\n      zeros+=(\"$num\")\n    else\n      ones+=(\"$num\")\n    fi\n\
    \  done\n  ones_len=${#ones[@]}\n  zeros_len=${#zeros[@]}\n  result_len=$((ones_len\
    \ + zeros_len))\n  for ((i=0; i<ones_len; i++)); do\n    max_count=0\n    max_num=0\n\
    \    max_index=0\n    for ((j=0; j<ones_len; j++)); do\n      num=${ones[j]}\n\
    \      count=0\n      for ((k=0; k<32; k++)); do\n        ((num & 1)) && ((count++))\n\
    \        ((num >>= 1))\n      done\n      if ((count > max_count)); then\n   \
    \     max_count=$count\n        max_num=$num\n        max_index=$j\n      elif\
    \ ((count == max_count)); then\n        if ((num > max_num)); then\n         \
    \ max_num=$num\n          max_index=$j\n        fi\n      fi\n    done\n    result+=(\"\
    ${ones[max_index]}\")\n    unset ones[max_index]\n  done\n  for ((i=0; i<zeros_len;\
    \ i++)); do\n    max_count=0\n    max_num\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpwmcjk2vm.sh: line 72: syntax error near unexpected token `}''\n/tmp/tmpwmcjk2vm.sh:
    line 72: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_ones=()\n  local -a arr_sorted_zeros=()\n\
    \  local -a arr_sorted_neg=()\n  local -a arr_sorted_pos=()\n  local -a arr_sorted_neg_sorted=()\n\
    \  local -a arr_sorted_pos_sorted=()\n  local -a arr_sorted_ones_sorted=()\n \
    \ local -a arr_sorted_zeros_sorted=()\n  local -a arr_sorted_neg_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a zeros_dec=()\n  local -a ones_dec=()\n  local -a sorted_arr=()\n \
    \ local -a sorted_zeros=()\n  local -a sorted_ones=()\n  local -a sorted_zeros_dec=()\n\
    \  local -a sorted_ones_dec=()\n  local -a sorted_arr_dec=()\n  local -a sorted_arr_dec_ones=()\n\
    \  local -a sorted_arr_dec_zeros=()\n  local -a sorted_arr_dec_ones_dec=()\n \
    \ local -a sorted_arr_dec_zeros_dec=()\n  local -a sorted_arr_dec_zeros_dec_ones=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec=()\n  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec=()\n  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec=()\n  local -a\
    \ sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec_zeros=()\n  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec_zeros_dec=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec_zeros_dec_ones=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec_zeros_dec_ones_dec=()\n\
    \  local -a sorted_arr_dec_zeros_dec_ones_dec_zeros_dec_ones_dec_zeros\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local m\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_sorted_ones=()\n  local -a arr_sorted_zeros=()\n  local -a arr_sorted_zeros_dec=()\n\
    \  local -a arr_sorted_ones_dec=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_dec_ones=()\n\
    \  local -a arr_sorted_dec_zeros=()\n  local -a arr_sorted_dec_zeros_ones=()\n\
    \  local -a arr_sorted_dec_ones_zeros=()\n  local -a arr_sorted_dec_zeros_ones_zeros=()\n\
    \  local -a arr_sorted_dec_zeros_zeros=()\n  local -a arr_sorted_dec_ones_ones=()\n\
    \  local -a arr_sorted_dec_zeros_ones_ones=()\n  local -a arr_sorted_dec_ones_zeros_ones=()\n\
    \  local -a arr_sorted_dec_ones_ones_zeros=()\n  local -a arr_sorted_dec_ones_zeros_zeros=()\n\
    \  local -a arr_sorted_dec_zeros_zeros_ones=()\n  local -a arr_sorted_dec_zeros_ones_zeros=()\n\
    \  local -a arr_sorted_dec_ones_zeros_zeros=()\n  local -a arr_sorted_dec_zeros_zeros_zeros=()\n\
    \  local -a arr_sorted_dec_ones_ones_ones=()\n  local -a arr_sorted_dec_zeros_ones_ones_ones=()\n\
    \  local -a arr_sorted_dec_ones_zeros_ones_ones=()\n  local -a arr_sorted_dec_ones_ones_zeros_ones=()\n\
    \  local -a arr_sorted_dec_ones_ones_ones_zeros=()\n\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local bin=$(echo \"obase=2;$i\" | bc)\n      if [[ $bin\
    \ =~ 1 ]]; then\n        ones+=(\"$i\")\n      else\n        zeros+=(\"$i\")\n\
    \      fi\n    fi\n  done\n  local -a sorted_ones=($(printf \"%s\\n\" \"${ones[@]}\"\
    \ | sort -n))\n  local -a sorted_zeros=($(printf \"%s\\n\" \"${zeros[@]}\" | sort\
    \ -n))\n  result+=(\"${sorted_ones[@]}\")\n  result+=(\"${sorted_zeros[@]}\")\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmgzvht5y.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local\
    \ -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n\
    \  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i\
    \ bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n \
    \ local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted_array=()\n  local -a ones_array=()\n  local -a zeros_array=()\n\
    \  local -a sorted_ones_array=()\n  local -a sorted_zeros_array=()\n  local -a\
    \ sorted_array=()\n  local -a final_array=()\n  local -a final_array_string=()\n\
    \  local -a final_array_string_sorted=()\n  local -a final_array_string_sorted_final=()\n\
    \  local -a final_array_string_sorted_final_final=()\n  local -a final_array_string_sorted_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final=()\n  local -a final_array_string_sorted_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_string_sorted_final_final_final_final_final_\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a tmp=()\n  local -a ones=()\n  local\
    \ -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -i i=0\n  local -i\
    \ j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local\
    \ -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local\
    \ -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n\
    \  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n \
    \ local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i\
    \ jjj=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_dec_ones=()\n  local -a arr_sorted_dec_ones_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_ones_final=()\n  local\
    \ -a arr_sorted_dec_final=()\n  local -a arr_sorted_dec_ones_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_final=()\n  local -a arr_final_sorted=()\n\
    \  local -a arr_final_sorted_neg=()\n  local -a arr_final_sorted_pos=()\n  local\
    \ -a arr_final_sorted_neg_ones=()\n  local -a arr_final_sorted_neg_zeros=()\n\
    \  local -a arr_final_sorted_pos_ones=()\n  local -a arr_final_sorted_pos_zeros=()\n\
    \  local -a arr_final_sorted_neg_ones_sorted=()\n  local -a arr_final_sorted_neg_zeros_sorted=()\n\
    \  local -a arr_final_sorted_pos_ones_sorted=()\n  local -a arr_final_sorted_pos_zeros_sorted=()\n\
    \  local -a arr_final_sorted_neg_ones_sorted_dec=()\n  local -a arr_final_sorted_neg_zeros_sorted_dec=()\n\
    \  local -a arr_final_sorted_pos_ones_sorted_dec=()\n  local -a arr_final_sorted_pos_zeros_sorted_dec=()\n\
    \  local -a arr_final_sorted_neg_ones_sorted_dec_final=()\n  local -a arr_final_sorted_neg_zeros_sorted_dec_final=()\n\
    \  local -a arr_final_sorted_pos_ones_sorted_dec_final=()\n  local -a arr_final_sorted_pos_zeros_sorted_dec_final=()\n\
    \  local -a arr_final_sorted_neg_ones_sorted_dec_final_final=()\n  local -\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a new_array=()\n  local -a ones_array=()\n  local -a zeros_array=()\n\
    \  local -a sorted_array=()\n  local -a sorted_ones_array=()\n  local -a sorted_zeros_array=()\n\
    \  local -a sorted_new_array=()\n  local -a sorted_array=()\n  local -a sorted_array_final=()\n\
    \  local -a sorted_array_final_final=()\n  local -a sorted_array_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final=()\n  local -a sorted_array_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final=()\n  local -a sorted_array_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_final_final\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a twos=()\n  local -a threes=()\n  local -a fours=()\n  local -a fives=()\n\
    \  local -a sixes=()\n  local -a sevens=()\n  local -a eights=()\n  local -a nines=()\n\
    \  local -a tens=()\n  local -a elevens=()\n  local -a twelves=()\n  local -a\
    \ thirteens=()\n  local -a fourteens=()\n  local -a fifteens=()\n  local -a sixteens=()\n\
    \  local -a seventeens=()\n  local -a eighteen=()\n  local -a nineteen=()\n  local\
    \ -a twenty=()\n  local -a twentyone=()\n  local -a twentytwo=()\n  local -a twentythree=()\n\
    \  local -a twentyfour=()\n  local -a twentyfive=()\n  local -a twentysix=()\n\
    \  local -a twentyseven=()\n  local -a twentyeight=()\n  local -a twentynine=()\n\
    \  local -a thirty=()\n  local -a thirtyone=()\n  local -a thirtytwo=()\n  local\
    \ -a thirtythree=()\n  local -a thirtyfour=()\n  local -a thirtyfive=()\n  local\
    \ -a thirtysix=()\n  local -a thirtyseven=()\n  local -a thirtyeight=()\n  local\
    \ -a thirtynine=()\n  local -a forty=()\n  local -a fortyone=()\n  local -a fortytwo=()\n\
    \  local -a fortythree=()\n  local -a fortyfour=()\n  local -a fortyfive=()\n\
    \  local -a fortysix=()\n  local -a fortyseven=()\n  local -a fortyeight=()\n\
    \  local -a fortynine=()\n  local -a fifty=()\n  local -a fiftyone=()\n  local\
    \ -a fiftytwo=()\n  local -a fiftythree=()\n  local -a fiftyfour\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i n=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n\
    \  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n\
    \  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n  local -i qqq=\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_array=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local m\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[$i]}\
    \ -ge 0 ]]; then\n      ones[$i]=$(echo \"obase=2;${arr[$i]}\" | bc | grep -o\
    \ 1 | wc -l)\n    else\n      ones[$i]=$(echo \"obase=2;$((-1 * ${arr[$i]}))\"\
    \ | bc | grep -o 1 | wc -l)\n    fi\n  done\n  for ((j=0; j<${#arr[@]}; j++));\
    \ do\n    if [[ ${arr[$j]} -ge 0 ]]; then\n      zeros[$j]=$(echo \"obase=2;${arr[$j]}\"\
    \ | bc | grep -o 0 | wc -l)\n    else\n      zeros[$j]=$(echo \"obase=2;$((-1\
    \ * ${arr[$j]}))\" | bc | grep -o 0 | wc -l)\n    fi\n  done\n  for ((k=0; k<${#arr[@]};\
    \ k++)); do\n    if [[ ${arr[$k]} -ge 0 ]]; then\n      result[$k]=$(echo \"obase=2;${arr[$k]}\"\
    \ | bc)\n    else\n      result[$k]=$(echo \"obase=2;$((-1 * ${arr[$k]}))\" |\
    \ bc)\n    fi\n  done\n  for ((n=0; n<${#arr[@]}; n++)); do\n    for ((m=0; m<${#arr[@]};\
    \ m++)); do\n      if [[ ${ones[$n]} -lt ${ones[$m]}\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpgn06t5j_.sh: line 57: syntax error in conditional expression\n/tmp/tmpgn06t5j_.sh:
    line 58: syntax error near `}''\n/tmp/tmpgn06t5j_.sh: line 58: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n \
    \ local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local\
    \ aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n\
    \  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local\
    \ au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n\
    \  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local\
    \ bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n\
    \  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local\
    \ bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n\
    \  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local\
    \ cb=0\n  local cc=0\n  local cd=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n\
    \  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n\
    \  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n\
    \  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n\
    \  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n\
    \  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a ones\n  local -a zeros\n  local -a result\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  for i in \"${array[@]}\"; do\n    result+=(\"\
    $(printf \"%s\\t%s\\n\" \"$(printf \"%d\" \"$i\" | grep -o 1 | wc -l)\" \"$i\"\
    )\")\n  done\n  echo \"${result[@]}\" | sort -n | cut -f2\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local -a sorted=()\n  local -a sorted_dec=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_res=()\n  local -a sorted_bin=()\n  local -a sorted_arr=()\n\
    \  local -a sorted_dec_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_res_arr=()\n\
    \  local -a sorted_bin_arr=()\n  local -a sorted_arr_arr=()\n  local -a sorted_dec_arr_arr=()\n\
    \  local -a sorted_ones_arr_arr=()\n  local -a sorted_res_arr_arr=()\n  local\
    \ -a sorted_bin_arr_arr=()\n  local -a sorted_arr_arr_arr=()\n  local -a sorted_dec_arr_arr_arr=()\n\
    \  local -a sorted_ones_arr_arr_arr=()\n  local -a sorted_res_arr_arr_arr=()\n\
    \  local -a sorted_bin_arr_arr_arr=()\n  local -a sorted_arr_arr_arr_arr=()\n\
    \  local -a sorted_dec_arr_arr_arr_arr=()\n  local -a sorted_ones_arr_arr_arr_arr=()\n\
    \  local -a sorted_res_arr_arr_arr_arr=()\n  local -a sorted_bin_arr_arr_arr_arr=()\n\
    \  local -a sorted_arr_arr_arr_arr_arr=()\n  local -a sorted_dec_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_ones_arr_arr_arr_arr_arr=()\n  local -a sorted_res_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_bin_arr_arr_arr_arr_arr=()\n  local -a sorted_arr_arr_arr_arr_arr_arr=()\n\
    \  local -a sorted_dec_arr_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a ones\n  local -a zeros\n  local -a sorted\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n \
    \ local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i\
    \ ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n \
    \ local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i\
    \ ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n \
    \ local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i\
    \ ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n \
    \ local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i\
    \ bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n \
    \ local -i bm=0\n  local -i bn=0\n  local -\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a res_arr=()\n  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n\
    \  local -a sorted_zeros_arr=()\n  local -a sorted_res_arr=()\n  local -a sorted_new_arr=()\n\
    \  local -a sorted_new_arr_2=()\n  local -a sorted_new_arr_3=()\n  local -a sorted_new_arr_4=()\n\
    \  local -a sorted_new_arr_5=()\n  local -a sorted_new_arr_6=()\n  local -a sorted_new_arr_7=()\n\
    \  local -a sorted_new_arr_8=()\n  local -a sorted_new_arr_9=()\n  local -a sorted_new_arr_10=()\n\
    \  local -a sorted_new_arr_11=()\n  local -a sorted_new_arr_12=()\n  local -a\
    \ sorted_new_arr_13=()\n  local -a sorted_new_arr_14=()\n  local -a sorted_new_arr_15=()\n\
    \  local -a sorted_new_arr_16=()\n  local -a sorted_new_arr_17=()\n  local -a\
    \ sorted_new_arr_18=()\n  local -a sorted_new_arr_19=()\n  local -a sorted_new_arr_20=()\n\
    \  local -a sorted_new_arr_21=()\n  local -a sorted_new_arr_22=()\n  local -a\
    \ sorted_new_arr_23=()\n  local -a sorted_new_arr_24=()\n  local -a sorted_new_arr_25=()\n\
    \  local -a sorted_new_arr_26=()\n  local -a sorted_new_arr_27=()\n  local -a\
    \ sorted_new_arr_28=()\n  local -a sorted_new_arr_29=()\n  local -a sorted_new_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n  local\
    \ -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n  local\
    \ -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr57\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a result=()\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n\
    \  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n \
    \ local xxx=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local n\n  local m\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local l\n  local tmp\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    sorted[i]=$(echo \"obase=2;${arr[i]}\"\
    \ | bc)\n  done\n  for ((j=0; j<${#sorted[@]}; j++)); do\n    ones[j]=$(echo \"\
    ${sorted[j]}\" | grep -o 1 | wc -l)\n  done\n  for ((k=0; k<${#sorted[@]}; k++));\
    \ do\n    zeros[k]=$(echo \"${sorted[k]}\" | grep -o 0 | wc -l)\n  done\n  for\
    \ ((n=0; n<${#sorted[@]}; n++)); do\n    for ((m=0; m<${#sorted[@]}; m++)); do\n\
    \      if [[ ${ones[n]} -lt ${ones[m]} ]]; then\n        tmp=${ones[n]}\n    \
    \    ones[n]=${ones[m]}\n        ones[m]=$tmp\n        tmp=${zeros[n]}\n     \
    \   zeros[n]=${zeros[m]}\n        zeros[m]=$tmp\n        tmp=${sorted[n]}\n  \
    \      sorted[n]=${sorted[m]}\n        sorted[m]=$tmp\n        tmp=${arr[n]}\n\
    \        arr[n]=${arr[m]}\n        arr[m]=$tmp\n      fi\n    done\n  done\n \
    \ for ((o=0; o<${#sorted[@]}; o++)); do\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmplv6e1o7t.sh: line 74: syntax error near unexpected token `}''\n/tmp/tmplv6e1o7t.sh:
    line 74: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a temp_arr=()\n  local -a temp_arr2=()\n  local -a temp_arr3=()\n  local\
    \ -a temp_arr4=()\n  local -a temp_arr5=()\n  local -a temp_arr6=()\n  local -a\
    \ temp_arr7=()\n  local -a temp_arr8=()\n  local -a temp_arr9=()\n  local -a temp_arr10=()\n\
    \  local -a temp_arr11=()\n  local -a temp_arr12=()\n  local -a temp_arr13=()\n\
    \  local -a temp_arr14=()\n  local -a temp_arr15=()\n  local -a temp_arr16=()\n\
    \  local -a temp_arr17=()\n  local -a temp_arr18=()\n  local -a temp_arr19=()\n\
    \  local -a temp_arr20=()\n  local -a temp_arr21=()\n  local -a temp_arr22=()\n\
    \  local -a temp_arr23=()\n  local -a temp_arr24=()\n  local -a temp_arr25=()\n\
    \  local -a temp_arr26=()\n  local -a temp_arr27=()\n  local -a temp_arr28=()\n\
    \  local -a temp_arr29=()\n  local -a temp_arr30=()\n  local -a temp_arr31=()\n\
    \  local -a temp_arr32=()\n  local -a temp_arr33=()\n  local -a temp_arr34=()\n\
    \  local -a temp_arr35=()\n  local -a temp_arr36=()\n  local -a temp_arr37=()\n\
    \  local -a temp_arr38=()\n  local -a temp_arr39=()\n  local -a temp_arr40=()\n\
    \  local -a temp_arr41=()\n  local -a temp_arr42=()\n  local -a temp_arr43\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a zeros_sorted=()\n  local -a ones_sorted=()\n  local -a result=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted=()\n  local -a result=()\n  local -a ones=()\n \
    \ local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a sorted_neg=()\n\
    \  local -a sorted_pos=()\n  local -a sorted_neg_ones=()\n  local -a sorted_pos_ones=()\n\
    \  local -a sorted_neg_zeros=()\n  local -a sorted_pos_zeros=()\n  local -a sorted_neg_ones_dec=()\n\
    \  local -a sorted_pos_ones_dec=()\n  local -a sorted_neg_zeros_dec=()\n  local\
    \ -a sorted_pos_zeros_dec=()\n  local -a sorted_neg_ones_dec_final=()\n  local\
    \ -a sorted_pos_ones_dec_final=()\n  local -a sorted_neg_zeros_dec_final=()\n\
    \  local -a sorted_pos_zeros_dec_final=()\n  local -a sorted_neg_ones_final=()\n\
    \  local -a sorted_pos_ones_final=()\n  local -a sorted_neg_zeros_final=()\n \
    \ local -a sorted_pos_zeros_final=()\n  local -a sorted_neg_final=()\n  local\
    \ -a sorted_pos_final=()\n  local -a sorted_final=()\n  local -a sorted_final_final=()\n\
    \  local -a sorted_final_final_final=()\n  local -a sorted_final_final_final_final=()\n\
    \  local -a sorted_final_final_final_final_final=()\n  local -a sorted_final_final_final_final_final_final=()\n\
    \  local -a sorted_final_final_final_final_final_final_final=()\n  local -a sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_final_final_final_final_final_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a bin_array=()\n  local -a bin_sorted=()\n\
    \  local -a bin_sorted_dec=()\n  local -a bin_sorted_dec_sorted=()\n  local -a\
    \ bin_sorted_dec_sorted_str=()\n  local -a bin_sorted_dec_sorted_str_sorted=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final=()\n  local -a bin_sorted_dec_sorted_str_sorted_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final=()\n  local -a\
    \ bin_sorted_dec_sorted_str_sorted_final_final_final_final=()\n  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 0
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  for i in $@; do\n    array+=(\"$i\")\n  done\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#array[@]}; j++)); do\n      local a=$(echo\
    \ \"obase=2;${array[i]}\" | bc)\n      local b=$(echo \"obase=2;${array[j]}\"\
    \ | bc)\n      if [[ $(echo \"$a\" | grep -o 1 | wc -l) -gt $(echo \"$b\" | grep\
    \ -o 1 | wc -l) ]]; then\n        local tmp=${array[i]}\n        array[i]=${array[j]}\n\
    \        array[j]=$tmp\n      elif [[ $(echo \"$a\" | grep -o 1 | wc -l) -eq $(echo\
    \ \"$b\" | grep -o 1 | wc -l) ]]; then\n        if [[ ${array[i]} -gt ${array[j]}\
    \ ]]; then\n          local tmp=${array[i]}\n          array[i]=${array[j]}\n\
    \          array[j]=$tmp\n        fi\n      fi\n    done\n  done\n  echo \"${array[@]}\"\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359185
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_sorted_ones=()\n  local -a arr_sorted_zeros=()\n  local -a arr_sorted_zeros_dec=()\n\
    \  local -a arr_sorted_ones_dec=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_dec_ones=()\n\
    \  local -a arr_sorted_dec_zeros=()\n  local -a arr_sorted_dec_zeros_ones=()\n\
    \  local -a arr_sorted_dec_ones_zeros=()\n  local -a arr_sorted_dec_zeros_ones_dec=()\n\
    \  local -a arr_sorted_dec_ones_zeros_dec=()\n  local -a arr_sorted_dec_zeros_ones_dec_zeros=()\n\
    \  local -a arr_sorted_dec_zeros_ones_dec_ones=()\n  local -a arr_sorted_dec_ones_zeros_dec_zeros=()\n\
    \  local -a arr_sorted_dec_ones_zeros_dec_ones=()\n  local -a arr_sorted_dec_zeros_ones_dec_zeros_ones=()\n\
    \  local -a arr_sorted_dec_zeros_ones_dec_zeros_ones_dec=()\n  local -a arr_sorted_dec_zeros_ones_dec_ones_zeros=()\n\
    \  local -a arr_sorted_dec_zeros_ones_dec_ones_zeros_dec=()\n  local -a arr_sorted_dec_ones_zeros_dec_zeros_ones=()\n\
    \  local -a arr_sorted_dec_ones_zeros_dec_zeros_ones_dec=()\n  local -a arr_sorted_dec_ones_zeros_dec_ones_zeros=()\n\
    \  local -a arr_sorted_dec_ones_zeros_dec_ones\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a array=(\"$@\")\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i\
    \ af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i\
    \ aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i\
    \ an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i\
    \ ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i\
    \ av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i\
    \ az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i\
    \ bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i\
    \ bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i\
    \ bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i\
    \ b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a sorted\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local\
    \ -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i\
    \ jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n\
    \  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n \
    \ local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local\
    \ -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local o\n  local z\n  local x\n  local\
    \ y\n  local -i count\n  local -i max_ones\n  local -i max_zeros\n  local -i max_ones_index\n\
    \  local -i max_zeros_index\n  local -i max_ones_dec\n  local -i max_zeros_dec\n\
    \  local -i max_ones_dec_index\n  local -i max_zeros_dec_index\n  local -i max_ones_dec_index_tmp\n\
    \  local -i max_zeros_dec_index_tmp\n  local -i max_ones_index_tmp\n  local -i\
    \ max_zeros_index_tmp\n  local -i max_ones_tmp\n  local -i max_zeros_tmp\n  local\
    \ -i max_ones_dec_tmp\n  local -i max_zeros_dec_tmp\n  local -i max_ones_dec_tmp_tmp\n\
    \  local -i max_zeros_dec_tmp_tmp\n  local -i max_ones_tmp_tmp\n  local -i max_zeros_tmp_tmp\n\
    \  local -i max_ones_dec_index_tmp_tmp\n  local -i max_zeros_dec_index_tmp_tmp\n\
    \  local -i max_ones_index_tmp_tmp\n  local -i max_zeros_index_tmp_tmp\n  local\
    \ -i max_ones_dec_index_tmp_tmp_tmp\n  local -i max_zeros_dec_index_tmp_tmp_tmp\n\
    \  local -i max_ones_index_tmp_tmp_tmp\n  local -i max_zeros_index_tmp_tmp_tmp\n\
    \  local -i max_ones_dec_index_tmp_tmp_tmp_tmp\n  local -i max_zeros_dec_index_tmp_tmp_tmp_tmp\n\
    \  local -i max_ones_index_tmp_tmp_tmp_tmp\n  local -i max_zeros_index_tmp_tmp\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      sorted+=(\"$i\")\n    else\n      ones+=(\"\
    $i\")\n    fi\n  done\n  for j in \"${ones[@]}\"; do\n    zeros+=(\"$(echo \"\
    obase=2; $j\" | bc)\")\n  done\n  for k in \"${zeros[@]}\"; do\n    result+=(\"\
    $(echo \"$k\" | grep -o 1 | wc -l)\")\n  done\n  for l in \"${!result[@]}\"; do\n\
    \    for m in \"${!result[@]}\"; do\n      if [[ ${result[$l]} -lt ${result[$m]}\
    \ ]]; then\n        n=${result[$l]}\n        result[$l]=${result[$m]}\n      \
    \  result[$m]=$n\n        o=${ones[$l]}\n        ones[$l]=${ones[$m]}\n      \
    \  ones[$m]=$o\n      fi\n    done\n  done\n  for p in \"${!result[@]}\"; do\n\
    \    for q in \"${!result[@]}\"; do\n      if [[ ${result[$p]} -eq ${result[$q]}\
    \ ]]; then\n        if [[ ${ones[$p]} -lt ${ones[$q]} ]]; then\n          r=${result[$p]}\n\
    \          result[$p]=${result[$q]}\n          result[$q]=$r\n          s=${ones[$p]}\n\
    \          ones[$p]=${ones[$q]}\n          ones[$q]=$s\n        fi\n      fi\n\
    \    done\n  done\n  for t in \"${s\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8f2sfp2.sh: line 91: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpf8f2sfp2.sh: line 95: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n\
    \  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local\
    \ hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n\
    \  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local\
    \ uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n\
    \  local bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n\
    \  local hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n\
    \  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n\
    \  local ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n\
    \  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local\
    \ eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n\
    \  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local\
    \ pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n\
    \  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local z\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n  local -a sorted_arr=()\n\
    \  local -a sorted_arr_with_ones=()\n  local -a sorted_arr_with_zeros=()\n  local\
    \ -a sorted_arr_with_zeros_and_ones=()\n  local -a sorted_arr_with_zeros_and_ones_and_negatives=()\n\
    \  local -a sorted_arr_with_negatives=()\n  local -a sorted_arr_with_negatives_and_ones=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros=()\n  local -a sorted_arr_with_negatives_and_zeros_and_ones=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros=()\n  local\
    \ -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones=()\n  local\
    \ -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones_and_negatives=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones_and_negatives_and_zeros=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones_and_negatives_and_zeros_and_ones=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones_and_negatives_and_zeros_and_ones_and_negatives=()\n\
    \  local -a sorted_arr_with_negatives_and_zeros_and_ones_and_zeros_and_ones_and_negatives_and_zeros_and\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_dec_ones=()\n  local -a arr_sorted_dec_ones_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_ones_final=()\n  local\
    \ -a arr_sorted_dec_final=()\n  local -a arr_sorted_dec_ones_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i m\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_bin=()\n  local -a arr_dec=()\n  local -a arr_sorted=()\n\
    \  local -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_final=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local i\n  local j\n  local k\n  local n\n  local o\n  local z\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    n=${arr[$i]}\n    if ((n < 0)); then\n      n=$((-n))\n\
    \    fi\n    o=$(echo \"obase=2;$n\" | bc | grep -o 1 | wc -l)\n    if ((o ==\
    \ 0)); then\n      zeros+=(\"$n\")\n    else\n      ones+=(\"$n\")\n    fi\n \
    \ done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    for ((j=i+1; j<${#ones[@]};\
    \ j++)); do\n      if ((ones[$i] > ones[$j])); then\n        n=${ones[$i]}\n \
    \       ones[$i]=${ones[$j]}\n        ones[$j]=$n\n      fi\n    done\n  done\n\
    \  for ((i=0; i<${#zeros[@]}; i++)); do\n    for ((j=i+1; j<${#zeros[@]}; j++));\
    \ do\n      if ((zeros[$i] > zeros[$j])); then\n        n=${zeros[$i]}\n     \
    \   zeros[$i]=${zeros[$j]}\n        zeros[$j]=$n\n      fi\n    done\n  done\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    n=${arr[$i]}\n    if ((n < 0)); then\n\
    \      n=$((-n))\n    fi\n    o=$(echo \"obase=2;$n\" | bc | grep -o 1 | wc -l)\n\
    \    if ((o == 0)); then\n      for ((j=0; j<${#zeros[@]}; j++)); do\n       \
    \ if ((zeros[$j] == n)); then\n         \n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpgoiqtg8a.sh: line 63: syntax error near unexpected token `}''\n/tmp/tmpgoiqtg8a.sh:
    line 63: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n\
    \  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n \
    \ local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i\
    \ ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n \
    \ local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i\
    \ ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n \
    \ local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i\
    \ ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n \
    \ local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i\
    \ bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n \
    \ local -i bm=0\n  local -i bn=0\n  local\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a sorted_ones\n  local -a sorted_zeros\n  local -a result\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local\
    \ ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n\
    \  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local\
    \ rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n\
    \  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n\
    \  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n\
    \  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n\
    \  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n\
    \  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n\
    \  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local\
    \ hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n\
    \  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local\
    \ ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n\
    \  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($@)\n  local -a arr_sorted\n  local -a arr_ones\n  local -a arr_zeros\n\
    \  local -a arr_neg\n  local -a arr_pos\n  local -a arr_neg_sorted\n  local -a\
    \ arr_pos_sorted\n  local -a arr_neg_ones\n  local -a arr_neg_zeros\n  local -a\
    \ arr_pos_ones\n  local -a arr_pos_zeros\n  local -a arr_neg_ones_sorted\n  local\
    \ -a arr_neg_zeros_sorted\n  local -a arr_pos_ones_sorted\n  local -a arr_pos_zeros_sorted\n\
    \  local -a arr_neg_ones_sorted_dec\n  local -a arr_neg_zeros_sorted_dec\n  local\
    \ -a arr_pos_ones_sorted_dec\n  local -a arr_pos_zeros_sorted_dec\n  local -a\
    \ arr_neg_sorted_dec\n  local -a arr_pos_sorted_dec\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_dec_sorted\n  local -a arr_sorted_dec_sorted_sorted\n \
    \ local -a arr_sorted_dec_sorted_sorted_sorted\n  local -a arr_sorted_dec_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted\n  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_dec=()\n\
    \  local -a sorted_res=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local v\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($@)\n  local -a res\n  local -a ones\n  local -a zeros\n  local -a neg\n\
    \  local -a pos\n  local -a sorted\n  local -a sorted_neg\n  local -a sorted_pos\n\
    \  local -a sorted_zeros\n  local -a sorted_ones\n  local -a sorted_neg_zeros\n\
    \  local -a sorted_neg_ones\n  local -a sorted_pos_zeros\n  local -a sorted_pos_ones\n\
    \  local -a sorted_neg_zeros_ones\n  local -a sorted_pos_zeros_ones\n  local -a\
    \ sorted_neg_pos_zeros_ones\n  local -a sorted_neg_pos_zeros\n  local -a sorted_neg_pos_ones\n\
    \  local -a sorted_neg_pos\n  local -a sorted_neg_pos_zeros_ones_dec\n  local\
    \ -a sorted_neg_pos_zeros_dec\n  local -a sorted_neg_pos_ones_dec\n  local -a\
    \ sorted_neg_pos_dec\n  local -a sorted_neg_zeros_ones_dec\n  local -a sorted_neg_zeros_dec\n\
    \  local -a sorted_neg_ones_dec\n  local -a sorted_neg_dec\n  local -a sorted_pos_zeros_ones_dec\n\
    \  local -a sorted_pos_zeros_dec\n  local -a sorted_pos_ones_dec\n  local -a sorted_pos_dec\n\
    \  local -a sorted_zeros_ones_dec\n  local -a sorted_zeros_dec\n  local -a sorted_ones_dec\n\
    \  local -a sorted_dec\n  local -a sorted_neg_pos_zeros_ones_dec_bin\n  local\
    \ -a sorted_neg_pos_zeros_dec_bin\n  local -a sorted_neg_pos_ones_dec_bin\n  local\
    \ -a sorted_neg_pos_dec_bin\n  local -a sorted_neg_zeros_ones_dec_bin\n  local\
    \ -a sorted_neg_zeros_dec_bin\n  local -a sorted_neg_ones_dec_bin\n \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a zeros_sorted=()\n  local -a ones_sorted=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local array=($1)\n\
    \  local -a result=()\n  for i in ${array[@]}; do\n    local ones=$(echo \"obase=2;\
    \ $i\" | bc | grep -o 1 | wc -l)\n    result+=(\"$ones $i\")\n  done\n  echo \"\
    ${result[@]}\" | tr ' ' '\\n' | sort -n | cut -d ' ' -f 2 | tr '\\n' ' '\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a ones\n  local -a zeros\n  local -a result\n  local -a sorted_ones\n\
    \  local -a sorted_zeros\n  local -a sorted_result\n  local -i i\n  local -i j\n\
    \  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local\
    \ -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n\
    \  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local\
    \ -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i\
    \ ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n\
    \  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n \
    \ local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local\
    \ -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i\
    \ aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local\
    \ -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [[ ${array[$i]}\
    \ -lt 0 ]]; then\n      sorted[$i]=${array[$i]}\n    else\n      sorted[$i]=$(echo\
    \ \"obase=2;${array[$i]}\" | bc)\n    fi\n  done\n  for ((j=0; j<${#sorted[@]};\
    \ j++)); do\n    if [[ ${sorted[$j]} -lt 0 ]]; then\n      ones[$j]=${sorted[$j]}\n\
    \    else\n      ones[$j]=$(echo \"${sorted[$j]}\" | grep -o 1 | wc -l)\n    fi\n\
    \  done\n  for ((k=0; k<${#sorted[@]}; k++)); do\n    if [[ ${sorted[$k]} -lt\
    \ 0 ]]; then\n      zeros[$k]=${sorted[$k]}\n    else\n      zeros[$k]=$(echo\
    \ \"${sorted[$k]}\" | grep -o 0 | wc -l)\n    fi\n  done\n  for ((l=0; l<${#sorted[@]};\
    \ l++)); do\n    if [[ ${sorted[$l]} -lt 0 ]]; then\n      result[$l]=${sorted[$l]}\n\
    \    else\n      result[$l]=$(echo \"${sorted[$l]} * 10^${zeros[$l]}\" | bc)\n\
    \   \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp63ci8o0x.sh: line 63: syntax error near unexpected token `}''\n/tmp/tmp63ci8o0x.sh:
    line 63: `}''\n"'
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros=()\n  local -a sorted_result_zeros_zeros_ones=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_zeros_zeros=()\n  local -a sorted_result_ones_ones_ones=()\n\
    \  local -a sorted_result_zeros_ones_zeros_zeros=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_ones_zeros_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_zeros_ones=()\n  local -a sorted_result_ones_ones_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_zeros=()\n  local -a sorted_result_ones_ones_ones_ones=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones_zeros=()\n  local -a sorted_result_zeros_ones_ones_zeros_zeros=()\n\
    \  local -a sorted\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i\
    \ ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n \
    \ local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i\
    \ an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n \
    \ local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i\
    \ aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n \
    \ local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i\
    \ bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n \
    \ local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i\
    \ bo=0\n  local -i bp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_dec_ones=()\n  local -a arr_sorted_dec_ones_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final=()\n  local -a arr_sorted_dec_ones_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_arr_dec=()\n  local -a sorted_arr_dec_final=()\n\
    \  local -a sorted_arr_final=()\n  local -a sorted_arr_final_dec=()\n  local -a\
    \ sorted_arr_final_dec_final=()\n  local -a sorted_arr_final_final=()\n  local\
    \ -a sorted_arr_final_final_dec=()\n  local -a sorted_arr_final_final_dec_final=()\n\
    \  local -a sorted_arr_final_final_final=()\n  local -a sorted_arr_final_final_final_dec=()\n\
    \  local -a sorted_arr_final_final_final_dec_final=()\n  local -a sorted_arr_final_final_final_final=()\n\
    \  local -a sorted_arr_final_final_final_final_dec=()\n  local -a sorted_arr_final_final_final_final_dec_final=()\n\
    \  local -a sorted_arr_final_final_final_final_final=()\n  local -a sorted_arr_final_final_final_final_final_dec=()\n\
    \  local -a sorted_arr_final_final_final_final_final_dec_final=()\n  local -a\
    \ sorted_arr_final_final_final_final_final_final=()\n  local -a sorted_arr_final_final_final_final_final_final_dec=()\n\
    \  local -a sorted_arr_final_final_final_final_final_final_dec_final=()\n  local\
    \ -a sorted_arr_final_final_final_final_final_final_final=()\n  local -a sorted_arr_final_final_final_final_final_final_final_dec=()\n\
    \  local -a sorted_arr_final_final_final_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n\
    \  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local\
    \ ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n\
    \  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local\
    \ vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n\
    \  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n\
    \  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n\
    \  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n\
    \  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n\
    \  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local\
    \ ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n\
    \  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local\
    \ qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n\
    \  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_array=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_2=()\n  local -a sorted_result_3=()\n\
    \  local -a sorted_result_4=()\n  local -a sorted_result_5=()\n  local -a sorted_result_6=()\n\
    \  local -a sorted_result_7=()\n  local -a sorted_result_8=()\n  local -a sorted_result_9=()\n\
    \  local -a sorted_result_10=()\n  local -a sorted_result_11=()\n  local -a sorted_result_12=()\n\
    \  local -a sorted_result_13=()\n  local -a sorted_result_14=()\n  local -a sorted_result_15=()\n\
    \  local -a sorted_result_16=()\n  local -a sorted_result_17=()\n  local -a sorted_result_18=()\n\
    \  local -a sorted_result_19=()\n  local -a sorted_result_20=()\n  local -a sorted_result_21=()\n\
    \  local -a sorted_result_22=()\n  local -a sorted_result_23=()\n  local -a sorted_result_24=()\n\
    \  local -a sorted_result_25=()\n  local -a sorted_result_26=()\n  local -a sorted_result_27=()\n\
    \  local -a sorted_result_28=()\n  local -a sorted_result_29=()\n  local -a sorted_result_30=()\n\
    \  local -a sorted_result_31=()\n  local -a sorted_result_32=()\n  local -a sorted_result_33=()\n\
    \  local -a sorted_result_34=()\n  local -a sorted_result_35=()\n  local -a sorted_result_36=()\n\
    \  local -a sorted_result_37=()\n  local\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_res=()\n  local -a sorted_res_ones=()\n  local -a sorted_res_zeros=()\n\
    \  local -a sorted_res_zeros_ones=()\n  local -a sorted_res_zeros_zeros=()\n \
    \ local -a sorted_res_ones_ones=()\n  local -a sorted_res_ones_zeros=()\n  local\
    \ -a sorted_res_zeros_ones_ones=()\n  local -a sorted_res_zeros_ones_zeros=()\n\
    \  local -a sorted_res_zeros_zeros_ones=()\n  local -a sorted_res_zeros_zeros_zeros=()\n\
    \  local -a sorted_res_ones_ones_ones=()\n  local -a sorted_res_ones_ones_zeros=()\n\
    \  local -a sorted_res_ones_zeros_ones=()\n  local -a sorted_res_ones_zeros_zeros=()\n\
    \  local -a sorted_res_zeros_ones_ones_ones=()\n  local -a sorted_res_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_res_zeros_ones_zeros_ones=()\n  local -a sorted_res_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_res_zeros_zeros_ones_ones=()\n  local -a sorted_res_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_res_zeros_zeros_zeros_ones=()\n  local -a sorted_res_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_res_ones_ones_ones_ones=()\n  local -a sorted_res_ones_ones_ones_zeros=()\n\
    \  local -a sorted_res_ones_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n\
    \  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i\
    \ aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n \
    \ local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i\
    \ as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n \
    \ local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i\
    \ bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n \
    \ local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i\
    \ bk=0\n  local -i bl=0\n  local -i bm\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a sorted\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i m\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a bin_arr_sorted=()\n  local -a\
    \ bin_arr_sorted_dec=()\n  local -a bin_arr_sorted_dec_arr=()\n  local -a bin_arr_sorted_dec_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr=()\n  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr=()\n  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr=()\n  local\
    \ -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n  local\
    \ -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n \
    \ local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a array=($1)\n    local -a result=()\n    local -a ones=()\n    local -a zeros=()\n\
    \    local -a temp=()\n    local -a temp2=()\n    local -a temp3=()\n    local\
    \ -a temp4=()\n    local -a temp5=()\n    local -a temp6=()\n    local -a temp7=()\n\
    \    local -a temp8=()\n    local -a temp9=()\n    local -a temp10=()\n    local\
    \ -a temp11=()\n    local -a temp12=()\n    local -a temp13=()\n    local -a temp14=()\n\
    \    local -a temp15=()\n    local -a temp16=()\n    local -a temp17=()\n    local\
    \ -a temp18=()\n    local -a temp19=()\n    local -a temp20=()\n    local -a temp21=()\n\
    \    local -a temp22=()\n    local -a temp23=()\n    local -a temp24=()\n    local\
    \ -a temp25=()\n    local -a temp26=()\n    local -a temp27=()\n    local -a temp28=()\n\
    \    local -a temp29=()\n    local -a temp30=()\n    local -a temp31=()\n    local\
    \ -a temp32=()\n    local -a temp33=()\n    local -a temp34=()\n    local -a temp35=()\n\
    \    local -a temp36=()\n    local -a temp37=()\n    local -a temp38=()\n    local\
    \ -a temp39=()\n    local -a temp40=()\n    local -a temp41=()\n    local -a temp42=()\n\
    \    local -a temp43=()\n    local -a temp44=()\n    local -a temp45=()\n    local\
    \ -a temp46=()\n    local -a temp47=()\n    local -a temp48=()\n    local -a temp49=()\n\
    \    local -a temp50=()\n    local -a temp51=()\n    local -a temp52=()\n    local\
    \ -a temp53=()\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i\
    \ ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n \
    \ local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i\
    \ an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n \
    \ local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i\
    \ aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n \
    \ local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i\
    \ bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n \
    \ local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i\
    \ bo=0\n  local -i bp=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a tmp_arr=()\n  local -a ones_arr=()\n\
    \  local -a zeros_arr=()\n  local -a tmp_ones_arr=()\n  local -a tmp_zeros_arr=()\n\
    \  local -a tmp_arr_2=()\n  local -a tmp_arr_3=()\n  local -a tmp_arr_4=()\n \
    \ local -a tmp_arr_5=()\n  local -a tmp_arr_6=()\n  local -a tmp_arr_7=()\n  local\
    \ -a tmp_arr_8=()\n  local -a tmp_arr_9=()\n  local -a tmp_arr_10=()\n  local\
    \ -a tmp_arr_11=()\n  local -a tmp_arr_12=()\n  local -a tmp_arr_13=()\n  local\
    \ -a tmp_arr_14=()\n  local -a tmp_arr_15=()\n  local -a tmp_arr_16=()\n  local\
    \ -a tmp_arr_17=()\n  local -a tmp_arr_18=()\n  local -a tmp_arr_19=()\n  local\
    \ -a tmp_arr_20=()\n  local -a tmp_arr_21=()\n  local -a tmp_arr_22=()\n  local\
    \ -a tmp_arr_23=()\n  local -a tmp_arr_24=()\n  local -a tmp_arr_25=()\n  local\
    \ -a tmp_arr_26=()\n  local -a tmp_arr_27=()\n  local -a tmp_arr_28=()\n  local\
    \ -a tmp_arr_29=()\n  local -a tmp_arr_30=()\n  local -a tmp_arr_31=()\n  local\
    \ -a tmp_arr_32=()\n  local -a tmp_arr_33=()\n  local -a tmp_arr_34=()\n  local\
    \ -a tmp_arr_35=()\n  local -a tmp_arr_36=()\n  local -a tmp_arr_37=()\n  local\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2\n  local -a arr3\n  local -a arr4\n  local -a\
    \ arr5\n  local -a arr6\n  local -a arr7\n  local -a arr8\n  local -a arr9\n \
    \ local -a arr10\n  local -a arr11\n  local -a arr12\n  local -a arr13\n  local\
    \ -a arr14\n  local -a arr15\n  local -a arr16\n  local -a arr17\n  local -a arr18\n\
    \  local -a arr19\n  local -a arr20\n  local -a arr21\n  local -a arr22\n  local\
    \ -a arr23\n  local -a arr24\n  local -a arr25\n  local -a arr26\n  local -a arr27\n\
    \  local -a arr28\n  local -a arr29\n  local -a arr30\n  local -a arr31\n  local\
    \ -a arr32\n  local -a arr33\n  local -a arr34\n  local -a arr35\n  local -a arr36\n\
    \  local -a arr37\n  local -a arr38\n  local -a arr39\n  local -a arr40\n  local\
    \ -a arr41\n  local -a arr42\n  local -a arr43\n  local -a arr44\n  local -a arr45\n\
    \  local -a arr46\n  local -a arr47\n  local -a arr48\n  local -a arr49\n  local\
    \ -a arr50\n  local -a arr51\n  local -a arr52\n  local -a arr53\n  local -a arr54\n\
    \  local -a arr55\n  local -a arr56\n  local -a arr57\n  local -a arr58\n  local\
    \ -a arr59\n  local -a arr60\n  local -a arr61\n  local -a arr62\n  local -a arr63\n\
    \  local -a arr64\n  local -a arr65\n  local -a arr66\n  local -a arr67\n  local\
    \ -a arr68\n  local -a arr69\n  local -a arr70\n  local -a arr71\n  local -a arr72\n\
    \  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a result=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      sorted+=(\"$i\")\n    else\n      ones+=($(echo\
    \ \"obase=2;$i\" | bc | grep -o 1 | wc -l))\n      zeros+=($i)\n    fi\n  done\n\
    \  for j in \"${!ones[@]}\"; do\n    for k in \"${!ones[@]}\"; do\n      if [[\
    \ ${ones[$j]} -lt ${ones[$k]} ]]; then\n        l=${ones[$j]}\n        ones[$j]=${ones[$k]}\n\
    \        ones[$k]=$l\n        m=${zeros[$j]}\n        zeros[$j]=${zeros[$k]}\n\
    \        zeros[$k]=$m\n      fi\n    done\n  done\n  for n in \"${!ones[@]}\"\
    ; do\n    for o in \"${!ones[@]}\"; do\n      if [[ ${ones[$n]} -eq ${ones[$o]}\
    \ ]]; then\n        if [[ ${zeros[$n]} -gt ${zeros[$o]} ]]; then\n          p=${ones[$n]}\n\
    \          ones[$n]=${ones[$o]}\n          ones[$o]=$p\n          q=${zeros[$n]}\n\
    \          zeros[$n]=${zeros[$o]}\n          zeros[$o]=$q\n        fi\n      fi\n\
    \    done\n  done\n  for r in \"${zeros[@]}\"; do\n    result+=(\"$r\")\n  done\n\
    \  for s in \"${sorted[@]}\"; do\n    result+=(\"$\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps6l68nkg.sh: line 90: unexpected EOF while looking for matching
    `"\''\n/tmp/tmps6l68nkg.sh: line 94: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_ones\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_neg=()\n\
    \  local -a arr_sorted_final_pos=()\n  local -a arr_sorted_final_neg_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted=()\n  local -a arr_sorted_final_neg_sorted_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted_sorted=()\n  local -a arr_sorted_final_neg_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted_sorted_sorted=()\n  local -a arr_sorted_final_neg_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_final_neg_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted_sorted_sorted_sorted_sorted=()\n  local\
    \ -a arr_sorted_final_neg_sorted_sorted_sorted_sorted_sorted_sorted=()\n  local\
    \ -a arr_sorted_final_pos_sorted_sorted_sorted_sorted_sorted_sorted=()\n  local\
    \ -a arr_sorted_final_neg_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_final_pos_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n\
    \  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i\
    \ aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n \
    \ local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i\
    \ as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n \
    \ local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i\
    \ bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n \
    \ local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i\
    \ bk=0\n  local -i bl=0\n  local -i bm\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n\
    \  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n\
    \  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  for i in \"${arr[@]}\"\
    ; do\n    local binary=\"$(echo \"obase=2;$i\" | bc)\"\n    local count=\"$(echo\
    \ \"$binary\" | grep -o 1 | wc -l)\"\n    local index=\"$(printf \"%04d\" \"$count\"\
    )\"\n    index=\"$(echo \"$index$i\" | sed 's/^0*//')\"\n    ones+=(\"$index\"\
    )\n  done\n  IFS=$'\\n' sorted=($(sort <<<\"${ones[*]}\"))\n  unset IFS\n  for\
    \ i in \"${sorted[@]}\"; do\n    res+=(\"$(echo \"$i\" | sed 's/^[0-9]*//')\"\
    )\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_sorted_neg=()\n\
    \  local -a arr_sorted_pos=()\n  local -a arr_sorted_final=()\n  local i=0\n \
    \ local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a sorted=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted=()\n  local -a result=()\n  local -a ones=()\n \
    \ local -a zeros=()\n  local -a negs=()\n  local -a pos=()\n  local -a neg=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local\
    \ -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local\
    \ -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n\
    \  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n \
    \ local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n\
    \  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local temp\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    temp=$(echo \"obase=2; ${arr[$i]}\" | bc)\n    if [[ $temp =~ 1 ]]; then\n\
    \      ones+=(\"${arr[$i]}\")\n    else\n      zeros+=(\"${arr[$i]}\")\n    fi\n\
    \  done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    for ((j=i+1; j<${#ones[@]};\
    \ j++)); do\n      if [[ $(echo \"obase=2; ${ones[$i]}\" | bc) -lt $(echo \"obase=2;\
    \ ${ones[$j]}\" | bc) ]]; then\n        temp=${ones[$i]}\n        ones[$i]=${ones[$j]}\n\
    \        ones[$j]=$temp\n      fi\n    done\n  done\n  for ((i=0; i<${#zeros[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#zeros[@]}; j++)); do\n      if [[ $(echo \"\
    obase=2; ${zeros[$i]}\" | bc) -lt $(echo \"obase=2; ${zeros[$j]}\" | bc) ]]; then\n\
    \        temp=${zeros[$i]}\n        zeros[$i]=${zeros[$j]}\n        zeros[$j]=$temp\n\
    \      fi\n    done\n  done\n  for ((i=0; i<${#ones[@]}; i++)); do\n    result+=(\"\
    ${ones[$i]}\")\n  done\n  for ((i=0; i<${#zeros[@]}; i++)); do\n    result+=(\"\
    ${zeros[$i]}\")\n  done\n  for ((i=0; i<${#result[@]}; i++)); do\n    for ((j=i+1;\
    \ j<${#\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpfzmbb7g6.sh: line 54: unexpected EOF while looking for matching
    `)''\n/tmp/tmpfzmbb7g6.sh: line 74: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_ones_zeros_ones=()\n  local -a sorted_result_ones_ones_zeros_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones_ones=()\n  local -a sorted_result_ones_zeros_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zer\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ for i in \"${arr[@]}\"; do\n    local ones_count=$(echo \"obase=2;$i\" | bc\
    \ | grep -o 1 | wc -l)\n    if [[ $ones_count -eq 0 ]]; then\n      zeros+=(\"\
    $i\")\n    else\n      ones+=(\"$i\")\n    fi\n  done\n  if [[ ${#ones[@]} -gt\
    \ 0 ]]; then\n    local -a sorted_ones=($(echo \"${ones[@]}\" | tr ' ' '\\n' |\
    \ sort -n -k1.1))\n    res+=(\"${sorted_ones[@]}\")\n  fi\n  if [[ ${#zeros[@]}\
    \ -gt 0 ]]; then\n    local -a sorted_zeros=($(echo \"${zeros[@]}\" | tr ' ' '\\\
    n' | sort -n -k1.1))\n    res+=(\"${sorted_zeros[@]}\")\n  fi\n  echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  for i in \"${arr[@]}\"; do\n    new_arr+=(\"\
    $(printf \"%b\" \"$i\" | sed 's/0/1/g')\")\n  done\n  echo \"${new_arr[@]}\" |\
    \ tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a zeros=()\n  local -a ones=()\n\
    \  local -a twos=()\n  local -a threes=()\n  local -a fours=()\n  local -a fives=()\n\
    \  local -a sixes=()\n  local -a sevens=()\n  local -a eights=()\n  local -a nines=()\n\
    \  local -a tens=()\n  local -a eleves=()\n  local -a twelves=()\n  local -a thirteens=()\n\
    \  local -a fourteens=()\n  local -a fifteens=()\n  local -a sixteens=()\n  local\
    \ -a seventeens=()\n  local -a eigteens=()\n  local -a ninteens=()\n  local -a\
    \ twentys=()\n  local -a twentys1=()\n  local -a twentys2=()\n  local -a twentys3=()\n\
    \  local -a twentys4=()\n  local -a twentys5=()\n  local -a twentys6=()\n  local\
    \ -a twentys7=()\n  local -a twentys8=()\n  local -a twentys9=()\n  local -a thirties=()\n\
    \  local -a thirties1=()\n  local -a thirties2=()\n  local -a thirties3=()\n \
    \ local -a thirties4=()\n  local -a thirties5=()\n  local -a thirties6=()\n  local\
    \ -a thirties7=()\n  local -a thirties8=()\n  local -a thirties9=()\n  local -a\
    \ fourties=()\n  local -a fourties1=()\n  local -a fourties2=()\n  local -a fourties3=()\n\
    \  local -a fourties4=()\n  local -a fourties5=()\n  local -a fourties6=()\n \
    \ local -a fourties7=()\n  local -a fourties8=()\n  local -a fourties\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  for ((i=0; i<${#array[@]}; i++)); do\n    array[i]=\"$(printf\
    \ '%d %d %s' \"$(echo \"obase=2; ${array[i]}\" | bc)\" \"${array[i]}\" \"${array[i]}\"\
    )\"\n  done\n  IFS=$'\\n' sorted=($(sort -n <<<\"${array[*]}\"))\n  unset IFS\n\
    \  for ((i=0; i<${#sorted[@]}; i++)); do\n    sorted[i]=\"$(echo \"${sorted[i]}\"\
    \ | awk '{print $3}')\"\n  done\n  echo \"${sorted[*]}\"\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  for i in \"${array[@]}\"; do\n    result+=(\"\
    $(printf '%s\\t%s\\n' \"$(echo \"obase=2;$i\" | bc)\" \"$i\")\")\n  done\n  echo\
    \ \"${result[@]}\" | sort -k1,1 -k2,2n | cut -f2\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a new_array=()\n  local -a ones_array=()\n  local -a\
    \ zeros_array=()\n  local -a sorted_array=()\n  local -a sorted_ones_array=()\n\
    \  local -a sorted_zeros_array=()\n  local -a sorted_array=()\n  local -a sorted_ones_array=()\n\
    \  local -a sorted_zeros_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n  local -a final_array=()\n\
    \  local -a final_array=()\n  local -a final_array=()\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#arr[@]}\n  local\
    \ -i m=0\n  local -i tmp=0\n  local -i tmp2=0\n  local -i tmp3=0\n  local -i tmp4=0\n\
    \  local -i tmp5=0\n  local -i tmp6=0\n  local -i tmp7=0\n  local -i tmp8=0\n\
    \  local -i tmp9=0\n  local -i tmp10=0\n  local -i tmp11=0\n  local -i tmp12=0\n\
    \  local -i tmp13=0\n  local -i tmp14=0\n  local -i tmp15=0\n  local -i tmp16=0\n\
    \  local -i tmp17=0\n  local -i tmp18=0\n  local -i tmp19=0\n  local -i tmp20=0\n\
    \  local -i tmp21=0\n  local -i tmp22=0\n  local -i tmp23=0\n  local -i tmp24=0\n\
    \  local -i tmp25=0\n  local -i tmp26=0\n  local -i tmp27=0\n  local -i tmp28=0\n\
    \  local -i tmp29=0\n  local -i tmp30=0\n  local -i tmp31=0\n  local -i tmp32=0\n\
    \  local -i tmp33=0\n  local -i tmp34=0\n  local -i tmp35=0\n  local -i tmp36=0\n\
    \  local -i tmp37=0\n  local -i tmp38=0\n  local -i tmp39=0\n  local -i tmp40=0\n\
    \  local -i tmp41=0\n  local -i tmp42=0\n  local -i tmp43=0\n  local -i tmp44=0\n\
    \  local -i tmp45=0\n  local -i tmp46=0\n  local -i tmp47=0\n  local -i tmp48=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a sorted=()\n  local\
    \ -a sorted_neg=()\n  local -a sorted_pos=()\n  local -a final=()\n  local -a\
    \ final_neg=()\n  local -a final_pos=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local q\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr\n  local -a tmp_arr\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i max=0\n  local -i min=0\n  local -i tmp=0\n\
    \  local -i ones=0\n  local -i zeros=0\n  local -i len=${#arr[@]}\n  local -i\
    \ len_new=0\n  local -i len_tmp=0\n  local -i len_ones=0\n  local -i len_zeros=0\n\
    \  local -i len_min=0\n  local -i len_max=0\n  local -i len_tmp_max=0\n  local\
    \ -i len_tmp_min=0\n  local -i len_new_max=0\n  local -i len_new_min=0\n  local\
    \ -i len_tmp_ones=0\n  local -i len_tmp_zeros=0\n  local -i len_new_ones=0\n \
    \ local -i len_new_zeros=0\n  local -i len_tmp_ones_max=0\n  local -i len_tmp_ones_min=0\n\
    \  local -i len_new_ones_max=0\n  local -i len_new_ones_min=0\n  local -i len_tmp_zeros_max=0\n\
    \  local -i len_tmp_zeros_min=0\n  local -i len_new_zeros_max=0\n  local -i len_new_zeros_min=0\n\
    \  local -i len_tmp_max_max=0\n  local -i len_tmp_max_min=0\n  local -i len_new_max_max=0\n\
    \  local -i len_new_max_min=0\n  local -i len_tmp_min_max=0\n  local -i len_tmp_min_min=0\n\
    \  local -i len_new_min_max=0\n  local -i len_new_min_min=0\n  local -i len_tmp_max_max_max=0\n\
    \  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a negative=()\n  local -a positive=()\n  local -a temp=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n\
    \  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n\
    \  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n\
    \  local -i jjj=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted=()\n  local -a result=()\n  local -a temp=()\n \
    \ local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n  local -a temp5=()\n\
    \  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n  local -a temp9=()\n\
    \  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n  local -a\
    \ temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a temp16=()\n\
    \  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n  local -a\
    \ temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a temp23=()\n\
    \  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n  local -a\
    \ temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a temp30=()\n\
    \  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n  local -a\
    \ temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a temp37=()\n\
    \  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n  local -a\
    \ temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a temp44=()\n\
    \  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n  local -a\
    \ temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a temp51=()\n\
    \  local -a temp52=()\n  local -a temp53=()\n  local -a temp54=()\n  local\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr1\n  local -a arr2\n  local -a arr3\n  local -a\
    \ arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a arr8\n \
    \ local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n  local\
    \ -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local -a arr17\n\
    \  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n  local\
    \ -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local -a arr26\n\
    \  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n  local\
    \ -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local -a arr35\n\
    \  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n  local\
    \ -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local -a arr44\n\
    \  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n  local\
    \ -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local -a arr53\n\
    \  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n  local\
    \ -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local -a arr62\n\
    \  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n  local\
    \ -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local -a arr71\n\
    \  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local ones_count=$(echo \"obase=2;$i\" | bc | grep -o 1\
    \ | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n        zeros+=(\"$i\")\n\
    \      else\n        ones+=(\"$i\")\n      fi\n    fi\n  done\n  if [[ ${#ones[@]}\
    \ -gt 0 ]]; then\n    IFS=$'\\n' sorted_ones=($(sort -n <<<\"${ones[*]}\"))\n\
    \    unset IFS\n    result+=(\"${sorted_ones[@]}\")\n  fi\n  if [[ ${#zeros[@]}\
    \ -gt 0 ]]; then\n    IFS=$'\\n' sorted_zeros=($(sort -n <<<\"${zeros[*]}\"))\n\
    \    unset IFS\n    result+=(\"${sorted_zeros[@]}\")\n  fi\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz3yyrprv.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      result+=($i)\n    else\n      temp+=($i)\n    fi\n  done\n  for i in \"\
    ${temp[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      zeros+=($i)\n    else\n \
    \     ones+=($i)\n    fi\n  done\n  ones=($(for i in \"${ones[@]}\"; do echo \"\
    $i\"; done | sort -n))\n  zeros=($(for i in \"${zeros[@]}\"; do echo \"$i\"; done\
    \ | sort -n))\n  for i in \"${ones[@]}\"; do\n    result+=($i)\n  done\n  for\
    \ i in \"${zeros[@]}\"; do\n    result+=($i)\n  done\n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_result=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_zeros=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros=()\n  local -a sorted_result_zeros_ones_ones=()\n\
    \  local -a sorted_result_zeros_zeros_zeros=()\n  local -a sorted_result_zeros_zeros_ones=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_zeros=()\n  local -a sorted_result_ones_zeros_ones=()\n\
    \  local -a sorted_result_zeros_ones_zeros_zeros=()\n  local -a sorted_result_zeros_ones_zeros_ones=()\n\
    \  local -a sorted_result_zeros_ones_ones_zeros=()\n  local -a sorted_result_zeros_ones_ones_ones=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_zeros=()\n  local -a sorted_result_zeros_zeros_zeros_ones=()\n\
    \  local -a sorted_result_zeros_zeros_ones_zeros=()\n  local -a sorted_result_zeros_zeros_ones_ones=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_ones\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"$i\")\n\
    \    else\n      local binary=$(echo \"obase=2;$i\" | bc)\n      local ones_count=$(echo\
    \ \"$binary\" | grep -o 1 | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n \
    \       zeros+=(\"$i\")\n      else\n        ones+=(\"$i\")\n      fi\n    fi\n\
    \  done\n  if [[ ${#ones[@]} -gt 0 ]]; then\n    IFS=$'\\n' sorted_ones=($(sort\
    \ -n <<<\"${ones[*]}\"))\n    unset IFS\n    result+=(\"${sorted_ones[@]}\")\n\
    \  fi\n  if [[ ${#zeros[@]} -gt 0 ]]; then\n    IFS=$'\\n' sorted_zeros=($(sort\
    \ -n <<<\"${zeros[*]}\"))\n    unset IFS\n    result+=(\"${sorted_zeros[@]}\"\
    )\n  fi\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl6l4dyxy.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  for i in $@; do\n    array+=(\"$i\")\n  done\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#array[@]}; j++)); do\n      if [[ $(echo \"\
    obase=2; ${array[i]}\" | bc) =~ 1 ]]; then\n        if [[ $(echo \"obase=2; ${array[j]}\"\
    \ | bc) =~ 1 ]]; then\n          if [[ $(echo \"obase=2; ${array[i]}\" | bc |\
    \ grep -o 1 | wc -l) -gt $(echo \"obase=2; ${array[j]}\" | bc | grep -o 1 | wc\
    \ -l) ]]; then\n            local tmp=${array[i]}\n            array[i]=${array[j]}\n\
    \            array[j]=$tmp\n          elif [[ $(echo \"obase=2; ${array[i]}\"\
    \ | bc | grep -o 1 | wc -l) -eq $(echo \"obase=2; ${array[j]}\" | bc | grep -o\
    \ 1 | wc -l) ]]; then\n            if [[ ${array[i]} -gt ${array[j]} ]]; then\n\
    \              local tmp=${array[i]}\n              array[i]=${array[j]}\n   \
    \           array[j]=$tmp\n            fi\n          fi\n        fi\n      fi\n\
    \    done\n  done\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted_array=()\n  local -a ones_array=()\n  local\
    \ -a zeros_array=()\n  local -a sorted_ones_array=()\n  local -a sorted_zeros_array=()\n\
    \  local -a final_array=()\n  local -a final_array_sorted=()\n  local -a final_array_sorted_ones=()\n\
    \  local -a final_array_sorted_zeros=()\n  local -a final_array_sorted_zeros_dec=()\n\
    \  local -a final_array_sorted_ones_dec=()\n  local -a final_array_sorted_dec=()\n\
    \  local -a final_array_sorted_dec_ones=()\n  local -a final_array_sorted_dec_zeros=()\n\
    \  local -a final_array_sorted_dec_zeros_ones=()\n  local -a final_array_sorted_dec_ones_zeros=()\n\
    \  local -a final_array_sorted_dec_zeros_ones_zeros=()\n  local -a final_array_sorted_dec_zeros_zeros_ones=()\n\
    \  local -a final_array_sorted_dec_zeros_ones_zeros_zeros=()\n  local -a final_array_sorted_dec_zeros_zeros_ones_zeros=()\n\
    \  local -a final_array_sorted_dec_zeros_zeros_zeros_ones=()\n  local -a final_array_sorted_dec_zeros_zeros_ones_zeros_zeros=()\n\
    \  local -a final_array_sorted_dec_zeros_zeros_zeros_ones_zeros=()\n  local -a\
    \ final_array_sorted_dec_zeros_zeros_zeros_zeros_ones=()\n  local -a final_array_sorted_dec_zeros_zeros_zeros_ones_zeros_zeros=()\n\
    \  local -a final_array_sorted_dec_zeros_zeros_zeros_\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a ones\n    local -a zeros\n    local -a result\n\
    \    local i\n    local j\n    local k\n    local n\n    local m\n    local tmp\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        tmp=${arr[$i]}\n        if [[\
    \ $tmp -lt 0 ]]; then\n            tmp=$((-$tmp))\n        fi\n        n=$(echo\
    \ \"obase=2; $tmp\" | bc)\n        m=$(echo \"$n\" | grep -o 1 | wc -l)\n    \
    \    if [[ $m -eq 0 ]]; then\n            zeros+=(\"$tmp\")\n        else\n  \
    \          ones+=(\"$tmp\")\n        fi\n    done\n    for ((i=0; i<${#ones[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#ones[@]}; j++)); do\n            if [[\
    \ ${ones[$i]} -gt ${ones[$j]} ]]; then\n                tmp=${ones[$i]}\n    \
    \            ones[$i]=${ones[$j]}\n                ones[$j]=$tmp\n           \
    \ fi\n        done\n    done\n    for ((i=0; i<${#zeros[@]}; i++)); do\n     \
    \   for ((j=i+1; j<${#zeros[@]}; j++)); do\n            if [[ ${zeros[$i]} -gt\
    \ ${zeros[$j]} ]]; then\n                tmp=${zeros[$i]}\n                zeros[$i]=${zeros[$j]}\n\
    \                zeros[$j]=$tmp\n            fi\n        done\n    done\n    k=0\n\
    \    for ((i=0; i<${#ones[@]}; i++)); do\n        result[$k]=${ones[$i]}\n   \
    \     k=$((k+1))\n    done\n    for ((i=0; i<${#zeros[@]}; i++)); do\n       \
    \ result[$k]=${zeros[$i]}\n        k=$((k+1))\n    done\n    for ((i=0; i\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpo92af1hq.sh: line 63: unexpected EOF while looking for matching
    `)''\n/tmp/tmpo92af1hq.sh: line 83: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"\
    $i\")\n    else\n      local ones_count=$(echo \"obase=2;$i\" | bc | grep -o 1\
    \ | wc -l)\n      if [[ $ones_count -eq 0 ]]; then\n        zeros+=(\"$i\")\n\
    \      else\n        ones+=(\"$i\")\n      fi\n    fi\n  done\n  local -a sorted_ones=()\n\
    \  local -a sorted_zeros=()\n  while [[ ${#ones[@]} -gt 0 ]]; do\n    local min=${ones[0]}\n\
    \    local min_index=0\n    for i in \"${!ones[@]}\"; do\n      local ones_count=$(echo\
    \ \"obase=2;${ones[$i]}\" | bc | grep -o 1 | wc -l)\n      if [[ $ones_count -lt\
    \ $min ]]; then\n        min=${ones[$i]}\n        min_index=$i\n      fi\n   \
    \ done\n    sorted_ones+=(\"$min\")\n    unset ones[$min_index]\n  done\n  while\
    \ [[ ${#zeros[@]} -gt 0 ]]; do\n    local min=${zeros[0]}\n    local min_index=0\n\
    \    for i in \"${!zeros[@]}\"; do\n      if [[ ${zeros[$i]} -lt $min ]]; then\n\
    \        min=${zeros[$i]}\n        min_index=$i\n      fi\n    done\n    sorted_zeros+=(\"\
    $min\")\n    unset zeros[$min_index]\n  done\n  result+=(\"${sorted_zeros[@]}\"\
    )\n  result+=(\"${sorted_ones[@]}\")\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp71zv_ct6.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n/tmp/tmp71zv_ct6.sh:
    line 48: [[: 1 5 2 3 4: syntax error in expression (error token is "5 2 3 4")\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a zeros_arr_sorted=()\n  local -a ones_arr_sorted=()\n  local -a new_arr_sorted=()\n\
    \  local -a final_arr=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n  local\
    \ -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n  local\
    \ -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr57\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a result=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=($1)\n    local -a arr_sorted=()\n    local -a arr_sorted_ones=()\n \
    \   local -a arr_sorted_dec=()\n    local -a arr_sorted_dec_ones=()\n    local\
    \ -a arr_sorted_dec_ones_final=()\n    local -a arr_sorted_dec_ones_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final=()\n    local -a arr_sorted_dec_ones_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final=()\n    local -a\
    \ arr_sorted_dec_ones_final_final_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_dec_ones_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n\
    \  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n\
    \  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n\
    \  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n\
    \  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n\
    \  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local m\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  for i in \"${arr[@]}\"; do\n    if (( i < 0 )); then\n     \
    \ ones+=(\"$i\")\n    else\n      zeros+=(\"$i\")\n    fi\n  done\n  for j in\
    \ \"${ones[@]}\"; do\n    n=$(echo \"obase=2;$j\" | bc)\n    m=$(echo \"$n\" |\
    \ grep -o 1 | wc -l)\n    result+=(\"$m $j\")\n  done\n  for k in \"${zeros[@]}\"\
    ; do\n    p=$(echo \"obase=2;$k\" | bc)\n    q=$(echo \"$p\" | grep -o 1 | wc\
    \ -l)\n    result+=(\"$q $k\")\n  done\n  IFS=$'\\n' sorted=($(sort <<<\"${result[*]}\"\
    ))\n  unset IFS\n  for r in \"${sorted[@]}\"; do\n    s=$(echo \"$r\" | cut -d\
    \ ' ' -f 2)\n    echo -n '\"'\n    echo -n \"$s\"\n    echo -n '\"'\n    echo\
    \ -n ' '\n  done\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbt2f8l6.sh: line 34: ((: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a new_arr=()\n    local -a ones_arr=()\n    local\
    \ -a zeros_arr=()\n    local -a sorted_arr=()\n    local -a sorted_ones_arr=()\n\
    \    local -a sorted_zeros_arr=()\n    local -a sorted_new_arr=()\n    local -a\
    \ sorted_arr=()\n    local -a sorted_arr_final=()\n    local -a sorted_arr_final_final=()\n\
    \    local -a sorted_arr_final_final_final=()\n    local -a sorted_arr_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final=()\n    local -a sorted_arr_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final=()\n    local\
    \ -a sorted_arr_final_final_final_final_final_final_final_final=()\n    local\
    \ -a sorted_arr_final_final_final_final_final_final_final_final_final=()\n   \
    \ local -a sorted_arr_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a sorted_arr_final_final_final_final_final_final_final_\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n\
    \  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n\
    \  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a zeros_sorted=()\n  local -a ones_sorted=()\n  local -a result=()\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n\
    \  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local\
    \ jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n\
    \  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local\
    \ ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n\
    \  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvv\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -a ones\n  local -a zeros\n  local -a\
    \ sorted\n  local -a sorted_ones\n  local -a sorted_zeros\n  local -a sorted_res\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a ones\n  local -a zeros\n  local -a result\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i tmp\n  local\
    \ -i tmp_dec\n  local -i tmp_bin\n  local -i tmp_ones\n  local -i tmp_zeros\n\
    \  local -i tmp_dec_zeros\n  local -i tmp_dec_ones\n  local -i tmp_bin_zeros\n\
    \  local -i tmp_bin_ones\n  local -i tmp_dec_zeros_ones\n  local -i tmp_dec_ones_zeros\n\
    \  local -i tmp_bin_zeros_ones\n  local -i tmp_bin_ones_zeros\n  local -i tmp_dec_zeros_ones_bin\n\
    \  local -i tmp_dec_ones_zeros_bin\n  local -i tmp_bin_zeros_ones_dec\n  local\
    \ -i tmp_bin_ones_zeros_dec\n  local -i tmp_dec_zeros_ones_bin_zeros\n  local\
    \ -i tmp_dec_ones_zeros_bin_zeros\n  local -i tmp_bin_zeros_ones_dec_zeros\n \
    \ local -i tmp_bin_ones_zeros_dec_zeros\n  local -i tmp_dec_zeros_ones_bin_ones\n\
    \  local -i tmp_dec_ones_zeros_bin_ones\n  local -i tmp_bin_zeros_ones_dec_ones\n\
    \  local -i tmp_bin_ones_zeros_dec_ones\n  local -i tmp_dec_zeros_ones_bin_zeros_ones\n\
    \  local -i tmp_dec_ones_zeros_bin_zeros_ones\n  local -i tmp_bin_zeros_ones_dec_zeros_ones\n\
    \  local -i tmp_bin_ones_zeros_dec_zeros_ones\n  local -i tmp_dec_zeros_ones_bin_ones_zeros\n\
    \  local -i tmp_dec_ones_zeros_bin_ones_zeros\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359183
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a final_arr=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n\
    \  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359184

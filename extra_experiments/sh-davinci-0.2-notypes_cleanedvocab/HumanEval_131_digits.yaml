name: HumanEval_131_digits
language: sh
prompt: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
  \ digits.\n# Return 0 if all digits are even.\n# For example:\n# >>> $(digits \"\
  1\")\n# \"1\"\n# >>> $(digits \"4\")\n# \"0\"\n# >>> $(digits \"235\")\n# \"15\"\
  \ndigits() {\n"
tests: "}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"\
  120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"\
  98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
  \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
completions: ["  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local\
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n\
    \  local result=1\n  while [[ $n -gt 0 ]]; do\n    local digit=$((n % 10))\n \
    \   if [[ $((digit % 2)) -ne 0 ]]; then\n      result=$((result * digit))\n  \
    \  fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local n=$1\n  local prod=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      prod=$((prod * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $prod", "  local n=$1\n  local product=1\n  local digit\n  while [[ $n\
    \ -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit % 2)) -ne 0 ]]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit\
    \ % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n  done\n  echo\
    \ $product", "  local n=\"$1\"\n  local product=1\n  local digit\n  while [ \"\
    $n\" -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ \"$product\"", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ ));\
    \ do\n    local digit=${n:$i:1}\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n \
    \     result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ n=\"$1\"\n  local result=1\n  local digit\n\n  while [ \"$n\" -gt 0 ]; do\n\
    \    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n\n  echo \"$result\"", "  local\
    \ -i n=$1\n  local -i product=1\n  local -i digit\n  while ((n > 0)); do\n   \
    \ digit=$((n % 10))\n    ((digit % 2 == 1)) && ((product *= digit))\n    n=$((n\
    \ / 10))\n  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n  for\
    \ (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      product=$(( product * digit ))\n    fi\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n     \
    \ product=$(( product * digit ))\n    fi\n  done\n  echo $product", "  local n=$1\n\
    \  local prod=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      prod=$(( prod * digit ))\n    fi\n \
    \ done\n  echo $prod", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ];\
    \ do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n   \
    \   result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=\"$1\"\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local\
    \ digit=\"${n:$i:1}\"\n    if [[ \"$digit\" -eq 0 ]]; then\n      continue\n \
    \   elif [[ \"$digit\" -eq 2 ]]; then\n      product=0\n      break\n    elif\
    \ [[ \"$digit\" -eq 4 ]]; then\n      product=0\n      break\n    elif [[ \"$digit\"\
    \ -eq 6 ]]; then\n      product=0\n      break\n    elif [[ \"$digit\" -eq 8 ]];\
    \ then\n      product=0\n      break\n    else\n      product=$(( product * digit\
    \ ))\n    fi\n  done\n  echo \"$product\"", "  local n=$1\n  local res=1\n  local\
    \ digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      res=$((res * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $res", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ];\
    \ do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n   \
    \   result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=\"$1\"\n  local result=1\n  local digit\n  for ((i=0; i<${#n}; i++));\
    \ do\n    digit=\"${n:$i:1}\"\n    if [[ \"$digit\" -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ \"$digit\" -eq 2 ]]; then\n      result=0\n      break\n  \
    \  fi\n    if [[ \"$digit\" -eq 4 ]]; then\n      result=0\n      break\n    fi\n\
    \    if [[ \"$digit\" -eq 6 ]]; then\n      result=0\n      break\n    fi\n  \
    \  if [[ \"$digit\" -eq 8 ]]; then\n      result=0\n      break\n    fi\n    result=$((result\
    \ * digit))\n  done\n  echo \"$result\"", "  local n=$1\n  local product=1\n \
    \ local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  while [\
    \ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ];\
    \ then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while [ $n\
    \ -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  while [[ $n -gt 0 ]]; do\n  \
    \  local digit=$(( n % 10 ))\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n    \
    \  product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n\
    \    local digit=${n:$i:1}\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo $result", "  local number=$1\n  local\
    \ product=1\n  for digit in $(echo $number | grep -o .); do\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n \
    \ echo $product", "  local n=$1\n  local product=1\n  local digit\n  while [ $n\
    \ -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ ));\
    \ do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n      product=$((\
    \ product * digit ))\n    fi\n  done\n  echo $product", "  local n=$1\n  local\
    \ result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n   \
    \ if (( digit % 2 != 0 )); then\n      result=$(( result * digit ))\n    fi\n\
    \  done\n  echo $result", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n};\
    \ i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n \
    \     result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local result=1\n  for ((i=0; i<${#1}; i++)); do\n    local digit=${1:$i:1}\n\
    \    if ((digit % 2 == 1)); then\n      result=$((result * digit))\n    fi\n \
    \ done\n  echo $result", "  local n=\"$1\"\n  local product=1\n  local digit\n\
    \  while [ \"$n\" -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n  while [ $n\
    \ -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n\
    \    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n      (( result\
    \ *= digit ))\n    fi\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  local digit=0\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local n=$1\n  local product=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $((digit % 2)) -eq\
    \ 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n  echo $product",
  "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      result=$(( result * digit ))\n    fi\n\
    \  done\n  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local\
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n\
    \  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "    local n=$1\n    local product=1\n    for\
    \ ((i=0; i<${#n}; i++)); do\n        local digit=${n:$i:1}\n        if ((digit\
    \ % 2 == 1)); then\n            product=$((product * digit))\n        fi\n   \
    \ done\n    echo $product", "  local n=$1\n  local product=1\n  for ((i=0; i<${#n};\
    \ i++)); do\n    local digit=${n:$i:1}\n    if ((digit % 2 == 1)); then\n    \
    \  product=$((product * digit))\n    fi\n  done\n  echo $product", "  local n=$1\n\
    \  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n  \
    \  if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n   \
    \ fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=\"$1\"\n  local\
    \ product=1\n  local digit\n  for ((i=0; i<${#n}; i++)); do\n    digit=\"${n:$i:1}\"\
    \n    if ((digit % 2 == 1)); then\n      product=$((product * digit))\n    fi\n\
    \  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local n=$1\n  local product=1\n  while [ $n -gt 0\
    \ ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=\"$1\"\n  local product=1\n  while [ \"$n\" -gt 0 ]; do\n\
    \    local digit=$((n % 10))\n    if [ \"$digit\" -gt 0 ] && [ $((digit % 2))\
    \ -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo \"$product\"", "  local n=$1\n  local result=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $product", "  local n=$1\n  local result=1\n  while [ $n -gt 0\
    \ ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "  local n=$1\n  local product=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $((digit % 2)) -eq\
    \ 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local sum=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      sum=$((sum * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $sum", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  for ((\
    \ i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 ==\
    \ 1 )); then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "    local n=$1\n    local result=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $result", " \
    \ local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit\
    \ % 2 == 1 )); then\n      (( product *= digit ))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local n=$1\n  local result=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq\
    \ 1 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local digits=\"$1\"\n  local product=1\n  local digit\n \
    \ for digit in $(echo \"$digits\" | grep -o .); do\n    if [[ $((digit % 2)) -eq\
    \ 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n  echo \"$product\"",
  "  local n=$1\n  local product=1\n  local digit\n  while [[ $n -gt 0 ]]; do\n  \
    \  digit=$((n % 10))\n    if [[ $((digit % 2)) -ne 0 ]]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n\
    \  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=\"$1\"\n  local result=1\n  local digit\n\
    \  while [ \"$n\" -gt 0 ]; do\n    digit=$((n % 10))\n    if [ \"$((digit % 2))\"\
    \ -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo \"$result\"", "  local -i n=$1\n  local -i prod=1\n  while ((\
    \ n > 0 )); do\n    local -i digit=$(( n % 10 ))\n    if (( digit % 2 == 1 ));\
    \ then\n      prod *= digit\n    fi\n    n /= 10\n  done\n  echo $prod", "   \
    \ local n=\"$1\"\n    local result=1\n    for (( i=0; i<${#n}; i++ )); do\n  \
    \      local digit=\"${n:$i:1}\"\n        if [[ $((digit % 2)) -eq 1 ]]; then\n\
    \            result=$((result * digit))\n        fi\n    done\n    echo \"$result\"",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne\
    \ 0 ]; then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n\
    \  done\n  echo $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n};\
    \ i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n \
    \     product=$(( product * digit ))\n    fi\n  done\n  echo $product", "  local\
    \ n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product * digit))\n \
    \   fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n \
    \ while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n\
    \    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=\"\
    $1\"\n  local result=1\n  local digit\n  for (( i=0; i<${#n}; i++ )); do\n   \
    \ digit=\"${n:$i:1}\"\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo \"$result\"", "  local n=$1\n  local\
    \ product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n \
    \   fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -eq 1 ];\
    \ then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n     \
    \ (( product *= digit ))\n    fi\n  done\n  echo $product", "  local number=$1\n\
    \  local result=1\n  for (( i=0; i<${#number}; i++ )); do\n    local digit=${number:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo $result", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n     \
    \ result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local -i n=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( n += ${1:$i:1}\
    \ ))\n  done\n  echo \"$n\"", "  local n=$1\n  local result=1\n  while [ $n -gt\
    \ 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  while [[ $n -gt 0 ]]; do\n    local digit=$((n\
    \ % 10))\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      product=$((product *\
    \ digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=\"\
    $1\"\n  local product=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo \"$product\"", "  local n=$1\n  local\
    \ result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n   \
    \ if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "  local n=\"$1\"\n  local product=1\n  for\
    \ (( i=0; i<${#n}; i++ )); do\n    local digit=\"${n:$i:1}\"\n    if (( digit\
    \ % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n  done\n  echo\
    \ \"$product\"", "  local n=$1\n  local result=1\n  local digit\n  while [[ $n\
    \ -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit % 2)) -ne 0 ]]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "    local n=$1\n    local product=1\n    while [ $n -gt 0 ]; do\n        local\
    \ digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo $result", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if [[ $((digit % 2)) -eq 1 ]]; then\n\
    \      product=$((product * digit))\n    fi\n  done\n  echo $product", "  local\
    \ n=\"$1\"\n  local result=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n  \
    \  digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n      result=$((\
    \ result * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo \"$result\"",
  "  local n=\"$1\"\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local\
    \ digit=\"${n:$i:1}\"\n    if (( digit % 2 == 1 )); then\n      product=$(( product\
    \ * digit ))\n    fi\n  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n\
    \  while [[ $n -gt 0 ]]; do\n    local digit=$(( n % 10 ))\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n\
    \      result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ -i n=$1\n  local -i prod=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$((\
    \ n % 10 ))\n    (( digit % 2 == 1 )) && (( prod *= digit ))\n    n=$(( n / 10\
    \ ))\n  done\n  echo $prod", "  local n=\"$1\"\n  local product=1\n  local digit\n\
    \  for ((i=0; i<${#n}; i++)); do\n    digit=\"${n:$i:1}\"\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n \
    \ echo \"$product\"", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n};\
    \ i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n \
    \     product=$(( product * digit ))\n    fi\n  done\n  echo $product", "  local\
    \ n=\"$1\"\n  local product=1\n  local digit\n  for ((i=0; i<${#n}; i++)); do\n\
    \    digit=\"${n:$i:1}\"\n    if [[ \"$digit\" -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ \"$((digit % 2))\" -eq 1 ]]; then\n      product=$((product\
    \ * digit))\n    fi\n  done\n  echo \"$product\"", "    local n=\"$1\"\n    local\
    \ product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n %\
    \ 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo \"$product\"",
  "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=$1\n  local product=1\n  while [ $n\
    \ -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local\
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "    local n=$1\n    local\
    \ product=1\n    local digit\n    for (( ; n > 0; n /= 10 )); do\n        digit=$((\
    \ n % 10 ))\n        if (( digit % 2 == 1 )); then\n            product=$(( product\
    \ * digit ))\n        fi\n    done\n    echo $product", "  local n=$1\n  local\
    \ product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n  \
    \  if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n\
    \  done\n  echo $product", "  local n=$1\n  local result=1\n  while [ $n -gt 0\
    \ ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n  done\n \
    \ echo $product", "  local n=$1\n  local res=1\n  for ((i=0; i<${#n}; i++)); do\n\
    \    local digit=${n:$i:1}\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      res=$((res\
    \ * digit))\n    fi\n  done\n  echo $res", "  local n=$1\n  local result=1\n \
    \ for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit\
    \ % 2 == 1 )); then\n      result=$(( result * digit ))\n    fi\n  done\n  echo\
    \ $result", "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product",
  "  local product=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=\"$1\"\n  local product=1\n  for ((\
    \ i=0; i<${#n}; i++ )); do\n    local digit=\"${n:$i:1}\"\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      product=$(( product * digit ))\n    fi\n  done\n\
    \  echo \"$product\"", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ ));\
    \ do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n      product=$((\
    \ product * digit ))\n    fi\n  done\n  echo $product", "  local result=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n\
    \  echo \"$result\"", "  local -i n=$1\n  local -i product=1\n  while (( n > 0\
    \ )); do\n    local -i digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n    (( n /= 10 ))\n  done\n  echo $product", "  local n=$1\n  local\
    \ product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n \
    \   fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit\
    \ % 2 == 1 )); then\n      (( product *= digit ))\n    fi\n  done\n  echo $product",
  "  local num=$1\n  local result=1\n  for (( i=0; i<${#num}; i++ )); do\n    local\
    \ digit=${num:$i:1}\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result\
    \ * digit))\n    fi\n  done\n  echo $result", "    local n=$1\n    local product=1\n\
    \    while [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            product=$((product * digit))\n        fi\n\
    \        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq\
    \ 1 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n\
    \    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  while [\
    \ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ];\
    \ then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local -i product=1\n  local -i digit\n  for ((i=0; i<${#1};\
    \ i++)); do\n    digit=${1:i:1}\n    ((digit % 2 == 1)) && ((product *= digit))\n\
    \  done\n  echo $product", "    local n=$1\n    local result=1\n    while [ $n\
    \ -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne\
    \ 0 ]; then\n            result=$((result * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $result", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $((digit % 2)) -eq\
    \ 1 ]]; then\n      result=$((result * digit))\n    fi\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $((digit % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n\
    \    fi\n  done\n  echo $product", "  local num=$1\n  local result=1\n  for ((\
    \ i=0; i<${#num}; i++ )); do\n    local digit=${num:$i:1}\n    if (( digit % 2\
    \ == 1 )); then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "  local n=$1\n  local sum=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      sum=$((sum * digit))\n    fi\n \
    \   n=$((n / 10))\n  done\n  echo $sum", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ ));\
    \ do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n      product=$((\
    \ product * digit ))\n    fi\n  done\n  echo $product", "  local n=$1\n  local\
    \ product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n \
    \   fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=\"$1\"\n  local\
    \ product=1\n  local digit\n  for (( i=0; i<${#n}; i++ )); do\n    digit=\"${n:$i:1}\"\
    \n    if [[ $((digit % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n\
    \    fi\n  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n  for\
    \ (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2\
    \ == 1 )); then\n      product=$(( product * digit ))\n    fi\n  done\n  echo\
    \ $product", "  local n=\"$1\"\n  local product=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=\"${n:$i:1}\"\n    if [[ $((digit % 2)) -eq 1 ]]; then\n\
    \      product=$((product * digit))\n    fi\n  done\n  echo \"$product\"", " \
    \ local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n  done\n  echo\
    \ $product", "  local n=\"$1\"\n  local result=1\n  local digit\n  while [ \"\
    $n\" -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo \"\
    $result\"", "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local\
    \ digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -eq 1 ]; then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", " \
    \ local n=$1\n  local result=1\n  for ((i=0; i<${#n}; i++)); do\n    local digit=${n:$i:1}\n\
    \    if [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result * digit))\n \
    \   fi\n  done\n  echo $result", "  local n=$1\n  local product=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  local digit\n  while [[ $n -gt 0 ]]; do\n  \
    \  digit=$((n % 10))\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local number=$1\n  local\
    \ product=1\n  while [ $number -gt 0 ]; do\n    local digit=$(( number % 10 ))\n\
    \    if [ $(( digit % 2 )) -eq 1 ]; then\n      product=$(( product * digit ))\n\
    \    fi\n    number=$(( number / 10 ))\n  done\n  echo $product", "  local n=$1\n\
    \  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $((digit % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n\
    \    fi\n  done\n  echo $product", "  local n=$1\n  local product=1\n  for ((\
    \ i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 ==\
    \ 1 )); then\n      (( product *= digit ))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 != 0 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=$1\n  local result=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n\
    \    local digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n\
    \  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=$1\n  local result=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local n=\"$1\"\n  local prod=1\n  while [[ $n -gt 0 ]]; do\n\
    \    local digit=$((n % 10))\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      prod=$((prod\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo \"$prod\"", "  local n=$1\n\
    \  local product=1\n  while [[ $n -gt 0 ]]; do\n    local digit=$((n % 10))\n\
    \    if [[ $((digit % 2)) -ne 0 ]]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      product=$(( product * digit ))\n    fi\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n\
    \    local digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n    \
    \  product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local\
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=\"\
    $1\"\n  local product=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo \"$product\"", "  local n=$1\n  local\
    \ result=1\n  while [[ $n -gt 0 ]]; do\n    local digit=$((n % 10))\n    if [[\
    \ $((digit % 2)) -ne 0 ]]; then\n      result=$((result * digit))\n    fi\n  \
    \  n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local product=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n \
    \ while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=${n:$i:1}\n    if (( digit % 2 == 1 )); then\n     \
    \ (( product *= digit ))\n    fi\n  done\n  echo $product", "  local n=$1\n  local\
    \ product=1\n  while (( n > 0 )); do\n    local digit=$(( n % 10 ))\n    if ((\
    \ digit % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product", "  local n=$1\n  local result=1\n  for\
    \ (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit\
    \ % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n\
    \  echo $result", "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n\
    \    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n\
    \  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "  local n=$1\n  local result=1\n  for (( i=0;\
    \ i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n    if [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n  done\n  echo $product", "  local n=$1\n  local result=1\n  while [ $n\
    \ -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((\
    \ n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n      product=$(( product\
    \ * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "    local n=\"$1\"\n    local product=1\n\
    \    local digit\n    while [ \"$n\" -gt 0 ]; do\n        digit=$(( n % 10 ))\n\
    \        if [ $(( digit % 2 )) -ne 0 ]; then\n            product=$(( product\
    \ * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo \"$product\"",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=0\n  for ((i=0;\
    \ i<${#1}; i++)); do\n    local -i d=${1:i:1}\n    (( d % 2 == 1 )) && (( n *=\
    \ d ))\n  done\n  echo $n", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local n=$1\n  local product=1\n  while [ $n -gt 0\
    \ ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product",
  "  local n=\"$1\"\n  local result=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n\
    \    digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n      result=$((\
    \ result * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo \"$result\"",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product"]
stop_tokens:
- "\n}"

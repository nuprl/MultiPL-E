name: HumanEval_4_mean_absolute_deviation
language: sh
prompt: "#!/bin/bash\n# For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n# around the mean of this dataset.\n# Mean Absolute Deviation is the\
  \ average absolute difference between each\n# element and a centerpoint (mean in\
  \ this case):\n# MAD = average | x - x_mean |\n# >>> $(mean_absolute_deviation \"\
  1.0 2.0 3.0 4.0\")\n# \"1.0\"\nmean_absolute_deviation() {\n"
tests: "}\n\ncandidate() {\n    mean_absolute_deviation \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0\") = \"0.5\" ]]\n    [[ $(candidate \"1.0 2.0\
  \ 3.0 4.0\") = \"1.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"1.2\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local -a numbers=($@)\n    local -a abs_differences=()\n    local\
    \ sum=0\n    local mean=0\n    local mad=0\n    local i=0\n\n    # Calculate mean\n\
    \    for i in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc -l)\n\
    \    done\n    mean=$(echo \"$sum / ${#numbers[@]}\" | bc -l)\n\n    # Calculate\
    \ absolute differences\n    for i in \"${numbers[@]}\"; do\n        abs_differences+=($(echo\
    \ \"scale=2; $i - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n\n\
    \    # Calculate mean absolute deviation\n    sum=0\n    for i in \"${abs_differences[@]}\"\
    ; do\n        sum=$(echo \"$sum + $i\" | bc -l)\n    done\n    mad=$(echo \"$sum\
    \ / ${#abs_differences[@]}\" | bc -l)\n\n    echo \"$mad\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a absolute_deviations\n    absolute_deviations=($(absolute_deviations\
    \ \"${numbers[@]}\" \"$mean\"))\n    local sum\n    sum=$(sum \"${absolute_deviations[@]}\"\
    )\n    local count\n    count=$(echo \"${#absolute_deviations[@]}\")\n    echo\
    \ \"$(bc <<< \"scale=2; $sum / $count\")\"", "    local -a numbers=($@)\n    local\
    \ mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local numbers=\"$1\"\n    local\
    \ mean=$(mean \"$numbers\")\n    local abs_diffs=\"\"\n    for number in $numbers;\
    \ do\n        local abs_diff=$(echo \"$number - $mean\" | bc -l)\n        abs_diffs=\"\
    $abs_diffs $(echo \"$abs_diff\" | bc -l)\"\n    done\n    echo \"$(mean \"$abs_diffs\"\
    )\"", "    local -a data=($@)\n    local -i n=${#data[@]}\n    local -i i\n  \
    \  local -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + data[i]))\n    done\n   \
    \ mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((data[i]\
    \ - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    echo\
    \ $((abs_dev_sum / n))", "    local -n arr=$1\n    local sum=0\n    local mean=0\n\
    \    local abs_dev=0\n    local mad=0\n    local len=${#arr[@]}\n    for i in\
    \ \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc -l)\n    done\n   \
    \ mean=$(echo \"$sum / $len\" | bc -l)\n    for i in \"${arr[@]}\"; do\n     \
    \   abs_dev=$(echo \"scale=2; $abs_dev + abs($i - $mean)\" | bc -l)\n    done\n\
    \    mad=$(echo \"scale=2; $abs_dev / $len\" | bc -l)\n    echo \"$mad\"", " \
    \   local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a deviations=()\n    for number in \"${numbers[@]}\"; do\n        local deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        local abs_deviation=$(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l)\n        deviations+=(\"$abs_deviation\"\
    )\n    done\n    mean \"${deviations[@]}\"", "  local -a numbers\n  numbers=($(echo\
    \ \"$@\"))\n  local mean\n  mean=$(mean \"${numbers[@]}\")\n  local -a absolute_deviations\n\
    \  for number in \"${numbers[@]}\"; do\n    absolute_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n  done\n  echo \"${absolute_deviations[@]}\"",
  "    local -a data\n    local -i i\n    local -r mean=\"$(mean \"$@\")\"\n    data=($@)\n\
    \    for ((i=0; i<${#data[@]}; i++)); do\n        data[$i]=$(echo \"${data[$i]}\
    \ - $mean\" | bc -l)\n        data[$i]=$(echo \"if (${data[$i]} < 0) ${data[$i]}\
    \ * -1 else ${data[$i]}\")\n    done\n    echo \"$(mean \"${data[@]}\")\"", " \
    \   local -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs=()\n \
    \   for number in \"${numbers[@]}\"; do\n        abs_diffs+=(\"$(abs \"$(bc <<<\
    \ \"$number - $mean\")\")\")\n    done\n    mean \"${abs_diffs[@]}\"", "    local\
    \ -a numbers\n    local mean\n    local sum_of_abs_diff\n    local num_numbers\n\
    \    local mad\n\n    numbers=($1)\n    mean=$(mean \"${numbers[@]}\")\n    sum_of_abs_diff=0\n\
    \    num_numbers=${#numbers[@]}\n    for n in \"${numbers[@]}\"; do\n        sum_of_abs_diff=$(echo\
    \ \"$sum_of_abs_diff + abs($n - $mean)\" | bc -l)\n    done\n    mad=$(echo \"\
    $sum_of_abs_diff / $num_numbers\" | bc -l)\n    echo \"$mad\"", "    local -a\
    \ numbers=(\"$@\")\n    local -i count=${#numbers[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean=0\n    local -i mad=0\n    local -i diff=0\n   \
    \ for ((i=0; i<count; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / count))\n    for ((i=0; i<count; i++)); do\n        diff=$((numbers[i]\
    \ - mean))\n        if ((diff < 0)); then\n            diff=$((-diff))\n     \
    \   fi\n        mad=$((mad + diff))\n    done\n    echo $((mad / count))", " \
    \   local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a abs_diffs=()\n    for number in \"${numbers[@]}\"; do\n        abs_diffs+=(\"\
    $(echo \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n\
    \    echo \"$(mean \"${abs_diffs[@]}\")\"", "    local -a x\n    local -a x_mean\n\
    \    local -a x_diff\n    local -a x_abs\n    local -a x_abs_mean\n    local -a\
    \ x_abs_mean_str\n    local -a x_abs_mean_str_trimmed\n    x=($@)\n    x_mean=$(mean\
    \ \"${x[@]}\")\n    for i in \"${x[@]}\"; do\n        x_diff+=($(echo \"$i - $x_mean\"\
    \ | bc -l))\n    done\n    for i in \"${x_diff[@]}\"; do\n        x_abs+=($(echo\
    \ \"if ($i < 0) $i * -1 else $i\" | bc -l))\n    done\n    x_abs_mean=$(mean \"\
    ${x_abs[@]}\")\n    x_abs_mean_str=$(echo \"$x_abs_mean\" | bc -l)\n    x_abs_mean_str_trimmed=${x_abs_mean_str%.*}\n\
    \    echo \"$x_abs_mean_str_trimmed\"", "    local mean=$(mean \"$@\")\n    local\
    \ abs_deviations=$(echo \"$@\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk\
    \ '{print $1 < 0 ? -$1 : $1}')\n    local sum_abs_deviations=$(echo \"$abs_deviations\"\
    \ | awk '{sum += $1} END {print sum}')\n    local num_elements=$(echo \"$abs_deviations\"\
    \ | wc -l)\n    echo \"$sum_abs_deviations / $num_elements\" | bc -l", "    local\
    \ -a numbers\n    local -i count=0\n    local -i i\n    local -r mean=$(mean \"\
    $@\")\n    local -r scale=$(scale \"$@\")\n    local -r digits=$(digits \"$@\"\
    )\n    local -r format=\"%0.${digits}f\"\n    local -r format_mean=\"%0.${digits}f\"\
    \n    local -r format_scale=\"%0.${digits}f\"\n    local -r format_count=\"%0.${digits}f\"\
    \n    local -r format_sum=\"%0.${digits}f\"\n    local -r format_result=\"%0.${digits}f\"\
    \n    local -r format_abs=\"%0.${digits}f\"\n    local -r format_diff=\"%0.${digits}f\"\
    \n    local -r format_div=\"%0.${digits}f\"\n    local -r format_div_sum=\"%0.${digits}f\"\
    \n    local -r format_div_count=\"%0.${digits}f\"\n    local -r format_div_result=\"\
    %0.${digits}f\"\n    local -r format_div_abs=\"%0.${digits}f\"\n    local -r format_div_diff=\"\
    %0.${digits}f\"\n    local -r format_div_div=\"%0.${digits}f\"\n    local -r format_div_div_sum=\"\
    %0.${digits}f\"\n    local -r format_div_div_count=\"%0.${digits}f\"\n    local\
    \ -r format_div_div_result=\"%0.${digits}f\"\n    local -r format_div_div_abs=\"\
    %0.${digits}f\"\n    local -r format_div_div_diff=\"%0.${digits}f\"\n    local\
    \ -r format_div_div_div=\"%0.${digits}f\"\n    local -r format_div_div_div_sum=\"\
    %0.${digits}f\"\n    local -r format_div_div_div_count=\"%0.${", "    local mean=$(mean\
    \ \"$@\")\n    local abs_deviation=$(echo \"$@\" | awk '{for(i=1;i<=NF;i++)print\
    \ $i - '\"$mean\"'}' | awk '{for(i=1;i<=NF;i++)if($i<0)print -$i;else print $i}'\
    \ | paste -sd+ - | bc)\n    echo \"$abs_deviation / $#\" | bc -l", "    local\
    \ -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local -a deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation=$(echo \"$number\
    \ - $mean\" | bc -l)\n        deviations+=($(echo \"${deviation#-}\"))\n    done\n\
    \    mean \"${deviations[@]}\"", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n\
    \    for x in \"$@\"; do\n        abs_diff_sum=$(echo \"$abs_diff_sum + abs($x\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", " \
    \   local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i i\n   \
    \ local -i sum=0\n    local -i mean\n    local -i abs_deviation\n    local -i\
    \ sum_abs_deviation=0\n    local -i mad\n    for ((i=0; i<n; i++)); do\n     \
    \   sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0;\
    \ i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation=$((abs_deviation\
    \ < 0 ? -abs_deviation : abs_deviation))\n        sum_abs_deviation=$((sum_abs_deviation\
    \ + abs_deviation))\n    done\n    mad=$((sum_abs_deviation / n))\n    echo \"\
    $mad\"", "    local mean=$(mean \"$@\")\n    local sum=0\n    for i in $@; do\n\
    \        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l", "    local -a numbers\n    numbers=($(echo \"$1\" | tr '\
    \ ' '\\n'))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a\
    \ deviations\n    deviations=($(echo \"${numbers[@]}\" | tr ' ' '\\n' | awk -v\
    \ mean=\"$mean\" '{print $1 - mean}'))\n    local -a absolute_deviations\n   \
    \ absolute_deviations=($(echo \"${deviations[@]}\" | tr ' ' '\\n' | awk '{print\
    \ $1 < 0 ? -$1 : $1}'))\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | tr ' ' '\\n' | awk '{sum += $1} END {print sum}')\n    local count\n    count=$(echo\
    \ \"${absolute_deviations[@]}\" | tr ' ' '\\n' | wc -l)\n    echo \"$sum / $count\"\
    \ | bc -l", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo \"\
    $@\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 :\
    \ $1}')\n    local sum=$(echo \"$abs_deviations\" | awk '{sum += $1} END {print\
    \ sum}')\n    local count=$(echo \"$abs_deviations\" | wc -l)\n    echo \"$sum\
    \ / $count\" | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n \
    \   local mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n    local\
    \ abs_deviation\n    for number in \"${numbers[@]}\"; do\n        abs_deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        abs_deviations+=($(echo \"$abs_deviation\"\
    \ | awk '{printf \"%f\", $0}'))\n    done\n    mean \"${abs_deviations[@]}\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        absolute_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    local -a absolute_deviations_absolute\n    for\
    \ absolute_deviation in \"${absolute_deviations[@]}\"; do\n        absolute_deviations_absolute+=($(echo\
    \ \"$absolute_deviation < 0 ? -$absolute_deviation : $absolute_deviation\" | bc\
    \ -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${absolute_deviations_absolute[@]}\"\
    )\"", "    local -a numbers=(\"$@\")\n    local -a abs_deviations=()\n    local\
    \ -i i=0\n    local -i n=${#numbers[@]}\n    local -i sum=0\n    local -i mean=0\n\
    \    local -i abs_deviation=0\n    local -i sum_abs_deviations=0\n    local -i\
    \ mean_abs_deviation=0\n\n    # Calculate mean\n    for ((i=0; i<n; i++)); do\n\
    \        sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n\n    # Calculate\
    \ absolute deviations\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviations+=($((abs_deviation < 0 ? -abs_deviation : abs_deviation)))\n\
    \    done\n\n    # Calculate mean absolute deviation\n    for ((i=0; i<n; i++));\
    \ do\n        sum_abs_deviations=$((sum_abs_deviations + abs_deviations[i]))\n\
    \    done\n    mean_abs_deviation=$((sum_abs_deviations / n))\n\n    echo \"$mean_abs_deviation\"",
  "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a deviations=()\n    for n in \"${numbers[@]}\"; do\n        local deviation=$(bc\
    \ <<< \"scale=2; ${n} - ${mean}\")\n        deviations+=($(bc <<< \"scale=2; ${deviation}\
    \ < 0 ? -${deviation} : ${deviation}\"))\n    done\n    mean \"${deviations[@]}\"",
  "    local -a input_array\n    local -i i\n    local -i n\n    local -i sum\n  \
    \  local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum\n    local -i\
    \ abs_dev_mean\n    input_array=($@)\n    n=${#input_array[@]}\n    for ((i=0;\
    \ i<n; i++)); do\n        sum=$((sum + input_array[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((input_array[i] - mean))\n\
    \        abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    abs_dev_mean=$((abs_dev_sum\
    \ / n))\n    echo $abs_dev_mean", "    local arr=(\"$@\")\n    local mean=$(mean\
    \ \"${arr[@]}\")\n    local abs_diff_sum=0\n    for i in \"${arr[@]}\"; do\n \
    \       abs_diff_sum=$(echo \"$abs_diff_sum + abs($i - $mean)\" | bc -l)\n   \
    \ done\n    echo \"$abs_diff_sum / ${#arr[@]}\" | bc -l", "    local mean=$(mean\
    \ \"$@\")\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n        count=$(echo \"$count + 1\" | bc\
    \ -l)\n    done\n    echo \"$sum / $count\" | bc -l", "    local -a input_array=($@)\n\
    \    local -a abs_diff_array\n    local -a abs_diff_array_sorted\n    local -i\
    \ i\n    local -i n=${#input_array[@]}\n    local -i n_half=$((n/2))\n    local\
    \ -i median_index\n    local -r median_index_float=$(echo \"scale=3; $n/2\" |\
    \ bc)\n    local -r median_index_int=$(echo $median_index_float | cut -d. -f1)\n\
    \    local -r median_index_decimal=$(echo $median_index_float | cut -d. -f2)\n\
    \    local -r median_index_decimal_int=$(echo $median_index_decimal | cut -d.\
    \ -f1)\n    local -r median_index_decimal_decimal=$(echo $median_index_decimal\
    \ | cut -d. -f2)\n    local -r median_index_decimal_decimal_int=$(echo $median_index_decimal_decimal\
    \ | cut -d. -f1)\n    local -r median_index_decimal_decimal_decimal=$(echo $median_index_decimal_decimal\
    \ | cut -d. -f2)\n    local -r median_index_decimal_decimal_decimal_int=$(echo\
    \ $median_index_decimal_decimal_decimal | cut -d. -f1)\n    local -r median_index_decimal_decimal_decimal_decimal=$(echo\
    \ $median_index_decimal_decimal_decimal | cut -d. -f2)\n    local -r median_index_decimal_decimal_decimal_decimal_int=$(echo\
    \ $median_index_decimal_decimal_decimal_decimal | cut -d. -f1)\n    local -r median_index_decimal_decimal_decimal_decimal_decimal=$(echo\
    \ $median_index_decimal_decimal_decimal_decimal | cut -d. -f2)\n    local -r median_index_",
  "  local -a numbers=(\"$@\")\n  local -i n=${#numbers[@]}\n  local -i i\n  local\
    \ -i sum=0\n  local -i mean\n  local -i abs_deviation\n  local -i abs_deviation_sum=0\n\
    \  local -i abs_deviation_mean\n  for ((i=0; i<n; i++)); do\n    sum=$((sum +\
    \ numbers[i]))\n  done\n  mean=$((sum / n))\n  for ((i=0; i<n; i++)); do\n   \
    \ abs_deviation=$((numbers[i] - mean))\n    abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n  done\n  abs_deviation_mean=$((abs_deviation_sum / n))\n\
    \  echo \"$abs_deviation_mean\"", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n\
    \    for x in \"$@\"; do\n        local abs_diff=$(echo \"$x - $mean\" | bc -l)\n\
    \        local abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n  \
    \  done\n    local abs_diff_sum=$(echo \"$abs_diff_sum / $#\" | bc -l)\n    echo\
    \ \"$abs_diff_sum\"", "    local -a numbers\n    numbers=($(echo \"$@\"))\n  \
    \  local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n \
    \   deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print $1-mean}'))\n\
    \    local -a absolute_deviations\n    absolute_deviations=($(echo \"${deviations[@]}\"\
    \ | awk '{print $1<0?-$1:$1}'))\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum/$count\" | bc -l", "    local -a values=($@)\n   \
    \ local -a abs_deviations\n    local mean=$(mean \"${values[@]}\")\n    for value\
    \ in \"${values[@]}\"; do\n        abs_deviations+=($(echo \"$value - $mean\"\
    \ | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\"\
    )\"", "    local -a numbers=($@)\n    local -a abs_deviations=()\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"scale=2; ${number} - ${mean}\" | bc -l | awk '{printf \"%f\", $0}'))\n   \
    \ done\n    echo \"$(mean \"${abs_deviations[@]}\")\"", "    local x_mean=$(mean\
    \ \"$@\")\n    local x_deviations=$(echo \"$@\" | awk '{for (i=1; i<=NF; i++)\
    \ print $i - '\"$x_mean\"'}')\n    local x_absolute_deviations=$(echo \"$x_deviations\"\
    \ | awk '{for (i=1; i<=NF; i++) print $i < 0 ? -$i : $i}')\n    echo \"$x_absolute_deviations\"\
    \ | mean", "    local -a numbers\n    IFS=' ' read -r -a numbers <<< \"$1\"\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number in\
    \ \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number - $mean)\" |\
    \ bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a\
    \ numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo\
    \ \"scale=2; $number - $mean\" | bc))\n    done\n    local -a absolute_deviations\n\
    \    for deviation in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"scale=2; $deviation < 0 ? -$deviation : $deviation\" | bc))\n    done\n  \
    \  mean \"${absolute_deviations[@]}\"", "    local -a numbers\n    numbers=($@)\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs\n\
    \    abs_diffs=()\n    for number in \"${numbers[@]}\"; do\n        abs_diffs+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $1 < 0 ? -$1 : $1}'))\n \
    \   done\n    echo \"$(mean \"${abs_diffs[@]}\")\"", "    local -a xs=(\"$@\"\
    )\n    local x_mean=$(mean \"${xs[@]}\")\n    local -a xs_minus_x_mean=()\n  \
    \  for x in \"${xs[@]}\"; do\n        xs_minus_x_mean+=(\"$(echo \"$x - $x_mean\"\
    \ | bc -l)\")\n    done\n    local -a xs_minus_x_mean_abs=()\n    for x in \"\
    ${xs_minus_x_mean[@]}\"; do\n        xs_minus_x_mean_abs+=(\"$(echo \"if ($x <\
    \ 0) $x * -1 else $x\" | bc -l)\")\n    done\n    mean \"${xs_minus_x_mean_abs[@]}\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        local diff\n        diff=$(echo \"$number - $mean\" | bc -l)\n \
    \       local abs_diff\n        abs_diff=$(echo \"if ($diff < 0) $diff * -1 else\
    \ $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a nums\n    nums=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${nums[@]}\")\n    local -a abs_diffs\n\
    \    abs_diffs=($(echo \"${nums[@]}\" | awk -v mean=\"$mean\" '{for (i=1; i<=NF;\
    \ i++) {print $i-mean}}' | awk '{print $1>0?$1:-$1}'))\n    local sum\n    sum=$(echo\
    \ \"${abs_diffs[@]}\" | awk '{for (i=1; i<=NF; i++) {sum+=$i}} END {print sum}')\n\
    \    local n\n    n=$(echo \"${abs_diffs[@]}\" | wc -w)\n    echo \"$sum / $n\"\
    \ | bc -l", "    local -a nums\n    nums=($(echo $@))\n    local mean=$(mean \"\
    ${nums[@]}\")\n    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($num - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#nums[@]}\"\
    \ | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local sum\n    sum=0\n    for number\
    \ in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number - $mean)\"\
    \ | bc -l)\n    done\n    local n\n    n=$(echo \"${#numbers[@]}\")\n    echo\
    \ \"$sum / $n\" | bc -l", "    local -a arr=(\"$@\")\n    local mean=$(mean \"\
    ${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#arr[@]}\"\
    \ | bc -l", "    local -a data=($@)\n    local -i n=${#data[@]}\n    local -i\
    \ i\n    local -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i\
    \ abs_dev_sum=0\n    local -i mad\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + data[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n\
    \        abs_dev=$((data[i] - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n\
    \    done\n    mad=$((abs_dev_sum / n))\n    echo $mad", "    local -a nums\n\
    \    nums=($(echo \"$@\"))\n    local mean=$(mean \"${nums[@]}\")\n    local -a\
    \ diffs\n    for num in \"${nums[@]}\"; do\n        diffs+=($(echo \"$num - $mean\"\
    \ | bc -l))\n    done\n    local -a abs_diffs\n    for diff in \"${diffs[@]}\"\
    ; do\n        abs_diffs+=($(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc\
    \ -l))\n    done\n    mean \"${abs_diffs[@]}\"", "    local -a x\n    local -i\
    \ n=0\n    local -i i\n    local -i sum=0\n    local -i mean=0\n    local -i mad=0\n\
    \    local -i x_i=0\n    local -i x_mean=0\n    local -i x_diff=0\n    local -i\
    \ x_abs_diff=0\n    local -i sum_abs_diff=0\n    local -i mean_abs_diff=0\n  \
    \  local -i mad=0\n    x=($@)\n    n=${#x[@]}\n    for ((i=0; i<n; i++)); do\n\
    \        x_i=${x[$i]}\n        sum=$((sum + x_i))\n    done\n    mean=$((sum /\
    \ n))\n    for ((i=0; i<n; i++)); do\n        x_i=${x[$i]}\n        x_mean=$((x_i\
    \ - mean))\n        x_abs_diff=$((x_mean < 0 ? -x_mean : x_mean))\n        sum_abs_diff=$((sum_abs_diff\
    \ + x_abs_diff))\n    done\n    mean_abs_diff=$((sum_abs_diff / n))\n    echo\
    \ $mean_abs_diff", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local\
    \ mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum\n    sum=0\n    for\
    \ i in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\" |\
    \ bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "  local -a numbers=($@)\n\
    \  local mean=$(mean \"${numbers[@]}\")\n  local -a abs_diffs=()\n  for number\
    \ in \"${numbers[@]}\"; do\n    abs_diffs+=($(echo \"scale=4; ${number} - ${mean}\"\
    \ | bc -l | awk '{printf \"%f\", $0}'))\n  done\n  echo $(mean \"${abs_diffs[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}'))\n    local -a abs_deviations\n \
    \   abs_deviations=($(echo \"${deviations[@]}\" | awk '{print $1>0?$1:-$1}'))\n\
    \    local sum\n    sum=$(echo \"${abs_deviations[@]}\" | awk '{sum+=$1} END {print\
    \ sum}')\n    local count\n    count=$(echo \"${numbers[@]}\" | wc -w)\n    echo\
    \ \"$sum/$count\" | bc -l", "    local -a x=($@)\n    local -a x_mean=$(mean \"\
    ${x[@]}\")\n    local -a x_abs_dev=($(absolute_deviation \"${x[@]}\" \"$x_mean\"\
    ))\n    local -a x_abs_dev_mean=$(mean \"${x_abs_dev[@]}\")\n    echo \"$x_abs_dev_mean\"",
  "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=(\"\
    $(echo \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n\
    \    echo \"$(mean \"${abs_deviations[@]}\")\"", "    local list=\"$1\"\n    local\
    \ mean=$(mean \"$list\")\n    local sum=0\n    for i in $list; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l",
  "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo \"$@\" | awk '{for\
    \ (i=1; i<=NF; i++) printf(\"%s \", (i==1?\"\":FS)fabs($i-'$mean'))}')\n    echo\
    \ \"$abs_deviations\" | mean", "    local -a arr=(\"$@\")\n    local mean=$(mean\
    \ \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#arr[@]}\"\
    \ | bc -l", "    local -a numbers\n    local n\n    local sum=0\n    local mean\n\
    \    local mad=0\n    IFS=' ' read -r -a numbers <<< \"$1\"\n    for n in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + $n\" | bc -l)\n    done\n    mean=$(echo \"\
    $sum / ${#numbers[@]}\" | bc -l)\n    for n in \"${numbers[@]}\"; do\n       \
    \ mad=$(echo \"$mad + abs($n - $mean)\" | bc -l)\n    done\n    echo \"$(echo\
    \ \"$mad / ${#numbers[@]}\" | bc -l)\"", "    local mean=$(mean \"$@\")\n    local\
    \ abs_deviations=$(echo \"$@\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk\
    \ '{print $1 < 0 ? -$1 : $1}')\n    echo \"$abs_deviations\" | mean", "    local\
    \ -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${numbers[@]}\")\n    local -a deviations\n    local deviation\n    for number\
    \ in \"${numbers[@]}\"; do\n        deviation=$(echo \"$number - $mean\" | bc\
    \ -l)\n        deviation=$(echo \"scale=2; ${deviation#-} / 1\" | bc -l)\n   \
    \     deviations+=($deviation)\n    done\n    echo \"${deviations[@]}\"\n    mean\
    \ \"${deviations[@]}\"", "    local -a numbers=($@)\n    local -a abs_differences\n\
    \    local sum_abs_differences\n    local mean_abs_differences\n    local mean\n\
    \    local abs_difference\n    local number\n    local i\n    local n\n    local\
    \ -i n_numbers\n    n_numbers=${#numbers[@]}\n    mean=$(mean \"${numbers[@]}\"\
    )\n    for ((i=0; i<n_numbers; i++)); do\n        number=${numbers[$i]}\n    \
    \    abs_difference=$(echo \"$number - $mean\" | bc -l)\n        abs_differences[$i]=$(echo\
    \ \"$abs_difference < 0 ? -$abs_difference : $abs_difference\" | bc -l)\n    done\n\
    \    sum_abs_differences=$(sum \"${abs_differences[@]}\")\n    mean_abs_differences=$(echo\
    \ \"$sum_abs_differences / $n_numbers\" | bc -l)\n    echo \"$mean_abs_differences\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations\n    absolute_deviations=($(echo\
    \ \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print\
    \ $1 < 0 ? -$1 : $1}'))\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | awk '{sum += $1} END {print sum}')\n    local count\n    count=$(echo \"${numbers[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers=($@)\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for i in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / $#\" | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    abs_deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{for (i=1;\
    \ i<=NF; i++) {print $i - mean}}' | awk '{print $1 < 0 ? -$1 : $1}'))\n    local\
    \ sum\n    sum=$(echo \"${abs_deviations[@]}\" | awk '{for (i=1; i<=NF; i++) {sum\
    \ += $i}} END {print sum}')\n    local count\n    count=$(echo \"${abs_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers=(\"$@\"\
    )\n    local mean=$(mean \"${numbers[@]}\")\n    local abs_deviations=()\n   \
    \ for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        local diff=$(echo \"$number - $mean\" | bc -l)\n        local abs=$(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum\
    \ + $abs\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", " \
    \   local -a numbers\n    numbers=($(echo \"$1\" | tr ' ' '\\n'))\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    local deviation\n\
    \    for number in \"${numbers[@]}\"; do\n        deviation=$(echo \"$number -\
    \ $mean\" | bc -l)\n        deviation=$(echo \"if ($deviation < 0) -1 * $deviation\
    \ else $deviation\" | bc -l)\n        deviations+=(\"$deviation\")\n    done\n\
    \    mean \"${deviations[@]}\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations=()\n    for number in \"${numbers[@]}\"\
    ; do\n        local deviation=$(echo \"$number - $mean\" | bc -l)\n        local\
    \ abs_deviation=$(echo \"if ($deviation < 0) $deviation * -1 else $deviation\"\
    \ | bc -l)\n        deviations+=(\"$abs_deviation\")\n    done\n    mean \"${deviations[@]}\"",
  "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviation=0\n\
    \    local -i mad\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        if ((abs_deviation < 0)); then\n            abs_deviation=$((-abs_deviation))\n\
    \        fi\n        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n\
    \    done\n    mad=$((sum_abs_deviation / n))\n\n    echo \"$mad\"", "    local\
    \ -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${numbers[@]}\")\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"${absolute_deviations[@]}\"", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n\
    \    for x in \"$@\"; do\n        local abs_diff=$(echo \"$x - $mean\" | bc -l)\n\
    \        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n    done\n\
    \    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a arr=(\"$@\")\n    local\
    \ mean=$(mean \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n\
    \        sum=$(bc <<< \"$sum + abs($i - $mean)\")\n    done\n    bc <<< \"$sum\
    \ / ${#arr[@]}\"", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local\
    \ mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum_of_absolute_deviations\n\
    \    sum_of_absolute_deviations=$(sum_of_absolute_deviations \"${numbers[@]}\"\
    )\n    local number_of_numbers\n    number_of_numbers=$(echo \"${#numbers[@]}\"\
    )\n    echo \"$(bc <<< \"scale=2; $sum_of_absolute_deviations / $number_of_numbers\"\
    )\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_diffs=()\n    for number in \"${numbers[@]}\"; do\n      \
    \  local abs_diff=$(echo \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n\
    \        abs_diffs+=(\"$abs_diff\")\n    done\n    echo \"$(mean \"${abs_diffs[@]}\"\
    )\"", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n \
    \   local -a abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n    \
    \    abs_deviations+=($(echo \"scale=2; ${number} - ${mean}\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo $(mean \"${abs_deviations[@]}\")", "    local\
    \ -a nums\n    local -a abs_deviations\n    local sum_abs_deviations\n    local\
    \ mean_abs_deviation\n    local mean\n    local num_nums\n    local i\n    nums=($(echo\
    \ \"$@\"))\n    num_nums=${#nums[@]}\n    mean=$(mean \"${nums[@]}\")\n    for\
    \ ((i=0; i<num_nums; i++)); do\n        abs_deviations[$i]=$(echo \"${nums[$i]}\
    \ - $mean\" | bc -l)\n        abs_deviations[$i]=$(echo \"if (${abs_deviations[$i]}\
    \ < 0) ${abs_deviations[$i]} * -1 else ${abs_deviations[$i]}\")\n    done\n  \
    \  sum_abs_deviations=$(sum \"${abs_deviations[@]}\")\n    mean_abs_deviation=$(echo\
    \ \"$sum_abs_deviations / $num_nums\" | bc -l)\n    echo \"$mean_abs_deviation\"",
  "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_deviation\n    local -i abs_deviation_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviation=$((abs_deviation < 0 ? -abs_deviation : abs_deviation))\n\
    \        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n    done\n\
    \    echo $((abs_deviation_sum / n))", "    local -a numbers\n    numbers=($@)\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for num in \"${numbers[@]}\"; do\n        local deviation\n        deviation=$(echo\
    \ \"$num - $mean\" | bc -l)\n        deviations+=($(echo \"${deviation#-}\"))\n\
    \    done\n    echo \"$(mean \"${deviations[@]}\")\"", "    local -a x\n    local\
    \ -a x_mean\n    local -a x_deviation\n    local -a x_deviation_abs\n    local\
    \ -a x_deviation_abs_sum\n    local -a x_deviation_abs_mean\n    local -a x_deviation_abs_mean_rounded\n\
    \    local -a x_deviation_abs_mean_rounded_str\n    local -a x_deviation_abs_mean_rounded_str_trimmed\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str\n    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str\n    local\
    \ -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str\n    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a x_deviation_abs_mean_rounded_str_trimmed_str_str_str_str_str_str_str_",
  "    local -a numbers=($@)\n    local -a abs_deviations=()\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local -a numbers=($(echo \"$@\"\
    ))\n    local -a abs_differences=()\n    local mean=$(mean \"${numbers[@]}\")\n\
    \    for n in \"${numbers[@]}\"; do\n        local abs_difference=$(echo \"$n\
    \ - $mean\" | bc -l)\n        abs_differences+=($(echo \"$abs_difference\" | sed\
    \ 's/-//'))\n    done\n    echo \"$(mean \"${abs_differences[@]}\")\"", "    local\
    \ -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${absolute_deviations[@]}\")\"", "    local x_mean=$(mean \"$@\"\
    )\n    local x_abs_deviations=$(echo \"$@\" | awk '{for (i=1; i<=NF; i++) {print\
    \ $i - '\"$x_mean\"'}}' | awk '{for (i=1; i<=NF; i++) {print $i < 0 ? -$i : $i}}')\n\
    \    mean \"$x_abs_deviations\"", "    local -a numbers\n    numbers=($(echo \"\
    $@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number\
    \ - $mean\" | bc -l))\n    done\n    local -a absolute_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a numbers=($@)\n    local -a abs_deviations=()\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local -a input_array\n    input_array=($@)\n\
    \    local -i n=${#input_array[@]}\n    local -i i\n    local -i sum=0\n    local\
    \ -i mean\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + input_array[i]))\n\
    \    done\n    mean=$((sum / n))\n    local -i sum_of_deviations=0\n    for ((i=0;\
    \ i<n; i++)); do\n        sum_of_deviations=$((sum_of_deviations + abs(input_array[i]\
    \ - mean)))\n    done\n    echo $((sum_of_deviations / n))", "    local -a numbers=(\"\
    $@\")\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n   \
    \ local -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviations=0\n\
    \    local -i mean_abs_deviation\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++));\
    \ do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation=$((abs_deviation\
    \ < 0 ? -abs_deviation : abs_deviation))\n        sum_abs_deviations=$((sum_abs_deviations\
    \ + abs_deviation))\n    done\n    mean_abs_deviation=$((sum_abs_deviations /\
    \ n))\n\n    echo \"$mean_abs_deviation\"", "    local -a numbers=($@)\n    local\
    \ -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local -i mean\n\
    \    local -i deviation\n    local -i abs_deviation\n    local -i abs_deviation_sum=0\n\
    \    local -i abs_deviation_mean\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++));\
    \ do\n        deviation=$((numbers[i] - mean))\n        abs_deviation=$((deviation\
    \ < 0 ? -deviation : deviation))\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n    done\n    abs_deviation_mean=$((abs_deviation_sum / n))\n\
    \    echo $abs_deviation_mean", "    local -a x\n    x=($(echo \"$@\"))\n    local\
    \ x_mean=$(mean \"${x[@]}\")\n    local -a x_deviations\n    for ((i=0; i<${#x[@]};\
    \ i++)); do\n        x_deviations[$i]=$(echo \"${x[$i]} - $x_mean\" | bc -l)\n\
    \    done\n    local -a x_deviations_abs\n    for ((i=0; i<${#x_deviations[@]};\
    \ i++)); do\n        x_deviations_abs[$i]=$(echo \"if (${x_deviations[$i]} < 0)\
    \ ${x_deviations[$i]} * -1 else ${x_deviations[$i]}\" | bc -l)\n    done\n   \
    \ local x_deviations_abs_sum=$(sum \"${x_deviations_abs[@]}\")\n    local x_deviations_abs_mean=$(echo\
    \ \"$x_deviations_abs_sum / ${#x_deviations_abs[@]}\" | bc -l)\n    echo \"$x_deviations_abs_mean\"",
  "    local -a nums\n    nums=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${nums[@]}\")\n    local -a abs_devs\n    for num in \"${nums[@]}\"; do\n    \
    \    abs_devs+=($(echo \"$num - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n\
    \    done\n    echo \"${abs_devs[@]}\"", "    local x_mean=$(mean \"$@\")\n  \
    \  local x_deviations=$(echo \"$@\" | awk -v x_mean=\"$x_mean\" '{print $1 - x_mean}')\n\
    \    local x_abs_deviations=$(echo \"$x_deviations\" | awk '{print $1 < 0 ? -$1\
    \ : $1}')\n    local x_abs_deviations_sum=$(echo \"$x_abs_deviations\" | awk '{sum\
    \ += $1} END {print sum}')\n    local x_abs_deviations_count=$(echo \"$x_abs_deviations\"\
    \ | wc -l)\n    echo \"$x_abs_deviations_sum / $x_abs_deviations_count\" | bc\
    \ -l", "    local -a numbers=($@)\n    local -a abs_deviations=()\n    local -a\
    \ abs_deviations_squared=()\n    local -a abs_deviations_squared_summed=()\n \
    \   local -a abs_deviations_squared_summed_averaged=()\n    local -a abs_deviations_squared_summed_averaged_sqrt=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded=()\n    local\
    \ -a abs_deviations_squared_summed_averaged_sqrt_rounded_string=()\n    local\
    \ -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed=()\n \
    \   local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string_string_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string_string_string_string_string=()\n\
    \    local -a abs_deviations_squared_summed_averaged_sqrt_rounded_string_trimmed_string_string_string_string_string_string_string_string=()\n\
    \    local -a abs_deviations_squared_sum", "    local mean=$(mean \"$@\")\n  \
    \  local sum=0\n    for x in \"$@\"; do\n        sum=$(echo \"$sum + abs($x -\
    \ $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local mean=$(mean\
    \ \"$@\")\n    local sum=0\n    for x in \"$@\"; do\n        local diff=$(echo\
    \ \"$x - $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff\
    \ * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n\
    \    done\n    echo \"$sum / $#\" | bc -l", "    local x_mean=$(mean \"$@\")\n\
    \    local x_deviations=$(echo \"$@\" | awk -v mean=$x_mean '{print $1 - mean}')\n\
    \    local x_absolute_deviations=$(echo \"$x_deviations\" | awk '{print $1 < 0\
    \ ? -$1 : $1}')\n    local x_absolute_deviations_sum=$(echo \"$x_absolute_deviations\"\
    \ | awk '{sum += $1} END {print sum}')\n    local x_absolute_deviations_count=$(echo\
    \ \"$x_absolute_deviations\" | wc -l)\n    echo \"$x_absolute_deviations_sum /\
    \ $x_absolute_deviations_count\" | bc -l", "    local -a numbers=(\"$@\")\n  \
    \  local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local -i\
    \ mean=0\n    local -i abs_deviation=0\n    local -i abs_deviation_sum=0\n   \
    \ local -i abs_deviation_mean=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++));\
    \ do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n    done\n    abs_deviation_mean=$((abs_deviation_sum / n))\n\
    \    echo \"$abs_deviation_mean\"", "    local -a input_array\n    local -i i\n\
    \    local -r mean=$(mean \"$@\")\n    local -r n=$#\n    local -r n_minus_one=$((n\
    \ - 1))\n    local -r n_minus_two=$((n - 2))\n    local -r n_minus_three=$((n\
    \ - 3))\n    local -r n_minus_four=$((n - 4))\n    local -r n_minus_five=$((n\
    \ - 5))\n    local -r n_minus_six=$((n - 6))\n    local -r n_minus_seven=$((n\
    \ - 7))\n    local -r n_minus_eight=$((n - 8))\n    local -r n_minus_nine=$((n\
    \ - 9))\n    local -r n_minus_ten=$((n - 10))\n    local -r n_minus_eleven=$((n\
    \ - 11))\n    local -r n_minus_twelve=$((n - 12))\n    local -r n_minus_thirteen=$((n\
    \ - 13))\n    local -r n_minus_fourteen=$((n - 14))\n    local -r n_minus_fifteen=$((n\
    \ - 15))\n    local -r n_minus_sixteen=$((n - 16))\n    local -r n_minus_seventeen=$((n\
    \ - 17))\n    local -r n_minus_eighteen=$((n - 18))\n    local -r n_minus_nineteen=$((n\
    \ - 19))\n    local -r n_minus_twenty=$((n - 20))\n    local -r n_minus_twentyone=$((n\
    \ - 21))\n    local -r n_minus_twentytwo=$((n - 22))\n    local -r n_minus_twentythree=$((n\
    \ - 23))\n    local -r n_minus_twentyfour=$((n - 24))\n    local -r n_minus_twentyfive=$((n\
    \ - 25))\n    local -r n_minus_twentysix=$((n - 26))\n    local -r n_minus_twentyseven=$((n\
    \ - 27))\n    local -r n_minus_twentyeight=$((n - 28))\n   ", "    local -a numbers\n\
    \    numbers=($1)\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "    local -a numbers=($@)\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations=()\n    for number in \"\
    ${numbers[@]}\"; do\n        local absolute_deviation=$(echo \"$number - $mean\"\
    \ | bc -l)\n        absolute_deviations+=($(echo \"$absolute_deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a values=($1)\n    local mean=$(mean \"${values[@]}\")\n    local -a\
    \ abs_deviations=()\n    for value in \"${values[@]}\"; do\n        local abs_deviation=$(echo\
    \ \"$value - $mean\" | bc -l)\n        abs_deviations+=($(echo \"$abs_deviation\"\
    \ | awk '{print sqrt($1*$1)}'))\n    done\n    echo $(mean \"${abs_deviations[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a abs_diff\n    abs_diff=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{printf(\"%f \", $1 - mean)}'))\n    local -a abs_diff_abs\n\
    \    abs_diff_abs=($(echo \"${abs_diff[@]}\" | awk '{printf(\"%f \", sqrt($1 *\
    \ $1))}'))\n    local sum\n    sum=$(echo \"${abs_diff_abs[@]}\" | awk '{sum +=\
    \ $1} END {print sum}')\n    local mean_abs_dev\n    mean_abs_dev=$(echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l)\n    echo \"$mean_abs_dev\"", "    local -a input_array\n\
    \    input_array=($@)\n    local -i n=${#input_array[@]}\n    local -i i\n   \
    \ local -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + input_array[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((input_array[i]\
    \ - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    echo\
    \ $((abs_dev_sum / n))", "    local -a numbers\n    numbers=($(echo \"$@\"))\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs\n\
    \    abs_diffs=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{for (i=1; i<=NF;\
    \ i++) print $i - mean}' | awk '{print $1 < 0 ? -$1 : $1}'))\n    local sum\n\
    \    sum=$(echo \"${abs_diffs[@]}\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i;\
    \ print sum}')\n    local n\n    n=$(echo \"${numbers[@]}\" | wc -w)\n    echo\
    \ \"$sum / $n\" | bc -l", "    # Calculate mean of input numbers\n    local mean=$(mean\
    \ \"$@\")\n    # Calculate absolute difference between each element and mean\n\
    \    local abs_diff_from_mean=$(echo \"$@\" | awk '{for (i=1; i<=NF; i++) print\
    \ $i - '\"$mean\"'}')\n    # Calculate absolute value of each element\n    local\
    \ abs_diff_from_mean=$(echo \"$abs_diff_from_mean\" | awk '{for (i=1; i<=NF; i++)\
    \ print $i < 0 ? -$i : $i}')\n    # Calculate mean of absolute differences\n \
    \   echo \"$abs_diff_from_mean\" | mean", "    local -a numbers\n    numbers=($(echo\
    \ $@))\n    local mean\n    mean=$(mean ${numbers[@]})\n    local -a absolute_deviations\n\
    \    absolute_deviations=($(echo ${numbers[@]} | sed \"s/ /\\n/g\" | awk -v mean=$mean\
    \ '{print abs($1 - mean)}'))\n    echo ${absolute_deviations[@]} | sed \"s/ /\\\
    n/g\" | mean", "    local -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\"\
    )\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum\
    \ + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#arr[@]}\" | bc\
    \ -l", "    local -a numbers\n    numbers=($@)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo\
    \ \"$number - $mean\" | bc -l))\n    done\n    local -a absolute_deviations\n\
    \    for deviation in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"if ($deviation < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n\
    \    echo $(mean \"${absolute_deviations[@]}\")", "    local -a numbers=(\"$@\"\
    )\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "    local -a numbers\n    numbers=($(echo \"\
    $@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation\n        deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        deviations+=($(echo \"$deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    local -a abs_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        local abs_deviation\n        abs_deviation=$(echo\
    \ \"$deviation\" | awk '{printf \"%f\", $0 < 0 ? -$0 : $0}')\n        abs_deviations+=($abs_deviation)\n\
    \    done\n    local abs_deviations_sum\n    abs_deviations_sum=$(sum \"${abs_deviations[@]}\"\
    )\n    local abs_deviations_count\n    abs_deviations_count=$(echo \"${#abs_deviations[@]}\"\
    )\n    local abs_deviations_mean\n    abs_deviations_mean=$(echo \"$abs_deviations_sum\
    \ / $abs_deviations_count\" | bc -l)\n    echo \"$abs_deviations_mean\"", "  \
    \  local numbers=\"$1\"\n    local mean=$(mean \"$numbers\")\n    local absolute_deviations=$(echo\
    \ \"$numbers\" | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n\
    \    echo \"$absolute_deviations\" | awk '{sum+=$1} END {print sum/NR}'", "  \
    \  local mean=$(mean \"$@\")\n    local abs_diffs=\"\"\n    for x in $@; do\n\
    \        abs_diffs=\"$abs_diffs $(echo \"$x - $mean\" | bc -l | awk '{printf \"\
    %f\", $0}')\"\n    done\n    echo \"$(mean $abs_diffs)\"", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs=()\n \
    \   for number in \"${numbers[@]}\"; do\n        abs_diffs+=(\"$(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n    echo \"$(mean\
    \ \"${abs_diffs[@]}\")\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local abs_diff_sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_diff_sum=$(bc <<< \"$abs_diff_sum + $(absolute_difference \"\
    $number\" \"$mean\")\")\n    done\n    bc <<< \"$abs_diff_sum / ${#numbers[@]}\"",
  "  local -a numbers=($@)\n  local mean=$(mean \"${numbers[@]}\")\n  local -a deviations=()\n\
    \  for number in \"${numbers[@]}\"; do\n    deviations+=($(echo \"$number - $mean\"\
    \ | bc -l))\n  done\n  local -a absolute_deviations=()\n  for deviation in \"\
    ${deviations[@]}\"; do\n    absolute_deviations+=($(echo \"if ($deviation < 0)\
    \ $deviation * -1 else $deviation\" | bc -l))\n  done\n  echo $(mean \"${absolute_deviations[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        local deviation\n        deviation=$(echo \"$number - $mean\" |\
    \ bc -l)\n        deviations+=($(echo \"$deviation\" | awk '{printf \"%f\", $0}'))\n\
    \    done\n    local -a absolute_deviations\n    for deviation in \"${deviations[@]}\"\
    ; do\n        local absolute_deviation\n        absolute_deviation=$(echo \"$deviation\
    \ < 0 ? -$deviation : $deviation\" | bc -l)\n        absolute_deviations+=($(echo\
    \ \"$absolute_deviation\" | awk '{printf \"%f\", $0}'))\n    done\n    local sum\n\
    \    sum=$(sum \"${absolute_deviations[@]}\")\n    local mean_absolute_deviation\n\
    \    mean_absolute_deviation=$(echo \"$sum / ${#absolute_deviations[@]}\" | bc\
    \ -l)\n    echo \"$mean_absolute_deviation\"", "    local -a nums=(\"$@\")\n \
    \   local mean=$(mean \"${nums[@]}\")\n    local sum=0\n    for num in \"${nums[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($num - $mean)\" | bc -l)\n    done\n   \
    \ echo \"$sum / $#\" | bc -l", "    local -a numbers\n    local -i i\n    local\
    \ -r mean=$(mean \"$@\")\n    local -r n=$#\n    local -r scale=$(scale_factor\
    \ \"$n\")\n    local -r scale_factor=$(scale_factor \"$n\")\n    local -r scale_factor_inverse=$(scale_factor_inverse\
    \ \"$n\")\n    local -r scale_factor_inverse_2=$(scale_factor_inverse_2 \"$n\"\
    )\n    local -r scale_factor_inverse_3=$(scale_factor_inverse_3 \"$n\")\n    local\
    \ -r scale_factor_inverse_4=$(scale_factor_inverse_4 \"$n\")\n    local -r scale_factor_inverse_5=$(scale_factor_inverse_5\
    \ \"$n\")\n    local -r scale_factor_inverse_6=$(scale_factor_inverse_6 \"$n\"\
    )\n    local -r scale_factor_inverse_7=$(scale_factor_inverse_7 \"$n\")\n    local\
    \ -r scale_factor_inverse_8=$(scale_factor_inverse_8 \"$n\")\n    local -r scale_factor_inverse_9=$(scale_factor_inverse_9\
    \ \"$n\")\n    local -r scale_factor_inverse_10=$(scale_factor_inverse_10 \"$n\"\
    )\n    local -r scale_factor_inverse_11=$(scale_factor_inverse_11 \"$n\")\n  \
    \  local -r scale_factor_inverse_12=$(scale_factor_inverse_12 \"$n\")\n    local\
    \ -r scale_factor_inverse_13=$(scale_factor_inverse_13 \"$n\")\n    local -r scale_factor_inverse_14=$(scale_factor_inverse_14\
    \ \"$n\")\n    local -r scale_factor_inverse_15=$(scale_factor_inverse_15 \"$n\"\
    )\n    local -r scale_factor_inverse_16=$(scale_factor_inverse_16 \"$n\")\n  \
    \  local -r scale_factor_inverse_17=$(scale_factor_inverse_17 \"$n\")\n    local\
    \ -r scale_factor_inverse_", "  local -a numbers=(\"$@\")\n  local mean=$(mean\
    \ \"${numbers[@]}\")\n  local sum=0\n  for number in \"${numbers[@]}\"; do\n \
    \   local diff=$(echo \"$number - $mean\" | bc -l)\n    local abs_diff=$(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n    sum=$(echo \"$sum + $abs_diff\"\
    \ | bc -l)\n  done\n  echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a data=($@)\n\
    \    local mean=$(mean \"${data[@]}\")\n    local -a abs_deviations=()\n    for\
    \ ((i=0; i<${#data[@]}; i++)); do\n        abs_deviations[$i]=$(echo \"scale=2;\
    \ ${data[$i]} - $mean\" | bc)\n        abs_deviations[$i]=$(echo \"scale=2; ${abs_deviations[$i]}\
    \ < 0 ? -${abs_deviations[$i]} : ${abs_deviations[$i]}\" | bc)\n    done\n   \
    \ echo $(mean \"${abs_deviations[@]}\")", "    local -a input=($@)\n    local\
    \ -i n=${#input[@]}\n    local -i i\n    local -a diffs\n    local -i diffs_sum=0\n\
    \    local -i diffs_sum_abs=0\n    local -i diffs_sum_abs_avg=0\n    local -i\
    \ diffs_sum_abs_avg_int=0\n    local -i diffs_sum_abs_avg_int_div=0\n    local\
    \ -i diffs_sum_abs_avg_int_div_int=0\n    local -i diffs_sum_abs_avg_int_div_int_div=0\n\
    \    local -i diffs_sum_abs_avg_int_div_int_div_int=0\n    local -i diffs_sum_abs_avg_int_div_int_div_int_div=0\n\
    \    local -i diffs_sum_abs_avg_int_div_int_div_int_div_int=0\n    local -i diffs_sum_abs_avg_int_div_int_div_int_div_int_div=0\n\
    \    local -i diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int=0\n    local\
    \ -i diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int_div=0\n    local -i\
    \ diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int_div_int=0\n    local -i\
    \ diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int_div_int_div=0\n    local\
    \ -i diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int_div_int_div_int=0\n\
    \    local -i diffs_sum_abs_avg_int_div_int_div_int_div_int_div_int_div_int_div_int_div=0\n\
    \   ", "    local -a numbers=($@)\n    local -a abs_diff\n    local -i i\n   \
    \ local -i n=${#numbers[@]}\n    local -i sum=0\n    local -i sum_abs_diff=0\n\
    \    local -i mean\n    local -i mad\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++));\
    \ do\n        abs_diff[i]=$((numbers[i] - mean))\n        if ((abs_diff[i] < 0));\
    \ then\n            abs_diff[i]=$((-1 * abs_diff[i]))\n        fi\n        sum_abs_diff=$((sum_abs_diff\
    \ + abs_diff[i]))\n    done\n    mad=$((sum_abs_diff / n))\n    echo \"$mad\"",
  "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for x in \"$@\"; do\n\
    \        abs_diff_sum=$(echo \"$abs_diff_sum + abs($x - $mean)\" | bc -l)\n  \
    \  done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a numbers\n   \
    \ numbers=($1)\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a deviations\n    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo\
    \ \"$number - $mean\" | bc -l))\n    done\n    absolute_deviations=($(absolute_values\
    \ \"${deviations[@]}\"))\n    echo \"$(mean \"${absolute_deviations[@]}\")\"",
  "    local -a numbers\n    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_deviations\n    abs_deviations=()\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    local abs_deviations_str\n    abs_deviations_str=$(printf\
    \ \" %f\" \"${abs_deviations[@]}\")\n    abs_deviations_str=${abs_deviations_str:1}\n\
    \    local -a abs_deviations_abs\n    abs_deviations_abs=()\n    for abs_deviation\
    \ in ${abs_deviations_str}; do\n        abs_deviations_abs+=($(echo \"$abs_deviation\"\
    \ | awk '{if ($0 < 0) {printf \"%f\", -$0} else {printf \"%f\", $0}}'))\n    done\n\
    \    local abs_deviations_abs_str\n    abs_deviations_abs_str=$(printf \" %f\"\
    \ \"${abs_deviations_abs[@]}\")\n    abs_deviations_abs_str=${abs_deviations_abs_str:1}\n\
    \    local mean_abs_deviation\n    mean_abs_deviation=$(mean \"${abs_deviations_abs_str}\"\
    )\n    echo \"$mean_abs_deviation\"", "    local input_list=($@)\n    local mean=$(mean\
    \ \"${input_list[@]}\")\n    local abs_diff_list=()\n    for i in \"${input_list[@]}\"\
    ; do\n        abs_diff_list+=($(echo \"$i - $mean\" | bc -l | awk '{printf \"\
    %f\", $0}'))\n    done\n    local abs_diff_list_str=$(printf \" %s\" \"${abs_diff_list[@]}\"\
    )\n    local abs_diff_list_str=${abs_diff_list_str:1}\n    local abs_diff_list=($abs_diff_list_str)\n\
    \    local abs_diff_list_abs=()\n    for i in \"${abs_diff_list[@]}\"; do\n  \
    \      abs_diff_list_abs+=($(echo \"if ($i < 0) $i * -1 else $i\" | bc -l | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    local abs_diff_list_abs_str=$(printf\
    \ \" %s\" \"${abs_diff_list_abs[@]}\")\n    local abs_diff_list_abs_str=${abs_diff_list_abs_str:1}\n\
    \    local abs_diff_list_abs=($abs_diff_list_abs_str)\n    local abs_diff_list_abs_mean=$(mean\
    \ \"${abs_diff_list_abs[@]}\")\n    echo \"$abs_diff_list_abs_mean\"", "    local\
    \ -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local abs_diff_sum=0\n\
    \    for number in \"${numbers[@]}\"; do\n        abs_diff_sum=$(echo \"$abs_diff_sum\
    \ + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum / ${#numbers[@]}\"\
    \ | bc -l", "    local input_array=($@)\n    local input_array_length=${#input_array[@]}\n\
    \    local input_array_sum=0\n    local input_array_mean=0\n    local input_array_mad=0\n\
    \    local i=0\n    for ((i=0; i<$input_array_length; i++)); do\n        input_array_sum=$(echo\
    \ \"$input_array_sum + ${input_array[$i]}\" | bc -l)\n    done\n    input_array_mean=$(echo\
    \ \"$input_array_sum / $input_array_length\" | bc -l)\n    for ((i=0; i<$input_array_length;\
    \ i++)); do\n        input_array_mad=$(echo \"$input_array_mad + abs(${input_array[$i]}\
    \ - $input_array_mean)\" | bc -l)\n    done\n    input_array_mad=$(echo \"$input_array_mad\
    \ / $input_array_length\" | bc -l)\n    echo $input_array_mad", "    local -a\
    \ numbers\n    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    deviations=()\n    for number in \"${numbers[@]}\"\
    ; do\n        local deviation\n        deviation=$(echo \"$number - $mean\" |\
    \ bc -l)\n        deviations+=($(echo \"${deviation#-}\"))\n    done\n    echo\
    \ \"$(mean \"${deviations[@]}\")\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number\
    \ - $mean\" | bc -l))\n    done\n    local -a absolute_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a numbers\n    numbers=($@)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    local i\n    for ((i=0; i<${#numbers[@]}; i++));\
    \ do\n        deviations[$i]=$(echo \"${numbers[$i]} - $mean\" | bc -l)\n    done\n\
    \    local -a absolute_deviations\n    for ((i=0; i<${#deviations[@]}; i++));\
    \ do\n        absolute_deviations[$i]=$(echo \"if (${deviations[$i]} < 0) ${deviations[$i]}\
    \ * -1 else ${deviations[$i]}\" | bc -l)\n    done\n    local sum=0\n    for ((i=0;\
    \ i<${#absolute_deviations[@]}; i++)); do\n        sum=$(echo \"$sum + ${absolute_deviations[$i]}\"\
    \ | bc -l)\n    done\n    local mean_absolute_deviation=$(echo \"$sum / ${#absolute_deviations[@]}\"\
    \ | bc -l)\n    echo \"$mean_absolute_deviation\"", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        absolute_deviations+=(\"$(abs\
    \ \"$(bc <<< \"$number - $mean\")\")\")\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a numbers=($1)\n    local -a abs_deviations=()\n    local -i i=0\n \
    \   local -i n=${#numbers[@]}\n    local -i sum=0\n    local -i mean=0\n    local\
    \ -i abs_deviation=0\n    local -i abs_deviation_sum=0\n    local -i mad=0\n\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviations[i]=$((abs_deviation < 0 ? -abs_deviation :\
    \ abs_deviation))\n    done\n\n    for ((i=0; i<n; i++)); do\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviations[i]))\n    done\n    mad=$((abs_deviation_sum / n))\n\n    echo\
    \ \"$mad\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n \
    \       abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf \"\
    %f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\")\"", "    local\
    \ -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${numbers[@]}\")\n    local -a abs_diffs\n    abs_diffs=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1<0?-$1:$1}'))\n  \
    \  local sum\n    sum=$(sum \"${abs_diffs[@]}\")\n    echo \"$sum/${#numbers[@]}\"\
    \ | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    for number in\
    \ \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number - $mean\" | bc\
    \ -l))\n    done\n    local -a abs_deviations\n    for deviation in \"${deviations[@]}\"\
    ; do\n        abs_deviations+=($(echo \"if ($deviation < 0) $deviation * -1 else\
    \ $deviation\" | bc -l))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\"\
    )\"", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n  \
    \  mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    local i\n    for\
    \ ((i=0; i<${#numbers[@]}; i++)); do\n        deviations[$i]=$(echo \"${numbers[$i]}\
    \ - $mean\" | bc -l)\n    done\n    local -a abs_deviations\n    for ((i=0; i<${#deviations[@]};\
    \ i++)); do\n        abs_deviations[$i]=$(echo \"${deviations[$i]} < 0 ? -${deviations[$i]}\
    \ : ${deviations[$i]}\" | bc -l)\n    done\n    local sum\n    sum=$(sum \"${abs_deviations[@]}\"\
    )\n    local n\n    n=$(echo \"${#numbers[@]}\")\n    local mad\n    mad=$(echo\
    \ \"$sum / $n\" | bc -l)\n    echo \"$mad\"", "  local -a numbers=(\"$@\")\n \
    \ local -i count=${#numbers[@]}\n  local -i i\n  local -r mean=$(mean \"${numbers[@]}\"\
    )\n  local -r sum=$(sum \"${numbers[@]}\")\n  local -r sum_squared=$(sum_squared\
    \ \"${numbers[@]}\")\n  local -r sum_squared_mean=$(echo \"$sum_squared / $count\"\
    \ | bc -l)\n  local -r mean_squared=$(echo \"$mean * $mean\" | bc -l)\n  local\
    \ -r variance=$(echo \"$sum_squared_mean - $mean_squared\" | bc -l)\n  local -r\
    \ standard_deviation=$(echo \"sqrt($variance)\" | bc -l)\n  echo \"$standard_deviation\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        deviations[i]=$(echo \"${numbers[i]} - $mean\" | bc -l)\n\
    \    done\n    local -a abs_deviations\n    for ((i=0; i<${#deviations[@]}; i++));\
    \ do\n        abs_deviations[i]=$(echo \"if (${deviations[i]} < 0) ${deviations[i]}\
    \ * -1 else ${deviations[i]}\" | bc -l)\n    done\n    mean \"${abs_deviations[@]}\"",
  "    local -a numbers\n    local mean\n    local sum\n    local count\n    local\
    \ i\n    local number\n    local deviation\n    local sum_of_deviations\n    numbers=($@)\n\
    \    mean=$(mean \"${numbers[@]}\")\n    sum=0\n    count=0\n    for i in \"${numbers[@]}\"\
    ; do\n        number=$(echo \"$i\" | bc -l)\n        sum=$(echo \"$sum + $number\"\
    \ | bc -l)\n        count=$(echo \"$count + 1\" | bc -l)\n    done\n    sum_of_deviations=0\n\
    \    for i in \"${numbers[@]}\"; do\n        number=$(echo \"$i\" | bc -l)\n \
    \       deviation=$(echo \"($number - $mean)\" | bc -l)\n        deviation=$(echo\
    \ \"($deviation < 0) ? -$deviation : $deviation\" | bc -l)\n        sum_of_deviations=$(echo\
    \ \"$sum_of_deviations + $deviation\" | bc -l)\n    done\n    echo \"$sum_of_deviations\
    \ / $count\" | bc -l", "    local data_list=\"$1\"\n    local mean=$(mean \"$data_list\"\
    )\n    local sum=0\n    for x in $data_list; do\n        sum=$(echo \"$sum + abs($x\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a\
    \ values=($@)\n    local mean=$(mean \"${values[@]}\")\n    local -a absolute_deviations=()\n\
    \    for value in \"${values[@]}\"; do\n        local absolute_deviation=$(echo\
    \ \"$value - $mean\" | bc -l)\n        absolute_deviations+=($(echo \"$absolute_deviation\"\
    \ | awk '{printf \"%f\", $0}'))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a input=($@)\n    local -a diffs=()\n    local mean=$(mean \"${input[@]}\"\
    )\n    for i in \"${input[@]}\"; do\n        diffs+=(\"$(echo \"$i - $mean\" |\
    \ bc -l)\")\n    done\n    echo \"$(mean \"${diffs[@]}\")\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_deviations\n    abs_deviations=($(echo \"${numbers[@]}\" |\
    \ awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 : $1}'))\n\
    \    local sum\n    sum=$(sum \"${abs_deviations[@]}\")\n    echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n        local diff=$(echo\
    \ \"$number - $mean\" | bc -l)\n        local abs=$(echo \"if ($diff < 0) $diff\
    \ * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n  \
    \  done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a input=($@)\n\
    \    local -i n=${#input[@]}\n    local -i i\n    local -i sum=0\n    local -i\
    \ mean\n    local -i mad\n    for ((i=0; i<n; i++)); do\n        sum=$((sum +\
    \ input[i]))\n    done\n    mean=$((sum / n))\n    sum=0\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + abs(input[i] - mean)))\n    done\n    mad=$((sum\
    \ / n))\n    echo \"$mad\"", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n\
    \    local sum=$(echo \"$abs_deviations\" | awk '{sum+=$1} END {print sum}')\n\
    \    local count=$(echo \"$abs_deviations\" | wc -l)\n    echo \"$sum / $count\"\
    \ | bc -l", "    local -r numbers=\"$1\"\n    local -r mean=$(mean \"$numbers\"\
    )\n    local -r absolute_deviations=$(absolute_deviations \"$numbers\" \"$mean\"\
    )\n    mean \"$absolute_deviations\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    abs_deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{printf\
    \ \"%.2f\\n\", fabs($1 - mean)}'))\n    local sum\n    sum=$(echo \"${abs_deviations[@]}\"\
    \ | awk '{sum+=$1} END {printf \"%.2f\\n\", sum}')\n    local count\n    count=$(echo\
    \ \"${abs_deviations[@]}\" | wc -l)\n    echo \"$(echo \"$sum / $count\" | bc\
    \ -l)\"", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a absolute_deviations=()\n    for number in \"${numbers[@]}\"; do\n\
    \        local absolute_deviation=$(echo \"$number - $mean\" | bc -l)\n      \
    \  absolute_deviations+=($(echo \"$absolute_deviation\" | awk '{printf \"%f\"\
    , $0}'))\n    done\n    echo \"$(mean \"${absolute_deviations[@]}\")\"", "   \
    \ local -a numbers\n    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a diffs\n    diffs=()\n    for number in \"${numbers[@]}\"; do\n\
    \        diffs+=($(echo \"$number - $mean\" | bc -l))\n    done\n    local -a\
    \ abs_diffs\n    abs_diffs=()\n    for diff in \"${diffs[@]}\"; do\n        abs_diffs+=($(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l))\n    done\n    echo \"$(mean\
    \ \"${abs_diffs[@]}\")\"", "    local -r mean=$(mean \"$@\")\n    local -r abs_diff_sum=$(echo\
    \ \"$@\" | awk '{for(i=1;i<=NF;i++)print $i-$1}' \"$mean\")\n    echo \"$abs_diff_sum\"\
    \ | awk '{s=0;for(i=1;i<=NF;i++)s+=$i;print s/NF}'", "    local -a numbers\n \
    \   numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a input=($@)\n    local -a diffs\n\
    \    local mean=$(mean \"${input[@]}\")\n    for i in \"${input[@]}\"; do\n  \
    \      diffs+=($(echo \"scale=2; $i - $mean\" | bc))\n    done\n    echo $(mean\
    \ \"${diffs[@]}\")", "    local input_list=\"$1\"\n    local mean=$(mean \"$input_list\"\
    )\n    local abs_deviations=$(echo \"$input_list\" | awk -v mean=\"$mean\" '{print\
    \ $1 - mean}' | awk '{print $1 < 0 ? -$1 : $1}')\n    local sum=$(echo \"$abs_deviations\"\
    \ | awk '{sum += $1} END {print sum}')\n    local count=$(echo \"$abs_deviations\"\
    \ | wc -l)\n    local mean_absolute_deviation=$(echo \"$sum / $count\" | bc -l)\n\
    \    echo \"$mean_absolute_deviation\"", "    local mean=$(mean \"$@\")\n    local\
    \ sum=0\n    for x in \"$@\"; do\n        sum=$(echo \"$sum + abs($x - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers=($@)\n\
    \    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local\
    \ -i mean\n    local -i diff\n    local -i abs_diff\n    local -i abs_diff_sum=0\n\
    \    local -i abs_diff_mean\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++));\
    \ do\n        diff=$((numbers[i] - mean))\n        abs_diff=$((diff < 0 ? -diff\
    \ : diff))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n    abs_diff_mean=$((abs_diff_sum\
    \ / n))\n    echo \"$abs_diff_mean\"", "    local x_mean=$(mean \"$@\")\n    local\
    \ x_deviations=$(echo \"$@\" | awk -v x_mean=\"$x_mean\" '{ print $1 - x_mean\
    \ }')\n    local x_abs_deviations=$(echo \"$x_deviations\" | awk '{ print $1 <\
    \ 0 ? -$1 : $1 }')\n    local x_sum_abs_deviations=$(echo \"$x_abs_deviations\"\
    \ | awk '{ sum += $1 } END { print sum }')\n    local x_count=$(echo \"$x_abs_deviations\"\
    \ | wc -l)\n    echo \"$x_sum_abs_deviations / $x_count\" | bc -l", "    local\
    \ -a values\n    local -i i\n    local -i n\n    local -i sum\n    local -i mean\n\
    \    local -i mad\n    local -i abs_diff\n    local -i abs_diff_sum\n\n    # Read\
    \ input values into array\n    read -a values <<< \"$@\"\n\n    # Get number of\
    \ values\n    n=${#values[@]}\n\n    # Calculate sum\n    sum=0\n    for ((i=0;\
    \ i<n; i++)); do\n        sum=$((sum + values[i]))\n    done\n\n    # Calculate\
    \ mean\n    mean=$((sum / n))\n\n    # Calculate sum of absolute differences\n\
    \    abs_diff_sum=0\n    for ((i=0; i<n; i++)); do\n        abs_diff=$((values[i]\
    \ - mean))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n\n  \
    \  # Calculate mean absolute deviation\n    mad=$((abs_diff_sum / n))\n\n    echo\
    \ \"$mad\"", "  local mean=$(mean \"$@\")\n  local abs_deviations=$(echo \"$@\"\
    \ | awk '{for (i=1; i<=NF; i++) print $i - '\"$mean\"'}' | awk '{for (i=1; i<=NF;\
    \ i++) print $i < 0 ? -$i : $i}')\n  mean \"$abs_deviations\"", "    local mean=$(mean\
    \ \"$@\")\n    local sum=0\n    for x in \"$@\"; do\n        local diff=$(echo\
    \ \"$x - $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff\
    \ * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n\
    \    done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers=($@)\n    local\
    \ mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number\
    \ - $mean\" | bc -l))\n    done\n    local -a absolute_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n    echo \"$(mean\
    \ \"${absolute_deviations[@]}\")\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    local deviation\n    for number in \"${numbers[@]}\"; do\n        deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        deviations+=($(echo \"$deviation < 0\"\
    \ | bc -l))\n    done\n    echo \"$(mean \"${deviations[@]}\")\"", "    local\
    \ values=($@)\n    local mean=$(mean \"${values[@]}\")\n    local abs_deviations=()\n\
    \    for value in \"${values[@]}\"; do\n        abs_deviations+=($(echo \"scale=5;\
    \ $value - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo $(mean\
    \ \"${abs_deviations[@]}\")", "    local -a array\n    array=($@)\n    local -i\
    \ len=${#array[@]}\n    local -i i\n    local -i sum=0\n    local -i mean\n  \
    \  local -i abs_dev\n    local -i abs_dev_sum=0\n    for ((i=0; i<len; i++));\
    \ do\n        sum=$((sum + array[i]))\n    done\n    mean=$((sum / len))\n   \
    \ for ((i=0; i<len; i++)); do\n        abs_dev=$((array[i] - mean))\n        abs_dev_sum=$((abs_dev_sum\
    \ + abs_dev))\n    done\n    echo $((abs_dev_sum / len))", "    local -a input=($@)\n\
    \    local -a diffs=()\n    local mean=$(mean \"${input[@]}\")\n    for i in \"\
    ${input[@]}\"; do\n        diffs+=($(echo \"$i - $mean\" | bc -l))\n    done\n\
    \    echo \"$(mean \"${diffs[@]}\")\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    abs_deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{printf\
    \ \"%.2f \", $1 - mean}'))\n    local sum\n    sum=$(echo \"${abs_deviations[@]}\"\
    \ | awk '{sum += $1} END {printf \"%.2f\", sum}')\n    echo \"$(echo \"$sum /\
    \ ${#numbers[@]}\" | bc -l)\"", "    local -a numbers=($@)\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for i in \"${numbers[@]}\"; do\n  \
    \      sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -r data=$1\n    local -r mean=$(mean\
    \ \"$data\")\n    local -r abs_diff=$(echo \"$data\" | awk -v mean=\"$mean\" '{print\
    \ $1 - mean}' | awk '{print $1 > 0 ? $1 : -$1}')\n    local -r sum_abs_diff=$(echo\
    \ \"$abs_diff\" | awk '{sum += $1} END {print sum}')\n    local -r n=$(echo \"\
    $data\" | wc -w)\n    echo \"$sum_abs_diff / $n\" | bc -l", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation=$(echo \"$number\
    \ - $mean\" | bc -l)\n        deviations+=(\"$(echo \"$deviation\" | sed 's/-//')\"\
    )\n    done\n    echo \"$(mean \"${deviations[@]}\")\"", "  local -a input_array\n\
    \  local -a abs_diff_array\n  local sum_abs_diff\n  local mean_abs_diff\n  local\
    \ mean\n  local i\n  input_array=($@)\n  mean=$(mean \"${input_array[@]}\")\n\
    \  for ((i=0; i<${#input_array[@]}; i++)); do\n    abs_diff_array[$i]=$(echo \"\
    ${input_array[$i]} - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n    abs_diff_array[$i]=$(echo\
    \ \"${abs_diff_array[$i]} < 0 ? -${abs_diff_array[$i]} : ${abs_diff_array[$i]}\"\
    \ | bc -l | awk '{printf \"%f\", $0}')\n  done\n  sum_abs_diff=$(sum \"${abs_diff_array[@]}\"\
    )\n  mean_abs_diff=$(echo \"$sum_abs_diff / ${#input_array[@]}\" | bc -l | awk\
    \ '{printf \"%f\", $0}')\n  echo \"$mean_abs_diff\"", "  local -a numbers=(\"\
    $@\")\n  local -a abs_deviations\n  local mean\n  local abs_deviation\n  local\
    \ sum_abs_deviations\n  local mean_abs_deviation\n\n  mean=$(mean \"${numbers[@]}\"\
    )\n  for number in \"${numbers[@]}\"; do\n    abs_deviation=$(echo \"$number -\
    \ $mean\" | bc -l)\n    abs_deviations+=(\"$(echo \"$abs_deviation\" | awk '{print\
    \ sqrt($1*$1)}')\")\n  done\n  sum_abs_deviations=$(sum \"${abs_deviations[@]}\"\
    )\n  mean_abs_deviation=$(echo \"$sum_abs_deviations / ${#numbers[@]}\" | bc -l)\n\
    \  echo \"$mean_abs_deviation\"", "    local -a numbers\n    numbers=($(echo \"\
    $@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation\n        deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        deviations+=($(echo \"$deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    local -a absolute_deviations\n    for\
    \ deviation in \"${deviations[@]}\"; do\n        local absolute_deviation\n  \
    \      absolute_deviation=$(echo \"$deviation < 0 ? -$deviation : $deviation\"\
    \ | bc -l)\n        absolute_deviations+=($(echo \"$absolute_deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${absolute_deviations[@]}\"\
    )\"", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n \
    \   local -a distances=()\n    for number in \"${numbers[@]}\"; do\n        distances+=(\"\
    $(abs \"$(bc <<< \"$number - $mean\")\")\")\n    done\n    mean \"${distances[@]}\"",
  "    local input_list=\"$1\"\n    local mean=$(mean \"$input_list\")\n    local\
    \ absolute_deviations=$(echo \"$input_list\" | awk -v mean=\"$mean\" '{print $1-mean}'\
    \ | awk '{print $1<0?-$1:$1}')\n    local sum=$(echo \"$absolute_deviations\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count=$(echo \"$absolute_deviations\"\
    \ | wc -l)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers=($@)\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_differences=()\n \
    \   for number in \"${numbers[@]}\"; do\n        abs_differences+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_differences[@]}\")\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / ${#numbers[@]}\" | bc -l", "    # Calculate mean of the dataset\n \
    \   local mean=$(mean \"$@\")\n    # Calculate absolute difference between each\
    \ element and mean\n    local abs_diffs=$(echo \"$@\" | awk '{for (i=1; i<=NF;\
    \ i++) print $i - '\"$mean\"'}' | awk '{for (i=1; i<=NF; i++) print $i < 0 ? -$i\
    \ : $i}')\n    # Calculate mean of absolute differences\n    mean \"$abs_diffs\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        deviations+=($(echo \"$number - $mean\" | bc -l))\n    done\n  \
    \  local -a absolute_deviations\n    for deviation in \"${deviations[@]}\"; do\n\
    \        absolute_deviations+=($(echo \"if ($deviation < 0) $deviation * -1 else\
    \ $deviation\" | bc -l))\n    done\n    echo \"$(mean \"${absolute_deviations[@]}\"\
    )\"", "    local -a input=($@)\n    local mean=$(mean \"${input[@]}\")\n    local\
    \ -a abs_diff=($(absolute_difference \"${input[@]}\" \"$mean\"))\n    local sum=$(sum\
    \ \"${abs_diff[@]}\")\n    echo \"$(bc <<< \"scale=2; $sum / ${#input[@]}\")\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a abs_deviations\n    abs_deviations=($(echo\
    \ \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1<0?-$1:$1}'))\n\
    \    local sum\n    sum=$(echo \"${abs_deviations[@]}\" | awk '{for(i=1;i<=NF;i++)sum+=$i}END{print\
    \ sum}')\n    local n\n    n=$(echo \"${abs_deviations[@]}\" | wc -w)\n    echo\
    \ \"$sum / $n\" | bc -l", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n\
    \    local -i i=0\n    local -i sum=0\n    local -i mean=0\n    local -i abs_dev=0\n\
    \    local -i abs_dev_sum=0\n    local -i abs_dev_mean=0\n    local -i abs_dev_mean_int=0\n\
    \    local -i abs_dev_mean_dec=0\n    local -i abs_dev_mean_dec_int=0\n    local\
    \ -i abs_dev_mean_dec_frac=0\n    local -i abs_dev_mean_dec_frac_int=0\n    local\
    \ -i abs_dev_mean_dec_frac_frac=0\n    local -i abs_dev_mean_dec_frac_frac_int=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac=0\n    local -i abs_dev_mean_dec_frac_frac_frac_int=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac_frac=0\n    local -i abs_dev_mean_dec_frac_frac_frac_frac_int=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac=0\n    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_int=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac=0\n    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac_int=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac_frac=0\n    local\
    \ -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac_frac_int=0\n    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac_frac_frac=0\n\
    \    local -i abs_dev_mean_dec_frac_frac_frac_frac_frac_frac_frac_frac_int=0\n\
    \   ", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i\
    \ i=0\n    local -i sum=0\n    local -i mean=0\n    local -i abs_deviation=0\n\
    \    local -i sum_abs_deviation=0\n    local -i mad=0\n\n    for ((i=0; i<n; i++));\
    \ do\n        sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n\n \
    \   for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n\
    \        abs_deviation=$((abs_deviation > 0 ? abs_deviation : -abs_deviation))\n\
    \        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n    done\n\
    \    mad=$((sum_abs_deviation / n))\n\n    echo $mad", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number\
    \ in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local\
    \ -a nums=(\"$@\")\n    local mean=$(mean \"${nums[@]}\")\n    local sum=0\n \
    \   for num in \"${nums[@]}\"; do\n        sum=$(echo \"$sum + abs($num - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a values=($@)\n\
    \    local -a abs_deviations=()\n    local sum=0\n    local mean=0\n    local\
    \ abs_deviation=0\n    local mad=0\n\n    # Calculate mean\n    for value in \"\
    ${values[@]}\"; do\n        sum=$(echo \"$sum + $value\" | bc -l)\n    done\n\
    \    mean=$(echo \"$sum / ${#values[@]}\" | bc -l)\n\n    # Calculate absolute\
    \ deviations\n    for value in \"${values[@]}\"; do\n        abs_deviation=$(echo\
    \ \"scale=2; $value - $mean\" | bc -l)\n        abs_deviations+=($(echo \"scale=2;\
    \ $abs_deviation < 0 ? -$abs_deviation : $abs_deviation\" | bc -l))\n    done\n\
    \n    # Calculate mean absolute deviation\n    sum=0\n    for abs_deviation in\
    \ \"${abs_deviations[@]}\"; do\n        sum=$(echo \"$sum + $abs_deviation\" |\
    \ bc -l)\n    done\n    mad=$(echo \"$sum / ${#abs_deviations[@]}\" | bc -l)\n\
    \n    echo \"$mad\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"\
    ${numbers[@]}\")\n    local -a abs_diffs=()\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_diffs+=(\"$(abs \"$(bc <<< \"$number - $mean\")\")\")\n    done\n\
    \    mean \"${abs_diffs[@]}\"", "    local x_mean=$(mean \"$@\")\n    local x_abs_deviation=$(echo\
    \ \"$@\" | awk '{for(i=1;i<=NF;i++)print $i-$1}' $x_mean)\n    local x_abs_deviation_sum=$(echo\
    \ \"$x_abs_deviation\" | awk '{sum+=$1}END{print sum}')\n    local x_abs_deviation_count=$(echo\
    \ \"$x_abs_deviation\" | awk 'END{print NR}')\n    echo \"$x_abs_deviation_sum\
    \ / $x_abs_deviation_count\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs\n\
    \    abs_diffs=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{for (i=1; i<=NF;\
    \ i++) {print $i-mean}}' | awk '{print $1<0?-$1:$1}'))\n    echo \"${abs_diffs[@]}\"\
    \ | mean", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local\
    \ -i i\n    local -i sum=0\n    local -i mean\n    local -i abs_deviation\n  \
    \  local -i abs_deviation_sum=0\n    local -i abs_deviation_mean\n\n    # Calculate\
    \ mean\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n   \
    \ done\n    mean=$((sum / n))\n\n    # Calculate mean absolute deviation\n   \
    \ for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n  \
    \      abs_deviation=$((abs_deviation < 0 ? -abs_deviation : abs_deviation))\n\
    \        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n    done\n\
    \    abs_deviation_mean=$((abs_deviation_sum / n))\n\n    echo $abs_deviation_mean",
  "    local -a numbers\n    numbers=($1)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        local\
    \ deviation=$(echo \"$number - $mean\" | bc -l)\n        deviations+=($(echo \"\
    $deviation\" | awk '{printf \"%f\", $0}'))\n    done\n    mean \"${deviations[@]}\"",
  "    local -a numbers=(\"$@\")\n    local -a abs_diff\n    local mean\n    local\
    \ abs_diff_sum\n    local abs_diff_mean\n    local i\n\n    mean=$(mean \"${numbers[@]}\"\
    )\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        abs_diff[$i]=$(echo \"\
    ${numbers[$i]} - $mean\" | bc -l)\n        abs_diff[$i]=$(echo \"${abs_diff[$i]}\
    \ < 0\" | bc -l)\n        abs_diff[$i]=$(echo \"${abs_diff[$i]} * 2\" | bc -l)\n\
    \        abs_diff[$i]=$(echo \"${abs_diff[$i]} - 1\" | bc -l)\n        abs_diff[$i]=$(echo\
    \ \"${abs_diff[$i]} * ${numbers[$i]}\" | bc -l)\n        abs_diff[$i]=$(echo \"\
    ${abs_diff[$i]} * -1\" | bc -l)\n        abs_diff_sum=$(echo \"$abs_diff_sum +\
    \ ${abs_diff[$i]}\" | bc -l)\n    done\n    abs_diff_mean=$(echo \"$abs_diff_sum\
    \ / ${#numbers[@]}\" | bc -l)\n    echo \"$abs_diff_mean\"", "    local -a numbers\n\
    \    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a absolute_deviations\n    absolute_deviations=()\n    for number in \"${numbers[@]}\"\
    ; do\n        absolute_deviations+=($(absolute_difference \"$number\" \"$mean\"\
    ))\n    done\n    mean \"${absolute_deviations[@]}\"", "    local -a x=($@)\n\
    \    local x_mean=$(mean \"${x[@]}\")\n    local -a x_diff=($(map_array \"abs\"\
    \ \"${x[@]}\" \"$x_mean\"))\n    local x_mad=$(mean \"${x_diff[@]}\")\n    echo\
    \ \"$x_mad\"", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n \
    \       abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf \"\
    %f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\")\"", "    local\
    \ -a input_array\n    input_array=($@)\n    local mean\n    mean=$(mean \"${input_array[@]}\"\
    )\n    local -a abs_diff_array\n    abs_diff_array=($(absolute_difference \"${input_array[@]}\"\
    \ \"$mean\"))\n    local sum\n    sum=$(sum \"${abs_diff_array[@]}\")\n    local\
    \ n\n    n=$(echo \"${#input_array[@]}\")\n    echo \"$(echo \"$sum / $n\" | bc\
    \ -l)\"", "    local -a data=($@)\n    local mean=$(mean \"${data[@]}\")\n   \
    \ local -a abs_diffs=()\n    for x in \"${data[@]}\"; do\n        abs_diffs+=($(echo\
    \ \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"\
    $(mean \"${abs_diffs[@]}\")\"", "    local -a input_array\n    input_array=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${input_array[@]}\")\n    local\
    \ -a abs_diff_array\n    abs_diff_array=($(absolute_difference \"${input_array[@]}\"\
    \ \"$mean\"))\n    local sum\n    sum=$(sum \"${abs_diff_array[@]}\")\n    local\
    \ n\n    n=$(echo \"${#input_array[@]}\")\n    echo \"$(bc <<< \"scale=2; $sum\
    \ / $n\")\""]
stop_tokens:
- "\n}"

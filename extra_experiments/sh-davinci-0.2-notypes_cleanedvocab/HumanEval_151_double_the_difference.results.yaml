language: sh
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo $1\n \
    \   # echo $2\n    # echo $3\n    # echo $4\n    # echo $5\n    # echo $6\n  \
    \  # echo $7\n    # echo $8\n    # echo $9\n    # echo $10\n    # echo $11\n \
    \   # echo $12\n    # echo $13\n    # echo $14\n    # echo $15\n    # echo $16\n\
    \    # echo $17\n    # echo $18\n    # echo $19\n    # echo $20\n    # echo $21\n\
    \    # echo $22\n    # echo $23\n    # echo $24\n    # echo $25\n    # echo $26\n\
    \    # echo $27\n    # echo $28\n    # echo $29\n    # echo $30\n    # echo $31\n\
    \    # echo $32\n    # echo $33\n    # echo $34\n    # echo $35\n    # echo $36\n\
    \    # echo $37\n    # echo $38\n    # echo $39\n    # echo $40\n    # echo $41\n\
    \    # echo $42\n    # echo $43\n    # echo $44\n    # echo $45\n    # echo $46\n\
    \    # echo $47\n    # echo $48\n    # echo $49\n    # echo $50\n    # echo $51\n\
    \    # echo $52\n    # echo $53\n    # echo $54\n    # echo $55\n    # echo $56\n\
    \    # echo $57\n    # echo $58\n    # echo $59\n    # echo $60\n    # echo $61\n\
    \    # echo $62\n    # echo $63\n    # echo $64\n    # echo $65\n    # echo $66\n\
    \    # echo $67\n    # echo $68\n    # echo $69\n    # echo $70\n    # echo $71\n\
    \    # echo $72\n    # echo $73\n    # echo $74\n    # echo $75\n    # echo $76\n\
    \    # echo $77\n    # echo $78\n    # echo $79\n    # echo $80\n    # echo $81\n\
    \    # echo $82\n    # echo $83\n    # echo $84\n\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp353ymbng.sh: line 100: syntax error near unexpected token `}''\n/tmp/tmp353ymbng.sh:
    line 100: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Fill in your code here\n    sum=0\n   \
    \ for i in $@\n    do\n        if [[ $i -gt 0 ]] && [[ $i -eq $i ]]\n        then\n\
    \            if [[ $((i%2)) -eq 1 ]]\n            then\n                sum=$((sum+(i*i)))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43t7xjco.sh: line 18: [[: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmp43t7xjco.sh: line 18: [[: 4.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    local sum=0\n    for\
    \ num in $@; do\n        if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num\
    \ % 2)) -eq 1 ]]; then\n                sum=$((sum + num * num))\n           \
    \ fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Your code here.\n    return 0\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator % to determine if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the bc command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the echo command to return a value.\n    # Hint: You can use the\
    \ return command to return a value.\n    # Hint: You can use the test command\
    \ to test if a file exists.\n    # Hint: You can use the test command to test\
    \ if a file is a directory.\n    # Hint: You can use the test command to test\
    \ if a file is a regular file.\n    # Hint: You can use the test command to test\
    \ if a file is a symbolic link.\n    # Hint: You can use the test command to test\
    \ if a file is readable.\n    # Hint: You can use the test command to test if\
    \ a file is writable.\n    # Hint: You can use the test command to test if a file\
    \ is executable.\n    # Hint: You can use the test command to test if a file is\
    \ empty.\n    # Hint: You can use the test command to test if a variable is set.\n\
    \    # Hint: You can use the test command to test if a variable is empty.\n  \
    \  # Hint: You can use the test command to test if a string is equal to another\
    \ string.\n    # Hint: You can use the test command to test if a string is not\
    \ equal to another string.\n    # Hint: You can use the test command to test if\
    \ an integer is equal to another integer.\n    # Hint: You can use the test command\
    \ to test if an integer is not equal to another integer.\n    # Hint: You can\
    \ use the test command to test if an integer is less than another integer.\n \
    \   # Hint: You can use the test command to test if an integer is less than or\
    \ equal to another integer.\n    # Hint: You can use the test command to test\
    \ if an integer is greater than another integer.\n    # Hint: You can use the\
    \ test command to test if an integer is greater than or equal to another integer.\n\
    \    # Hint: You can use the test command to test if\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp6d_zxki4.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmp6d_zxki4.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You may want to use the `is_odd` function.\n    # Hint: You may want to use\
    \ the `is_integer` function.\n    # Hint: You may want to use the `is_positive`\
    \ function.\n    # Hint: You may want to use the `is_non_negative` function.\n\
    \    # Hint: You may want to use the `square` function.\n    # Hint: You may want\
    \ to use the `sum` function.\n    # Hint: You may want to use the `filter` function.\n\
    \    # Hint: You may want to use the `map` function.\n    # Hint: You may want\
    \ to use the `double` function.\n    # Hint: You may want to use the `difference`\
    \ function.\n    # Hint: You may want to use the `is_empty` function.\n    # Hint:\
    \ You may want to use the `is_non_empty` function.\n    # Hint: You may want to\
    \ use the `is_zero` function.\n    # Hint: You may want to use the `is_non_zero`\
    \ function.\n    # Hint: You may want to use the `is_equal` function.\n    # Hint:\
    \ You may want to use the `is_not_equal` function.\n    # Hint: You may want to\
    \ use the `is_less_than` function.\n    # Hint: You may want to use the `is_less_than_or_equal`\
    \ function.\n    # Hint: You may want to use the `is_greater_than` function.\n\
    \    # Hint: You may want to use the `is_greater_than_or_equal` function.\n  \
    \  # Hint: You may want to use the `is_in_range` function.\n    # Hint: You may\
    \ want to use the `is_not_in_range` function.\n    # Hint: You may want to use\
    \ the `is_in_set` function.\n    # Hint: You may want to use the `is_not_in_set`\
    \ function.\n    # Hint: You may want to use the `is_in_string`\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpj5smouk_.sh: line 40: syntax error near unexpected token `}''\n/tmp/tmpj5smouk_.sh:
    line 40: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo \"0\"\n\
    \    # echo \"1\"\n    # echo \"2\"\n    # echo \"3\"\n    # echo \"4\"\n    #\
    \ echo \"5\"\n    # echo \"6\"\n    # echo \"7\"\n    # echo \"8\"\n    # echo\
    \ \"9\"\n    # echo \"10\"\n    # echo \"11\"\n    # echo \"12\"\n    # echo \"\
    13\"\n    # echo \"14\"\n    # echo \"15\"\n    # echo \"16\"\n    # echo \"17\"\
    \n    # echo \"18\"\n    # echo \"19\"\n    # echo \"20\"\n    # echo \"21\"\n\
    \    # echo \"22\"\n    # echo \"23\"\n    # echo \"24\"\n    # echo \"25\"\n\
    \    # echo \"26\"\n    # echo \"27\"\n    # echo \"28\"\n    # echo \"29\"\n\
    \    # echo \"30\"\n    # echo \"31\"\n    # echo \"32\"\n    # echo \"33\"\n\
    \    # echo \"34\"\n    # echo \"35\"\n    # echo \"36\"\n    # echo \"37\"\n\
    \    # echo \"38\"\n    # echo \"39\"\n    # echo \"40\"\n    # echo \"41\"\n\
    \    # echo \"42\"\n    # echo \"43\"\n    # echo \"44\"\n    # echo \"45\"\n\
    \    # echo \"46\"\n    # echo \"47\"\n    # echo \"48\"\n    # echo \"49\"\n\
    \    # echo \"50\"\n    # echo \"51\"\n    # echo \"52\"\n    # echo \"53\"\n\
    \    # echo \"54\"\n    # echo \"55\"\n    # echo \"56\"\n    # echo \"57\"\n\
    \    # echo \"58\"\n    # echo \"59\"\n    # echo \"60\"\n    # echo \"61\"\n\
    \    # echo \"62\"\n    # echo \"63\"\n    # echo \"64\"\n    # echo \"65\"\n\
    \    # echo \"66\"\n    # echo \"67\"\n    # echo \"68\"\n    # echo \"69\"\n\
    \    # echo \"70\"\n    # echo \"71\"\n\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphup90s7a.sh: line 88: syntax error near unexpected token `}''\n/tmp/tmphup90s7a.sh:
    line 88: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    return 0\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i*i))\n            fi\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + (i * i)))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Your code here.\n    return 0\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + (i * i)))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # You can use\
    \ the following command to get the square of a number:\n    # $((<number> * <number>))\n\
    \    # For example, $((2 * 2)) is 4.\n    # You can use the following command\
    \ to check if a number is odd:\n    # ((<number> % 2 == 1))\n    # For example,\
    \ ((2 % 2 == 1)) is false.\n    # You can use the following command to check if\
    \ a number is even:\n    # ((<number> % 2 == 0))\n    # For example, ((2 % 2 ==\
    \ 0)) is true.\n    # You can use the following command to check if a number is\
    \ positive:\n    # ((<number> > 0))\n    # For example, ((2 > 0)) is true.\n \
    \   # You can use the following command to check if a number is negative:\n  \
    \  # ((<number> < 0))\n    # For example, ((2 < 0)) is false.\n    # You can use\
    \ the following command to check if a number is an integer:\n    # ((<number>\
    \ == <number>))\n    # For example, ((2.5 == 2.5)) is false.\n    # You can use\
    \ the following command to check if a number is not an integer:\n    # ((<number>\
    \ != <number>))\n    # For example, ((2.5 != 2.5)) is true.\n    # You can use\
    \ the following command to check if a number is a float:\n    # ((<number> ==\
    \ <number>))\n    # For example, ((2.5 == 2.5)) is true.\n    # You can use the\
    \ following command to check if a number is not a float:\n    # ((<number> !=\
    \ <number>))\n    # For example, ((2.5 != 2.5)) is false.\n    # You can use the\
    \ following command to check if a number is a number:\n    # ((<number> == <number>))\n\
    \    # For example, ((2.5 == 2.5)) is true.\n    # You can use the following command\
    \ to check if a number is not a number:\n    # ((<number> != <number>))\n    #\
    \ For example, ((2.5 != 2.5))\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpbeyvmcrn.sh: line 48: syntax error near unexpected token `}''\n/tmp/tmpbeyvmcrn.sh:
    line 48: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if (( $i > 0 )); then\n            (( sum += i * i ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjji26x4u.sh: line 16: ((: 5.0 > 0 : syntax error: invalid arithmetic
    operator (error token is ".0 > 0 ")\n/tmp/tmpjji26x4u.sh: line 16: ((: 4.0 > 0
    : syntax error: invalid arithmetic operator (error token is ".0 > 0 ")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # YOUR CODE HERE\n    return 0\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    #echo \"0\"\n\
    \    #echo $1\n    #echo $2\n    #echo $3\n    #echo $4\n    #echo $5\n    #echo\
    \ $6\n    #echo $7\n    #echo $8\n    #echo $9\n    #echo $10\n    #echo $11\n\
    \    #echo $12\n    #echo $13\n    #echo $14\n    #echo $15\n    #echo $16\n \
    \   #echo $17\n    #echo $18\n    #echo $19\n    #echo $20\n    #echo $21\n  \
    \  #echo $22\n    #echo $23\n    #echo $24\n    #echo $25\n    #echo $26\n   \
    \ #echo $27\n    #echo $28\n    #echo $29\n    #echo $30\n    #echo $31\n    #echo\
    \ $32\n    #echo $33\n    #echo $34\n    #echo $35\n    #echo $36\n    #echo $37\n\
    \    #echo $38\n    #echo $39\n    #echo $40\n    #echo $41\n    #echo $42\n \
    \   #echo $43\n    #echo $44\n    #echo $45\n    #echo $46\n    #echo $47\n  \
    \  #echo $48\n    #echo $49\n    #echo $50\n    #echo $51\n    #echo $52\n   \
    \ #echo $53\n    #echo $54\n    #echo $55\n    #echo $56\n    #echo $57\n    #echo\
    \ $58\n    #echo $59\n    #echo $60\n    #echo $61\n    #echo $62\n    #echo $63\n\
    \    #echo $64\n    #echo $65\n    #echo $66\n    #echo $67\n    #echo $68\n \
    \   #echo $69\n    #echo $70\n    #echo $71\n    #echo $72\n    #echo $73\n  \
    \  #echo $74\n    #echo $75\n    #echo $76\n    #echo $77\n    #echo $78\n   \
    \ #echo $79\n    #echo $80\n    #echo $81\n    #echo $82\n    #echo $83\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqdsre7fd.sh: line 99: syntax error near unexpected token `}''\n/tmp/tmpqdsre7fd.sh:
    line 99: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local input=$@\n  local result=0\n  local num\n\
    \  for num in $input; do\n    if [[ $num =~ ^-?[0-9]+$ ]]; then\n      if [[ $((num\
    \ % 2)) -eq 1 ]]; then\n        result=$((result + num * num))\n      fi\n   \
    \ fi\n  done\n  echo $result\n}\n\ncandidate() {\n    double_the_difference \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function\n    local\
    \ sum=0\n    for i in $@; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n        \
    \    if [[ $((i%2)) -eq 1 ]]; then\n                sum=$((sum+i*i))\n       \
    \     fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # You\
    \ may use a loop, but you may not use any external commands.\n    # You may use\
    \ `expr` to do arithmetic.\n    # You may use `echo` to produce output.\n    #\
    \ You may use `$(...)` to capture the output of a command.\n    # You may use\
    \ `$1` to access the first argument.\n    # You may use `$#` to access the number\
    \ of arguments.\n    # You may use `$@` to access all arguments.\n    # You may\
    \ use `$((...))` to do arithmetic.\n    # You may use `$[...]` to do arithmetic.\n\
    \    # You may use `$((...))` to do arithmetic.\n    # You may use `$[...]` to\
    \ do arithmetic.\n    # You may use `$((...))` to do arithmetic.\n    # You may\
    \ use `$[...]` to do arithmetic.\n    # You may use `$((...))` to do arithmetic.\n\
    \    # You may use `$[...]` to do arithmetic.\n    # You may use `$((...))` to\
    \ do arithmetic.\n    # You may use `$[...]` to do arithmetic.\n    # You may\
    \ use `$((...))` to do arithmetic.\n    # You may use `$[...]` to do arithmetic.\n\
    \    # You may use `$((...))` to do arithmetic.\n    # You may use `$[...]` to\
    \ do arithmetic.\n    # You may use `$((...))` to do arithmetic.\n    # You may\
    \ use `$[...]` to do arithmetic.\n    # You may use `$((...))` to do arithmetic.\n\
    \    # You may use `$[...]` to do arithmetic.\n    # You may use `$((...))` to\
    \ do arithmetic.\n    # You may use `$[...]` to do arithmetic.\n    # You may\
    \ use `$((...))` to do arithmetic.\n    # You may use `$[...]` to do arithmetic.\n\
    \    # You may use `$((...))` to do arithmetic.\n    # You may use `$[...]` to\
    \ do arithmetic.\n    # You may use `$((...))` to do arithmetic.\n    #\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpwzcl4y2n.sh: line 48: syntax error near unexpected token `}''\n/tmp/tmpwzcl4y2n.sh:
    line 48: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for num in $@; do\n    if [[\
    \ $num =~ ^-?[0-9]+$ ]]; then\n      if [[ $((num % 2)) -eq 1 ]]; then\n     \
    \   sum=$((sum + num * num))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # YOUR CODE HERE\n    sum=0\n    for i in\
    \ $@\n    do\n        if [ $i -gt 0 ] && [ $((i%2)) -eq 1 ]\n        then\n  \
    \          sum=$((sum+i*i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp4bhk69s6.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmp4bhk69s6.sh:
    line 18: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    echo \"0\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [ $i -gt 0 ] && [ $i -eq $i 2>/dev/null ]\n    \
    \    then\n            if [ $((i%2)) -ne 0 ]\n            then\n             \
    \   sum=$((sum+i*i))\n            fi\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmph2ahaazp.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmph2ahaazp.sh:
    line 18: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function\n    # Hint:\
    \ You can use the modulo operator to determine whether a number is odd.\n    #\
    \       For example, if n is an odd number, then n % 2 will be 1.\n    #     \
    \  If n is an even number, then n % 2 will be 0.\n    # Hint: You can use the\
    \ expr command to evaluate arithmetic expressions.\n    #       For example, expr\
    \ 2 + 3 will evaluate to 5.\n    # Hint: You can use the bc command to evaluate\
    \ arithmetic expressions.\n    #       For example, bc <<< 2 + 3 will evaluate\
    \ to 5.\n    # Hint: You can use the seq command to generate a sequence of numbers.\n\
    \    #       For example, seq 1 2 10 will generate the sequence 1 3 5 7 9.\n \
    \   # Hint: You can use the tr command to translate characters.\n    #       For\
    \ example, tr '\\n' ' ' < file.txt will replace all newlines in file.txt with\
    \ spaces.\n    # Hint: You can use the paste command to merge lines of files.\n\
    \    #       For example, paste -d, file1.txt file2.txt will merge file1.txt and\
    \ file2.txt,\n    #       separating the lines of the merged output with commas.\n\
    \    # Hint: You can use the sort command to sort lines of text.\n    #      \
    \ For example, sort file.txt will sort the lines of file.txt.\n    # Hint: You\
    \ can use the uniq command to remove duplicate lines from a file.\n    #     \
    \  For example, uniq file.txt will remove duplicate lines from file.txt.\n   \
    \ # Hint: You can use the grep command to find lines that match a pattern.\n \
    \   #       For example, grep -v '^#' file.txt will remove lines beginning with\
    \ # from file.txt.\n    # Hint: You can use the wc command to count lines, words,\
    \ and characters.\n    #       For example, wc -l file.txt will print the number\
    \ of lines in file.txt.\n    # Hint: You can use the cut command to extract parts\
    \ of each line of a file.\n    #       For example, cut -f 1,3 -d, file.txt will\
    \ print the first and third fields\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpn_l5c6ln.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmpn_l5c6ln.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^-?[0-9]+$ ]]; then\n            if (( num % 2 != 0 )); then\n\
    \                sum=$(( sum + num * num ))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo $1 | tr\
    \ \" \" \"\\n\" | awk '{if ($1>0 && $1%2==1) print $1*$1}' | awk '{sum+=$1} END\
    \ {print sum}'\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # TODO: Your code here\n  echo \"0\"\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [[ $(( $i % 2 )) -ne 0 ]]\n            then\n                sum=$(( $sum\
    \ + $(( $i * $i )) ))\n            fi\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    sum=0\n    for i in\
    \ $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n            if [\
    \ $(($i % 2)) -ne 0 ]\n            then\n                sum=$(($sum + $i * $i))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    echo \"0\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # your code here\n  echo $1 | tr ' ' '\\n'\
    \ | grep -E '^[0-9]+$' | grep -vE '^[0-9]*[02468]$' | awk '{sum+=$1} END {print\
    \ sum*sum}'\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo \"0\"\n\
    \    sum=0\n    for i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n       \
    \ then\n            if [[ $(( $i % 2 )) -ne 0 ]]\n            then\n         \
    \       sum=$(( $sum + $(( $i * $i )) ))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^-?[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^-?[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + (i * i)))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $(( $i % 2 )) -eq 1 ]]; then\n\
    \                sum=$(( $sum + $(( $i * $i )) ))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # your code here\n  echo \"0\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    return\
    \ 0\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ Use the bash arithmetic syntax to perform calculations.\n    # Hint: Use the\
    \ modulo operator to determine if a number is odd.\n    # Hint: Use the continue\
    \ statement to skip over non-integer numbers.\n    # Hint: Use the continue statement\
    \ to skip over negative numbers.\n    # Hint: Use the continue statement to skip\
    \ over numbers that are not odd.\n    # Hint: Use the bash arithmetic syntax to\
    \ perform calculations.\n    # Hint: Use the bash arithmetic syntax to perform\
    \ calculations.\n    # Hint: Use the bash arithmetic syntax to perform calculations.\n\
    \    # Hint: Use the bash arithmetic syntax to perform calculations.\n    # Hint:\
    \ Use the bash arithmetic syntax to perform calculations.\n    # Hint: Use the\
    \ bash arithmetic syntax to perform calculations.\n    # Hint: Use the bash arithmetic\
    \ syntax to perform calculations.\n    # Hint: Use the bash arithmetic syntax\
    \ to perform calculations.\n    # Hint: Use the bash arithmetic syntax to perform\
    \ calculations.\n    # Hint: Use the bash arithmetic syntax to perform calculations.\n\
    \    # Hint: Use the bash arithmetic syntax to perform calculations.\n    # Hint:\
    \ Use the bash arithmetic syntax to perform calculations.\n    # Hint: Use the\
    \ bash arithmetic syntax to perform calculations.\n    # Hint: Use the bash arithmetic\
    \ syntax to perform calculations.\n    # Hint: Use the bash arithmetic syntax\
    \ to perform calculations.\n    # Hint: Use the bash arithmetic syntax to perform\
    \ calculations.\n    # Hint: Use the bash arithmetic syntax to perform calculations.\n\
    \    # Hint: Use the bash arithmetic syntax to perform calculations.\n    # Hint:\
    \ Use the bash arithmetic syntax to perform calculations.\n    # Hint: Use the\
    \ bash arithmetic syntax to perform calculations.\n    # Hint: Use the bash arithmetic\
    \ syntax to perform calculations.\n    # Hint: Use the bash arithmetic syntax\
    \ to perform calculations.\n    # Hint: Use the bash arithmetic syntax to perform\
    \ calculations.\n    # Hint: Use the bash arithmetic syntax to perform calculations.\n\
    \    # Hint: Use the bash arithmetic syntax to perform calculations.\n    # Hint:\
    \ Use the bash arithmetic syntax to perform calculations.\n    # Hint: Use the\
    \ bash arithmetic syntax to perform calculations.\n    # Hint: Use the bash arithmetic\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp8kx085rr.sh: line 48: syntax error near unexpected token `}''\n/tmp/tmp8kx085rr.sh:
    line 48: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    #echo \"0\"\n\
    \    sum=0\n    for i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n       \
    \ then\n            if [[ $((i%2)) -ne 0 ]]\n            then\n              \
    \  sum=$((sum+i*i))\n            fi\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo \"0\"\n\
    \    sum=0\n    for i in $@\n    do\n        if [ $i -lt 0 ]\n        then\n \
    \           continue\n        fi\n        if [ $((i%2)) -eq 1 ]\n        then\n\
    \            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeo9okhwc.sh: line 19: [: 5.0: integer expression expected\n/tmp/tmpeo9okhwc.sh:
    line 23: 5.0: syntax error: invalid arithmetic operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ \"$i\" =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [ $i -gt 0 ] && [ $((i%2)) -ne 0 ]\n        then\n\
    \            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpp9zh28of.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmpp9zh28of.sh:
    line 18: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [[ $((i%2)) -ne 0 ]]\n            then\n                sum=$((sum+i*i))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [ $(($i%2)) -ne 0 ]\n            then\n                sum=$(($sum+$(($i*$i))))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo \"$@\"\
    \n    sum=0\n    for i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n      \
    \  then\n            if [[ $((i%2)) -ne 0 ]]\n            then\n             \
    \   sum=$((sum+i*i))\n            fi\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    # echo\
    \ \"0\"\n    sum=0\n    for i in $@\n    do\n        if [ $i -ge 0 ] && [ $((i%2))\
    \ -eq 1 ]\n        then\n            sum=$((sum+i*i))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpei3n5b0d.sh: line 19: [: 5.0: integer expression expected\n/tmp/tmpei3n5b0d.sh:
    line 19: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    # Hint:\
    \ use the is_odd function\n    # Hint: use the square function\n    # Hint: use\
    \ the sum function\n    # Hint: use the filter function\n    # Hint: use the map\
    \ function\n    # Hint: use the reduce function\n    # Hint: use the double function\n\
    \    # Hint: use the difference function\n    # Hint: use the is_positive function\n\
    \    # Hint: use the is_integer function\n    # Hint: use the is_negative function\n\
    \    # Hint: use the is_zero function\n    # Hint: use the is_non_zero function\n\
    \    # Hint: use the is_even function\n    # Hint: use the is_non_negative function\n\
    \    # Hint: use the is_non_positive function\n    # Hint: use the is_non_integer\
    \ function\n    # Hint: use the is_non_even function\n    # Hint: use the is_non_zero\
    \ function\n    # Hint: use the is_non_odd function\n    # Hint: use the is_zero\
    \ function\n    # Hint: use the is_odd function\n    # Hint: use the is_positive\
    \ function\n    # Hint: use the is_integer function\n    # Hint: use the is_negative\
    \ function\n    # Hint: use the is_non_negative function\n    # Hint: use the\
    \ is_non_positive function\n    # Hint: use the is_non_integer function\n    #\
    \ Hint: use the is_non_even function\n    # Hint: use the is_non_zero function\n\
    \    # Hint: use the is_non_odd function\n    # Hint: use the is_zero function\n\
    \    # Hint: use the is_odd function\n    # Hint: use the is_positive function\n\
    \    # Hint: use the is_integer function\n    # Hint: use the is_negative function\n\
    \    # Hint: use the is_non_negative function\n    # Hint: use the is_non_positive\
    \ function\n    # Hint: use the is_non_integer function\n    # Hint: use the is_non_even\
    \ function\n    #\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpn6t_mlh6.sh: line 56: syntax error near unexpected token `}''\n/tmp/tmpn6t_mlh6.sh:
    line 56: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    # Hint:\
    \ use the is_odd function\n    # Hint: use the square function\n    # Hint: use\
    \ the sum function\n    # Hint: use the filter function\n    # Hint: use the map\
    \ function\n    # Hint: use the reduce function\n    # Hint: use the double function\n\
    \    # Hint: use the difference function\n    # Hint: use the is_positive function\n\
    \    # Hint: use the is_integer function\n    # Hint: use the is_not function\n\
    \    # Hint: use the and function\n    # Hint: use the or function\n    # Hint:\
    \ use the not function\n    # Hint: use the is_zero function\n    # Hint: use\
    \ the is_empty function\n    # Hint: use the is_not_empty function\n    # Hint:\
    \ use the is_equal function\n    # Hint: use the is_not_equal function\n    #\
    \ Hint: use the is_less_than function\n    # Hint: use the is_greater_than function\n\
    \    # Hint: use the is_less_than_or_equal function\n    # Hint: use the is_greater_than_or_equal\
    \ function\n    # Hint: use the is_in function\n    # Hint: use the is_not_in\
    \ function\n    # Hint: use the is_none function\n    # Hint: use the is_not_none\
    \ function\n    # Hint: use the is_true function\n    # Hint: use the is_false\
    \ function\n    # Hint: use the is_truthy function\n    # Hint: use the is_falsy\
    \ function\n    # Hint: use the is_same function\n    # Hint: use the is_not_same\
    \ function\n    # Hint: use the is_same_type function\n    # Hint: use the is_not_same_type\
    \ function\n    # Hint: use the is_same_length function\n    # Hint: use the is_not_same_length\
    \ function\n    # Hint: use the is_same_size function\n    # Hint: use the is_not_same_size\
    \ function\n    # Hint:\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpnuv6238q.sh: line 55: syntax error near unexpected token `}''\n/tmp/tmpnuv6238q.sh:
    line 55: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local input=$1\n    local sum=0\n    for\
    \ i in $input; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i\
    \ % 2)) -eq 1 ]]; then\n                sum=$((sum + i * i))\n            fi\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    sum=0\n    for i in\
    \ $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n            if [[\
    \ $((i%2)) -eq 1 ]]\n            then\n                sum=$((sum+i*i))\n    \
    \        fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo 0\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator % to check if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the return command to return a value.\n    # Hint: You can use the\
    \ echo command to print text.\n    # Hint: You can use the read command to read\
    \ input.\n    # Hint: You can use the set command to assign variables.\n    #\
    \ Hint: You can use the $ character to access variables.\n    # Hint: You can\
    \ use the $@ variable to access all the arguments.\n    # Hint: You can use the\
    \ $# variable to access the number of arguments.\n    # Hint: You can use the\
    \ $? variable to access the exit status of the last command.\n    # Hint: You\
    \ can use the $0 variable to access the name of the script.\n    # Hint: You can\
    \ use the $1 variable to access the first argument.\n    # Hint: You can use the\
    \ $2 variable to access the second argument.\n    # Hint: You can use the $3 variable\
    \ to access the third argument.\n    # Hint: You can use the $4 variable to access\
    \ the fourth argument.\n    # Hint: You can use the $5 variable to access the\
    \ fifth argument.\n    # Hint: You can use the $6 variable to access the sixth\
    \ argument.\n    # Hint: You can use the $7 variable to access the seventh argument.\n\
    \    # Hint: You can use the $8 variable to access the eighth argument.\n    #\
    \ Hint: You can use the $9 variable to access the ninth argument.\n    # Hint:\
    \ You can use the ${10} variable to access the tenth argument.\n    # Hint: You\
    \ can use the ${11} variable to access the eleventh argument.\n    # Hint: You\
    \ can use the ${12} variable to access the twelfth argument.\n    # Hint: You\
    \ can use the ${13} variable to access the thirteenth argument.\n    # Hint: You\
    \ can use the ${14} variable to access the fourteenth argument.\n    # Hint: You\
    \ can use the ${15} variable to access the fifteenth argument.\n   \n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptvz1qikn.sh: line 42: syntax error near unexpected token `}''\n/tmp/tmptvz1qikn.sh:
    line 42: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function\n    echo\
    \ \"0\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [[ $((i%2)) -ne 0 ]]\n            then\n                sum=$((sum+i*i))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            sum=$((sum + i * i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [ $i -gt 0 ] && [ $(($i%2)) -eq 1 ]\n        then\n\
    \            sum=$(($sum+$i*$i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpm5i8r5h0.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmpm5i8r5h0.sh:
    line 18: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo \"0\"\n\
    \    sum=0\n    for i in $@\n    do\n        if [ $i -lt 0 ]\n        then\n \
    \           continue\n        fi\n        if [ $((i%2)) -eq 1 ]\n        then\n\
    \            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeo9okhwc.sh: line 19: [: 5.0: integer expression expected\n/tmp/tmpeo9okhwc.sh:
    line 23: 5.0: syntax error: invalid arithmetic operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator % to check if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the test command to check if a number is negative.\n    # Hint:\
    \ You can use the test command to check if a number is an integer.\n    # Hint:\
    \ You can use the test command to check if a string is empty.\n    # Hint: You\
    \ can use the test command to check if a string is not empty.\n    # Hint: You\
    \ can use the test command to check if a file exists.\n    # Hint: You can use\
    \ the test command to check if a file is a regular file.\n    # Hint: You can\
    \ use the test command to check if a file is a directory.\n    # Hint: You can\
    \ use the test command to check if a file is a symbolic link.\n    # Hint: You\
    \ can use the test command to check if a file is readable.\n    # Hint: You can\
    \ use the test command to check if a file is writable.\n    # Hint: You can use\
    \ the test command to check if a file is executable.\n    # Hint: You can use\
    \ the test command to check if a file is empty.\n    # Hint: You can use the test\
    \ command to check if a file is not empty.\n    # Hint: You can use the test command\
    \ to check if a file is newer than another file.\n    # Hint: You can use the\
    \ test command to check if a file is older than another file.\n    # Hint: You\
    \ can use the test command to check if a file is the same as another file.\n \
    \   # Hint: You can use the test command to check if a file is different from\
    \ another file.\n    # Hint: You can use the test command to check if a file is\
    \ a block special file.\n    # Hint: You can use the test command to check if\
    \ a file is a character special file.\n    # Hint: You can use the test command\
    \ to check if a file is a socket.\n    # Hint: You can use the test command to\
    \ check if a file is a FIFO.\n    # Hint: You can use the test command\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptc3kqw2a.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmptc3kqw2a.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    local sum=0\n\
    \    for i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]] && [[ $i -gt 0 ]]\n\
    \        then\n            sum=$((sum + i**2))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [[ $((i%2)) -ne 0 ]]\n            then\n                sum=$((sum+(i*i)))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # TODO: implement this function\n  echo \"\
    0\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function\n    # Hint:\
    \ You can use the modulo operator to determine if a number is odd.\n    #    \
    \   For example, $((3 % 2)) is 1, and $((4 % 2)) is 0.\n    # Hint: You can use\
    \ the expr command to perform arithmetic operations.\n    #       For example,\
    \ $(expr 3 \\* 3) is 9.\n    # Hint: You can use the test command to check if\
    \ a number is negative.\n    #       For example, $(test 3 -lt 0) is false, and\
    \ $(test -1 -lt 0) is true.\n    # Hint: You can use the test command to check\
    \ if a number is an integer.\n    #       For example, $(test 3 -eq 3) is true,\
    \ and $(test 3.5 -eq 3.5) is false.\n    # Hint: You can use the test command\
    \ to check if a string is empty.\n    #       For example, $(test -z \"\") is\
    \ true, and $(test -z \"hello\") is false.\n    # Hint: You can use the test command\
    \ to check if a string is a number.\n    #       For example, $(test \"3\" -eq\
    \ 3) is true, and $(test \"hello\" -eq \"hello\") is false.\n    # Hint: You can\
    \ use the test command to check if a string is an integer.\n    #       For example,\
    \ $(test \"3\" -eq 3) is true, and $(test \"3.5\" -eq 3.5) is false.\n    # Hint:\
    \ You can use the test command to check if a string is a negative number.\n  \
    \  #       For example, $(test \"-3\" -lt 0) is true, and $(test \"3\" -lt 0)\
    \ is false.\n    # Hint: You can use the test command to check if a string is\
    \ an odd number.\n    #       For example, $(test \"-3\" -eq $((-3 % 2))) is true,\
    \ and $(test \"3\" -eq $((3 % 2))) is false.\n    # Hint: You can use the test\
    \ command to check if a string is an even number.\n    #       For example, $(test\
    \ \"3\" -eq $((3 % 2))) is true,\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkue9ekyz.sh: line 35: syntax error near unexpected token `}''\n/tmp/tmpkue9ekyz.sh:
    line 35: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [ $i -lt 0 ] || [ $(echo \"$i % 1\" | bc) -ne 0\
    \ ]\n        then\n            continue\n        fi\n        if [ $(($i % 2))\
    \ -ne 0 ]\n        then\n            sum=$(($sum + $i * $i))\n        fi\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1k40k848.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmp1k40k848.sh:
    line 22: 5.0 % 2: syntax error: invalid arithmetic operator (error token is ".0
    % 2")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ Use a for loop.\n    # Hint: Use the modulo operator.\n    # Hint: Use the expr\
    \ command.\n    # Hint: Use the continue statement.\n    # Hint: Use the break\
    \ statement.\n    # Hint: Use the return statement.\n    # Hint: Use the echo\
    \ command.\n    # Hint: Use the $@ variable.\n    # Hint: Use the $1 variable.\n\
    \    # Hint: Use the $2 variable.\n    # Hint: Use the $# variable.\n    # Hint:\
    \ Use the $? variable.\n    # Hint: Use the $0 variable.\n    # Hint: Use the\
    \ $* variable.\n    # Hint: Use the $# variable.\n    # Hint: Use the $? variable.\n\
    \    # Hint: Use the $0 variable.\n    # Hint: Use the $* variable.\n    # Hint:\
    \ Use the $# variable.\n    # Hint: Use the $? variable.\n    # Hint: Use the\
    \ $0 variable.\n    # Hint: Use the $* variable.\n    # Hint: Use the $# variable.\n\
    \    # Hint: Use the $? variable.\n    # Hint: Use the $0 variable.\n    # Hint:\
    \ Use the $* variable.\n    # Hint: Use the $# variable.\n    # Hint: Use the\
    \ $? variable.\n    # Hint: Use the $0 variable.\n    # Hint: Use the $* variable.\n\
    \    # Hint: Use the $# variable.\n    # Hint: Use the $? variable.\n    # Hint:\
    \ Use the $0 variable.\n    # Hint: Use the $* variable.\n    # Hint: Use the\
    \ $# variable.\n    # Hint: Use the $? variable.\n    # Hint: Use the $0 variable.\n\
    \    # Hint: Use the $* variable.\n    # Hint: Use the $# variable.\n    # Hint:\
    \ Use the $? variable.\n    # Hint: Use the $0 variable.\n    # Hint: Use the\
    \ $* variable.\n    # H\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptf19_sxb.sh: line 58: syntax error near unexpected token `}''\n/tmp/tmptf19_sxb.sh:
    line 58: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if (( i % 2 == 1 )); then\n  \
    \              sum=$(( sum + i * i ))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator to determine if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the test command to check if a number is negative.\n    # Hint:\
    \ You can use the test command to check if a number is an integer.\n    # Hint:\
    \ You can use the test command to check if a string is empty.\n    # Hint: You\
    \ can use the test command to check if a string is not empty.\n    # Hint: You\
    \ can use the test command to check if a file exists.\n    # Hint: You can use\
    \ the test command to check if a file does not exist.\n    # Hint: You can use\
    \ the test command to check if a file is readable.\n    # Hint: You can use the\
    \ test command to check if a file is not readable.\n    # Hint: You can use the\
    \ test command to check if a file is writable.\n    # Hint: You can use the test\
    \ command to check if a file is not writable.\n    # Hint: You can use the test\
    \ command to check if a file is executable.\n    # Hint: You can use the test\
    \ command to check if a file is not executable.\n    # Hint: You can use the test\
    \ command to check if a file is a directory.\n    # Hint: You can use the test\
    \ command to check if a file is not a directory.\n    # Hint: You can use the\
    \ test command to check if a file is a regular file.\n    # Hint: You can use\
    \ the test command to check if a file is not a regular file.\n    # Hint: You\
    \ can use the test command to check if a file is a symbolic link.\n    # Hint:\
    \ You can use the test command to check if a file is not a symbolic link.\n  \
    \  # Hint: You can use the test command to check if a file is a socket.\n    #\
    \ Hint: You can use the test command to check if a file is not a socket.\n   \
    \ # Hint: You can use the test command to check if a file is a FIFO.\n    # Hint:\
    \ You can use the test command to check if a file is\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpv6m3junq.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmpv6m3junq.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^-?[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Fill this in\n    echo \"0\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    echo\
    \ 0\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement me\n    return 0\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # echo $1\n \
    \   # echo $2\n    # echo $3\n    # echo $4\n    # echo $5\n    # echo $6\n  \
    \  # echo $7\n    # echo $8\n    # echo $9\n    # echo ${10}\n    # echo ${11}\n\
    \    # echo ${12}\n    # echo ${13}\n    # echo ${14}\n    # echo ${15}\n    #\
    \ echo ${16}\n    # echo ${17}\n    # echo ${18}\n    # echo ${19}\n    # echo\
    \ ${20}\n    # echo ${21}\n    # echo ${22}\n    # echo ${23}\n    # echo ${24}\n\
    \    # echo ${25}\n    # echo ${26}\n    # echo ${27}\n    # echo ${28}\n    #\
    \ echo ${29}\n    # echo ${30}\n    # echo ${31}\n    # echo ${32}\n    # echo\
    \ ${33}\n    # echo ${34}\n    # echo ${35}\n    # echo ${36}\n    # echo ${37}\n\
    \    # echo ${38}\n    # echo ${39}\n    # echo ${40}\n    # echo ${41}\n    #\
    \ echo ${42}\n    # echo ${43}\n    # echo ${44}\n    # echo ${45}\n    # echo\
    \ ${46}\n    # echo ${47}\n    # echo ${48}\n    # echo ${49}\n    # echo ${50}\n\
    \    # echo ${51}\n    # echo ${52}\n    # echo ${53}\n    # echo ${54}\n    #\
    \ echo ${55}\n    # echo ${56}\n    # echo ${57}\n    # echo ${58}\n    # echo\
    \ ${59}\n    # echo ${60}\n    # echo ${61}\n    # echo ${62}\n    # echo ${63}\n\
    \    # echo ${64}\n    # echo ${65}\n    # echo ${66}\n    # echo ${67}\n    #\
    \ echo ${68}\n    # echo ${69}\n    # echo ${70}\n    # echo ${71}\n    # echo\
    \ ${72}\n    # echo ${73}\n    #\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp41adju32.sh: line 89: syntax error near unexpected token `}''\n/tmp/tmp41adju32.sh:
    line 89: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # your code here\n    echo \"0\"\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Your code here!\n    return 0\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # This\
    \ is a stub that simply returns 0.\n    echo \"0\"\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]] && [ $i -gt 0 ]\n        then\n\
    \            sum=$((sum + i*i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    echo\
    \ \"0\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^-?[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator to determine if a number is odd.\n    # Hint:\
    \ You can use the square operator to square a number.\n    # Hint: You can use\
    \ the is_integer function to determine if a number is an integer.\n    # Hint:\
    \ You can use the is_positive function to determine if a number is positive.\n\
    \    # Hint: You can use the is_negative function to determine if a number is\
    \ negative.\n    # Hint: You can use the is_zero function to determine if a number\
    \ is zero.\n    # Hint: You can use the is_nonzero function to determine if a\
    \ number is nonzero.\n    # Hint: You can use the is_nonnegative function to determine\
    \ if a number is nonnegative.\n    # Hint: You can use the is_nonpositive function\
    \ to determine if a number is nonpositive.\n    # Hint: You can use the is_even\
    \ function to determine if a number is even.\n    # Hint: You can use the is_odd\
    \ function to determine if a number is odd.\n    # Hint: You can use the is_zero\
    \ function to determine if a number is zero.\n    # Hint: You can use the is_nonzero\
    \ function to determine if a number is nonzero.\n    # Hint: You can use the is_nonnegative\
    \ function to determine if a number is nonnegative.\n    # Hint: You can use the\
    \ is_nonpositive function to determine if a number is nonpositive.\n    # Hint:\
    \ You can use the is_even function to determine if a number is even.\n    # Hint:\
    \ You can use the is_odd function to determine if a number is odd.\n    # Hint:\
    \ You can use the is_zero function to determine if a number is zero.\n    # Hint:\
    \ You can use the is_nonzero function to determine if a number is nonzero.\n \
    \   # Hint: You can use the is_nonnegative function to determine if a number is\
    \ nonnegative.\n    # Hint: You can use the is_nonpositive function to determine\
    \ if a number is nonpositive.\n    # Hint: You can use the is_even function to\
    \ determine if a number is even.\n    # Hint\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpsrr_yzqi.sh: line 38: syntax error near unexpected token `}''\n/tmp/tmpsrr_yzqi.sh:
    line 38: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # This\
    \ function should return a string.\n    # Hint: Use the $(is_odd) function.\n\
    \    # Hint: Use the $(square) function.\n    # Hint: Use the $(is_integer) function.\n\
    \    # Hint: Use the $(is_positive) function.\n    # Hint: Use the $(is_not_negative)\
    \ function.\n    # Hint: Use the $(sum) function.\n    # Hint: Use the $(filter)\
    \ function.\n    # Hint: Use the $(map) function.\n    # Hint: Use the $(is_not_empty)\
    \ function.\n    # Hint: Use the $(is_empty) function.\n    # Hint: Use the $(is_zero)\
    \ function.\n    # Hint: Use the $(is_not_zero) function.\n    # Hint: Use the\
    \ $(is_equal) function.\n    # Hint: Use the $(is_not_equal) function.\n    #\
    \ Hint: Use the $(is_greater_than) function.\n    # Hint: Use the $(is_less_than)\
    \ function.\n    # Hint: Use the $(is_greater_than_or_equal_to) function.\n  \
    \  # Hint: Use the $(is_less_than_or_equal_to) function.\n    # Hint: Use the\
    \ $(is_true) function.\n    # Hint: Use the $(is_false) function.\n    # Hint:\
    \ Use the $(is_not_true) function.\n    # Hint: Use the $(is_not_false) function.\n\
    \    # Hint: Use the $(is_not_empty) function.\n    # Hint: Use the $(is_empty)\
    \ function.\n    # Hint: Use the $(is_zero) function.\n    # Hint: Use the $(is_not_zero)\
    \ function.\n    # Hint: Use the $(is_equal) function.\n    # Hint: Use the $(is_not_equal)\
    \ function.\n    # Hint: Use the $(is_greater_than) function.\n    # Hint: Use\
    \ the $(is_less_than) function.\n    # Hint\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpcg3cdc4z.sh: line 47: syntax error near unexpected token `}''\n/tmp/tmpcg3cdc4z.sh:
    line 47: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function\n    return\
    \ 0\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator % to check if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the test command to check if a number is negative.\n    # Hint:\
    \ You can use the test command to check if a number is an integer.\n    # Hint:\
    \ You can use the test command to check if a string is empty.\n    # Hint: You\
    \ can use the test command to check if a string is not empty.\n    # Hint: You\
    \ can use the test command to check if a file exists.\n    # Hint: You can use\
    \ the test command to check if a file does not exist.\n    # Hint: You can use\
    \ the test command to check if a file is a regular file.\n    # Hint: You can\
    \ use the test command to check if a file is a directory.\n    # Hint: You can\
    \ use the test command to check if a file is a symbolic link.\n    # Hint: You\
    \ can use the test command to check if a file is a block device.\n    # Hint:\
    \ You can use the test command to check if a file is a character device.\n   \
    \ # Hint: You can use the test command to check if a file is a named pipe.\n \
    \   # Hint: You can use the test command to check if a file is a socket.\n   \
    \ # Hint: You can use the test command to check if a file is readable.\n    #\
    \ Hint: You can use the test command to check if a file is writable.\n    # Hint:\
    \ You can use the test command to check if a file is executable.\n    # Hint:\
    \ You can use the test command to check if a file is empty.\n    # Hint: You can\
    \ use the test command to check if a file is not empty.\n    # Hint: You can use\
    \ the test command to check if a file is newer than another file.\n    # Hint:\
    \ You can use the test command to check if a file is older than another file.\n\
    \    # Hint: You can use the test command to check if a file is the same as another\
    \ file.\n    # Hint: You can use the test command to check if a file\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpt1uq84wf.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmpt1uq84wf.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    # Note:\
    \ you can use the following bash builtins:\n    #   - `echo`\n    #   - `bc`\n\
    \    #   - `expr`\n    #   - `seq`\n    #   - `for`\n    #   - `if`\n    #   -\
    \ `test`\n    #   - `let`\n    #   - `read`\n    #   - `echo`\n    #   - `printf`\n\
    \    #   - `wc`\n    #   - `sort`\n    #   - `uniq`\n    #   - `tr`\n    #   -\
    \ `sed`\n    #   - `awk`\n    #   - `cut`\n    #   - `head`\n    #   - `tail`\n\
    \    #   - `cat`\n    #   - `tac`\n    #   - `rev`\n    #   - `xargs`\n    # \
    \  - `tee`\n    #   - `grep`\n    #   - `egrep`\n    #   - `fgrep`\n    #   -\
    \ `gzip`\n    #   - `gunzip`\n    #   - `zcat`\n    #   - `bzip2`\n    #   - `bunzip2`\n\
    \    #   - `bzcat`\n    #   - `xz`\n    #   - `unxz`\n    #   - `xzcat`\n    #\
    \   - `tar`\n    #   - `gzip`\n    #   - `gunzip`\n    #   - `zcat`\n    #   -\
    \ `bzip2`\n    #   - `bunzip2`\n    #   - `bzcat`\n    #   - `xz`\n    #   - `unxz`\n\
    \    #   - `xzcat`\n    #   - `tar`\n    #   - `mkdir`\n    #   - `rm`\n    #\
    \   - `mv`\n    #   - `cp`\n    #   - `ln`\n    #   - `chmod`\n    #   - `chown`\n\
    \    #   - `touch\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpz0lo30ta.sh: line 72: syntax error near unexpected token `}''\n/tmp/tmpz0lo30ta.sh:
    line 72: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # You can use\
    \ the following command to get the square of a number:\n    # $((<number> * <number>))\n\
    \    # For example, $((2 * 2)) is 4.\n    # You can use the following command\
    \ to check if a number is odd:\n    # [[ $(($<number> % 2)) -ne 0 ]]\n    # For\
    \ example, [[ $(($2 % 2)) -ne 0 ]] is true.\n    # You can use the following command\
    \ to check if a number is negative:\n    # [[ $<number> -lt 0 ]]\n    # For example,\
    \ [[ $2 -lt 0 ]] is true.\n    # You can use the following command to check if\
    \ a number is an integer:\n    # [[ $<number> =~ ^[0-9]+$ ]]\n    # For example,\
    \ [[ $2 =~ ^[0-9]+$ ]] is true.\n    # You can use the following command to check\
    \ if a number is a float:\n    # [[ $<number> =~ ^[0-9]+\\.[0-9]+$ ]]\n    # For\
    \ example, [[ $2 =~ ^[0-9]+\\.[0-9]+$ ]] is false.\n    # You can use the following\
    \ command to check if a number is zero:\n    # [[ $<number> -eq 0 ]]\n    # For\
    \ example, [[ $2 -eq 0 ]] is false.\n    # You can use the following command to\
    \ check if a number is non-zero:\n    # [[ $<number> -ne 0 ]]\n    # For example,\
    \ [[ $2 -ne 0 ]] is true.\n    # You can use the following command to check if\
    \ a number is positive:\n    # [[ $<number> -gt 0 ]]\n    # For example, [[ $2\
    \ -gt 0 ]] is true.\n    # You can use the following command to check if a number\
    \ is non-positive:\n    # [[ $<number> -le 0 ]]\n    # For example, [[ $2 -le\
    \ 0 ]] is false.\n    # You can use the following command to check if a number\
    \ is non-negative:\n    # [[ $<number> -ge 0 ]]\n   \n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpo32_mug3.sh: line 45: syntax error near unexpected token `}''\n/tmp/tmpo32_mug3.sh:
    line 45: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $(( $i % 2 )) -eq 1 ]]; then\n\
    \                sum=$(( $sum + $(( $i * $i )) ))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Fill in this function\n    echo \"0\"\n\
    }\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $(( $i % 2 )) -eq 1 ]]; then\n\
    \                sum=$(( $sum + $(( $i * $i )) ))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Your code here\n    return 0\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local -i sum=0\n    for i in $@; do\n   \
    \     if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + i * i))\n            fi\n        fi\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i*i))\n            fi\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\"\
    ) = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"\
    0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"\
    -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^-?[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    #echo $1\n  \
    \  #echo $2\n    #echo $3\n    #echo $4\n    #echo $5\n    #echo $6\n    #echo\
    \ $7\n    #echo $8\n    #echo $9\n    #echo $10\n    #echo $11\n    #echo $12\n\
    \    #echo $13\n    #echo $14\n    #echo $15\n    #echo $16\n    #echo $17\n \
    \   #echo $18\n    #echo $19\n    #echo $20\n    #echo $21\n    #echo $22\n  \
    \  #echo $23\n    #echo $24\n    #echo $25\n    #echo $26\n    #echo $27\n   \
    \ #echo $28\n    #echo $29\n    #echo $30\n    #echo $31\n    #echo $32\n    #echo\
    \ $33\n    #echo $34\n    #echo $35\n    #echo $36\n    #echo $37\n    #echo $38\n\
    \    #echo $39\n    #echo $40\n    #echo $41\n    #echo $42\n    #echo $43\n \
    \   #echo $44\n    #echo $45\n    #echo $46\n    #echo $47\n    #echo $48\n  \
    \  #echo $49\n    #echo $50\n    #echo $51\n    #echo $52\n    #echo $53\n   \
    \ #echo $54\n    #echo $55\n    #echo $56\n    #echo $57\n    #echo $58\n    #echo\
    \ $59\n    #echo $60\n    #echo $61\n    #echo $62\n    #echo $63\n    #echo $64\n\
    \    #echo $65\n    #echo $66\n    #echo $67\n    #echo $68\n    #echo $69\n \
    \   #echo $70\n    #echo $71\n    #echo $72\n    #echo $73\n    #echo $74\n  \
    \  #echo $75\n    #echo $76\n    #echo $77\n    #echo $78\n    #echo $79\n   \
    \ #echo $80\n    #echo $81\n    #echo $82\n    #echo $83\n    #echo $84\n\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpdkq02rvg.sh: line 100: syntax error near unexpected token `}''\n/tmp/tmpdkq02rvg.sh:
    line 100: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  local sum=0\n  for i in $@; do\n    if [[ $i\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $((i % 2)) -eq 1 ]]; then\n        sum=$((sum\
    \ + i * i))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]] && [ $i -gt 0 ]\n        then\n\
    \            sum=$((sum + i * i))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n           \
    \ if [[ $((i%2)) -ne 0 ]]\n            then\n                sum=$((sum+(i*i)))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            sum=$((sum + i * i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            ((sum += i*i))\n        fi\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: implement this function\n    local\
    \ sum=0\n    for i in $@\n    do\n        if [[ $i =~ ^-?[0-9]+$ ]]\n        then\n\
    \            if [[ $((i%2)) -eq 1 ]]\n            then\n                sum=$((sum+i*i))\n\
    \            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # YOUR CODE HERE\n    sum=0\n    for i in\
    \ $@\n    do\n        if [[ $i =~ ^[0-9]+$ ]]\n        then\n            if [[\
    \ $((i%2)) -eq 1 ]]\n            then\n                sum=$((sum+i*i))\n    \
    \        fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ Use the bash built-in arithmetic evaluation.\n    # Hint: Use the bash built-in\
    \ test command.\n    # Hint: Use the bash built-in string manipulation.\n    #\
    \ Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash built-in\
    \ string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use the bash built-in string manipulation.\n    # Hint: Use the bash\
    \ built-in string manipulation.\n    # Hint: Use the bash built-in string manipulation.\n\
    \    # Hint: Use\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpzd6tvju7.sh: line 49: syntax error near unexpected token `}''\n/tmp/tmpzd6tvju7.sh:
    line 49: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local result=0\n    for i in $@; do\n   \
    \     if [[ \"$i\" =~ ^[0-9]+$ ]]; then\n            if [[ $(( $i % 2 )) -eq 1\
    \ ]]; then\n                result=$(( $result + $(( $i * $i )) ))\n         \
    \   fi\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator to determine if a number is odd.\n    # Hint:\
    \ You can use the is_integer function to determine if a number is an integer.\n\
    \    # Hint: You can use the is_positive function to determine if a number is\
    \ positive.\n    # Hint: You can use the is_negative function to determine if\
    \ a number is negative.\n    # Hint: You can use the square function to square\
    \ a number.\n    # Hint: You can use the sum function to sum a list of numbers.\n\
    \    # Hint: You can use the filter function to filter a list of numbers.\n  \
    \  # Hint: You can use the map function to map a list of numbers.\n    # Hint:\
    \ You can use the reduce function to reduce a list of numbers.\n    # Hint: You\
    \ can use the is_empty function to determine if a list is empty.\n    # Hint:\
    \ You can use the is_not_empty function to determine if a list is not empty.\n\
    \    # Hint: You can use the is_equal function to determine if two numbers are\
    \ equal.\n    # Hint: You can use the is_not_equal function to determine if two\
    \ numbers are not equal.\n    # Hint: You can use the is_less_than function to\
    \ determine if one number is less than another.\n    # Hint: You can use the is_greater_than\
    \ function to determine if one number is greater than another.\n    # Hint: You\
    \ can use the is_less_than_or_equal function to determine if one number is less\
    \ than or equal to another.\n    # Hint: You can use the is_greater_than_or_equal\
    \ function to determine if one number is greater than or equal to another.\n \
    \   # Hint: You can use the is_true function to determine if a boolean is true.\n\
    \    # Hint: You can use the is_false function to determine if a boolean is false.\n\
    \    # Hint: You can use the is_not function to negate a boolean.\n    # Hint:\
    \ You can use the is_and function to determine if two booleans are both true.\n\
    \    # Hint: You can use the is_or function to determine if either of\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptgq7zemy.sh: line 37: syntax error near unexpected token `}''\n/tmp/tmptgq7zemy.sh:
    line 37: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for num in $@; do\n    \
    \    if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $((num % 2)) -eq 1 ]];\
    \ then\n                sum=$((sum + num * num))\n            fi\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n \
    \   [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\
    \ -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n  \
    \  [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # TODO: Implement this function\n  echo \"\
    0\"\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"\
    25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"\
    -10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0\
    \ -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [ $((i%2)) -eq 1 ] && [ $i -ge 0 ]; then\n            sum=$((sum+i*i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbd4sk5pu.sh: line 16: 5.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator (`%`) to determine if a number is odd.\n   \
    \ # Hint: You can use the `bc` command to perform floating point arithmetic.\n\
    \    # Hint: You can use the `echo` command to return a value.\n    # Hint: You\
    \ can use the `seq` command to generate a sequence of numbers.\n    # Hint: You\
    \ can use the `grep` command to filter a list of numbers.\n    # Hint: You can\
    \ use the `sed` command to transform a list of numbers.\n    # Hint: You can use\
    \ the `tr` command to transform a list of numbers.\n    # Hint: You can use the\
    \ `sort` command to sort a list of numbers.\n    # Hint: You can use the `uniq`\
    \ command to remove duplicates from a list of numbers.\n    # Hint: You can use\
    \ the `wc` command to count the number of lines in a list of numbers.\n    # Hint:\
    \ You can use the `head` command to get the first element of a list of numbers.\n\
    \    # Hint: You can use the `tail` command to get all but the first element of\
    \ a list of numbers.\n    # Hint: You can use the `xargs` command to transform\
    \ a list of numbers.\n    # Hint: You can use the `paste` command to combine two\
    \ lists of numbers.\n    # Hint: You can use the `cut` command to extract a column\
    \ of numbers.\n    # Hint: You can use the `join` command to combine two lists\
    \ of numbers.\n    # Hint: You can use the `awk` command to perform arithmetic\
    \ on a list of numbers.\n    # Hint: You can use the `paste` command to combine\
    \ two lists of numbers.\n    # Hint: You can use the `cut` command to extract\
    \ a column of numbers.\n    # Hint: You can use the `join` command to combine\
    \ two lists of numbers.\n    # Hint: You can use the `awk` command to perform\
    \ arithmetic on a list of numbers.\n    # Hint: You can use the `paste` command\
    \ to combine two lists of numbers.\n    # Hint: You can use the `cut\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpzsce_6e3.sh: line 38: syntax error near unexpected token `}''\n/tmp/tmpzsce_6e3.sh:
    line 38: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # TODO: Your code here\n  echo 0\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    # You can use\
    \ the following command to get the square of a number:\n    # $((<number> * <number>))\n\
    \    # For example, $((2 * 2)) is 4.\n    # You can use the following command\
    \ to check if a number is odd:\n    # [[ $((<number> % 2)) -ne 0 ]]\n    # For\
    \ example, [[ $((2 % 2)) -ne 0 ]] is false, and [[ $((3 % 2)) -ne 0 ]] is true.\n\
    \    # You can use the following command to check if a number is an integer:\n\
    \    # [[ $<number> =~ ^-?[0-9]+$ ]]\n    # For example, [[ \"1\" =~ ^-?[0-9]+$\
    \ ]] is true, and [[ \"1.1\" =~ ^-?[0-9]+$ ]] is false.\n    # You can use the\
    \ following command to check if a number is negative:\n    # [[ <number> -lt 0\
    \ ]]\n    # For example, [[ -1 -lt 0 ]] is true, and [[ 1 -lt 0 ]] is false.\n\
    \    # You can use the following command to check if a number is positive:\n \
    \   # [[ <number> -gt 0 ]]\n    # For example, [[ 1 -gt 0 ]] is true, and [[ -1\
    \ -gt 0 ]] is false.\n    # You can use the following command to check if a number\
    \ is zero:\n    # [[ <number> -eq 0 ]]\n    # For example, [[ 0 -eq 0 ]] is true,\
    \ and [[ 1 -eq 0 ]] is false.\n    # You can use the following command to check\
    \ if a number is non-zero:\n    # [[ <number> -ne 0 ]]\n    # For example, [[\
    \ 1 -ne 0 ]] is true, and [[ 0 -ne 0 ]] is false.\n    # You can use the following\
    \ command to check if a number is non-negative:\n    # [[ <number> -ge 0 ]]\n\
    \    # For example, [[ 1 -ge 0 ]] is true, and [[ -1 -ge 0 ]] is false.\n    #\
    \ You can use the following command to check if a number\n}\n\ncandidate() {\n\
    \    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqp8mp6_a.sh: line 40: syntax error near unexpected token `}''\n/tmp/tmpqp8mp6_a.sh:
    line 40: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # Write your code here\n    sum=0\n    for\
    \ i in $@\n    do\n        if [ $i -ge 0 ] && [ $(($i%2)) -ne 0 ]\n        then\n\
    \            sum=$(($sum+$(($i*$i))))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\"\
    \ ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0\
    \ -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n\
    \    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0\
    \ -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwm3ywbv7.sh: line 18: [: 5.0: integer expression expected\n/tmp/tmpwm3ywbv7.sh:
    line 18: [: 4.0: integer expression expected\n'''
  stdout: b''
  timestamp: 1660357043
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    local sum=0\n    for i in $@; do\n      \
    \  if [[ $i =~ ^-?[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 1 ]]; then\n\
    \                sum=$((sum + i * i))\n            fi\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    double_the_difference \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\") = \"0\" ]]\n    [[\
    \ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0 -2.0\
    \ 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate\
    \ \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n    # TODO: Implement this function.\n    # Hint:\
    \ You can use the modulo operator % to determine if a number is odd.\n    # Hint:\
    \ You can use the expr command to evaluate arithmetic expressions.\n    # Hint:\
    \ You can use the test command to check if a file is a regular file.\n    # Hint:\
    \ You can use the test command to check if a file is a directory.\n    # Hint:\
    \ You can use the test command to check if a file is readable.\n    # Hint: You\
    \ can use the test command to check if a file is executable.\n    # Hint: You\
    \ can use the test command to check if a file exists.\n    # Hint: You can use\
    \ the test command to check if a file is a symbolic link.\n    # Hint: You can\
    \ use the test command to check if a file is a socket.\n    # Hint: You can use\
    \ the test command to check if a file is a named pipe.\n    # Hint: You can use\
    \ the test command to check if a file is a block device.\n    # Hint: You can\
    \ use the test command to check if a file is a character device.\n    # Hint:\
    \ You can use the test command to check if a file is a FIFO.\n    # Hint: You\
    \ can use the test command to check if a file is setuid.\n    # Hint: You can\
    \ use the test command to check if a file is setgid.\n    # Hint: You can use\
    \ the test command to check if a file is sticky.\n    # Hint: You can use the\
    \ test command to check if a file is empty.\n    # Hint: You can use the test\
    \ command to check if a file is newer than another file.\n    # Hint: You can\
    \ use the test command to check if a file is older than another file.\n    # Hint:\
    \ You can use the test command to check if a file is the same as another file.\n\
    \    # Hint: You can use the test command to check if a file is a hard link to\
    \ another file.\n    # Hint: You can use the test command to check if a file is\
    \ a symbolic link to another file.\n    # Hint: You can use the test command to\
    \ check if a file is a terminal.\n    # Hint\n}\n\ncandidate() {\n    double_the_difference\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate \"0.1 0.2 0.3\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"0.2 3.0 5.0\") = \"34\"\
    \ ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\") = \"\
    165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmppv16x3l7.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmppv16x3l7.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of numbers, return the sum of squares of the\
    \ numbers\n# in the list that are odd. Ignore numbers that are negative or not\
    \ integers.\n# >>> $(double_the_difference \"1 3 2 0\")\n# \"10\"\n# >>> $(double_the_difference\
    \ \"-1 -2 0\")\n# \"0\"\n# >>> $(double_the_difference \"9 -2\")\n# \"81\"\n#\
    \ >>> $(double_the_difference \"0\")\n# \"0\"\n# If the input list is empty, return\
    \ 0.\ndouble_the_difference() {\n  # TODO: Implement this function.\n  # Hint:\
    \ You can use the modulo operator to determine if a number is odd.\n  # Hint:\
    \ You can use the expr command to perform arithmetic operations.\n  # Hint: You\
    \ can use the test command to check if a number is negative.\n  # Hint: You can\
    \ use the test command to check if a number is an integer.\n  # Hint: You can\
    \ use the test command to check if a string is empty.\n  # Hint: You can use the\
    \ test command to check if a string is not empty.\n  # Hint: You can use the test\
    \ command to check if a file exists.\n  # Hint: You can use the test command to\
    \ check if a file does not exist.\n  # Hint: You can use the test command to check\
    \ if a file is a regular file.\n  # Hint: You can use the test command to check\
    \ if a file is a directory.\n  # Hint: You can use the test command to check if\
    \ a file is a symbolic link.\n  # Hint: You can use the test command to check\
    \ if a file is a character special file.\n  # Hint: You can use the test command\
    \ to check if a file is a block special file.\n  # Hint: You can use the test\
    \ command to check if a file is a socket.\n  # Hint: You can use the test command\
    \ to check if a file is a named pipe.\n  # Hint: You can use the test command\
    \ to check if a file is setuid.\n  # Hint: You can use the test command to check\
    \ if a file is setgid.\n  # Hint: You can use the test command to check if a file\
    \ is sticky.\n  # Hint: You can use the test command to check if a file is owned\
    \ by the current user.\n  # Hint: You can use the test command to check if a file\
    \ is owned by the current user's group.\n  # Hint: You can use the test command\
    \ to check if a file is owned by the current user or the current user's group.\n\
    \  # Hint: You can use the test command to check if a file is readable.\n  # Hint:\
    \ You can use the test command to check if a file is writable.\n  # H\n}\n\ncandidate()\
    \ {\n    double_the_difference \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"5.0 4.0\") = \"25\" ]]\n    [[ $(candidate\
    \ \"0.1 0.2 0.3\") = \"0\" ]]\n    [[ $(candidate \"-10.0 -20.0 -30.0\") = \"\
    0\" ]]\n    [[ $(candidate \"-1.0 -2.0 8.0\") = \"0\" ]]\n    [[ $(candidate \"\
    0.2 3.0 5.0\") = \"34\" ]]\n    [[ $(candidate \"-9.0 -7.0 -5.0 -3.0 -1.0 1.0\
    \ 3.0 5.0 7.0 9.0\") = \"165\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmxnx5sth.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmpmxnx5sth.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660357043

name: HumanEval_18_how_many_times
language: sh
prompt: "#!/bin/bash\n# Find how many times a given substring can be found in the\
  \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\")\n\
  # \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
  \ \"aaaa\" \"aa\")\n# \"3\"\nhow_many_times() {\n"
tests: "}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
  ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
  \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
completions: ["    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    local i=0\n    while [ $i -lt $original_length ]; do\n        local j=0\n\
    \        while [ $j -lt $substring_length ]; do\n            if [ \"${original:$i:1}\"\
    \ == \"${substring:$j:1}\" ]; then\n                i=$((i+1))\n             \
    \   j=$((j+1))\n            else\n                break\n            fi\n    \
    \    done\n        if [ $j -eq $substring_length ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local substring_length=${#substring}\n    local original_length=${#original}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j == $(($substring_length-1))\
    \ ]]; then\n                count=$(($count+1))\n            fi\n            i=$(($i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=$1\n    local\
    \ substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt ${#original}\
    \ ]; do\n        if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n\
    \            ((count++))\n            ((i+=$((${#substring}-1))))\n        fi\n\
    \        ((i++))\n    done\n    echo $count", "    local original=\"$1\"\n   \
    \ local substring=\"$2\"\n    local count=0\n    local index=0\n    while true;\
    \ do\n        index=$(index_of \"$original\" \"$substring\" \"$index\")\n    \
    \    if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n     \
    \   count=$((count + 1))\n        index=$((index + 1))\n    done\n    echo \"\
    $count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local index=0\n    while true; do\n        index=$(index_of \"$original\"\
    \ \"$substring\" \"$index\")\n        if [ \"$index\" == \"-1\" ]; then\n    \
    \        break\n        fi\n        count=$((count + 1))\n        index=$((index\
    \ + 1))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ while [ $i -lt $original_length ]; do\n        if [ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=substring_length))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo $count", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local index=0\n    while [ $index -lt ${#original} ]; do\n        local index_of_substring=$(index_of\
    \ \"$original\" \"$substring\" $index)\n        if [ $index_of_substring -eq -1\
    \ ]; then\n            break\n        fi\n        count=$((count + 1))\n     \
    \   index=$((index_of_substring + 1))\n    done\n    echo \"$count\"", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i i=0\n    while ((i\
    \ <= max_index)); do\n        if [[ \"${original:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            ((count++))\n            ((i += substring_length))\n \
    \       else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${string:$offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$(( original_length - substring_length ))\n    local -r\
    \ original_array=(${original})\n    local -r substring_array=(${substring})\n\
    \    local -i count=0\n    local -i index=0\n    local -i substring_index=0\n\
    \    local -i substring_length_index=0\n    while [ $index -le $max_index ]; do\n\
    \        if [ \"${original_array[$index]}\" == \"${substring_array[$substring_index]}\"\
    \ ]; then\n            substring_index=$(( substring_index + 1 ))\n          \
    \  substring_length_index=$(( substring_length_index + 1 ))\n            if [\
    \ $substring_length_index -eq $substring_length ]; then\n                count=$((\
    \ count + 1 ))\n                substring_index=0\n                substring_length_index=0\n\
    \            fi\n        else\n            substring_index=0\n            substring_length_index=0\n\
    \        fi\n        index=$(( index + 1 ))\n    done\n    echo \"$count\"", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local i=0\n    local j=0\n    local k=0\n    local len_original=${#original}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_original; i++));\
    \ do\n        for ((j=0; j<len_substring; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((len_substring-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local original_len=${#original}\n    local substring_len=${#substring}\n\
    \    for ((i=0; i<original_len; i++)); do\n        for ((j=0; j<substring_len;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if ((j == substring_len\
    \ - 1)); then\n                ((count++))\n            fi\n        done\n   \
    \ done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -i count=0\n    for ((i=0; i<=original_length_minus_substring_length;\
    \ i++)); do\n        local -r substring_start=\"${original:i:substring_length}\"\
    \n        if [[ \"$substring_start\" == \"$substring\" ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n\
    \    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if ((j == substring_length\
    \ - 1)); then\n                ((count++))\n            fi\n            ((i++))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local\
    \ ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local\
    \ aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local\
    \ ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local\
    \ at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local\
    \ ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local\
    \ bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local\
    \ bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local\
    \ bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local\
    \ bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local\
    \ bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local\
    \ cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n   ",
  "    local original_string=$1\n    local substring=$2\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${original_string:offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + 1))\n    done\n\
    \    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local length=${#substring}\n    local index=0\n    while\
    \ [ $index -lt ${#original} ]; do\n        if [ \"${original:$index:$length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            index=$((index+length))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i\n    for ((i=0; i<${#original}; i++)); do\n        if [[\
    \ \"${original:$i:${#substring}}\" == \"$substring\" ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"", "    local string=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#string}\
    \ ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\" ]; then\n\
    \            ((count++))\n            ((i+=${#substring}))\n        else\n   \
    \         ((i++))\n        fi\n    done\n    echo $count", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r substring_length_minus_one=$((substring_length\
    \ - 1))\n    local -r substring_length_plus_one=$((substring_length + 1))\n  \
    \  local -r substring_length_plus_two=$((substring_length + 2))\n    local -r\
    \ substring_length_plus_three=$((substring_length + 3))\n    local -r substring_length_plus_four=$((substring_length\
    \ + 4))\n    local -r substring_length_plus_five=$((substring_length + 5))\n \
    \   local -r substring_length_plus_six=$((substring_length + 6))\n    local -r\
    \ substring_length_plus_seven=$((substring_length + 7))\n    local -r substring_length_plus_eight=$((substring_length\
    \ + 8))\n    local -r substring_length_plus_nine=$((substring_length + 9))\n \
    \   local -r substring_length_plus_ten=$((substring_length + 10))\n    local -r\
    \ substring_length_plus_eleven=$((substring_length + 11))\n    local -r substring_length_plus_twelve=$((substring_length\
    \ + 12))\n    local -r substring_length_plus_thirteen=$((substring_length + 13))\n\
    \    local -r substring_length_plus_fourteen=$((substring_length + 14))\n    local\
    \ -r substring_length_plus_fifteen=$((substring_length + 15))\n    local -r substring_length_plus_sixteen=$((substring_length\
    \ + 16))\n    local -r substring_length_plus_seventeen=$((substring_length + 17))\n\
    \    local -r substring_length_plus_eighteen=$((substring_length + 18))\n    local\
    \ -r substring_length_plus_nineteen=$((substring_length + 19))\n    local -r substring_length_plus_tw",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_of_original=\"\
    ${#original}\"\n    local -r length_of_substring=\"${#substring}\"\n    local\
    \ -r length_of_remaining_string=\"$((length_of_original - length_of_substring))\"\
    \n    local -r number_of_iterations=\"$((length_of_remaining_string + 1))\"\n\
    \    local -r number_of_times=\"$(\n        for ((i = 0; i < number_of_iterations;\
    \ i++)); do\n            local -r current_substring=\"${original:i:length_of_substring}\"\
    \n            if [[ \"$current_substring\" == \"$substring\" ]]; then\n      \
    \          echo -n \"1\"\n            else\n                echo -n \"0\"\n  \
    \          fi\n        done | grep -o \"1\" | wc -l\n    )\"\n    echo \"$number_of_times\"",
  '    echo "${1//$2/}" | wc -c', "    local original=$1\n    local substring=$2\n\
    \    local counter=0\n    local index=0\n    while [ $index -lt ${#original} ];\
    \ do\n        if [ \"${original:$index:${#substring}}\" == \"$substring\" ]; then\n\
    \            counter=$((counter+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $counter", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local index=0\n    while [ $index -lt ${#original} ]; do\n    \
    \    local found=$(echo \"${original:$index}\" | grep -o \"$substring\")\n   \
    \     if [ -n \"$found\" ]; then\n            count=$((count + 1))\n         \
    \   index=$((index + ${#found}))\n        else\n            break\n        fi\n\
    \    done\n    echo \"$count\"", "    local original_string=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local start_index=0\n    while [[ \"\
    ${original_string:$start_index:${#substring}}\" == \"$substring\" ]]; do\n   \
    \     count=$((count + 1))\n        start_index=$((start_index + 1))\n    done\n\
    \    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local -i count=0\n    local -i i=0\n    local -i len=${#original}\n    local\
    \ -i sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"${original:$i:$sublen}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i substring_length=${#substring}\n\
    \    local -i original_string_length=${#original_string}\n    while (( i < original_string_length\
    \ )); do\n        if [[ \"${original_string:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            (( count++ ))\n            (( i += substring_length ))\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    for (( i=0; i<${#original}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((${#substring}-1)) ]]; then\n                count=$(($count+1))\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_original; i++)); do\n        for ((j=0; j<len_substring;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -i count=0\n    local -i i=0\n    local\
    \ -i len=${#original}\n    local -i sublen=${#substring}\n    local -i max=$((len\
    \ - sublen))\n    while ((i <= max)); do\n        if [[ \"${original:i:sublen}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i += sublen))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${original:$index:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        index=$((index + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -i count=0\n    local -i i=0\n    for ((i=0;\
    \ i<=original_length_minus_substring_length; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo \"$count\"", "    local original_string=\"$1\"\n    local substring=\"\
    $2\"\n    local -i count=0\n    local -i i=0\n    local -i substring_length=${#substring}\n\
    \    local -i original_string_length=${#original_string}\n    while [ $i -lt $original_string_length\
    \ ]; do\n        if [ \"${original_string:$i:$substring_length}\" == \"$substring\"\
    \ ]; then\n            ((count++))\n            ((i+=substring_length))\n    \
    \    else\n            ((i++))\n        fi\n    done\n    echo \"$count\"", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one + 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one - 1))\"\n\
    \    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length", "    local -r\
    \ original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i index=0\n    while\
    \ [[ $index -le $max_index ]]; do\n        if [[ \"${original:$index:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((index+=substring_length))\n\
    \        else\n            ((index++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_substring=\"\
    ${#substring}\"\n    local -r length_original=\"${#original}\"\n    local -r length_difference=$((\
    \ length_original - length_substring ))\n    local -r max_index=$(( length_difference\
    \ + 1 ))\n    local -r original_array=( $(echo \"$original\" | grep -o .) )\n\
    \    local -r substring_array=( $(echo \"$substring\" | grep -o .) )\n    local\
    \ -r substring_array_length=\"${#substring_array[@]}\"\n    local -r substring_array_last_index=$((\
    \ substring_array_length - 1 ))\n    local -r substring_array_last_element=\"\
    ${substring_array[$substring_array_last_index]}\"\n    local -i counter=0\n  \
    \  local -i index=0\n    local -i index_substring=0\n    local -i index_substring_last=0\n\
    \    local -i index_substring_last_element=0\n    local -i index_original=0\n\
    \    local -i index_original_last=0\n    local -i index_original_last_element=0\n\
    \    local -i index_original_last_element_plus_one=0\n    local -i index_original_last_element_plus_one_plus_one=0\n\
    \    local -i index_original_last_element_plus_one_plus_one_plus_one=0\n    local\
    \ -i index_original_last_element_plus_one_plus_one_plus_one_plus_one=0\n    local\
    \ -i index_original_last_element_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local -i index_original_last_element_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local -i index_original_last_element_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local -i index", "    local string=\"$1\"\n    local substring=\"$2\"\n \
    \   local count=0\n    local offset=0\n    while [[ \"${string:offset:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        offset=$((offset\
    \ + 1))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        ((count++))\n        ((i+=${#substring}))\n\
    \    done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local offset=0\n    while [[ \"${original:$offset:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        offset=$((offset\
    \ + ${#substring}))\n    done\n    echo \"$count\"", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local original_length=${#original}\n    local\
    \ substring_length=${#substring}\n    local count=0\n    local i\n    for ((i=0;\
    \ i<=original_length-substring_length; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_length=${#max_index_plus_one}\n\
    \    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local length=${#original}\n    local sublength=${#substring}\n    while\
    \ [ $i -lt $length ]; do\n        if [ \"${original:$i:$sublength}\" == \"$substring\"\
    \ ]; then\n            ((count++))\n            ((i+=$sublength))\n        else\n\
    \            ((i++))\n        fi\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    for (( i=0; i<=$original_length-$substring_length;\
    \ i++ )); do\n        if [[ \"${original:$i:$substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    local len=\"${#original}\"\n    local sublen=\"${#substring}\"\
    \n    while [ $i -lt $len ]; do\n        if [ \"${original:$i:$sublen}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r str=\"$1\"\n    local -r substr=\"$2\"\n    local -r len_str=${#str}\n\
    \    local -r len_substr=${#substr}\n    local -r len_diff=$((len_str - len_substr))\n\
    \    local -r len_diff_plus_one=$((len_diff + 1))\n    local -r len_diff_plus_one_str=$(printf\
    \ \"%0${len_diff_plus_one}d\" 1)\n    local -r len_diff_plus_one_str_len=${#len_diff_plus_one_str}\n\
    \    local -r len_diff_plus_one_str_len_minus_one=$((len_diff_plus_one_str_len\
    \ - 1))\n    local -r len_diff_plus_one_str_len_minus_one_str=$(printf \"%0${len_diff_plus_one_str_len_minus_one}d\"\
    \ 1)\n    local -r len_diff_plus_one_str_len_minus_one_str_len=${#len_diff_plus_one_str_len_minus_one_str}\n\
    \    local -r len_diff_plus_one_str_len_minus_one_str_len_minus_one=$((len_diff_plus_one_str_len_minus_one_str_len\
    \ - 1))\n    local -r len_diff_plus_one_str_len_minus_one_str_len_minus_one_str=$(printf\
    \ \"%0${len_diff_plus_one_str_len_minus_one_str_len_minus_one}d\" 1)\n    local\
    \ -r len_diff_plus_one_str_len_minus_one_str_len_minus_one_str_len=${#len_diff_plus_one_str_len_minus_one_str_len_minus_one_str}\n\
    \    local -r len_diff_plus_one_str_len_minus_one_str_len_minus_one_str_len_minus_one=$((len_diff_plus_one_str_len_minus_one_str_len_",
  "    local -r original_string=\"$1\"\n    local -r substring=\"$2\"\n    local -r\
    \ substring_length=\"${#substring}\"\n    local -r original_string_length=\"${#original_string}\"\
    \n    local -r original_string_length_minus_substring_length=\"$((original_string_length\
    \ - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length=\"\
    $((original_string_length_minus_substring_length_plus_one * substring_length))\"\
    \n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length=\"\
    $((original_string_length_minus_substring_length_plus_one_times_substring_length\
    \ - original_string_length))\"\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length_plus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length\
    \ + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length_plus_one_times_substring_length=\"\
    $((original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length_plus_one\
    \ * substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length_plus_one_times_substring_length_minus_original_string_length=\"\
    $((original_string_length_minus_substring_length_plus_one_times_substring_length_minus_original_string_length_plus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local n=${#original}\n    local m=${#substring}\n\
    \    for ((i=0; i<n; i++)); do\n        for ((j=0, k=i; j<m && k<n; j++, k++));\
    \ do\n            if [[ \"${original:k:1}\" != \"${substring:j:1}\" ]]; then\n\
    \                break\n            fi\n        done\n        if [[ $j -eq $m\
    \ ]]; then\n            ((count++))\n        fi\n    done\n    echo $count", " \
    \   local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_minus_one=$((length_difference_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_times_length_substring=$((length_difference_plus_one_minus_one\
    \ * length_substring))\n    local -r length_difference_plus_one_minus_one_times_length_substring_plus_one=$((length_difference_plus_one_minus_one_times_length_substring\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one=$((length_difference_plus_one_minus_one_times_length_substring_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one_times_length_original=$((length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one\
    \ * length_original))\n    local -r length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one_times_length_original_plus_one=$((length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one_times_length_original\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one_times_length_original_plus_one_minus_one=$((length_difference_plus_one_minus_one_times_length_substring_plus_one_minus_one_times_length_original_plus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${original:$offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$(( original_length\
    \ - substring_length ))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $(( original_length_minus_substring_length + 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one + 1 ))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one - 1 ))\"\
    \n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1 ))\"\n    local -r original_length_minus_substring_length", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\" ==\
    \ \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ local i\n    for ((i=0; i<=$original_length-$substring_length; i++)); do\n \
    \       if [[ \"${original:$i:$substring_length}\" == \"$substring\" ]]; then\n\
    \            count=$((count+1))\n        fi\n    done\n    echo \"$count\"", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local i=0\n    local j=0\n    for ((i=0; i<${#original}; i++)); do\n       \
    \ if [[ \"${original:$i:${#substring}}\" == \"$substring\" ]]; then\n        \
    \    count=$((count+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local length=${#substring}\n\
    \    for (( i=0; i<${#original}; i++ )); do\n        if [[ \"${original:$i:$length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -i count=0\n    local -i i=0\n    while (( i < original_length ));\
    \ do\n        if [[ \"${original:i:substring_length}\" == \"$substring\" ]]; then\n\
    \            (( count++ ))\n            (( i += substring_length ))\n        else\n\
    \            (( i++ ))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i counter=0\n\
    \    local -i i=0\n    for ((i=0; i<original_length; i++)); do\n        local\
    \ -r current_substring=\"${original:i:substring_length}\"\n        if [[ \"$current_substring\"\
    \ == \"$substring\" ]]; then\n            counter=$((counter+1))\n        fi\n\
    \    done\n    echo \"$counter\"", "    local -r original=\"$1\"\n    local -r\
    \ substring=\"$2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ counter=0\n    local -i index=0\n    while [[ $index -le $max_index ]]; do\n\
    \        local -r current_substring=${original:$index:$substring_length}\n   \
    \     if [[ \"$current_substring\" == \"$substring\" ]]; then\n            ((counter++))\n\
    \            ((index += substring_length))\n        else\n            ((index++))\n\
    \        fi\n    done\n    echo \"$counter\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#original} ]; do\n        local new_index=$((${#substring} + $index))\n\
    \        if [ \"${original:$index:${#substring}}\" == \"$substring\" ]; then\n\
    \            count=$(($count + 1))\n            index=$new_index\n        else\n\
    \            index=$(($index + 1))\n        fi\n    done\n    echo $count", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local offset=0\n    while [ \"${original:$offset:${#substring}}\" = \"$substring\"\
    \ ]; do\n        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local string=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local length=${#string}\n    local sublength=${#substring}\n\
    \    for ((i=0; i<length; i++)); do\n        if [[ \"${string:i:sublength}\" ==\
    \ \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n   \
    \ echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n \
    \   local count=0\n    local i=0\n    while [ $i -lt ${#original} ]; do\n    \
    \    if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n       \
    \     ((count++))\n            ((i+=${#substring}))\n        else\n          \
    \  ((i++))\n        fi\n    done\n    echo \"$count\"", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -i count=0\n\
    \    for ((i=0; i<original_string_length_minus_substring_length_plus_one; i++));\
    \ do\n        if [[ \"${original_string:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo \"\
    $count\"", "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r len_original=\"\
    ${#original}\"\n    local -r len_substring=\"${#substring}\"\n    local -r len_diff=\"\
    $((len_original - len_substring))\"\n    local -r len_diff_plus_one=\"$((len_diff\
    \ + 1))\"\n    local -r len_diff_plus_one_str=\"$(printf \"%d\" \"$len_diff_plus_one\"\
    )\"\n    local -r len_diff_plus_one_str_len=\"${#len_diff_plus_one_str}\"\n  \
    \  local -r len_diff_plus_one_str_len_plus_one=\"$((len_diff_plus_one_str_len\
    \ + 1))\"\n    local -r len_diff_plus_one_str_len_plus_one_str=\"$(printf \"%d\"\
    \ \"$len_diff_plus_one_str_len_plus_one\")\"\n    local -r len_diff_plus_one_str_len_plus_one_str_len=\"\
    ${#len_diff_plus_one_str_len_plus_one_str}\"\n    local -r len_diff_plus_one_str_len_plus_one_str_len_plus_one=\"\
    $((len_diff_plus_one_str_len_plus_one_str_len + 1))\"\n    local -r len_diff_plus_one_str_len_plus_one_str_len_plus_one_str=\"\
    $(printf \"%d\" \"$len_diff_plus_one_str_len_plus_one_str_len_plus_one\")\"\n\
    \    local -r len_diff_plus_one_str_len_plus_one_str_len_plus_one_str_len=\"${#len_diff_plus_one_str_len_plus_one_str_len_plus_one_str}\"\
    \n    local -r len_diff_plus_one_str_len_plus_one_str_len_plus_one_str_len_plus_one=\"\
    $((len_diff_plus_one_str_len_plus", "    local -r original=\"$1\"\n    local -r\
    \ substring=\"$2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_length=${#max_index_plus_one}\n\
    \    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local result=0\n   \
    \ local i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            result=$((result+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$result\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_original; i++)); do\n        for ((j=0; j<len_substring;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original_string=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ \"\
    ${original_string:$i:${#substring}}\" == \"$substring\" ]]; do\n        ((count++))\n\
    \        ((i++))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n\
    \    local substring=\"$2\"\n    local count=0\n    local index=0\n    while [[\
    \ $index -lt ${#original} ]]; do\n        local found_index=$(index_of \"$original\"\
    \ \"$substring\" \"$index\")\n        if [[ $found_index -eq -1 ]]; then\n   \
    \         break\n        fi\n        count=$((count + 1))\n        index=$((found_index\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r original_length=$(string_length \"$original\"\
    )\n    local -r substring_length=$(string_length \"$substring\")\n    local -r\
    \ max_index=$((original_length - substring_length))\n    local -i count=0\n  \
    \  local -i i=0\n    while ((i <= max_index)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i += substring_length))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r substring=\"$1\"\n    local -r string=\"$2\"\n    local -r regex=\"\
    $(echo \"$substring\" | sed 's/\\(.\\)/\\1\\1*/g')\"\n    echo \"$string\" | grep\
    \ -o \"$regex\" | wc -l", "    local -r string=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r string_length=$(echo \"$string\" | wc -c)\n    local -r substring_length=$(echo\
    \ \"$substring\" | wc -c)\n    local -r substring_length_minus_one=$((substring_length\
    \ - 1))\n    local -r substring_length_minus_two=$((substring_length - 2))\n \
    \   local -r substring_length_minus_three=$((substring_length - 3))\n    local\
    \ -r substring_length_minus_four=$((substring_length - 4))\n    local -r substring_length_minus_five=$((substring_length\
    \ - 5))\n    local -r substring_length_minus_six=$((substring_length - 6))\n \
    \   local -r substring_length_minus_seven=$((substring_length - 7))\n    local\
    \ -r substring_length_minus_eight=$((substring_length - 8))\n    local -r substring_length_minus_nine=$((substring_length\
    \ - 9))\n    local -r substring_length_minus_ten=$((substring_length - 10))\n\
    \    local -r substring_length_minus_eleven=$((substring_length - 11))\n    local\
    \ -r substring_length_minus_twelve=$((substring_length - 12))\n    local -r substring_length_minus_thirteen=$((substring_length\
    \ - 13))\n    local -r substring_length_minus_fourteen=$((substring_length - 14))\n\
    \    local -r substring_length_minus_fifteen=$((substring_length - 15))\n    local\
    \ -r substring_length_minus_sixteen=$((substring_length - 16))\n    local -r substring_length_minus_seventeen=$((substring_length\
    \ - 17))\n    local -r substring_length_minus_eighteen=$((substring_length - 18))\n\
    \    local -r substring_length_minus_nineteen=$((substring_length - 19))\n   \
    \ local -r substring_length_minus_twenty=$((substring_length -", "    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $index -lt\
    \ $length ]; do\n        if [ \"${string:$index:$sublength}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            index=$((index+sublength))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local\
    \ -r length=\"${#substring}\"\n    local -r original_length=\"${#original}\"\n\
    \    local -i count=0\n    local -i i=0\n    while [ $i -lt $original_length ];\
    \ do\n        local -r part=\"${original:$i:$length}\"\n        if [ \"$part\"\
    \ == \"$substring\" ]; then\n            count=$((count + 1))\n            i=$((i\
    \ + length))\n        else\n            i=$((i + 1))\n        fi\n    done\n \
    \   echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -i count=0\n    local -i i=0\n    while [ $i -lt $original_length ];\
    \ do\n        if [ \"${original:$i:$substring_length}\" == \"$substring\" ]; then\n\
    \            ((count++))\n            ((i+=substring_length))\n        else\n\
    \            ((i++))\n        fi\n    done\n    echo \"$count\"", "    local -r\
    \ original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -i count=0\n    for ((i=0; i<max_index_plus_one; i++)); do\n       \
    \ local -r substring_start_index=$i\n        local -r substring_end_index=$((substring_start_index\
    \ + substring_length))\n        local -r substring_to_check=\"${original:substring_start_index:substring_length}\"\
    \n        if [[ \"$substring_to_check\" == \"$substring\" ]]; then\n         \
    \   ((count++))\n        fi\n    done\n    echo \"$count\"", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_string_length=${#original_string}\n    local -r original_string_length_minus_substring_length=$((original_string_length\
    \ - substring_length))\n    local -r original_string_length_minus_substring_length_plus_one=$((original_string_length_minus_substring_length\
    \ + 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=$((original_string_length_minus_substring_length_plus_one\
    \ - 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one=$((original_string_length_minus_substring_length_plus_one_minus_one\
    \ + 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=$((original_string_length_minus_substring_length_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    for ((i=0; i<${#original}; i++)); do\n        for ((j=0;\
    \ j<${#substring}; j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\"\
    \ ]]; then\n                break\n            fi\n            if [[ $j -eq $((${#substring}-1))\
    \ ]]; then\n                ((count++))\n            fi\n            ((i++))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local index=0\n    local length=${#substring}\n\
    \    while true; do\n        index=$(index_of \"$original\" \"$substring\" \"\
    $index\")\n        if [ \"$index\" -eq \"-1\" ]; then\n            break\n   \
    \     fi\n        count=$((count + 1))\n        index=$((index + length))\n  \
    \  done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    while [[ $i -lt ${#original} ]]; do\n\
    \        if [[ \"${original:$i:${#substring}}\" == \"$substring\" ]]; then\n \
    \           count=$((count+1))\n            i=$((i+${#substring}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r string=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r string_length=\"${#string}\"\n    local -r string_length_minus_substring_length=\"\
    $((string_length - substring_length))\"\n    local -i count=0\n    for ((i=0;\
    \ i<=string_length_minus_substring_length; i++)); do\n        if [[ \"${string:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r length_of_substring=\"${#substring}\"\n    local -r length_of_original=\"\
    ${#original}\"\n    local -r length_of_remaining=\"$((length_of_original - length_of_substring))\"\
    \n    local -r remaining=\"${original:length_of_substring}\"\n    local -r first_char=\"\
    ${original:0:1}\"\n    local -r first_char_of_substring=\"${substring:0:1}\"\n\
    \    local -r remaining_of_substring=\"${substring:1}\"\n    if [[ \"$length_of_original\"\
    \ -eq \"0\" ]]; then\n        echo \"0\"\n    elif [[ \"$length_of_substring\"\
    \ -eq \"0\" ]]; then\n        echo \"0\"\n    elif [[ \"$length_of_original\"\
    \ -lt \"$length_of_substring\" ]]; then\n        echo \"0\"\n    elif [[ \"$first_char\"\
    \ == \"$first_char_of_substring\" ]]; then\n        local -r remaining_of_remaining=\"\
    ${remaining:1}\"\n        local -r remaining_of_remaining_of_substring=\"${remaining_of_substring:1}\"\
    \n        local -r remaining_of_remaining_of_remaining=\"${remaining_of_remaining:1}\"\
    \n        local -r remaining_of_remaining_of_remaining_of_substring=\"${remaining_of_remaining_of_substring:1}\"\
    \n        local -r remaining_of_remaining_of_remaining_of_remaining=\"${remaining_of_remaining_of_remaining:1}\"\
    \n        local -r remaining_of_remaining_of_remaining_of_remaining_of_substring=\"\
    ${remaining_of_remaining_of_remaining_of_remaining:1}\"\n        local -r remaining_of_remaining_of_remaining_of_remaining_of_remaining=\"\
    ${remaining_of_remaining_of_remaining_of_remaining:1}\"\n        local -r", " \
    \   local original_string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [ $i -lt ${#original_string} ]; do\n        if [ \"\
    ${original_string:$i:${#substring}}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+${#substring}))\n        else\n            i=$((i+1))\n  \
    \      fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#original}\
    \ ]; do\n        if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+${#substring}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    while [[ $i -lt ${#original} ]]; do\n        if [[ ${original:$i:${#substring}}\
    \ == $substring ]]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "  local original=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local i=0\n\
    \  while [ $i -lt ${#original} ]; do\n    if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n      count=$((count+1))\n      i=$((i+${#substring}))\n\
    \    else\n      i=$((i+1))\n    fi\n  done\n  echo \"$count\"", "    local original_string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    local\
    \ length=${#substring}\n    while [ $index -lt ${#original_string} ]; do\n   \
    \     if [ \"${original_string:$index:$length}\" == \"$substring\" ]; then\n \
    \           count=$((count+1))\n            index=$((index+length))\n        else\n\
    \            index=$((index+1))\n        fi\n    done\n    echo $count", "  local\
    \ -r original=\"$1\"\n  local -r substring=\"$2\"\n  local -r substring_length=\"\
    ${#substring}\"\n  local -r original_length=\"${#original}\"\n  local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n  local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n  local -r substring_length_plus_one=\"\
    $((substring_length + 1))\"\n  local -r substring_length_minus_one=\"$((substring_length\
    \ - 1))\"\n  local -r substring_length_minus_one_plus_one=\"$((substring_length_minus_one\
    \ + 1))\"\n  local -r substring_length_minus_one_plus_one_times_minus_one=\"$((substring_length_minus_one_plus_one\
    \ * -1))\"\n  local -r substring_length_minus_one_plus_one_times_minus_one_plus_one=\"\
    $((substring_length_minus_one_plus_one_times_minus_one + 1))\"\n  local -r substring_length_minus_one_plus_one_times_minus_one_plus_one_times_minus_one=\"\
    $((substring_length_minus_one_plus_one_times_minus_one_plus_one * -1))\"\n  local\
    \ -r substring_length_minus_one_plus_one_times_minus_one_plus_one_times_minus_one_plus_one=\"\
    $((substring_length_minus_one_plus_one_times_minus_one_plus_one_times_minus_one\
    \ + 1))\"\n  local -r substring_length_minus_one_plus_one_times_minus_one_plus_one_times_minus_one_plus_one_times_minus_one=\"\
    $((substring_length_minus_one_plus_one_times_minus_one_plus_one_times_minus_one_plus_one\
    \ * -1))\"\n  local -r subst", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -i count=0\n    local -i i\n    for ((i=0;\
    \ i<=original_length_minus_substring_length; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "    local original_string=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#original_string}\
    \ ]; do\n        if [ \"${original_string:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            ((count++))\n            ((i+=${#substring}))\n       \
    \ else\n            ((i++))\n        fi\n    done\n    echo \"$count\"", "   \
    \ local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        local j=0\n        while\
    \ [ $j -lt ${#substring} ] && [ $i -lt ${#original} ] && [ \"${original:$i:1}\"\
    \ == \"${substring:$j:1}\" ]; do\n            i=$((i+1))\n            j=$((j+1))\n\
    \        done\n        if [ $j -eq ${#substring} ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local length_original=${#original}\n    local length_substring=${#substring}\n\
    \    while [ $i -lt $length_original ]; do\n        if [ \"${original:$i:$length_substring}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+length_substring))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local str=\"$1\"\n    local substr=\"$2\"\n    local count=0\n    local pos=0\n\
    \    while true; do\n        pos=$(index_of \"$str\" \"$substr\" \"$pos\")\n \
    \       if [ \"$pos\" -eq \"-1\" ]; then\n            break\n        fi\n    \
    \    count=$((count + 1))\n        pos=$((pos + 1))\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local substring_len=${#substring}\n    local original_len=${#original}\n\
    \    for ((i=0; i<original_len; i++)); do\n        if [[ \"${original:$i:$substring_len}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "  local original=\"$1\"\n  local substring=\"$2\"\
    \n  local count=0\n  local index=0\n  while [[ \"${original:$index:${#substring}}\"\
    \ == \"$substring\" ]]; do\n    count=$((count + 1))\n    index=$((index + ${#substring}))\n\
    \  done\n  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local index=0\n    while [ $index -lt ${#original}\
    \ ]; do\n        if [ \"${original:$index:${#substring}}\" == \"$substring\" ];\
    \ then\n            ((count++))\n            ((index+=$((${#substring}-1))))\n\
    \        fi\n        ((index++))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local original_len=${#original}\n    local substring_len=${#substring}\n\
    \    for ((i=0; i<original_len; i++)); do\n        for ((j=0; j<substring_len;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_len-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ $i -lt\
    \ ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n\
    \    local -i index=0\n    local -i length=${#original_string}\n    local -i substring_length=${#substring}\n\
    \    while [ $index -lt $length ]; do\n        local -i next_index=$(($index +\
    \ $substring_length))\n        if [ \"${original_string:$index:$substring_length}\"\
    \ == \"$substring\" ]; then\n            count=$(($count + 1))\n            index=$next_index\n\
    \        else\n            index=$(($index + 1))\n        fi\n    done\n    echo\
    \ $count", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local\
    \ -r length_original=\"${#original}\"\n    local -r length_substring=\"${#substring}\"\
    \n    local -r length_difference=$(( length_original - length_substring ))\n \
    \   local -r length_difference_plus_one=$(( length_difference + 1 ))\n    local\
    \ -r length_difference_plus_one_minus_one=$(( length_difference_plus_one - 1 ))\n\
    \    local -r length_difference_plus_one_minus_one_minus_one=$(( length_difference_plus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one - 1 ))\n    local -r\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one - 1 ))\n\
    \    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ local i=0\n    while [ $i -lt $original_length ]; do\n        if [ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+substring_length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${original:$index:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        index=$((index + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r regex=\"$(echo \"$substring\" | sed 's/[][\\.*^$/]/\\\\&/g')\"\
    \n    local -r count=\"$(echo \"$original\" | sed -n \"s/$regex/$regex/p\" | wc\
    \ -l)\"\n    echo \"$count\"", "  local original=$1\n  local substring=$2\n  local\
    \ result=0\n  local index=0\n  while true; do\n    index=$(index_of \"$original\"\
    \ \"$substring\" \"$index\")\n    if [ \"$index\" == \"-1\" ]; then\n      break\n\
    \    fi\n    result=$((result + 1))\n    index=$((index + 1))\n  done\n  echo\
    \ \"$result\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    for (( i=0; i<${#original}; i++ )); do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local index=0\n    while [[ $index -lt ${#original}\
    \ ]]; do\n        local found_index=$(index_of \"$original\" \"$substring\" \"\
    $index\")\n        if [[ $found_index -lt 0 ]]; then\n            break\n    \
    \    fi\n        count=$((count + 1))\n        index=$((found_index + 1))\n  \
    \  done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=$(strlen \"$original\")\n    local -r substring_length=$(strlen\
    \ \"$substring\")\n    local -r max_index=$((original_length - substring_length))\n\
    \    local -i index=0\n    local -i count=0\n    while [ $index -le $max_index\
    \ ]; do\n        if [ \"${original:$index:$substring_length}\" == \"$substring\"\
    \ ]; then\n            ((count++))\n            ((index+=substring_length))\n\
    \        else\n            ((index++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -i count=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i original_length=${#original}\n\
    \    local -i substring_length=${#substring}\n    while [ $i -lt $original_length\
    \ ]; do\n        if [ \"${original:$i:1}\" == \"${substring:$j:1}\" ]; then\n\
    \            if [ $j -eq $((substring_length - 1)) ]; then\n                count=$((count\
    \ + 1))\n                j=0\n            else\n                j=$((j + 1))\n\
    \            fi\n        else\n            j=0\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $count", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$(( original_length\
    \ - substring_length ))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $(( original_length_minus_substring_length + 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one + 1 ))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one - 1 ))\"\
    \n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1 ))\"\n    local -r original_length_minus_substring_length", "    local -r\
    \ original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -r max_index_plus_one_minus_one=$((max_index_plus_one - 1))\n    local\
    \ -r max_index_plus_one_minus_one_plus_one=$((max_index_plus_one_minus_one + 1))\n\
    \    local -i count=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i\
    \ ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i\
    \ ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i\
    \ ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i\
    \ ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i\
    \ as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i\
    \ aw=0\n    local -i ax=0\n    local -i ay=0\n   ", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ $i\
    \ -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\" == \"\
    $substring\" ]]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n   \
    \ local -i i=0\n    local -i j=0\n    local -i len=${#string}\n    local -i sublen=${#substring}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=0; j<sublen; j++)); do\n   \
    \         if [[ \"${string:i+j:1}\" != \"${substring:j:1}\" ]]; then\n       \
    \         break\n            fi\n        done\n        if [[ $j -eq $sublen ]];\
    \ then\n            ((count++))\n        fi\n    done\n    echo \"$count\"", " \
    \   local string=$1\n    local substring=$2\n    local count=0\n    local index=0\n\
    \    local length=${#string}\n    local sublength=${#substring}\n    while [ $index\
    \ -lt $length ]; do\n        if [ \"${string:$index:$sublength}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            index=$((index+sublength))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count", "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local offset=0\n    while [[ \"${string:offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + 1))\n    done\n\
    \    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r length_substring=\"${#substring}\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_difference=$(( length_original - length_substring\
    \ ))\n    local -r length_difference_plus_one=$(( length_difference + 1 ))\n \
    \   local -r length_difference_plus_one_minus_one=$(( length_difference_plus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one=$(( length_difference_plus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one - 1 ))\n    local -r\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one - 1 ))\n\
    \    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original_string=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local len=${#original_string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${original_string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count", "    local string=\"$1\"\n    local substring=\"\
    $2\"\n    local result=0\n    local index=0\n    local substring_length=${#substring}\n\
    \    while [ $index -lt ${#string} ]; do\n        if [ \"${string:$index:$substring_length}\"\
    \ == \"$substring\" ]; then\n            result=$(( $result + 1 ))\n         \
    \   index=$(( $index + $substring_length ))\n        else\n            index=$((\
    \ $index + 1 ))\n        fi\n    done\n    echo $result", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n    while\
    \ [[ \"${original:$offset:${#substring}}\" == \"$substring\" ]]; do\n        count=$((count\
    \ + 1))\n        offset=$((offset + ${#substring}))\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=$1\n    local\
    \ substring=$2\n    local count=0\n    local i=0\n    local j=0\n    local len_original=${#original}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_original; i++));\
    \ do\n        for ((j=0; j<len_substring; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((len_substring-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r substring_length_plus_one=\"\
    $((substring_length + 1))\"\n    local -r substring_length_plus_one_minus_one=\"\
    $((substring_length_plus_one - 1))\"\n    local -r substring_length_plus_one_minus_one_plus_one=\"\
    $((substring_length_plus_one_minus_one + 1))\"\n    local -r substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((substring_length_plus_one_minus_one_plus_one - 1))\"\n    local -r substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((substring_length_plus_one_minus_one_plus_one_minus_one + 1))\"\n    local -r\
    \ substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((substring_length_plus_one_minus_one_plus_one_minus_one_plus_one - 1))\"\n \
    \   local -r substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one +\
    \ 1))\"\n    local -r substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((substring_length_", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_length=${#max_index_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one=$((max_index_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one_length_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one * substring_length))\"\n  \
    \  local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length - original_length))\"\
    \n    local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one_divided_by_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one\
    \ / substring_length))\"\n    echo \"$original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one_divided_by_substring_length\"",
  "  local original_string=\"$1\"\n  local substring=\"$2\"\n  local original_string_length=${#original_string}\n\
    \  local substring_length=${#substring}\n  local count=0\n  for (( i=0; i<=$((\
    \ $original_string_length - $substring_length )); i++ )); do\n    if [[ \"${original_string:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n      count=$(( $count + 1 ))\n    fi\n  done\n\
    \  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local i=0\n    while [ $i -lt ${#original} ]; do\n   \
    \     if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n      \
    \      ((count++))\n            ((i+=${#substring}))\n        else\n         \
    \   ((i++))\n        fi\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\" ==\
    \ \"$substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_substring=\"\
    ${#substring}\"\n    local -r length_original=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while [ $i -lt $length_original ]; do\n        if [ \"\
    ${original:$i:$length_substring}\" == \"$substring\" ]; then\n            (( count++\
    \ ))\n        fi\n        (( i++ ))\n    done\n    echo \"$count\"", "    if [\
    \ -z \"$1\" ] || [ -z \"$2\" ]; then\n        echo \"0\"\n    else\n        echo\
    \ \"${1//$2/$2}\" | grep -o \"$2\" | wc -l\n    fi", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_length=${#original}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one=$((original_length_minus_substring_length_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    local counter=0\n    local i=0\n\
    \    while [ $i -lt $original_length ]; do\n        if [ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            counter=$((counter+1))\n            i=$((i+substring_length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $counter",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    while [ $i -lt $len_original ]; do\n        if [ \"${original:$i:$len_substring}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+len_substring))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_iterations=$((original_length\
    \ - substring_length + 1))\n    local -i counter=0\n    local -i i=0\n    while\
    \ [ $i -lt $max_iterations ]; do\n        local -r substring_from_original=\"\
    ${original:i:substring_length}\"\n        if [ \"$substring_from_original\" ==\
    \ \"$substring\" ]; then\n            counter=$((counter + 1))\n            i=$((i\
    \ + substring_length))\n        else\n            i=$((i + 1))\n        fi\n \
    \   done\n    echo \"$counter\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    local count=0\n    for (( i=0; i<$original_length; i++ )); do\n        if\
    \ [[ \"${original:$i:$substring_length}\" == \"$substring\" ]]; then\n       \
    \     count=$((count+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $(( original_length - substring_length ))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $(( original_length_minus_substring_length + 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one - 1 ))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_minus_one - 1 ))\"\
    \n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $(( original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1 ))\"\n    local -r original_length_minus_substring_length", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [[ $i -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=$1\n    local substring=$2\n    local count=0\n    local i=0\n\
    \    while [[ $i -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ local i=0\n    while [ $i -lt $original_length ]; do\n        local j=0\n  \
    \      while [ $j -lt $substring_length ] && [ $((i+j)) -lt $original_length ]\
    \ && [ \"${original:$((i+j)):1}\" == \"${substring:$j:1}\" ]; do\n           \
    \ j=$((j+1))\n        done\n        if [ $j -eq $substring_length ]; then\n  \
    \          count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    local length=${#original}\n    local sublength=${#substring}\n\
    \    while [ $i -lt $length ]; do\n        if [ \"${original:$i:$sublength}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=sublength-1))\n\
    \        fi\n        ((i++))\n    done\n    echo $count", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -r max_index_plus_one_length=${#max_index_plus_one}\n    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_plus_one=$((max_index_plus_one_length_minus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_minus_one_length_plus_one_length=${#max_index_plus_one_length_minus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_plus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_plus_one_length_minus_one_length_plus_one=$((max_index_plus_one_length_minus_one_length_plus_one_length_minus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_minus_one_length_plus_one_length_minus_one_length_plus_one_length=${#max_index_plus_one_length_minus",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_plus_substring_length=\"\
    $((original_length_minus_substring_length_plus_one + substring_length))\"\n  \
    \  local -r original_length_minus_substring_length_plus_one_plus_substring_length_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_plus_substring_length - 1))\"\
    \n    local -r original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_plus_substring_length_minus_one\
    \ + substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length_minus_one_plus_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length_minus_one\
    \ + substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_plus_substring_length_minus_one_plus_substring_length_minus_one_plus_sub",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    for (( i=0; i<${#original}; i++ )); do\n        for\
    \ (( j=0; j<${#substring}; j++ )); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((${#substring}-1)) ]]; then\n                count=$(($count+1))\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_times_substring_length=$((original_length_minus_substring_length_plus_one\
    \ * substring_length))\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length=$((original_length_minus_substring_length_plus_one_times_substring_length\
    \ - original_length))\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one=$((original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one_divided_by_substring_length=$((original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one\
    \ / substring_length))\n    echo \"$original_length_minus_substring_length_plus_one_times_substring_length_minus_original_length_plus_one_divided_by_substring_length\"",
  "    local -r original_string=\"$1\"\n    local -r substring=\"$2\"\n    local -r\
    \ substring_length=\"${#substring}\"\n    local -r original_string_length=\"${#original_string}\"\
    \n    local -r original_string_length_minus_substring_length=\"$((original_string_length\
    \ - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n    local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one - 1))\"\n\
    \    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#original}\n    while [ $i -lt $len ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    local count=0\n    local i=0\n\
    \    while [ $i -lt $original_length ]; do\n        local substring_start=$i\n\
    \        local substring_end=$((substring_start + substring_length))\n       \
    \ local substring_to_check=${original:$substring_start:$substring_length}\n  \
    \      if [ \"$substring_to_check\" == \"$substring\" ]; then\n            count=$((count\
    \ + 1))\n            i=$((i + substring_length))\n        else\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n\
    \    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local string=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#string}\
    \ ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+${#substring}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $count", "  local original=\"\
    $1\"\n  local substring=\"$2\"\n  local count=0\n  local i=0\n  while [[ $i -lt\
    \ ${#original} ]]; do\n    if [[ \"${original:$i:${#substring}}\" == \"$substring\"\
    \ ]]; then\n      ((count++))\n      ((i+=${#substring}))\n    else\n      ((i++))\n\
    \    fi\n  done\n  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local j=0\n    local original_len=${#original}\n\
    \    local substring_len=${#substring}\n    while [ $i -lt $original_len ]; do\n\
    \        j=0\n        while [ $j -lt $substring_len ] && [ $i -lt $original_len\
    \ ] && [ \"${original:$i:1}\" == \"${substring:$j:1}\" ]; do\n            i=$((i+1))\n\
    \            j=$((j+1))\n        done\n        if [ $j -eq $substring_len ]; then\n\
    \            count=$((count+1))\n        fi\n        i=$((i-j+1))\n    done\n\
    \    echo $count", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\
    \n    local -r length_original=\"${#original}\"\n    local -r length_substring=\"\
    ${#substring}\"\n    local -r length_difference=$((length_original - length_substring))\n\
    \    local -r max_index=$((length_difference + 1))\n    local -i index=0\n   \
    \ local -i count=0\n    while [[ $index -lt $max_index ]]; do\n        local -r\
    \ substring_to_check=\"${original:index:length_substring}\"\n        if [[ \"\
    $substring_to_check\" == \"$substring\" ]]; then\n            ((count++))\n  \
    \      fi\n        ((index++))\n    done\n    echo \"$count\"", "    local -r\
    \ string=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r string_length=\"${#string}\"\n    local -r string_length_minus_substring_length=\"\
    $((string_length - substring_length))\"\n    local -r substring_length_minus_one=\"\
    $((substring_length - 1))\"\n    local -r substring_length_minus_one_times_minus_one=\"\
    $((substring_length_minus_one * -1))\"\n    local -r substring_length_times_minus_one=\"\
    $((substring_length * -1))\"\n    local -r substring_length_times_minus_one_plus_one=\"\
    $((substring_length_times_minus_one + 1))\"\n    local -r substring_length_times_minus_one_plus_two=\"\
    $((substring_length_times_minus_one + 2))\"\n    local -r substring_length_times_minus_one_plus_three=\"\
    $((substring_length_times_minus_one + 3))\"\n    local -r substring_length_times_minus_one_plus_four=\"\
    $((substring_length_times_minus_one + 4))\"\n    local -r substring_length_times_minus_one_plus_five=\"\
    $((substring_length_times_minus_one + 5))\"\n    local -r substring_length_times_minus_one_plus_six=\"\
    $((substring_length_times_minus_one + 6))\"\n    local -r substring_length_times_minus_one_plus_seven=\"\
    $((substring_length_times_minus_one + 7))\"\n    local -r substring_length_times_minus_one_plus_eight=\"\
    $((substring_length_times_minus_one + 8))\"\n    local -r substring_length_times_minus_one_plus_nine=\"\
    $((substring_length_times_minus_one + 9))\"\n    local -r substring_length_times_minus_one_plus_ten=\"\
    $((substring_", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    while [ $i -lt ${#original} ]; do\n        if [\
    \ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+${#substring}))\n        else\n            i=$((i+1))\n  \
    \      fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local\
    \ len_original=${#original}\n    local len_substring=${#substring}\n    for ((i=0;\
    \ i<len_original; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n \
    \           if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]]; then\n   \
    \             break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -i count=0\n    local -i i=0\n    while [\
    \ \"$i\" -le \"$original_length_minus_substring_length\" ]; do\n        local\
    \ -r substring_from_original=\"${original:$i:$substring_length}\"\n        if\
    \ [ \"$substring_from_original\" = \"$substring\" ]; then\n            count=$((count\
    \ + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo \"$count\"", " \
    \ local original=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local start=0\n\
    \  local end=0\n  while [[ \"${original:$start:${#substring}}\" == \"$substring\"\
    \ ]]; do\n    ((count++))\n    ((start+=$((${#substring}))))\n  done\n  echo \"\
    $count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#original}\n    local\
    \ m=${#substring}\n    for ((i=0; i<n; i++)); do\n        for ((j=0, k=i; j<m\
    \ && k<n; j++, k++)); do\n            if [[ \"${original:k:1}\" != \"${substring:j:1}\"\
    \ ]]; then\n                break\n            fi\n        done\n        if [[\
    \ $j -eq $m ]]; then\n            ((count++))\n        fi\n    done\n    echo\
    \ $count", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    local j=0\n    local substring_length=${#substring}\n    local\
    \ original_length=${#original}\n    for ((i=0; i<original_length; i++)); do\n\
    \        for ((j=0; j<substring_length; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((substring_length-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n            i=$((i+1))\n        done\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_minus_one=$((length_difference_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    local counter=0\n    local i=0\n\
    \    while [ $i -lt $original_length ]; do\n        if [ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            counter=$((counter+1))\n            i=$((i+substring_length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $counter",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -i count=0\n\
    \    for ((i=0; i<=length_difference; i++)); do\n        local -r substring_to_check=\"\
    ${original:i:length_substring}\"\n        if [[ \"$substring_to_check\" == \"\
    $substring\" ]]; then\n            ((count++))\n        fi\n    done\n    echo\
    \ \"$count\"", "    local original_string=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local offset=0\n    while [[ \"${original_string:offset:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        offset=$((offset\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r original_length=${#original}\n    local -r\
    \ substring_length=${#substring}\n    local -r max_index=$((original_length -\
    \ substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n   \
    \ local -r max_index_plus_one_minus_one=$((max_index_plus_one - 1))\n    local\
    \ -i count=0\n    local -i index=0\n    while [ $index -lt $max_index_plus_one\
    \ ]; do\n        local -r substring_at_index=${original:index:substring_length}\n\
    \        if [ \"$substring_at_index\" == \"$substring\" ]; then\n            count=$((count\
    \ + 1))\n            index=$((index + substring_length))\n        else\n     \
    \       index=$((index + 1))\n        fi\n    done\n    echo \"$count\"", "  \
    \  local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while true; do\n        local index=$(index_of \"$original\" \"\
    $substring\" \"$offset\")\n        if [ \"$index\" -eq \"-1\" ]; then\n      \
    \      break\n        fi\n        count=$((count + 1))\n        offset=$((index\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original_string=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n    local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one - 1))\"\n\
    \    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "    if [ -z \"$1\"\
    \ ] || [ -z \"$2\" ]; then\n        echo \"0\"\n    else\n        echo \"${1//$2/}\"\
    \ | wc -c\n    fi", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\
    \n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one + 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one - 1))\"\n\
    \    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length", "    local -r\
    \ original_string=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_string_length=${#original_string}\n    local -r original_string_length_minus_one=$((original_string_length\
    \ - 1))\n    local -r substring_length_minus_one=$((substring_length - 1))\n \
    \   local -r substring_length_minus_two=$((substring_length - 2))\n    local -r\
    \ substring_length_minus_three=$((substring_length - 3))\n    local -r substring_length_minus_four=$((substring_length\
    \ - 4))\n    local -r substring_length_minus_five=$((substring_length - 5))\n\
    \    local -r substring_length_minus_six=$((substring_length - 6))\n    local\
    \ -r substring_length_minus_seven=$((substring_length - 7))\n    local -r substring_length_minus_eight=$((substring_length\
    \ - 8))\n    local -r substring_length_minus_nine=$((substring_length - 9))\n\
    \    local -r substring_length_minus_ten=$((substring_length - 10))\n    local\
    \ -r substring_length_minus_eleven=$((substring_length - 11))\n    local -r substring_length_minus_twelve=$((substring_length\
    \ - 12))\n    local -r substring_length_minus_thirteen=$((substring_length - 13))\n\
    \    local -r substring_length_minus_fourteen=$((substring_length - 14))\n   \
    \ local -r substring_length_minus_fifteen=$((substring_length - 15))\n    local\
    \ -r substring_length_minus_sixteen=$((substring_length - 16))\n    local -r substring_length_minus_seventeen=$((substring_length\
    \ - 17))\n    local -r substring_length_minus_eighteen=$((substring_length - 18))\n\
    \    local -r substring_length_minus_nineteen=$((substring_length - 19))\n   \
    \ local -r", "    local original_string=\"$1\"\n    local substring=\"$2\"\n \
    \   local substring_length=${#substring}\n    local original_string_length=${#original_string}\n\
    \    local i=0\n    local count=0\n    while [ $i -lt $original_string_length\
    \ ]; do\n        local substring_to_check=${original_string:$i:$substring_length}\n\
    \        if [ \"$substring_to_check\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n    while\
    \ [[ \"${original:offset:${#substring}}\" == \"$substring\" ]]; do\n        count=$((count\
    \ + 1))\n        offset=$((offset + 1))\n    done\n    echo \"$count\"", "  local\
    \ -r original=\"$1\"\n  local -r substring=\"$2\"\n  local -r regex=\"$(echo \"\
    $substring\" | sed 's/\\(.\\)/\\1\\1*/g')\"\n  echo \"$original\" | sed \"s/$regex/$substring/g\"\
    \ | wc -c", "  local -r original=\"$1\"\n  local -r substring=\"$2\"\n  local\
    \ -r original_length=${#original}\n  local -r substring_length=${#substring}\n\
    \  local -i count=0\n  local -i i=0\n  while (( i < original_length )); do\n \
    \   if [[ \"${original:i:substring_length}\" == \"$substring\" ]]; then\n    \
    \  (( count++ ))\n      (( i += substring_length ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local -i count=0\n    local -i i=0\n    local -i j=0\n    local -i len_original=${#original}\n\
    \    local -i len_substring=${#substring}\n    while (( i < len_original )); do\n\
    \        if [[ \"${original:i:len_substring}\" == \"$substring\" ]]; then\n  \
    \          (( count++ ))\n            (( i += len_substring ))\n        else\n\
    \            (( i++ ))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    local j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        if [[ \"${string:$i:$len_substring}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    local count=0\n    for (( i=0; i<=$original_length-$substring_length; i++\
    \ )); do\n        if [[ \"${original:$i:$substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local length_original=${#original}\n\
    \    local length_substring=${#substring}\n    local count=0\n    for (( i=0;\
    \ i<=$length_original-$length_substring; i++ )); do\n        if [[ \"${original:$i:$length_substring}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"", "    local original_string=\"$1\"\n    local substring=\"\
    $2\"\n    local substring_length=${#substring}\n    local original_string_length=${#original_string}\n\
    \    local i=0\n    local count=0\n    while [ $i -lt $original_string_length\
    \ ]; do\n        local substring_in_original_string=${original_string:$i:$substring_length}\n\
    \        if [ \"$substring_in_original_string\" == \"$substring\" ]; then\n  \
    \          count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"$count\"", "    local original_string=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local i=0\n    local j=0\n    local substring_length=${#substring}\n\
    \    local original_string_length=${#original_string}\n    for ((i=0; i<original_string_length;\
    \ i++)); do\n        if [[ \"${original_string:$i:$substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"", "  local original_string=\"$1\"\n  local substring=\"$2\"\n  local\
    \ count=0\n  local index=0\n  while [ $index -lt ${#original_string} ]; do\n \
    \   if [ \"${original_string:$index:${#substring}}\" == \"$substring\" ]; then\n\
    \      count=$((count+1))\n      index=$((index+${#substring}))\n    else\n  \
    \    index=$((index+1))\n    fi\n  done\n  echo \"$count\"", "    local original_string=\"\
    $1\"\n    local substring=\"$2\"\n    local substring_length=${#substring}\n \
    \   local original_string_length=${#original_string}\n    local counter=0\n  \
    \  local i=0\n    while [ $i -lt $original_string_length ]; do\n        if [ \"\
    ${original_string:$i:$substring_length}\" == \"$substring\" ]; then\n        \
    \    counter=$((counter+1))\n            i=$((i+substring_length))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $counter", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n\
    \    local length=${#substring}\n    while true; do\n        index=$(index_of\
    \ \"$original\" \"$substring\" \"$index\")\n        if [ \"$index\" == \"-1\"\
    \ ]; then\n            break\n        fi\n        count=$((count + 1))\n     \
    \   index=$((index + length))\n    done\n    echo \"$count\"", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_string_length=${#original_string}\n    local -r original_string_length_minus_substring_length=$((original_string_length\
    \ - substring_length))\n    local -r original_string_length_minus_substring_length_plus_one=$((original_string_length_minus_substring_length\
    \ + 1))\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length=$((original_string_length_minus_substring_length_plus_one\
    \ * substring_length))\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one=$((original_string_length_minus_substring_length_plus_one_times_substring_length\
    \ + 1))\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length=$((original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one\
    \ / substring_length))\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one=$((original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length\
    \ - 1))\n    local -r original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one_times_substring_length=$((original_string_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one\
    \ * substring_length))\n    local -r original_string_length", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i counter=0\n    for ((i=0; i<=max_index; i++));\
    \ do\n        if [[ \"${original:i:substring_length}\" == \"$substring\" ]]; then\n\
    \            ((counter++))\n        fi\n    done\n    echo \"$counter\"", "  \
    \  local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original_string=\"$1\"\n    local -r substring=\"$2\"\n    local -r\
    \ substring_length=\"${#substring}\"\n    local -r original_string_length=\"${#original_string}\"\
    \n    local -i counter=0\n    local -i i=0\n    while [ \"$i\" -lt \"$original_string_length\"\
    \ ]; do\n        if [ \"${original_string:$i:$substring_length}\" == \"$substring\"\
    \ ]; then\n            counter=$((counter + 1))\n            i=$((i + substring_length))\n\
    \        else\n            i=$((i + 1))\n        fi\n    done\n    echo \"$counter\"",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local start_index=0\n    while true; do\n        local index=$(index_of \"\
    $original_string\" \"$substring\" \"$start_index\")\n        if [ \"$index\" =\
    \ \"-1\" ]; then\n            break\n        fi\n        count=$((count + 1))\n\
    \        start_index=$((index + 1))\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    local len=${#original}\n    local sublen=${#substring}\n    while [ $i -lt\
    \ $len ]; do\n        if [ \"${original:$i:$sublen}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+sublen))\n        else\n \
    \           i=$((i+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original_string=\"$1\"\n    local substring=\"$2\"\n    local original_string_length=${#original_string}\n\
    \    local substring_length=${#substring}\n    local count=0\n    for (( i=0;\
    \ i<=$original_string_length-$substring_length; i++ )); do\n        if [[ \"${original_string:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one * substring_length))\"\n  \
    \  local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length + 1))\"\
    \n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one\
    \ * substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length_plus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length_plus_one\
    \ * substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_times_substring_length_plus_one_times_sub",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ \"${string:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_length=${#original}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one=$((original_length_minus_substring_length_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local original_string_length=${#original_string}\n\
    \    local substring_length=${#substring}\n    local counter=0\n    for (( i=0;\
    \ i<=$original_string_length-$substring_length; i++ )); do\n        if [[ \"${original_string:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( counter++ ))\n        fi\n    done\n\
    \    echo \"$counter\"", "    local -r original_string=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_string_length=\"\
    ${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n    local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one + 1))\"\n\
    \    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_plus_one -\
    \ 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"${#original}\"\
    \n    local -r length_substring=\"${#substring}\"\n    local -r length_difference=$((\
    \ length_original - length_substring ))\n    local -r length_difference_plus_one=$((\
    \ length_difference + 1 ))\n    local -r length_difference_plus_one_minus_one=$((\
    \ length_difference_plus_one - 1 ))\n    local -r length_difference_plus_one_minus_one_plus_one=$((\
    \ length_difference_plus_one_minus_one + 1 ))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_plus_one - 1 ))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one=$((\
    \ length_difference_plus_one_minus_one_plus_one_minus_one + 1 ))\n    local -r\
    \ length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_plus_one_minus_one_plus_one - 1 ))\n  \
    \  local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((\
    \ length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one +\
    \ 1 ))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((\
    \ length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1 ))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while true; do\n        local index=$(index_of \"$original\" \"\
    $substring\" \"$offset\")\n        if [ \"$index\" -eq \"-1\" ]; then\n      \
    \      break\n        fi\n        count=$((count + 1))\n        offset=$((index\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\n    local\
    \ -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one * substring_length))\"\n  \
    \  local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length + 1))\"\
    \n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one\
    \ / substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one_times_substring_length=\"\
    $((original_length_minus_substring_length_plus_one_times_substring_length_plus_one_divided_by_substring_length_minus_one\
    \ * substring_length))\"\n    local -r original_length_minus_substring_length_plus_one_times_substring_length_plus_one"]
stop_tokens:
- "\n}"

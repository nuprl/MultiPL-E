language: sh
name: HumanEval_83_starts_one_ends
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local start_one=0\n  local end_one=0\n  local start_one_ends=0\n\
    \  local end_one_ends=0\n  local start_one_ends_one=0\n  local end_one_ends_one=0\n\
    \  local start_one_ends_two=0\n  local end_one_ends_two=0\n  local start_one_ends_three=0\n\
    \  local end_one_ends_three=0\n  local start_one_ends_four=0\n  local end_one_ends_four=0\n\
    \  local start_one_ends_five=0\n  local end_one_ends_five=0\n  local start_one_ends_six=0\n\
    \  local end_one_ends_six=0\n  local start_one_ends_seven=0\n  local end_one_ends_seven=0\n\
    \  local start_one_ends_eight=0\n  local end_one_ends_eight=0\n  local start_one_ends_nine=0\n\
    \  local end_one_ends_nine=0\n  local start_one_ends_zero=0\n  local end_one_ends_zero=0\n\
    \  local start_one_ends_zero_one=0\n  local end_one_ends_zero_one=0\n  local start_one_ends_zero_two=0\n\
    \  local end_one_ends_zero_two=0\n  local start_one_ends_zero_three=0\n  local\
    \ end_one_ends_zero_three=0\n  local start_one_ends_zero_four=0\n  local end_one_ends_zero_four=0\n\
    \  local start_one_ends_zero_five=0\n  local end_one_ends_zero_five=0\n  local\
    \ start_one_ends_zero_six=0\n  local end_one_ends_zero_six=0\n  local start_one_ends_zero_seven=0\n\
    \  local end_one_ends_zero_seven=0\n  local start_one_ends_zero_eight=0\n  local\
    \ end_one_ends_zero_eight=0\n  local start_one\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=1\n    while [ $i -lt $n ];\
    \ do\n        count=$((count + 9 * 10 ** i))\n        i=$((i + 1))\n    done\n\
    \    count=$((count + 10 ** (n - 1)))\n    echo $count\n}\n\ncandidate() {\n \
    \   starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\"\
    ) = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"\
    5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n\
    \    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n\
    \    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n\
    \    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n\
    \    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n\
    \    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n\
    \    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n\
    \    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n\
    \    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n\
    \    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n\
    \    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n\
    \    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\
    \    local ci=0\n}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\")\
    \ = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\"\
    ) = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=$n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for (( i=1; i<=n; i++ )); do\n   \
    \     count=$(( count + 10**(i-1) ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=0\n\
    }\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
    \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
    \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local start_one_ends=0\n  local start_one_ends_with_zero=0\n\
    \  local start_one_ends_with_one=0\n  local start_one_ends_with_two=0\n  local\
    \ start_one_ends_with_three=0\n  local start_one_ends_with_four=0\n  local start_one_ends_with_five=0\n\
    \  local start_one_ends_with_six=0\n  local start_one_ends_with_seven=0\n  local\
    \ start_one_ends_with_eight=0\n  local start_one_ends_with_nine=0\n  local start_one_ends_with_zero_and_zero=0\n\
    \  local start_one_ends_with_zero_and_one=0\n  local start_one_ends_with_zero_and_two=0\n\
    \  local start_one_ends_with_zero_and_three=0\n  local start_one_ends_with_zero_and_four=0\n\
    \  local start_one_ends_with_zero_and_five=0\n  local start_one_ends_with_zero_and_six=0\n\
    \  local start_one_ends_with_zero_and_seven=0\n  local start_one_ends_with_zero_and_eight=0\n\
    \  local start_one_ends_with_zero_and_nine=0\n  local start_one_ends_with_one_and_zero=0\n\
    \  local start_one_ends_with_one_and_one=0\n  local start_one_ends_with_one_and_two=0\n\
    \  local start_one_ends_with_one_and_three=0\n  local start_one_ends_with_one_and_four=0\n\
    \  local start_one_ends_with_one_and_five=0\n  local start_one_ends_with_one_and_six=0\n\
    \  local start_one_ends_with_one_and_seven=0\n  local start_one_ends_with_one_and_eight=0\n\
    \  local start_one_ends_with_one_and\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    local num=$(echo\
    \ \"10^$i\" | bc)\n    local num_str=$(echo $num | sed 's/^0*//')\n    if [[ $num_str\
    \ =~ ^1 ]]; then\n      count=$((count + 1))\n    fi\n    if [[ $num_str =~ 1$\
    \ ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9*10**i))\n    i=$((i + 1))\n  done\n  count=$((count + 10**(n-1)))\n\
    \  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\")\
    \ = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\"\
    ) = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for (( i=1; i<=n; i++ )); do\n   \
    \     count=$(( count + ((10**i) - (10**(i-1))) ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
    \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
    \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local start=1\n  local end=1\n  local i=1\n  local j=1\n\
    \  local k=1\n  local count=0\n  local tmp=0\n  local tmp2=0\n  local tmp3=0\n\
    \  local tmp4=0\n  local tmp5=0\n  local tmp6=0\n  local tmp7=0\n  local tmp8=0\n\
    \  local tmp9=0\n  local tmp10=0\n  local tmp11=0\n  local tmp12=0\n  local tmp13=0\n\
    \  local tmp14=0\n  local tmp15=0\n  local tmp16=0\n  local tmp17=0\n  local tmp18=0\n\
    \  local tmp19=0\n  local tmp20=0\n  local tmp21=0\n  local tmp22=0\n  local tmp23=0\n\
    \  local tmp24=0\n  local tmp25=0\n  local tmp26=0\n  local tmp27=0\n  local tmp28=0\n\
    \  local tmp29=0\n  local tmp30=0\n  local tmp31=0\n  local tmp32=0\n  local tmp33=0\n\
    \  local tmp34=0\n  local tmp35=0\n  local tmp36=0\n  local tmp37=0\n  local tmp38=0\n\
    \  local tmp39=0\n  local tmp40=0\n  local tmp41=0\n  local tmp42=0\n  local tmp43=0\n\
    \  local tmp44=0\n  local tmp45=0\n  local tmp46=0\n  local tmp47=0\n  local tmp48=0\n\
    \  local tmp49=0\n  local tmp50=0\n  local tmp51=0\n  local tmp52=0\n  local tmp53=0\n\
    \  local tmp54=0\n  local tmp55=0\n  local tmp56=0\n  local tmp57=0\n  local tmp58=0\n\
    \  local tmp59=0\n  local tmp60=0\n  local tmp61=0\n  local tmp62=0\n  local tmp63=0\n\
    \  local tmp64=0\n  local tmp65=0\n  local tmp66=0\n  local tmp67=0\n \n}\n\n\
    candidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=0\n    while (( i < n ));\
    \ do\n        count=$(( count + 9 * 10 ** i ))\n        i=$(( i + 1 ))\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\")\
    \ = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\"\
    ) = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local digits=$2\n  local count=0\n  local i=0\n  for ((i=1;\
    \ i<=n; i++)); do\n    if [[ $i =~ ^1 ]] || [[ $i =~ 1$ ]]; then\n      count=$((count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=9; i++)); do\n    count=$((count\
    \ + $(starts_one_ends $((n-1)))))\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=13>
  stdout: <_io.BufferedReader name=11>
  timestamp: 1660357031
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=1\n    while [[ $i -lt $n\
    \ ]]; do\n        count=$((count + 9 * 10 ** i))\n        i=$((i + 1))\n    done\n\
    \    count=$((count + 10 ** (n - 1)))\n    echo $count\n}\n\ncandidate() {\n \
    \   starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\"\
    ) = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"\
    5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=0\n\
    }\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
    \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
    \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=9; i++)); do\n    for ((j=1;\
    \ j<=9; j++)); do\n      if ((i == 1 || j == 1)); then\n        ((count++))\n\
    \      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=1\n    while [ $i -lt $n ];\
    \ do\n        count=$((count + 9 * 10 ** i))\n        i=$((i + 1))\n    done\n\
    \    count=$((count + 10 ** (n - 1)))\n    echo $count\n}\n\ncandidate() {\n \
    \   starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\"\
    ) = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"\
    5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local\
    \ d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local\
    \ b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local\
    \ h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local\
    \ n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local\
    \ t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local\
    \ z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local\
    \ f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n \n}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"\
    4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + (10**(i-1)) + (10**(n-i))))\n  done\n  echo $count\n}\n\ncandidate() {\n \
    \   starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\"\
    ) = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"\
    5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  if ((n == 1)); then\n    echo 1\n  else\n    echo $((9 *\
    \ 10 ** (n - 1) + 10 ** (n - 1) - 10 ** (n - 2)))\n  fi\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   local j=$((10**i))\n    count=$((count + j))\n    i=$((i + 1))\n  done\n \
    \ echo $((count + 1))\n}\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"\
    4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for i in $(seq 1 $n); do\n       \
    \ count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"\
    3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=n; i++)); do\n     \
    \   count=$((count + 10**(i-1)))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for (( i=1; i<=n; i++ )); do\n    count=$((\
    \ count + 10**(i-1) ))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=1\n    while [ $i -lt $n ];\
    \ do\n        count=$((count + 9 * 10 ** i))\n        i=$((i + 1))\n    done\n\
    \    count=$((count + 10 ** (n - 1)))\n    echo $count\n}\n\ncandidate() {\n \
    \   starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\"\
    ) = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"\
    5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=0\n\
    }\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
    \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
    \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n   \n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 9 * 10 ** i))\n    i=$((i + 1))\n  done\n  count=$((count\
    \ + 10 ** (n - 1)))\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n    local n=$1\n    local count=0\n    for ((i=1; i<=9; i++)); do\n     \
    \   count=$((count + $(starts_one_ends $((n-1)))))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n \
    \   [[ $(candidate \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n\
    \    [[ $(candidate \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=10>
  stdout: <_io.BufferedReader name=3>
  timestamp: 1660357031
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=0\n  while [ $i -lt $n ]; do\n \
    \   count=$((count + 10**i))\n    i=$((i + 1))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    starts_one_ends \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate\
    \ \"3\") = \"180\" ]]\n    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate\
    \ \"5\") = \"18000\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  local i=1\n  local j=1\n  local k=1\n  local\
    \ l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local\
    \ r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local\
    \ x=1\n  local y=1\n  local z=1\n  local aa=1\n  local ab=1\n  local ac=1\n  local\
    \ ad=1\n  local ae=1\n  local af=1\n  local ag=1\n  local ah=1\n  local ai=1\n\
    \  local aj=1\n  local ak=1\n  local al=1\n  local am=1\n  local an=1\n  local\
    \ ao=1\n  local ap=1\n  local aq=1\n  local ar=1\n  local as=1\n  local at=1\n\
    \  local au=1\n  local av=1\n  local aw=1\n  local ax=1\n  local ay=1\n  local\
    \ az=1\n  local ba=1\n  local bb=1\n  local bc=1\n  local bd=1\n  local be=1\n\
    \  local bf=1\n  local bg=1\n  local bh=1\n  local bi=1\n  local bj=1\n  local\
    \ bk=1\n  local bl=1\n  local bm=1\n  local bn=1\n  local bo=1\n  local bp=1\n\
    \  local bq=1\n  local br=1\n  local bs=1\n  local bt=1\n  local bu=1\n  local\
    \ bv=1\n  local bw=1\n  local bx=1\n  local by=1\n  local bz=1\n  local ca=1\n\
    \  local cb=1\n  local cc=1\n  local cd=1\n  local ce=1\n  local cf=1\n  local\
    \ cg=1\n  local ch=1\n  local ci=1\n}\n\ncandidate() {\n    starts_one_ends \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n   \
    \ [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for i in $(seq 1 $n); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the count of the numbers\
    \ of n-digit\n# positive integers that start or end with 1.\nstarts_one_ends()\
    \ {\n  local n=$1\n  local count=0\n  for ((i=1; i<=n; i++)); do\n    count=$((count\
    \ + 10**(i-1)))\n  done\n  echo $count\n}\n\ncandidate() {\n    starts_one_ends\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"2\") = \"18\" ]]\n    [[ $(candidate \"3\") = \"180\" ]]\n\
    \    [[ $(candidate \"4\") = \"1800\" ]]\n    [[ $(candidate \"5\") = \"18000\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660357026

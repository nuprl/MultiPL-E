language: sh
name: HumanEval_47_median
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$m,$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n  \
    \  else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   if ((n == 0)); then\n        echo 0\n    elif ((n == 1)); then\n        echo\
    \ ${l[0]}\n    elif ((n % 2 == 0)); then\n        echo $(((${l[m - 1]} + ${l[m]})\
    \ / 2))\n    else\n        echo ${l[m]}\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t\n    for ((i=0; i<m; i++)); do\n        t=${s#*\
    \ }\n        s=${s%$t}\n    done\n    if ((n%2)); then\n        echo $s\n    else\n\
    \        echo \"scale=1; ($s+${t% *})/2\" | bc\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=${#l[@]}\n  local m=$((n/2))\n  local s=${l[@]}\n\
    \  local i\n  for ((i=0; i<n; i++)); do\n    s=${s// ${l[i]}/}\n    if ((i > m));\
    \ then\n      s=${s// ${l[i-n]}/}\n    fi\n    if ((i == m)); then\n      echo\
    \ \"${s// /$'\\n'}\" | sort -n | sed -n \"$((n%2?m+1:m+2))p\"\n    fi\n  done\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    if ((n%2==0)); then\n        echo \"$((${l[m-1]}+${l[m]}))/2\"\
    \ | bc -l\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\"\
    \ | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n        local r2=$(echo\
    \ \"$s\" | sed -n \"$((m))p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" |\
    \ bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if [ $((n % 2)) -eq 0 ]; then\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n\
    \    else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=${l[$m]}\n    if (($n % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m]} + ${l[$(($m + 1))]}) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if [ $((n % 2)) -eq 0 ]; then\n\
    \        echo \"$l\" | sed -n \"$((m))p\" | awk '{print ($1 + $(NF)) / 2}'\n \
    \   else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo \"scale=1; (${l[$m]} +\
    \ ${l[$m-1]})/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=($(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n))\n    if (( ${#l[@]}%2 == 1 )); then\n    \
    \    echo \"${s[$m]}\"\n    else\n        echo \"$(bc -l <<< \"scale=1;(${s[$m-1]}+${s[$m]})/2\"\
    )\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} - 1))\n\
    \    local i=$((n / 2))\n    local m=${l[$i]}\n    if ((n % 2 == 0)); then\n \
    \       m=$(echo \"scale=1; (${l[$i]} + ${l[$i + 1]}) / 2\" | bc)\n    fi\n  \
    \  echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $(NF)) / 2}'\n  \
    \  else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local n=$(echo \"$l\" | wc -w)\n    local m=$(($n\
    \ / 2))\n    local i=0\n    local s=0\n    local r=0\n    for i in $l; do\n  \
    \      s=$(($s + $i))\n    done\n    r=$(echo \"$s / $n\" | bc -l)\n    echo $r\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]}-1))\n    local m=$(($n/2))\n\
    \    local s=${l[@]}\n    for ((i=0;i<=$n;i++)); do\n        s=$(echo \"$s\" |\
    \ sed -e \"s/\\([^ ]*\\) \\([^ ]*\\)/\\2 \\1/g\" | sort -n)\n    done\n    echo\
    \ \"$s\" | cut -d\" \" -f$((m+1))\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"\
    scale=1; (${l[$m]} + ${l[$((m + 1))]}) / 2\" | bc)\n    fi\n    echo $s\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local c=($s)\n\
    \    if ((n % 2)); then\n        echo ${c[$m]}\n    else\n        echo $(((${c[$m]}\
    \ + ${c[$((m + 1))]})) / 2)\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp9922d839.sh: command substitution: line 16: syntax error near
    unexpected token `/''\n/tmp/tmp9922d839.sh: command substitution: line 16: `((${c[$m]}
    + ${c[$((m + 1))]})) / 2''\n"'
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]}\")\n    local mid=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$(echo \"${l[mid-1]} + ${l[mid]}\" | bc -l)/2\"\n    else\n        echo \"\
    ${l[mid]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    for ((i=0;\
    \ i<n; i++)); do\n        l[i]=$(echo \"${l[i]}\" | sed 's/^-//g')\n    done\n\
    \    local sorted=($(sort -n <<< \"${l[*]}\"))\n    if ((n % 2 == 1)); then\n\
    \        echo \"${sorted[$((n/2))]}\"\n    else\n        echo \"$(bc -l <<< \"\
    ${sorted[$((n/2-1))]} + ${sorted[$((n/2))]}\") / 2\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=${l[$n]}\n    if ((m%2==0)); then\n        s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<n; i++));\
    \ do\n        t[i]=$(echo \"scale=2; ${l[i]}/1\" | bc)\n    done\n    IFS=$'\\\
    n'\n    s=($(sort <<<\"${t[*]}\"))\n    unset IFS\n    if ((n%2==1)); then\n \
    \       echo ${s[$m]}\n    else\n        echo $(echo \"scale=2; (${s[$m-1]}+${s[$m]})/2\"\
    \ | bc)\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local r=$(printf \"%s\\n\" \"${l[@]}\" | sort -n | sed -n \"$((m+1))p\")\n \
    \   if ((n%2==0)); then\n        local l=$(printf \"%s\\n\" \"${l[@]}\" | sort\
    \ -n | sed -n \"${m}p\")\n        r=$(echo \"scale=1; ($r+$l)/2\" | bc)\n    fi\n\
    \    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    if ((n%2==1)); then\n        echo\
    \ $((${s// /+}))\n    else\n        echo $((${t// /+}))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    if ((${#l[@]}\
    \ % 2 == 0)); then\n        echo $(echo \"scale=1; (${l[$m]} + ${l[$m-1]}) / 2\"\
    \ | bc)\n    else\n        echo ${l[$m]}\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    if (( ${#l[@]} % 2 == 0 )); then\n   \
    \     echo \"$(( ($(echo \"$s\" | sed -n \"$m\"p) + $(echo \"$s\" | sed -n \"\
    $((m + 1))\"p)) / 2 ))\"\n    else\n        echo \"$(echo \"$s\" | sed -n \"$((m\
    \ + 1))\"p)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"$m p\"\
    )\n    if ((${#l[@]} % 2 == 0)); then\n        local r2=$(echo \"$s\" | sed -n\
    \ \"$(($m - 1)) p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" | bc)\n   \
    \ fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local s\n\
    \    for i in ${l[@]}; do\n        s=$(echo \"$s + $i\" | bc)\n    done\n    echo\
    \ \"$s / $m\" | bc -l\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local p=$((n / 2))\n    local q=$((p + 1))\n    local r=$((n % 2))\n\
    \    local s=$(echo \"scale=1; (${l[$p]} + ${l[$q]})/2\" | bc)\n    echo \"${l[$p]}\"\
    \n    echo \"${l[$q]}\"\n    echo \"$s\"\n    echo \"$r\"\n    if [ $r -eq 0 ];\
    \ then\n        echo \"$s\"\n    else\n        echo \"${l[$p]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    n=$(echo \"$l\"\
    \ | wc -l)\n    if (( $n % 2 == 1 )); then\n        echo \"$l\" | sed -n \"$((($n+1)/2))p\"\
    \n    else\n        echo \"$l\" | sed -n \"$((($n/2)))p\" | awk '{print ($1+$2)/2}'\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]}-1))\n    local m=$(($n/2))\n\
    \    local s=${l[*]}\n    for ((i=0;i<=n;i++)); do\n        local l[i]=$(echo\
    \ \"scale=1; ${l[i]}/1\" | bc)\n    done\n    echo $(echo \"scale=1; (${l[$m]}+${l[$((m+1))]})/2\"\
    \ | bc)\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    echo ${l[$(($n / 2))]}\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$(($m + 1))p\")\n    if [ $((n % 2)) -eq 0 ]; then\n     \
    \   local r2=$(echo \"$s\" | sed -n \"$(($m + 2))p\")\n        r=$(echo \"scale=1;\
    \ ($r + $r2) / 2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"${m}p\" | awk '{print ($1 + $(NF)) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=${s// /$'\\n'}\n    local u=($(echo \"$t\" |\
    \ sort -n))\n    if ((n % 2 == 0)); then\n        echo \"$(((u[m - 1] + u[m])\
    \ / 2))\"\n    else\n        echo \"${u[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local i=0\n    local m=0\n    local n=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local\
    \ n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n\
    \    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n\
    \    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n\
    \    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n\
    \    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n\
    \    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n\
    \    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n\
    \    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n\
    \    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n\
    \    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n\
    \    local br=0\n    local bs=\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} - 1))\n\
    \    local m=$((n / 2))\n    local r=$(echo \"scale=1; ${l[m]} + ${l[m + 1 - n\
    \ % 2]}\" | bc)\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=${l[@]}\n    local i\n    for ((i = 0; i < n; i++)); do\n\
    \        s=$(echo \"$s\" | sed -e \"s/[^ ]* //\" | sort -n)\n    done\n    echo\
    \ \"$s\" | sed -e \"s/[^ ]* //\" | sort -n | sed -e \"$(($m + 1))q;d\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$(($n / 2))\n\
    \    local s=${l[$m]}\n    if (($n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for i in $(seq 0 $m);\
    \ do\n        s=${s#* }\n        t=${t% *}\n    done\n    if ((n%2)); then\n \
    \       echo $s\n    else\n        echo $(((s+t)/2))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    local r=$(echo \"$l\" | sed -n\
    \ \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n        local l=$(echo \"$l\"\
    \ | sed -n \"${m}p\")\n        echo \"$(((l + r) / 2))\"\n    else\n        echo\
    \ \"$r\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$(echo \"${#l[@]} - 1\" | bc)\n    local\
    \ m=$(echo \"$n / 2\" | bc)\n    local s=$(echo \"$n % 2\" | bc)\n    local l1=$(echo\
    \ \"$m - $s\" | bc)\n    local l2=$(echo \"$m + $s\" | bc)\n    local m1=$(echo\
    \ \"${l[$l1]} + ${l[$l2]}\" | bc)\n    echo \"$m1 / 2\" | bc -l\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"scale=1; ${l[$m]} + ${l[$((m\
    \ + 1))]}\" | bc)\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local m=${#l[@]}\n  local i=0\n  local s=0\n  for\
    \ i in ${l[@]}; do\n    s=$(echo \"$s + $i\" | bc)\n  done\n  echo \"scale=1;\
    \ $s / $m\" | bc\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"${n}p\")\n  \
    \  if (( m % 2 == 0 )); then\n        local s2=$(echo \"${l[@]}\" | tr ' ' '\\\
    n' | sort -n | sed -n \"$((n-1))p\")\n        echo \"scale=1; ($s+$s2)/2\" | bc\n\
    \    else\n        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local o=$((n-1))\n    local p=$((n+1))\n    local q=$((m%2))\n    local r=$(echo\
    \ \"scale=1;(${l[$n]}+${l[$o]})/2\" | bc)\n    local s=$(echo \"scale=1;(${l[$n]}+${l[$p]})/2\"\
    \ | bc)\n    if [[ $q -eq 0 ]]; then\n        echo $r\n    else\n        echo\
    \ $s\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local i\n    local m\n    local n\n    for\
    \ i in \"${l[@]}\"; do\n        ((m+=$i))\n        ((n++))\n    done\n    echo\
    \ \"$(bc -l <<< \"scale=1; $m/$n\")\"\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpspg9asf6.sh: line 13: ((: m+=3 1 2 4 5: syntax error in expression
    (error token is "1 2 4 5")\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 2
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    if ((${#l[@]} % 2 == 0)); then\n     \
    \   echo \"$(echo \"$s\" | sed -n \"$(($m + 1))p\" | awk '{print $1}\")\"\n  \
    \  else\n        echo \"$(echo \"$s\" | sed -n \"$(($m + 1))p\" | awk '{print\
    \ $1}')\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpjf3llwl0.sh: line 14: unexpected EOF while looking for matching
    `''''\n/tmp/tmpjf3llwl0.sh: line 32: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n        echo \"\
    $(echo \"scale=1; (${l[m]} + ${l[m+1]}) / 2\" | bc)\"\n    else\n        echo\
    \ \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n-1]} + ${l[$n]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local m=$((${#l[@]} / 2))\n  local s=${l[@]}\n \
    \ for ((i=0; i<m; i++)); do\n    s=${s#* }\n  done\n  echo \"${s%% *}\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} / 2))\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$((n - 1))]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local l_len=${#l[@]}\n    local l_mid=$((l_len\
    \ / 2))\n    local l_sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if\
    \ ((l_len % 2 == 0)); then\n        echo \"$(bc -l <<< \"${l_sorted[$l_mid]} +\
    \ ${l_sorted[$l_mid - 1]}\") / 2\"\n    else\n        echo \"${l_sorted[$l_mid]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$#\n    local m=$((n/2))\n    local\
    \ s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n | sed -n \"$m p\")\n    if ((n%2==0));\
    \ then\n        local s2=$(printf \"%s\\n\" \"${l[@]}\" | sort -n | sed -n \"\
    $((m-1)) p\")\n        echo \"$(echo \"scale=1; ($s+$s2)/2\" | bc -l)\"\n    else\n\
    \        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''sed: -e expression #1, char 3: invalid usage of line address 0\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local i\n  local m\n  local n\n  local s\n  local\
    \ t\n  for i in ${l[@]}; do\n    m+=($i)\n  done\n  for ((i=0; i<${#m[@]}; i++));\
    \ do\n    for ((j=i+1; j<${#m[@]}; j++)); do\n      if (($(echo \"${m[$i]} > ${m[$j]}\"\
    \ | bc -l))); then\n        t=${m[$i]}\n        m[$i]=${m[$j]}\n        m[$j]=$t\n\
    \      fi\n    done\n  done\n  n=${#m[@]}\n  if (($(echo \"$n % 2\" | bc -l)));\
    \ then\n    s=$(echo \"scale=1; ${m[$((n/2))]} + ${m[$((n/2+1))]} / 2\" | bc -l)\n\
    \  else\n    s=${m[$((n/2))]}\n  fi\n  echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    if ((n%2==0)); then\n        local s2=${l[$((m-1))]}\n\
    \        s=$(echo \"scale=1; ($s+$s2)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local i\n    for ((i = 0; i < n; i++)); do\n        s=${s//\
    \ ${l[i]} /}\n        if ((i == m)); then\n            break\n        fi\n   \
    \ done\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local m=$((${#l[@]}/2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if [ $((m*2)) -eq ${#l[@]} ]; then\n        echo \"$(echo \"$s\" | sed\
    \ -n \"$(($m-1))p\" + $r) / 2\" | bc -l\n    else\n        echo \"$r\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''sed: -e expression #1, char 2: invalid usage of line address 0\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[@]}\n\
    \    local i\n    for i in $(seq 0 $m); do\n        s=${s#* }\n    done\n    if\
    \ (( ${#l[@]} % 2 == 0 )); then\n        echo $(echo \"scale=1; (${s%% *} + ${s#*\
    \ })/2\" | bc)\n    else\n        echo ${s%% *}\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n    if (( ${#l[@]} % 2 ==\
    \ 1 )); then\n        echo ${v[$m]}\n    else\n        echo $(((${v[$m-1]} + ${v[$m]})/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} / 2))\n    local m=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n | sed -n \"${n}p\")\n    if [ $(( ${#l[@]} %\
    \ 2 )) -eq 0 ]; then\n        local m2=$(printf \"%s\\n\" \"${l[@]}\" | sort -n\
    \ | sed -n \"$(( ${n} + 1 ))p\")\n        echo \"$(echo \"scale=1; ($m + $m2)\
    \ / 2\" | bc -l)\"\n    else\n        echo \"$m\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"scale=1; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n\n    # Sort the list.\n    for ((i = 0; i < ${#l[@]}; i++));\
    \ do\n        for ((j = i + 1; j < ${#l[@]}; j++)); do\n            if ((${l[$i]}\
    \ > ${l[$j]})); then\n                t=${l[$i]}\n                l[$i]=${l[$j]}\n\
    \                l[$j]=$t\n            fi\n        done\n    done\n\n    # Find\
    \ the median.\n    n=${#l[@]}\n    if ((n % 2 == 1)); then\n        m=$((n / 2))\n\
    \        echo ${l[$m]}\n    else\n        m=$((n / 2))\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + ${l[$m]}) / 2\" | bc)\n        echo $s\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local s=$((n % 2))\n    echo \"${l[m]}\"\n\
    \    if [ $s -eq 0 ]; then\n        echo \"$((${l[m]} + ${l[m + 1]}))\" | awk\
    \ '{printf \"%.1f\", $1 / 2}'\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr \" \" \"\\n\" | sort -n))\n    local\
    \ n=$((${#l[@]} - 1))\n    local mid=$((n / 2))\n    local m=${l[$mid]}\n    if\
    \ ((n % 2 == 0)); then\n        m=$(echo \"scale=1; (${l[$mid]} + ${l[$mid + 1]})\
    \ / 2\" | bc)\n    fi\n    echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<m; i++));\
    \ do\n        s=${s#* }\n        t=${t% *}\n    done\n    if ((n%2==1)); then\n\
    \        echo $s\n    else\n        echo $(((${s% *}+${t#* })/2))\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} / 2))\n\
    \    if (($# % 2 == 0)); then\n        echo \"$(((${l[$n]} + ${l[$((n - 1))]}))\
    \ / 2.0)\"\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n  local n=$(echo\
    \ \"$l\" | wc -l)\n  local m=$((n / 2))\n  if ((n % 2 == 0)); then\n    echo \"\
    $l\" | sed -n \"${m}p\" | awk '{print ($1 + $(NF)) / 2}'\n  else\n    echo \"\
    $l\" | sed -n \"${m}p\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local i\n    local j\n    local t\n    for ((i = 0; i < n - 1; i++)); do\n\
    \        for ((j = i + 1; j < n; j++)); do\n            if ((${l[i]} > ${l[j]}));\
    \ then\n                t=${l[i]}\n                l[i]=${l[j]}\n            \
    \    l[j]=$t\n            fi\n        done\n    done\n    if ((n % 2 == 0)); then\n\
    \        echo \"$(bc -l <<< \"${l[m - 1]} + ${l[m]}\") / 2\"\n    else\n     \
    \   echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s\n    for i in $(seq 0 $n); do\n        for j in $(seq 0 $n);\
    \ do\n            if [[ ${l[$i]} -lt ${l[$j]} ]]; then\n                s=${l[$i]}\n\
    \                l[$i]=${l[$j]}\n                l[$j]=$s\n            fi\n  \
    \      done\n    done\n    if [[ $((n % 2)) -eq 0 ]]; then\n        echo \"$(bc\
    \ -l <<< \"scale=1; (${l[$m]} + ${l[$((m + 1))]}) / 2\")\"\n    else\n       \
    \ echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$m]} + ${l[$m\
    \ - 1]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    if ((n == 0)); then\n        echo \"0\"\n    elif\
    \ ((n == 1)); then\n        echo \"${l[0]}\"\n    elif ((n % 2 == 1)); then\n\
    \        echo \"${l[$m]}\"\n    else\n        echo \"$(echo \"scale=1; (${l[$m\
    \ - 1]} + ${l[$m]}) / 2\" | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=${l[$n]}\n    if ((m%2==0)); then\n        s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(( ${#l[@]} / 2 ))\n    local n=$((\
    \ ${#l[@]} % 2 ))\n    if [ $n -eq 0 ]; then\n        echo \"$(echo \"scale=1;\
    \ (${l[$m-1]} + ${l[$m]}) / 2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]} / 2\" | bc)\n    if (( ${#l[@]} % 2 == 1 )); then\n        echo \"\
    ${l[$n]}\"\n    else\n        echo \"$(echo \"scale=1; (${l[$n-1]} + ${l[$n]})\
    \ / 2\" | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$(echo\
    \ \"$l\" | sort -n | awk '{print $'$(((m+1)/2))'}')\n    local o=$(echo \"$l\"\
    \ | sort -n | awk '{print $'$(((m+2)/2))'}')\n    echo \"$((n+o)) / 2.0\" | bc\
    \ -l\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$m]} + ${l[$m-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        echo $((${l[$n]} + ${l[$n-1]}))/2\
    \ | bc -l\n    else\n        echo ${l[$n]}\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | head -n $((m + 1)) | tail -n 1\n    else\n        echo \"$l\"\
    \ | head -n $((m + 1)) | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\n    else\n        s=${l[m]}\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if (( ${#l[@]} % 2 == 0 )); then\n        r=$(echo \"$r + $(echo \"$s\"\
    \ | sed -n \"$((m + 1))p\")\" | bc -l)\n        r=$(echo \"$r / 2\" | bc -l)\n\
    \    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local l_len=${#l[@]}\n  local l_half=$((l_len /\
    \ 2))\n  local l_sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n  if ((l_len\
    \ % 2 == 0)); then\n    echo \"$(bc -l <<< \"${l_sorted[$l_half]} + ${l_sorted[$((l_half\
    \ - 1))]}\") / 2\"\n  else\n    echo \"${l_sorted[$l_half]}\"\n  fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=${l[@]}\n    for ((i = 0; i < n; i++)); do\n        for ((j\
    \ = i; j < n; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n        \
    \        t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n  \
    \          fi\n        done\n    done\n    if ((n % 2 == 0)); then\n        echo\
    \ $(((${l[m]} + ${l[m + 1]} + 1) / 2))\n    else\n        echo ${l[m]}\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    if (( ${#l[@]}\
    \ % 2 == 0 )); then\n        echo \"$(echo \"scale=1; (${l[$m-1]} + ${l[$m]})\
    \ / 2\" | bc -l)\"\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo $@ | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ $l | wc -w)\n    local m=$((n/2))\n    local m1=$((m+1))\n    if ((n % 2 ==\
    \ 0)); then\n        echo $(echo $l | cut -d' ' -f$m,$m1 | awk '{print ($1+$2)/2}')\n\
    \    else\n        echo $(echo $l | cut -d' ' -f$m1)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    local r=$(echo \"$l\" | sed -n \"\
    ${m}p\")\n    if ((n%2==0)); then\n        local r2=$(echo \"$l\" | sed -n \"\
    $((m+1))p\")\n        r=$(echo \"$r + $r2\" | bc -l)\n        r=$(echo \"$r /\
    \ 2\" | bc -l)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local l_len=${#l[@]}\n    local l_sorted=($(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n))\n    local l_median_idx=$((l_len / 2))\n \
    \   local l_median=${l_sorted[$l_median_idx]}\n    if ((l_len % 2 == 0)); then\n\
    \        local l_median_idx_2=$((l_median_idx - 1))\n        local l_median_2=${l_sorted[$l_median_idx_2]}\n\
    \        l_median=$(echo \"scale=1; ($l_median + $l_median_2) / 2\" | bc)\n  \
    \  fi\n    echo \"$l_median\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local i=0\n \
    \   local j=0\n    local tmp=0\n    for ((i = 0; i <= n; i++)); do\n        for\
    \ ((j = i; j <= n; j++)); do\n            if (($(echo \"${l[$i]} > ${l[$j]}\"\
    \ | bc -l))); then\n                tmp=${l[$i]}\n                l[$i]=${l[$j]}\n\
    \                l[$j]=$tmp\n            fi\n        done\n    done\n    if (($((${#l[@]}\
    \ % 2)))); then\n        echo \"${l[$((${#l[@]} / 2))]}\"\n    else\n        echo\
    \ \"$(($((${l[$((${#l[@]} / 2))]} + ${l[$((${#l[@]} / 2 - 1))]})) / 2))\"\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    for ((i=0; i<${#l[@]}; i++)); do\n\
    \        l[i]=$(echo \"scale=5; ${l[i]}/1\" | bc)\n    done\n    local s=$(echo\
    \ \"${l[*]}\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo \"$s\" | wc -l)\n\
    \    local m=$(echo \"scale=5; $n/2\" | bc)\n    if [[ $((n%2)) -eq 0 ]]; then\n\
    \        echo \"$(echo \"$s\" | sed -n \"$m,$(($m+1))p\" | awk '{print ($1+$2)/2}')\"\
    \n    else\n        echo \"$(echo \"$s\" | sed -n \"$(($m+1))p\")\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6wyae900.sh: line 19: 2.50000+1: syntax error: invalid arithmetic
    operator (error token is ".50000+1")\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local tmp=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++));\
    \ do\n            if ((${l[i]} > ${l[j]})); then\n                tmp=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$tmp\n            fi\n   \
    \     done\n    done\n    if ((m % 2 == 1)); then\n        echo ${l[$((m/2))]}\n\
    \    else\n        echo $(((${l[$((m/2-1))]} + ${l[$((m/2))]})/2))\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n    if (( ${#l[@]} % 2 ==\
    \ 1 )); then\n        echo ${v[$m]}\n    else\n        echo $(( (v[m-1] + v[m])\
    \ / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i=0\n    local m=0\n    local n=${#l[@]}\n\
    \    local t=0\n    local x=0\n    local y=0\n    for ((i=0; i<n; i++)); do\n\
    \        ((l[i]>m)) && m=${l[i]}\n    done\n    for ((i=0; i<n; i++)); do\n  \
    \      ((l[i]<m)) && ((m=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n   \
    \     ((l[i]>t)) && ((t=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n    \
    \    ((l[i]<t)) && ((t=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n     \
    \   ((l[i]>x)) && ((x=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n      \
    \  ((l[i]<x)) && ((x=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n       \
    \ ((l[i]>y)) && ((y=l[i]))\n    done\n    for ((i=0; i<n; i++)); do\n        ((l[i]<y))\
    \ && ((y=l[i]))\n    done\n    echo $(((m+t+x+y)/4))\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"(${l[m-1]}+${l[m]})/2\" | bc -l\n    else\n\
    \        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local t\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n\
    \            if (($(echo \"${l[i]} > ${l[j]}\" | bc -l))); then\n            \
    \    t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n      \
    \      fi\n        done\n    done\n    if (($(echo \"$m % 2 == 0\" | bc -l)));\
    \ then\n        echo \"$(echo \"scale=1; (${l[$(($m/2-1))]} + ${l[$(($m/2))]})\
    \ / 2\" | bc -l)\"\n    else\n        echo \"${l[$(($m/2))]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2 == 0)); then\n        echo\
    \ \"$l\" | head -n $m | tail -n 1\n    else\n        echo \"$l\" | head -n $((m+1))\
    \ | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local i\n   \
    \ local j\n    local tmp\n    for ((i = 0; i <= n; i++)); do\n        for ((j\
    \ = i; j <= n; j++)); do\n            if (($(echo \"${l[i]} > ${l[j]}\" | bc -l)));\
    \ then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n          \
    \      l[j]=$tmp\n            fi\n        done\n    done\n    if (($(echo \"$n\
    \ % 2\" | bc -l))); then\n        echo ${l[$(($n / 2))]}\n    else\n        echo\
    \ $(echo \"scale=1; (${l[$(($n / 2))]} + ${l[$(($n / 2 + 1))]}) / 2\" | bc -l)\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<n; i++));\
    \ do\n        s=${s// ${l[i]}/}\n        t=${t// ${l[i]}/ }\n    done\n    if\
    \ ((n%2==1)); then\n        echo ${l[m]}\n    else\n        echo $(((${l[m-1]}+${l[m]})/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if (( ${#l[@]} % 2 == 0 )); then\n        local r2=$(echo \"$s\" | sed\
    \ -n \"$((m - 1))p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" | bc)\n  \
    \  fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=${l[@]}\n    for ((i = 0; i < m; i++)); do\n        s=${s#*\
    \ }\n    done\n    if ((n % 2 == 0)); then\n        echo \"$((${s%% *} + ${s#*\
    \ })) / 2.0\" | bc -l\n    else\n        echo \"${s%% *}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1sqa_vh4.sh: line 16: 2 + 4 5: syntax error in expression (error
    token is "5")\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local s=0\n\
    \    for i in ${l[@]}; do\n        s=$(echo \"$s + $i\" | bc)\n    done\n    echo\
    \ \"$s / $m\" | bc -l\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m))p\" | awk '{print ($1 + $(NF)) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo $@ | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ ${#l[@]})\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo $(echo\
    \ \"scale=1; (${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        echo ${l[m]}\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=$(echo $@ | tr ' ' '\\n' | sort -n)\n  local n=$(echo $l\
    \ | wc -w)\n  local m=$((n / 2))\n  if ((n % 2 == 0)); then\n    echo $(echo $l\
    \ | cut -d' ' -f$m,$((m + 1)) | awk '{print ($1 + $2) / 2}')\n  else\n    echo\
    \ $(echo $l | cut -d' ' -f$((m + 1)))\n  fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | tr ' ' '\\n' | sort -n\
    \ | awk '{a[NR]=$0} END {print a[int(NR/2)]}')\n    echo \"$m\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=()\n    local i=0\n    for x in $s; do\n      \
    \  t[i]=$x\n        ((i++))\n    done\n    for ((i=0; i<n; i++)); do\n       \
    \ for ((j=i; j<n; j++)); do\n            if ((${t[i]} > ${t[j]})); then\n    \
    \            local tmp=${t[i]}\n                t[i]=${t[j]}\n               \
    \ t[j]=$tmp\n            fi\n        done\n    done\n    if ((n % 2 == 0)); then\n\
    \        echo \"$(bc -l <<< \"scale=1; (${t[m-1]} + ${t[m]}) / 2\")\"\n    else\n\
    \        echo \"${t[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo $@ | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n\
    \    echo ${l[$n]}\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} / 2))\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$((n - 1))]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    local s=0\n    local r=0\n    local p=0\n \
    \   local q=0\n    local n=0\n    local o=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n\
    \    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n \
    \   local e=0\n    local f=0\n    local g=0\n    local h=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local u=0\n    local v=0\n    local w=0\n\
    \    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n \
    \   local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n  \
    \  local h=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local u=0\n\
    \    local v=0\n    local w=0\n\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"scale=1; ${l[$m]} + ${l[$((m\
    \ + 1))]}\" | bc)\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]}-1))\n    local m=$(($n/2))\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local s=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n\
    \    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ i=0\n    for n in ${l[@]}; do\n        if [ $i -eq $m ]; then\n            echo\
    \ $n\n            return\n        fi\n        i=$((i + 1))\n    done\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1; (${l[$m]}+${l[$((m-1))]})/2\"\
    \ | bc)\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=$((${#l[@]} - 1))\n  local m=$(($n / 2))\n\
    \  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local v=($s)\n  if ((n\
    \ == 0)); then\n    echo \"${v[0]}\"\n  elif ((n % 2 == 0)); then\n    echo \"\
    $((${v[m]} + ${v[m+1]})) / 2\" | bc -l\n  else\n    echo \"${v[m]}\"\n  fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local r=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"$((m+1))p\")\n\
    \    if ((n%2==0)); then\n        local l=$(echo \"${l[@]}\" | tr ' ' '\\n' |\
    \ sort -n | sed -n \"${m}p\")\n        echo \"$(echo \"scale=1; ($r+$l)/2\" |\
    \ bc -l)\"\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    for ((i = 0; i < m; i++)); do\n        s=${s#* }\n  \
    \  done\n    if ((n % 2 == 0)); then\n        s=${s#* }\n        echo $(((${l[m\
    \ - 1]} + ${s%% *}) / 2))\n    else\n        echo ${s%% *}\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo \"scale=1; (${l[$m-1]} +\
    \ $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[*]}\n    for ((i=0;i<n;i++)); do\n        s=$(echo \"$s\" | sed\
    \ -e \"s/\\b${l[i]}\\b//g\")\n        if [ $((n-i)) -eq $((m+1)) ]; then\n   \
    \         echo \"${l[i]}\"\n            return\n        elif [ $((n-i)) -eq $m\
    \ ]; then\n            echo \"$(echo \"scale=1; (${l[i]}+$(median $s))/2\" | bc)\"\
    \n            return\n        fi\n    done\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    for ((i=0; i<${#l[@]}; i++)); do\n\
    \        l[i]=$(echo \"scale=1; ${l[i]} / 1\" | bc)\n    done\n    echo \"${l[@]}\"\
    \ | tr ' ' '\\n' | sort -n | awk '{if (NR%2==1) print $1}'\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local n=$((${#l[@]}\
    \ % 2))\n    local s=${l[$m]}\n    if [ $n -eq 0 ]; then\n        s=$(echo \"\
    scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"${l[m-1]} ${l[m]}\" | awk '{print\
    \ ($1+$2)/2}')\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo \"scale=1; (${l[$m-1]}\
    \ + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local i=0\n \
    \   local j=0\n    local t=0\n    for ((i = 0; i <= n; i++)); do\n        for\
    \ ((j = i; j <= n; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n   \
    \             t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if (($n % 2 == 0)); then\n      \
    \  echo \"$((${l[$n / 2]} + ${l[$n / 2 + 1]})) / 2.0\" | bc -l\n    else\n   \
    \     echo \"${l[$n / 2]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=${#l[@]}\n  local m=$((n/2))\n  local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n  if ((n%2)); then\n    echo \"${s[m]}\"\n\
    \  else\n    echo \"$(echo \"scale=1; (${s[m-1]}+${s[m]})/2\" | bc -l)\"\n  fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (($n % 2 == 0)); then\n        echo \"$((${v[$m]} + ${v[$((m + 1))]}))\
    \ / 2\" | bc -l\n    else\n        echo \"${v[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]}\")\n    echo \"${l[$((n/2))]}\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ i\n    for i in $(seq 0 $m); do\n        local min=$(echo \"${l[0]} < ${l[1]}\"\
    \ | bc)\n        local min_idx=${l[$min]}\n        local j\n        for j in $(seq\
    \ 2 ${#l[@]}); do\n            local cmp=$(echo \"${l[$j]} < $min_idx\" | bc)\n\
    \            if [ $cmp -eq 1 ]; then\n                min_idx=${l[$j]}\n     \
    \       fi\n        done\n        l=(${l[@]/$min_idx})\n    done\n    echo ${l[0]}\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n/tmp/tmpq6_eyq9f.sh: line 17: [: -eq:
    unary operator expected\n(standard_in) 1: syntax error\n/tmp/tmpq6_eyq9f.sh: line
    17: [: -eq: unary operator expected\n(standard_in) 1: syntax error\n/tmp/tmpq6_eyq9f.sh:
    line 17: [: -eq: unary operator expected\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local mid=$((n/2))\n    if ((n%2==1)); then\n        echo\
    \ \"$l\" | head -n $((mid+1)) | tail -n 1\n    else\n        local a=$(echo \"\
    $l\" | head -n $mid | tail -n 1)\n        local b=$(echo \"$l\" | head -n $((mid+1))\
    \ | tail -n 1)\n        echo \"$(((a+b)/2))\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    local m\n\
    \    local s\n    for i in ${l[@]}; do\n        s+=$i\n    done\n    m=$(echo\
    \ \"$s / $n\" | bc -l)\n    echo $m\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"scale=1; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local n=$((${#l[@]}%2))\n\
    \    local s=${l[$m]}\n    if ((n==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]}/2\" | bc)\n    local\
    \ s=$(echo \"${#l[@]}%2\" | bc)\n    if [ $s -eq 0 ]; then\n        echo \"${l[$m-1]}\"\
    \n    else\n        echo \"$(echo \"(${l[$m-1]}+${l[$m]})/2\" | bc -l)\"\n   \
    \ fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    local m\n\
    \    local s\n    local r\n    local t\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local j\n    local k\n    local p\n\
    \    local q\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local aa\n    local ab\n    local ac\n    local\
    \ ad\n    local ae\n    local af\n    local ag\n    local ah\n    local ai\n \
    \   local aj\n    local ak\n    local al\n    local am\n    local an\n    local\
    \ ao\n    local ap\n    local aq\n    local ar\n    local as\n    local at\n \
    \   local au\n    local av\n    local aw\n    local ax\n    local ay\n    local\
    \ az\n    local ba\n    local bb\n    local bc\n    local bd\n    local be\n \
    \   local bf\n    local bg\n    local bh\n    local bi\n    local bj\n    local\
    \ bk\n    local bl\n    local bm\n    local bn\n    local bo\n    local bp\n \
    \   local bq\n    local br\n    local bs\n    local bt\n    local bu\n    local\
    \ bv\n    local bw\n    local bx\n    local by\n    local bz\n    local ca\n \
    \   local cb\n    local cc\n    local cd\n    local ce\n    local cf\n    local\
    \ cg\n    local ch\n    local ci\n    local cj\n    local ck\n    local cl\n \
    \   local cm\n    local cn\n    local co\n    local cp\n    local cq\n    local\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"scale=1;(${l[$n]}\
    \ + ${l[$((n - 1))]})/2\" | bc\n    else\n        echo \"${l[$n]}\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    IFS=$'\\n'\n    if ((n%2==1)); then\n\
    \        echo \"${l[$m]}\"\n    else\n        l=($(sort -n <<<\"${s[*]}\"))\n\
    \        echo \"$(bc -l <<<\"(${l[$m-1]}+${l[$m]})/2\")\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo \"scale=1; (${l[$m-1]} +\
    \ $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n == 0)); then\n        echo\
    \ 0\n    elif ((n == 1)); then\n        echo \"$l\"\n    elif ((n % 2 == 1));\
    \ then\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    else\n        local\
    \ a=$(echo \"$l\" | sed -n \"$((m + 1))p\")\n        local b=$(echo \"$l\" | sed\
    \ -n \"$((m + 2))p\")\n        echo $(((a + b) / 2))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\"\n    else\n        echo \"$l\" | sed\
    \ -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=${#l[@]}\n  local m=$((n / 2))\n  local\
    \ s=${l[@]}\n  local t\n  for ((i = 0; i < m; i++)); do\n    t=${s#* }\n    s=${s%$t}\n\
    \  done\n  if ((n % 2 == 0)); then\n    echo $(((${s% *} + ${t% *}) / 2))\n  else\n\
    \    echo $s\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmposfhz93l.sh: line 18: (-10 + ) / 2: syntax error: operand expected
    (error token is ") / 2")\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]}\")\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n       \
    \ echo \"$(((l[m - 1] + l[m]) / 2))\"\n    else\n        echo \"${l[m]}\"\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   if ((n % 2 == 0)); then\n        echo \"$(echo \"scale=1; (${l[m-1]} + ${l[m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]}\")\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n       \
    \ echo \"$(((l[m - 1] + l[m]) / 2))\"\n    else\n        echo \"${l[m]}\"\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local s=(\"${l[@]}\")\n    local i\n   \
    \ for ((i=0; i<${#s[@]}; i++)); do\n        s[i]=$(echo \"scale=2; ${s[i]} / 1\"\
    \ | bc)\n    done\n    echo \"$(echo \"${s[*]}\" | tr ' ' '\\n' | sort -n | awk\
    \ '{a[i++]=$0} END {print a[int(i/2)]}')\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if ((m%2)); then\n\
    \        echo ${s[$n]}\n    else\n        echo $(((${s[$n-1]}+${s[$n]})/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ n=$(echo \"${#l[@]} % 2\" | bc)\n    if [ $n -eq 0 ]; then\n        echo \"\
    $(echo \"${l[$m]} + ${l[$m-1]}\" | bc -l) / 2\" | bc -l\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$m,$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n     \
    \   echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"(${l[$n]} + ${l[$n-1]})/2\"\
    \ | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n    for i in \"${l[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]];\
    \ then\n            m+=($i)\n        elif [[ $i =~ ^[0-9]+\\.[0-9]+$ ]]; then\n\
    \            n+=($i)\n        fi\n    done\n    if [[ ${#m[@]} -gt 0 ]]; then\n\
    \        s=$(sort -n <<<\"${m[*]}\")\n        t=$(echo \"$s\" | wc -l)\n     \
    \   if [[ $(($t % 2)) -eq 1 ]]; then\n            echo \"$s\" | sed -n \"$(($t\
    \ / 2 + 1))p\"\n        else\n            echo \"$s\" | sed -n \"$(($t / 2))p\"\
    \ | awk '{print ($1 + $2) / 2}'\n        fi\n    elif [[ ${#n[@]} -gt 0 ]]; then\n\
    \        s=$(sort -n <<<\"${n[*]}\")\n        t=$(echo \"$s\" | wc -l)\n     \
    \   if [[ $(($t % 2)) -eq 1 ]]; then\n            echo \"$s\" | sed -n \"$(($t\
    \ / 2 + 1))p\"\n        else\n            echo \"$s\" | sed -n \"$(($t / 2))p\"\
    \ | awk '{print ($1 + $2) / 2}'\n        fi\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | tr ' ' '\\n' | sort -n\
    \ | awk '{a[i++]=$0} END {print a[int(i/2)]}')\n    echo \"$m\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"\
    scale=1; (${l[$m]} + ${l[$((m + 1))]}) / 2\" | bc)\n    fi\n    echo $s\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"${n}p\")\n    echo\
    \ \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n    if (( ${#l[@]} % 2 ==\
    \ 1 )); then\n        echo ${v[$m]}\n    else\n        echo $(( (${v[$m-1]} +\
    \ ${v[$m]}) / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"scale=1;(${l[m-1]}+${l[m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    local m\n\
    \    local s\n    local t\n    for ((i=0; i<n; i++)); do\n        s=${l[$i]}\n\
    \        for ((j=i+1; j<n; j++)); do\n            t=${l[$j]}\n            if ((s\
    \ > t)); then\n                l[$i]=$t\n                l[$j]=$s\n          \
    \      s=$t\n            fi\n        done\n    done\n    if ((n & 1)); then\n\
    \        m=$((n / 2))\n        echo ${l[$m]}\n    else\n        m=$((n / 2))\n\
    \        echo $(((${l[$m]} + ${l[$((m-1))]})/2))\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=$(echo\
    \ \"$s\" | sed -n \"$((m + 1))p\")\n    if ((n % 2)); then\n        echo \"$v\"\
    \n    else\n        echo \"$(echo \"$s\" | sed -n \"$((m + 2))p\")\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1;\
    \ j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n               \
    \ t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n         \
    \   fi\n        done\n    done\n    if ((m % 2 == 0)); then\n        k=$((m /\
    \ 2))\n        echo $(((${l[k]} + ${l[k-1]})/2))\n    else\n        k=$((m / 2))\n\
    \        echo ${l[k]}\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local tmp\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1; j<m; j++));\
    \ do\n            if (($(echo \"${l[i]} > ${l[j]}\" | bc -l))); then\n       \
    \         tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if (($(echo \"$m % 2\" | bc -l)));\
    \ then\n        echo ${l[$(echo \"$m / 2\" | bc -l)]}\n    else\n        echo\
    \ $(echo \"scale=1; (${l[$(echo \"$m / 2 - 1\" | bc -l)]} + ${l[$(echo \"$m /\
    \ 2\" | bc -l)]}) / 2\" | bc -l)\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1vktyor_.sh: line 25: 1.50000000000000000000: syntax error:
    invalid arithmetic operator (error token is ".50000000000000000000")\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local m=${#l[@]}\n  local n=$((m/2))\n  local r=$((m%2))\n\
    \  local s=${l[$n]}\n  if [ $r -eq 0 ]; then\n    s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\"\
    \ | bc)\n  fi\n  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=()\n    for ((i = 0; i < n; i++)); do\n     \
    \   t+=($(echo \"$s\" | tr ' ' '\\n' | sort -n | sed -n \"$((i + 1))p\"))\n  \
    \  done\n    if ((n % 2 == 0)); then\n        echo \"$(echo \"scale=1; (${t[m\
    \ - 1]} + ${t[m]}) / 2\" | bc)\"\n    else\n        echo \"${t[m]}\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | head -n $m | tail -n 1\n    else\n        echo \"$l\" | head -n $((m+1))\
    \ | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$(($n/2))\n  \
    \  if (( $n % 2 == 1 )); then\n        echo \"${l[$m]}\"\n    else\n        echo\
    \ \"$((${l[$m-1]} + ${l[$m]})) / 2.0\" | bc -l\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ if ((m%2)); then\n        echo ${l[$n]}\n    else\n        echo $(((${l[$n-1]}+${l[$n]})/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"scale=1; (${l[$m]} + ${l[$((m\
    \ + 1))]})/2\" | bc)\n    echo $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n    for i in \"${l[@]}\"; do\n        ((m+=$i))\n        ((n++))\n\
    \    done\n    s=$(echo \"$m/$n\" | bc -l)\n    for i in \"${l[@]}\"; do\n   \
    \     t=$(echo \"$t+($i-$s)^2\" | bc -l)\n    done\n    echo $(echo \"sqrt($t/$n)\"\
    \ | bc -l)\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=${#l[@]}\n  local m=$((n/2))\n  local s=${l[$m]}\n\
    \  if ((n%2==0)); then\n    s=$(echo \"${l[$m-1]} + $s\" | bc -l)\n    s=$(echo\
    \ \"$s / 2\" | bc -l)\n  fi\n  echo \"$s\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"${m}p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n  local n=$(echo\
    \ \"$l\" | wc -l)\n  local m=$((n/2))\n  if ((n%2==0)); then\n    echo \"$l\"\
    \ | sed -n \"$((m-1))p\" | awk '{print ($1+$2)/2}'\n  else\n    echo \"$l\" |\
    \ sed -n \"${m}p\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local t\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n\
    \            if (($(echo \"${l[i]} > ${l[j]}\" | bc -l))); then\n            \
    \    t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n      \
    \      fi\n        done\n    done\n    if (($(echo \"$m % 2 == 0\" | bc -l)));\
    \ then\n        echo \"$(echo \"scale=2; (${l[$(($m/2-1))]} + ${l[$(($m/2))]})\
    \ / 2\" | bc -l)\"\n    else\n        echo \"${l[$(($m/2))]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s\n    local i\n    for i in \"${l[@]}\"; do\n        s+=\"$i \"\n \
    \   done\n    echo \"$s\" | tr ' ' '\\n' | sort -n | awk -v m=$m '{if (NR == m)\
    \ print $1; else if (NR == m + 1) print ($1 + $2) / 2}'\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=${l[$m]}\n\
    \    if (($#%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n\
    \    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo \"scale=1; (${l[$m-1]}\
    \ + $s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local r\n    for ((i = 0; i < m; i++)); do\n        s=${s#*\
    \ }\n    done\n    if ((n % 2 == 0)); then\n        r=$(echo \"scale=1; (${l[m\
    \ - 1]} + ${s%% *}) / 2\" | bc)\n    else\n        r=${s%% *}\n    fi\n    echo\
    \ $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"scale=1; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1; (${l[$m]}+${l[$((m-1))]})/2\"\
    \ | bc)\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local o=$((m%2))\n    local p=$((n+o))\n    local q=$((n-1))\n    local r=$((n+1))\n\
    \    local s=$((n-1+o))\n    local t=$((n+1+o))\n    local u=$((n+o))\n    local\
    \ v=$((n-1+o))\n    local w=$((n+1+o))\n    local x=$((n+o))\n    local y=$((n-1+o))\n\
    \    local z=$((n+1+o))\n    local aa=$((n+o))\n    local bb=$((n-1+o))\n    local\
    \ cc=$((n+1+o))\n    local dd=$((n+o))\n    local ee=$((n-1+o))\n    local ff=$((n+1+o))\n\
    \    local gg=$((n+o))\n    local hh=$((n-1+o))\n    local ii=$((n+1+o))\n   \
    \ local jj=$((n+o))\n    local kk=$((n-1+o))\n    local ll=$((n+1+o))\n    local\
    \ mm=$((n+o))\n    local nn=$((n-1+o))\n    local oo=$((n+1+o))\n    local pp=$((n+o))\n\
    \    local qq=$((n-1+o))\n    local rr=$((n+1+o))\n    local ss=$((n+o))\n   \
    \ local tt=$((n-1+o))\n    local uu=$((n+1+o))\n    local vv=$((n+o))\n    local\
    \ ww=$((n-1+o))\n    local xx=$((n+1+o))\n    local yy=$((n+o))\n    local zz=$((n-1+o))\n\
    \    local aaa=$((n+1+o))\n    local bbb=$((n+o))\n    local ccc=$((n-1+o))\n\
    \    local\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} / 2))\n\
    \    local m=${l[$n]}\n    if (($# % 2 == 0)); then\n        m=$(echo \"scale=1;\
    \ (${l[$n-1]} + $m) / 2\" | bc)\n    fi\n    echo \"$m\"\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ s=$(echo \"${#l[@]} % 2\" | bc)\n    if [[ $s -eq 0 ]]; then\n        echo \"\
    $(echo \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359374

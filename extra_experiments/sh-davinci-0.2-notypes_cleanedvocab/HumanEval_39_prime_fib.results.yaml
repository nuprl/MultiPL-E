language: sh
name: HumanEval_39_prime_fib
results:
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n-1))\")\n    local\
    \ fib_n_2=$(fib \"$((n-2))\")\n    local fib_n_3=$(fib \"$((n-3))\")\n    local\
    \ fib_n_4=$(fib \"$((n-4))\")\n    local fib_n_5=$(fib \"$((n-5))\")\n    local\
    \ fib_n_6=$(fib \"$((n-6))\")\n    local fib_n_7=$(fib \"$((n-7))\")\n    local\
    \ fib_n_8=$(fib \"$((n-8))\")\n    local fib_n_9=$(fib \"$((n-9))\")\n    local\
    \ fib_n_10=$(fib \"$((n-10))\")\n    local fib_n_11=$(fib \"$((n-11))\")\n   \
    \ local fib_n_12=$(fib \"$((n-12))\")\n    local fib_n_13=$(fib \"$((n-13))\"\
    )\n    local fib_n_14=$(fib \"$((n-14))\")\n    local fib_n_15=$(fib \"$((n-15))\"\
    )\n    local fib_n_16=$(fib \"$((n-16))\")\n    local fib_n_17=$(fib \"$((n-17))\"\
    )\n    local fib_n_18=$(fib \"$((n-18))\")\n    local fib_n_19=$(fib \"$((n-19))\"\
    )\n    local fib_n_20=$(fib \"$((n-20))\")\n    local fib_n_21=$(fib \"$((n-21))\"\
    )\n    local fib_n_22=$(fib \"$((n-22))\")\n    local fib_n_23=$(fib \"$((n-23))\"\
    )\n    local fib_n_24=$(fib \"$((n-24))\")\n    local fib_n_25=$(fib \"$((n-25))\"\
    )\n    local fib_n_26=$(fib \"$((n-26))\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbe_kqevf.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpbe_kqevf.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  local fib_i=$(fib \"$i\")\n  while [[ $fib_i\
    \ -lt $fib_n ]]; do\n    if is_prime \"$fib_i\"; then\n      ((i++))\n      fib_i=$(fib\
    \ \"$i\")\n    else\n      ((i++))\n      fib_i=$(fib \"$i\")\n    fi\n  done\n\
    \  echo \"$fib_i\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmppa5hwe1z.sh: line 15: fib: command not found\n/tmp/tmppa5hwe1z.sh:
    line 17: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib\
    \ \"$((n-2))\")\n  local fib_n_3=$(fib \"$((n-3))\")\n  local fib_n_4=$(fib \"\
    $((n-4))\")\n  local fib_n_5=$(fib \"$((n-5))\")\n  local fib_n_6=$(fib \"$((n-6))\"\
    )\n  local fib_n_7=$(fib \"$((n-7))\")\n  local fib_n_8=$(fib \"$((n-8))\")\n\
    \  local fib_n_9=$(fib \"$((n-9))\")\n  local fib_n_10=$(fib \"$((n-10))\")\n\
    \  local fib_n_11=$(fib \"$((n-11))\")\n  local fib_n_12=$(fib \"$((n-12))\")\n\
    \  local fib_n_13=$(fib \"$((n-13))\")\n  local fib_n_14=$(fib \"$((n-14))\")\n\
    \  local fib_n_15=$(fib \"$((n-15))\")\n  local fib_n_16=$(fib \"$((n-16))\")\n\
    \  local fib_n_17=$(fib \"$((n-17))\")\n  local fib_n_18=$(fib \"$((n-18))\")\n\
    \  local fib_n_19=$(fib \"$((n-19))\")\n  local fib_n_20=$(fib \"$((n-20))\")\n\
    \  local fib_n_21=$(fib \"$((n-21))\")\n  local fib_n_22=$(fib \"$((n-22))\")\n\
    \  local fib_n_23=$(fib \"$((n-23))\")\n  local fib_n_24=$(fib \"$((n-24))\")\n\
    \  local fib_n_25=$(fib \"$((n-25))\")\n  local fib_n_26=$(fib \"$((n-26))\n}\n\
    \ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpub_hpjxb.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpub_hpjxb.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [[ $i -lt\
    \ $n ]]; do\n    if [[ $(is_prime $fib) == \"1\" ]]; then\n      ((i++))\n   \
    \ fi\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=15>
  stdout: <_io.BufferedReader name=12>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local i=1\n    local fib_i=$(fib \"$i\")\n\
    \    while [ \"$fib_i\" -lt \"$fib_n\" ]; do\n        if [ \"$(is_prime \"$fib_i\"\
    )\" = \"true\" ]; then\n            echo \"$fib_i\"\n        fi\n        i=$((i+1))\n\
    \        fib_i=$(fib \"$i\")\n    done\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpqw4v0x1j.sh: line 15: fib: command not found\n/tmp/tmpqw4v0x1j.sh:
    line 17: fib: command not found\n/tmp/tmpqw4v0x1j.sh: line 18: [: : integer expression
    expected\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$(($fib + $fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $(is_prime $fib) -eq 1 ]; then\n      fib_prime=$fib\n\
    \      i=$(($i + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=\"$1\"\n\
    \  local i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=0\n\
    \  while [ \"$i\" -lt \"$n\" ]; do\n    fib_prime=$(is_prime \"$fib\")\n    if\
    \ [ \"$fib_prime\" -eq 1 ]; then\n      i=$((i+1))\n    fi\n    fib_next=$((fib_prev+fib))\n\
    \    fib_prev=$fib\n    fib=$fib_next\n  done\n  echo \"$fib\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=22>
  stdout: <_io.BufferedReader name=20>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local fib_prime=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            fib_prime=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local fib_prime=0\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            fib_prime=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=0\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    i=$((i + 1))\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local fib_prime=1\n    while [ $i -lt $n ]; do\n        fib_next=$(($fib\
    \ + $fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            fib_prime=$fib\n            i=$(($i + 1))\n        fi\n\
    \    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local is_prime=$(is_prime \"$fib_n\")\n  \
    \  if [[ \"$is_prime\" == \"true\" ]]; then\n        echo \"$fib_n\"\n    else\n\
    \        prime_fib \"$((n + 1))\"\n    fi\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=11>
  stdout: <_io.BufferedReader name=28>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local is_prime=$(is_prime \"$fib_n\")\n  if [[ \"$is_prime\"\
    \ == \"true\" ]]; then\n    echo \"$fib_n\"\n  else\n    prime_fib \"$((n + 1))\"\
    \n  fi\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=32>
  stdout: <_io.BufferedReader name=16>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    if [ $i -eq 0 ]; then\n      fib=$fib_prev\n    elif [ $i -eq\
    \ 1 ]; then\n      fib=$fib_next\n    else\n      fib=$((fib_prev + fib_next))\n\
    \      fib_prev=$fib_next\n      fib_next=$fib\n    fi\n    if [ $(is_prime $fib)\
    \ -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=13>
  stdout: <_io.BufferedReader name=24>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp\n   \
    \ local is_prime\n    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib\
    \ + fib_prev))\n        fib_prev=$fib_tmp\n        is_prime=$(is_prime $fib)\n\
    \        if [ \"$is_prime\" == \"true\" ]; then\n            i=$((i + 1))\n  \
    \      fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local prev_fib=1\n  local tmp=0\n  while [ $i -lt $n ];\
    \ do\n    tmp=$fib\n    fib=$((fib + prev_fib))\n    prev_fib=$tmp\n    if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $(is_prime $fib) -eq 1 ]; then\n      prime_fib=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n \
    \   prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local fib_prime=0\n    local fib_prime_count=0\n    while [ $fib_prime_count\
    \ -lt $n ]; do\n        if [ $i -eq 1 ] || [ $i -eq 2 ]; then\n            fib_prime=1\n\
    \        else\n            fib_next=$((fib + fib_prev))\n            fib_prev=$fib\n\
    \            fib=$fib_next\n            fib_prime=$(is_prime $fib)\n        fi\n\
    \        if [ $fib_prime -eq 1 ]; then\n            fib_prime_count=$((fib_prime_count\
    \ + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local prev=0\n  local next=1\n  while [ $i -lt $n ]; do\n\
    \    fib=$((prev + next))\n    prev=$next\n    next=$fib\n    if is_prime $fib;\
    \ then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if [ $(is_prime $fib) = \"true\" ]; then\n      i=$((i + 1))\n    fi\n  done\n\
    \  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=55>
  stdout: <_io.BufferedReader name=33>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_is_prime=$(is_prime \"$fib_n\")\n  if [ \"\
    $fib_n_is_prime\" == \"true\" ]; then\n    echo \"$fib_n\"\n  else\n    prime_fib\
    \ \"$(($n + 1))\"\n  fi\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=37>
  stdout: <_io.BufferedReader name=23>
  timestamp: 1660360350
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    local fib_n_3=$(fib \"$((n - 3))\")\n   \
    \ local fib_n_4=$(fib \"$((n - 4))\")\n    local fib_n_5=$(fib \"$((n - 5))\"\
    )\n    local fib_n_6=$(fib \"$((n - 6))\")\n    local fib_n_7=$(fib \"$((n - 7))\"\
    )\n    local fib_n_8=$(fib \"$((n - 8))\")\n    local fib_n_9=$(fib \"$((n - 9))\"\
    )\n    local fib_n_10=$(fib \"$((n - 10))\")\n    local fib_n_11=$(fib \"$((n\
    \ - 11))\")\n    local fib_n_12=$(fib \"$((n - 12))\")\n    local fib_n_13=$(fib\
    \ \"$((n - 13))\")\n    local fib_n_14=$(fib \"$((n - 14))\")\n    local fib_n_15=$(fib\
    \ \"$((n - 15))\")\n    local fib_n_16=$(fib \"$((n - 16))\")\n    local fib_n_17=$(fib\
    \ \"$((n - 17))\")\n    local fib_n_18=$(fib \"$((n - 18))\")\n    local fib_n_19=$(fib\
    \ \"$((n - 19))\")\n    local fib_n_20=$(fib \"$((n - 20))\")\n    local fib_n_21=$(fib\
    \ \"$((n - 21))\")\n    local fib_n_22=$(fib \"$((n - 22))\")\n    local fib_n_23=$(fib\
    \ \"$((n - 23))\")\n    local fib_n_24=$(fib \"$((n - 24))\")\n    local fib_n_25=$(fib\
    \ \"$((n - 25))\")\n    local fib_n_26=$(fib \"$((n - 26))\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kj51e7e.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp1kj51e7e.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=\"$1\"\n\
    \  local i=1\n  local fib=1\n  local fib_prev=1\n  local prime_fib=2\n  while\
    \ [ \"$i\" -lt \"$n\" ]; do\n    local fib_tmp=\"$fib\"\n    fib=$((fib + fib_prev))\n\
    \    fib_prev=\"$fib_tmp\"\n    if is_prime \"$fib\"; then\n      prime_fib=\"\
    $fib\"\n      i=$((i + 1))\n    fi\n  done\n  echo \"$prime_fib\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=30>
  stdout: <_io.BufferedReader name=63>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  while [ $i -lt $n ]; do\n    if [ $(is_prime\
    \ \"$fib_n\") -eq 0 ]; then\n      fib_n=$(fib \"$((n+1))\")\n      n=$((n+1))\n\
    \    else\n      i=$((i+1))\n    fi\n  done\n  echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmp6bfl5pbb.sh: line 15: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n\
    \ + 1))\n        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=5>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_1=1\n    local fib_2=1\n    while\
    \ [ $i -lt $n ]; do\n        fib=$((fib_1 + fib_2))\n        if is_prime $fib;\
    \ then\n            ((i++))\n        fi\n        fib_2=$fib_1\n        fib_1=$fib\n\
    \    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=57>
  stdout: <_io.BufferedReader name=49>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local prime_fib_n=$(prime \"$fib_n\")\n  \
    \  echo \"$prime_fib_n\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpsqxf__l1.sh: line 15: fib: command not found\n/tmp/tmpsqxf__l1.sh:
    line 16: prime: command not found\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib+fib_prev))\n\
    \        fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n\
    \            prime_fib=$fib\n            i=$((i+1))\n        fi\n    done\n  \
    \  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            prime_fib=$fib\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            ((i++))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local prime_fib_n=$(prime \"$fib_n\")\n  echo \"$prime_fib_n\"\
    \n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[\
    \ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[\
    \ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n   \
    \ [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n\
    \    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7u7551fs.sh: line 15: fib: command not found\n/tmp/tmp7u7551fs.sh:
    line 16: prime: command not found\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local f=1\n  local p=1\n  local f_p=1\n  while [ $i -lt $n ]; do\n  \
    \  f_p=$(($f + $p))\n    f=$p\n    p=$f_p\n    if is_prime $f_p; then\n      i=$(($i\
    \ + 1))\n    fi\n  done\n  echo $f_p\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if [ $(is_prime $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n\
    \  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$(($fib + $fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      fib_prime=$fib\n      i=$(($i\
    \ + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local j=1\n    local k=1\n    while [ $k -lt $n ]; do\n  \
    \      local tmp=$i\n        i=$j\n        j=$(($i + $tmp))\n        if is_prime\
    \ $j; then\n            k=$(($k + 1))\n        fi\n    done\n    echo $j\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib\
    \ \"$((n-2))\")\n  local fib_n_3=$(fib \"$((n-3))\")\n  local fib_n_4=$(fib \"\
    $((n-4))\")\n  local fib_n_5=$(fib \"$((n-5))\")\n  local fib_n_6=$(fib \"$((n-6))\"\
    )\n  local fib_n_7=$(fib \"$((n-7))\")\n  local fib_n_8=$(fib \"$((n-8))\")\n\
    \  local fib_n_9=$(fib \"$((n-9))\")\n  local fib_n_10=$(fib \"$((n-10))\")\n\
    \  local fib_n_11=$(fib \"$((n-11))\")\n  local fib_n_12=$(fib \"$((n-12))\")\n\
    \  local fib_n_13=$(fib \"$((n-13))\")\n  local fib_n_14=$(fib \"$((n-14))\")\n\
    \  local fib_n_15=$(fib \"$((n-15))\")\n  local fib_n_16=$(fib \"$((n-16))\")\n\
    \  local fib_n_17=$(fib \"$((n-17))\")\n  local fib_n_18=$(fib \"$((n-18))\")\n\
    \  local fib_n_19=$(fib \"$((n-19))\")\n  local fib_n_20=$(fib \"$((n-20))\")\n\
    \  local fib_n_21=$(fib \"$((n-21))\")\n  local fib_n_22=$(fib \"$((n-22))\")\n\
    \  local fib_n_23=$(fib \"$((n-23))\")\n  local fib_n_24=$(fib \"$((n-24))\")\n\
    \  local fib_n_25=$(fib \"$((n-25))\")\n  local fib_n_26=$(fib \"$((n-26))\n}\n\
    \ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpub_hpjxb.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpub_hpjxb.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ]; then\n    \
    \        i=$((i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=8>
  stdout: <_io.BufferedReader name=35>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    if is_prime \"$fib_n\"; then\n        echo\
    \ \"$fib_n\"\n    else\n        prime_fib \"$((n + 1))\"\n    fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=42>
  stdout: <_io.BufferedReader name=31>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=\"$1\"\
    \n    local i=1\n    local j=1\n    local k=1\n    local fib\n    while [ \"$k\"\
    \ -lt \"$n\" ]; do\n        fib=$((i + j))\n        i=$j\n        j=$fib\n   \
    \     if is_prime \"$fib\"; then\n            k=$((k + 1))\n        fi\n    done\n\
    \    echo \"$fib\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) = \"true\" ]; then\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=52>
  stdout: <_io.BufferedReader name=47>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    if is_prime \"$fib_n\"; then\n        echo\
    \ \"$fib_n\"\n    elif is_prime \"$fib_n_1\"; then\n        echo \"$fib_n_1\"\n\
    \    elif is_prime \"$fib_n_2\"; then\n        echo \"$fib_n_2\"\n    else\n \
    \       prime_fib \"$((n - 1))\"\n    fi\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=58>
  stdout: <_io.BufferedReader name=53>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  if is_prime \"$fib_n\"; then\n    echo \"$fib_n\"\n \
    \ else\n    prime_fib \"$((n + 1))\"\n  fi\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=38>
  stdout: <_io.BufferedReader name=3>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=0\n\
    \    local prime_fib=0\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local fib=0\n  while [ $k -lt $n ]; do\n  \
    \  fib=$((i + j))\n    i=$j\n    j=$fib\n    if is_prime $fib; then\n      k=$((k\
    \ + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib $n)\n  if [[ $(is_prime $fib_n) == \"True\" ]]; then\n    echo $fib_n\n\
    \  else\n    prime_fib $(($n + 1))\n  fi\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=73>
  stdout: <_io.BufferedReader name=70>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local f=1\n  local f_prev=1\n  local f_next=1\n  local count=0\n  while\
    \ [ $count -lt $n ]; do\n    f_next=$((f + f_prev))\n    f_prev=$f\n    f=$f_next\n\
    \    if [ $(is_prime $f) = \"true\" ]; then\n      count=$((count + 1))\n    fi\n\
    \  done\n  echo $f\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=43>
  stdout: <_io.BufferedReader name=48>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local j=1\n  local k=0\n  local count=0\n  while [ $count -lt $n ]; do\n\
    \    k=$((i + j))\n    i=$j\n    j=$k\n    if [ $(is_prime $k) -eq 1 ]; then\n\
    \      count=$((count + 1))\n    fi\n  done\n  echo $k\n}\n\ncandidate() {\n \
    \   prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=78>
  stdout: <_io.BufferedReader name=29>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  local fib_prime_count=0\n  while [ $fib_prime_count -lt $n ]; do\n    fib_next=$((fib\
    \ + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n    if [ $(is_prime $fib)\
    \ -eq 1 ]; then\n      fib_prime=$fib\n      fib_prime_count=$((fib_prime_count\
    \ + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=71>
  stdout: <_io.BufferedReader name=69>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    while [ $i -lt $n ];\
    \ do\n        local fib_tmp=$fib\n        fib=$((fib + fib_prev))\n        fib_prev=$fib_tmp\n\
    \        if is_prime $fib; then\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    while [ $i -lt $n ];\
    \ do\n        local fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n    \
    \    fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=62>
  stdout: <_io.BufferedReader name=59>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  while [ $i -lt $n ]; do\n    local\
    \ fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n    if [ $(is_prime\
    \ \"$fib\") -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo \"$fib\"\
    \n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[\
    \ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[\
    \ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n   \
    \ [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n\
    \    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=0\n\
    \    local prime_fib=0\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n - 1))\")\n  local fib_n_2=$(fib\
    \ \"$((n - 2))\")\n  local fib_n_3=$(fib \"$((n - 3))\")\n  local fib_n_4=$(fib\
    \ \"$((n - 4))\")\n  local fib_n_5=$(fib \"$((n - 5))\")\n  local fib_n_6=$(fib\
    \ \"$((n - 6))\")\n  local fib_n_7=$(fib \"$((n - 7))\")\n  local fib_n_8=$(fib\
    \ \"$((n - 8))\")\n  local fib_n_9=$(fib \"$((n - 9))\")\n  local fib_n_10=$(fib\
    \ \"$((n - 10))\")\n  local fib_n_11=$(fib \"$((n - 11))\")\n  local fib_n_12=$(fib\
    \ \"$((n - 12))\")\n  local fib_n_13=$(fib \"$((n - 13))\")\n  local fib_n_14=$(fib\
    \ \"$((n - 14))\")\n  local fib_n_15=$(fib \"$((n - 15))\")\n  local fib_n_16=$(fib\
    \ \"$((n - 16))\")\n  local fib_n_17=$(fib \"$((n - 17))\")\n  local fib_n_18=$(fib\
    \ \"$((n - 18))\")\n  local fib_n_19=$(fib \"$((n - 19))\")\n  local fib_n_20=$(fib\
    \ \"$((n - 20))\")\n  local fib_n_21=$(fib \"$((n - 21))\")\n  local fib_n_22=$(fib\
    \ \"$((n - 22))\")\n  local fib_n_23=$(fib \"$((n - 23))\")\n  local fib_n_24=$(fib\
    \ \"$((n - 24))\")\n  local fib_n_25=$(fib \"$((n - 25))\")\n  local fib_n_26=$(fib\
    \ \"$((n - 26))\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwp0fkvh6.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpwp0fkvh6.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      prime_fib=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local j=1\n    local k=0\n    local count=0\n    while [ $count\
    \ -lt $n ]; do\n        if [ $i -eq 1 ] || [ $j -eq 1 ]; then\n            k=$((i+j))\n\
    \            i=$j\n            j=$k\n        else\n            k=$((i+j))\n  \
    \          i=$j\n            j=$k\n            if [ $(is_prime $k) -eq 1 ]; then\n\
    \                count=$((count+1))\n            fi\n        fi\n    done\n  \
    \  echo $k\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=65>
  stdout: <_io.BufferedReader name=61>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    local fib_n_3=$(fib \"$((n - 3))\")\n   \
    \ local fib_n_4=$(fib \"$((n - 4))\")\n    local fib_n_5=$(fib \"$((n - 5))\"\
    )\n    local fib_n_6=$(fib \"$((n - 6))\")\n    local fib_n_7=$(fib \"$((n - 7))\"\
    )\n    local fib_n_8=$(fib \"$((n - 8))\")\n    local fib_n_9=$(fib \"$((n - 9))\"\
    )\n    local fib_n_10=$(fib \"$((n - 10))\")\n    local fib_n_11=$(fib \"$((n\
    \ - 11))\")\n    local fib_n_12=$(fib \"$((n - 12))\")\n    local fib_n_13=$(fib\
    \ \"$((n - 13))\")\n    local fib_n_14=$(fib \"$((n - 14))\")\n    local fib_n_15=$(fib\
    \ \"$((n - 15))\")\n    local fib_n_16=$(fib \"$((n - 16))\")\n    local fib_n_17=$(fib\
    \ \"$((n - 17))\")\n    local fib_n_18=$(fib \"$((n - 18))\")\n    local fib_n_19=$(fib\
    \ \"$((n - 19))\")\n    local fib_n_20=$(fib \"$((n - 20))\")\n    local fib_n_21=$(fib\
    \ \"$((n - 21))\")\n    local fib_n_22=$(fib \"$((n - 22))\")\n    local fib_n_23=$(fib\
    \ \"$((n - 23))\")\n    local fib_n_24=$(fib \"$((n - 24))\")\n    local fib_n_25=$(fib\
    \ \"$((n - 25))\")\n    local fib_n_26=$(fib \"$((n - 26))\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kj51e7e.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp1kj51e7e.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      fib_prime=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  while ! is_prime \"$fib_n\"; do\n    n=$((n+1))\n   \
    \ fib_n=$(fib \"$n\")\n  done\n  echo \"$fib_n\"\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=40>
  stdout: <_io.BufferedReader name=27>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib_n=1\n  local fib_n_1=1\n  local fib_n_2=0\n  local fib_n_prime=0\n\
    \  local fib_n_prime_count=0\n  while [ $fib_n_prime_count -lt $n ]; do\n    let\
    \ i++\n    let fib_n=fib_n_1+fib_n_2\n    let fib_n_2=fib_n_1\n    let fib_n_1=fib_n\n\
    \    if [ $(is_prime $fib_n) -eq 1 ]; then\n      let fib_n_prime_count++\n  \
    \    let fib_n_prime=fib_n\n    fi\n  done\n  echo $fib_n_prime\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=79>
  stdout: <_io.BufferedReader name=75>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      prime_fib=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local j=1\n    local k=0\n    local count=0\n    while [ $count\
    \ -lt $n ]; do\n        if [ $(is_prime \"$i\") = \"true\" ]; then\n         \
    \   count=$((count+1))\n        fi\n        if [ $count -eq $n ]; then\n     \
    \       echo \"$i\"\n            return\n        fi\n        k=$((i+j))\n    \
    \    i=$j\n        j=$k\n    done\n}\n\ncandidate() {\n    prime_fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=77>
  stdout: <_io.BufferedReader name=46>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local is_prime=$(is_prime \"$fib_n\")\n  if [ \"$is_prime\"\
    \ == \"true\" ]; then\n    echo \"$fib_n\"\n  else\n    prime_fib \"$((n + 1))\"\
    \n  fi\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=34>
  stdout: <_io.BufferedReader name=9>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=\"$1\"\
    \n    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ \"$i\" -lt \"$n\" ]; do\n        fib_next=$((fib + fib_prev))\n \
    \       fib_prev=$fib\n        fib=$fib_next\n        if is_prime \"$fib\"; then\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo \"$fib\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib_prev + fib))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $fib -gt 1 ] && [ $(is_prime $fib) -eq 1 ]; then\n\
    \      fib_prime=$fib\n      i=$((i + 1))\n    fi\n  done\n  echo $fib_prime\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=76>
  stdout: <_io.BufferedReader name=74>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=67>
  stdout: <_io.BufferedReader name=64>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    while [ $i -lt $n ];\
    \ do\n        local fib_tmp=$fib\n        fib=$((fib + fib_prev))\n        fib_prev=$fib_tmp\n\
    \        if is_prime $fib; then\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=81>
  stdout: <_io.BufferedReader name=72>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_is_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    fib_is_prime=$(is_prime $fib)\n    if [ $fib_is_prime\
    \ -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp\n  local prime_fib=0\n\
    \  while [[ $i -lt $n ]]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n\
    \    fib_prev=$fib_tmp\n    if is_prime $fib; then\n      prime_fib=$fib\n   \
    \   i=$((i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local count=0\n  while [ $count -lt $n ]; do\n\
    \    if [ $(is_prime \"$i\") -eq 1 ]; then\n      count=$((count+1))\n    fi\n\
    \    k=$((i+j))\n    i=$j\n    j=$k\n  done\n  echo \"$i\"\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=95>
  stdout: <_io.BufferedReader name=83>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local count=0\n    while [ $count -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=92>
  stdout: <_io.BufferedReader name=82>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      prime_fib=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        if is_prime $fib; then\n            i=$((i+1))\n\
    \        fi\n        fib_next=$((fib+fib_prev))\n        fib_prev=$fib\n     \
    \   fib=$fib_next\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=26>
  stdout: <_io.BufferedReader name=20>
  timestamp: 1660360355
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=0\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        i=$((i + 1))\n    done\n    while [ $fib -lt\
    \ $((fib_prev + fib_tmp)) ]; do\n        if [ $((fib % 2)) -eq 0 ]; then\n   \
    \         fib=$((fib + 2))\n        elif [ $((fib % 3)) -eq 0 ]; then\n      \
    \      fib=$((fib + 4))\n        elif [ $((fib % 5)) -eq 0 ]; then\n         \
    \   fib=$((fib + 6))\n        elif [ $((fib % 7)) -eq 0 ]; then\n            fib=$((fib\
    \ + 10))\n        elif [ $((fib % 11)) -eq 0 ]; then\n            fib=$((fib +\
    \ 22))\n        elif [ $((fib % 13)) -eq 0 ]; then\n            fib=$((fib + 26))\n\
    \        elif [ $((fib % 17)) -eq 0 ]; then\n            fib=$((fib + 34))\n \
    \       elif [ $((fib % 19)) -eq 0 ]; then\n            fib=$((fib + 38))\n  \
    \      elif [ $((fib % 23)) -eq 0 ]; then\n            fib=$((fib + 46))\n   \
    \     elif [ $((fib % 29)) -eq 0 ]; then\n            fib=$((fib + 58))\n    \
    \    elif [ $((fib % 31)) -eq 0 ]; then\n            fib=$((fib + 62))\n     \
    \   elif [ $((fib % 37)) -eq 0 ]; then\n            fib=$((fib + 74))\n      \
    \  elif [ $((fib % 41)) -eq 0 ]; then\n            fib=$((fib + 82))\n       \
    \ elif [ $((fib % 43)) -eq 0 ]; then\n            fib=$((fib + 86))\n        elif\
    \ [ $((fib % 47)) -eq 0 ]; then\n            fib=$((fib +\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpvixulf2r.sh: line 55: unexpected EOF while looking for matching
    `)''\n/tmp/tmpvixulf2r.sh: line 77: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=0\n  while [ $i -lt $n ]; do\n    if [ $(is_prime\
    \ \"$fib_n\") -eq 1 ]; then\n      echo \"$fib_n\"\n      return\n    fi\n   \
    \ fib_n=$(fib \"$(($n + $i))\")\n    i=$(($i + 1))\n  done\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmpip1bnc19.sh: line 15: fib: command not found\n/tmp/tmpip1bnc19.sh:
    line 18: is_prime: command not found\n/tmp/tmpip1bnc19.sh: line 18: [: -eq: unary
    operator expected\n/tmp/tmpip1bnc19.sh: line 22: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib\
    \ \"$((n-2))\")\n  if is_prime \"$fib_n\"; then\n    echo \"$fib_n\"\n  elif is_prime\
    \ \"$fib_n_1\"; then\n    echo \"$fib_n_1\"\n  elif is_prime \"$fib_n_2\"; then\n\
    \    echo \"$fib_n_2\"\n  else\n    prime_fib \"$((n-1))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=93>
  stdout: <_io.BufferedReader name=25>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=\"$1\"\n\
    \  local i=0\n  local f1=1\n  local f2=1\n  local f3\n  while [ \"$i\" -lt \"\
    $n\" ]; do\n    f3=$((f1 + f2))\n    f1=$f2\n    f2=$f3\n    if is_prime \"$f3\"\
    ; then\n      i=$((i + 1))\n    fi\n  done\n  echo \"$f3\"\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=22>
  stdout: <_io.BufferedReader name=13>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local prime_fib=2\n\
    \    while [ $i -lt $n ]; do\n        local fib_tmp=$fib\n        fib=$((fib +\
    \ fib_prev))\n        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ];\
    \ then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=85>
  stdout: <_io.BufferedReader name=24>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    if [ $fib -gt 0 ] && is_prime $fib; then\n      i=$((i+1))\n \
    \   fi\n    fib=$fib_next\n    fib_next=$((fib+fib_prev))\n    fib_prev=$fib\n\
    \  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=28>
  stdout: <_io.BufferedReader name=87>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$(($fib + $fib_prev))\n       \
    \ fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n     \
    \       i=$(($i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=\"$1\"\
    \n    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_tmp=0\n\
    \    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if [ $(is_prime \"$fib\") == \"true\" ]; then\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo \"$fib\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=106>
  stdout: <_io.BufferedReader name=104>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   local prime_fib=0\n    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n   \
    \     fib=$((fib+fib_prev))\n        fib_prev=$fib_tmp\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            prime_fib=$fib\n            i=$((i+1))\n  \
    \      fi\n    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib\
    \ \"$((n-2))\")\n  if is_prime \"$fib_n\"; then\n    echo \"$fib_n\"\n  elif is_prime\
    \ \"$fib_n_1\"; then\n    echo \"$fib_n_1\"\n  elif is_prime \"$fib_n_2\"; then\n\
    \    echo \"$fib_n_2\"\n  else\n    prime_fib \"$((n-1))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=93>
  stdout: <_io.BufferedReader name=25>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local prime_fib=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if [ $(is_prime $fib) -eq 1 ]; then\n      prime_fib=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n \
    \   prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=\"$1\"\
    \n    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n\
    \    while [ \"$i\" -lt \"$n\" ]; do\n        fib_tmp=\"$fib\"\n        fib=$((fib\
    \ + fib_prev))\n        fib_prev=\"$fib_tmp\"\n        i=$((i + 1))\n    done\n\
    \    echo \"$fib\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while true; do\n        if is_prime \"$fib_n\"\
    ; then\n            echo \"$fib_n\"\n            break\n        fi\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=23>
  stdout: <_io.BufferedReader name=14>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib+fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ]; then\n    \
    \        i=$((i+1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    if is_prime $fib; then\n      ((i++))\n    fi\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    fib_next=$((fib_prev + fib))\n  done\n  echo $fib\n}\n\
    \ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=11>
  stdout: <_io.BufferedReader name=55>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_1=1\n  local fib_2=1\n  while [ $i -lt $n ];\
    \ do\n    fib=$((fib_1 + fib_2))\n    fib_2=$fib_1\n    fib_1=$fib\n    if is_prime\
    \ $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=16>
  stdout: <_io.BufferedReader name=37>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_1=1\n    local fib_2=1\n    while\
    \ [ $i -lt $n ]; do\n        fib=$((fib_1 + fib_2))\n        fib_2=$fib_1\n  \
    \      fib_1=$fib\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=68>
  stdout: <_io.BufferedReader name=57>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local is_prime=$(is_prime \"$fib_n\")\n  if [[ $is_prime\
    \ == \"true\" ]]; then\n    echo \"$fib_n\"\n  else\n    prime_fib \"$((n + 1))\"\
    \n  fi\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=80>
  stdout: <_io.BufferedReader name=41>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=67>
  stdout: <_io.BufferedReader name=64>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    while [ $i -lt $n ];\
    \ do\n        local fib_tmp=$fib\n        fib=$((fib + fib_prev))\n        fib_prev=$fib_tmp\n\
    \        if [ $(is_prime $fib) -eq 1 ]; then\n            i=$((i + 1))\n     \
    \   fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=94>
  stdout: <_io.BufferedReader name=90>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local a=1\n  local b=1\n  local c=0\n  while [ $i -lt $n ]; do\n    c=$((a+b))\n\
    \    a=$b\n    b=$c\n    if [ $(is_prime $c) -eq 1 ]; then\n      i=$((i+1))\n\
    \    fi\n  done\n  echo $c\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=\"$1\"\n\
    \  local i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local fib_prime=0\n\
    \  while [ \"$i\" -lt \"$n\" ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n\
    \    fib_prev=$fib_tmp\n    if is_prime \"$fib\"; then\n      fib_prime=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo \"$fib_prime\"\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib+fib_prev))\n\
    \        fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n\
    \            prime_fib=$fib\n            i=$((i+1))\n        fi\n    done\n  \
    \  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_num=$(fib \"$n\")\n  while ! is_prime \"$fib_num\"; do\n    n=$((n+1))\n\
    \    fib_num=$(fib \"$n\")\n  done\n  echo \"$fib_num\"\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=60>
  stdout: <_io.BufferedReader name=54>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $((fib % 2)) -ne 0 ]; then\n      fib_prime=$fib\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n   \
    \ prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local f=1\n  local p=2\n  while [[ $i -lt $n ]]; do\n    f=$((f + p))\n\
    \    if is_prime $f; then\n      p=$f\n      i=$((i + 1))\n    fi\n  done\n  echo\
    \ $p\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n  \
    \  [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n \
    \   [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=88>
  stdout: <_io.BufferedReader name=56>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  # $1: n-th number\n\
    \  # $2: current number\n  # $3: previous number\n  # $4: current index\n  # $5:\
    \ previous index\n  # $6: current prime number\n  # $7: previous prime number\n\
    \  # $8: current prime index\n  # $9: previous prime index\n  if [ \"$1\" = \"\
    $4\" ]; then\n    echo \"$2\"\n  else\n    prime_fib \"$1\" \"$(($2 + $3))\" \"\
    $2\" \"$(($4 + 1))\" \"$4\" \"$6\" \"$7\" \"$8\" \"$9\"\n  fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq79qt0rs.sh: line 26: + : syntax error: operand expected (error
    token is "+ ")\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_minus_1=$(fib \"$((n - 1))\")\n  local fib_n_minus_2=$(fib\
    \ \"$((n - 2))\")\n  local fib_n_plus_1=$(fib \"$((n + 1))\")\n  local fib_n_plus_2=$(fib\
    \ \"$((n + 2))\")\n  local fib_n_plus_3=$(fib \"$((n + 3))\")\n  if [[ $fib_n_minus_1\
    \ -eq 2 ]]; then\n    echo \"$fib_n\"\n  elif [[ $fib_n_minus_2 -eq 2 ]]; then\n\
    \    echo \"$fib_n_minus_1\"\n  elif [[ $fib_n_plus_1 -eq 2 ]]; then\n    echo\
    \ \"$fib_n\"\n  elif [[ $fib_n_plus_2 -eq 2 ]]; then\n    echo \"$fib_n_plus_1\"\
    \n  elif [[ $fib_n_plus_3 -eq 2 ]]; then\n    echo \"$fib_n_plus_2\"\n  else\n\
    \    echo \"No prime Fibonacci number at position $n.\"\n  fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmpqk1_xe5f.sh: line 15: fib: command not found\n/tmp/tmpqk1_xe5f.sh:
    line 16: fib: command not found\n/tmp/tmpqk1_xe5f.sh: line 17: fib: command not
    found\n/tmp/tmpqk1_xe5f.sh: line 18: fib: command not found\n/tmp/tmpqk1_xe5f.sh:
    line 19: fib: command not found\n/tmp/tmpqk1_xe5f.sh: line 20: fib: command not
    found\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $(is_prime $fib) -eq 1 ]; then\n      fib_prime=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n \
    \   prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_1=1\n  local fib_2=1\n  while [ $i -lt $n ];\
    \ do\n    fib=$((fib_1 + fib_2))\n    fib_2=$fib_1\n    fib_1=$fib\n    if is_prime\
    \ $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=16>
  stdout: <_io.BufferedReader name=37>
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=35>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local prime_fib=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if is_prime $fib; then\n      prime_fib=$fib\n     \
    \ i=$((i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib=$fib_next\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        if is_prime $fib; then\n        \
    \    i=$((i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n \
    \   prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"\
    2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\"\
    \ ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=47>
  stdout: <_io.BufferedReader name=44>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local is_prime=$(is_prime \"$fib_n\")\n  if [[ \"$is_prime\"\
    \ == \"true\" ]]; then\n    echo \"$fib_n\"\n  else\n    prime_fib \"$((n + 1))\"\
    \n  fi\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=32>
  stdout: <_io.BufferedReader name=16>
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=35>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local fib_prime=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            fib_prime=$fib\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib_num=1\n    local fib_num_prev=1\n    local fib_num_prev_prev=1\n\
    \    while [ $i -lt $n ]; do\n        fib_num_prev_prev=$fib_num_prev\n      \
    \  fib_num_prev=$fib_num\n        fib_num=$((fib_num_prev + fib_num_prev_prev))\n\
    \        if is_prime $fib_num; then\n            i=$((i + 1))\n        fi\n  \
    \  done\n    echo $fib_num\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local prime_fib=2\n  while [ $i -lt\
    \ $n ]; do\n    local fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if is_prime $fib; then\n      prime_fib=$fib\n      i=$((i + 1))\n    fi\n\
    \  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=62>
  stdout: <_io.BufferedReader name=19>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp\n   \
    \ while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib+fib_prev))\n\
    \        fib_prev=$fib_tmp\n        i=$((i+1))\n    done\n    while [ $fib -lt\
    \ $((fib_prev+fib)) ]; do\n        if is_prime $fib; then\n            echo $fib\n\
    \            return\n        fi\n        fib_tmp=$fib\n        fib=$((fib+fib_prev))\n\
    \        fib_prev=$fib_tmp\n    done\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime:
    command not found\n/tmp/tmp7pn5jik8.sh: line 26: is_prime: command not found\n/tmp/tmp7pn5jik8.sh:
    line 26: is_prime: '
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local count=0\n    while [ $count -lt $n ]; do\n        if [ $i -eq 1 ] ||\
    \ [ $i -eq 2 ]; then\n            fib=$i\n        else\n            fib_next=$((fib+fib_prev))\n\
    \            fib_prev=$fib\n            fib=$fib_next\n        fi\n        if\
    \ is_prime $fib; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=78>
  stdout: <_io.BufferedReader name=71>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  while ! is_prime \"$fib_n\"; do\n    n=$((n+1))\n   \
    \ fib_n=$(fib \"$n\")\n  done\n  echo \"$fib_n\"\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=40>
  stdout: <_io.BufferedReader name=27>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=1\n    local fib_n_1=1\n    local fib_n_2=1\n    local i=1\n\
    \    while [ $i -lt $n ]; do\n        fib_n=$((fib_n_1 + fib_n_2))\n        fib_n_2=$fib_n_1\n\
    \        fib_n_1=$fib_n\n        i=$((i + 1))\n    done\n    echo $fib_n\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n - 1))\")\n  local fib_n_2=$(fib\
    \ \"$((n - 2))\")\n  local fib_n_3=$(fib \"$((n - 3))\")\n  local fib_n_4=$(fib\
    \ \"$((n - 4))\")\n  local fib_n_5=$(fib \"$((n - 5))\")\n  local fib_n_6=$(fib\
    \ \"$((n - 6))\")\n  local fib_n_7=$(fib \"$((n - 7))\")\n  local fib_n_8=$(fib\
    \ \"$((n - 8))\")\n  local fib_n_9=$(fib \"$((n - 9))\")\n  local fib_n_10=$(fib\
    \ \"$((n - 10))\")\n  local fib_n_11=$(fib \"$((n - 11))\")\n  local fib_n_12=$(fib\
    \ \"$((n - 12))\")\n  local fib_n_13=$(fib \"$((n - 13))\")\n  local fib_n_14=$(fib\
    \ \"$((n - 14))\")\n  local fib_n_15=$(fib \"$((n - 15))\")\n  local fib_n_16=$(fib\
    \ \"$((n - 16))\")\n  local fib_n_17=$(fib \"$((n - 17))\")\n  local fib_n_18=$(fib\
    \ \"$((n - 18))\")\n  local fib_n_19=$(fib \"$((n - 19))\")\n  local fib_n_20=$(fib\
    \ \"$((n - 20))\")\n  local fib_n_21=$(fib \"$((n - 21))\")\n  local fib_n_22=$(fib\
    \ \"$((n - 22))\")\n  local fib_n_23=$(fib \"$((n - 23))\")\n  local fib_n_24=$(fib\
    \ \"$((n - 24))\")\n  local fib_n_25=$(fib \"$((n - 25))\")\n  local fib_n_26=$(fib\
    \ \"$((n - 26))\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwp0fkvh6.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpwp0fkvh6.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if [ $((fib % 2)) -ne 0 ] && is_prime $fib; then\n      i=$((i + 1))\n  \
    \  fi\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=66>
  stdout: <_io.BufferedReader name=32>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$(($fib\
    \ + $fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            prime_fib=$fib\n            i=$(($i + 1))\n\
    \        fi\n    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local prime=2\n  while [ $i -lt $n\
    \ ]; do\n    fib_prev=$fib\n    fib=$((fib + prime))\n    prime=$(prime_next $prime)\n\
    \    i=$((i + 1))\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=\"$1\"\n\
    \  local i=1\n  local fib=0\n  local fib_prev=1\n  local fib_tmp=0\n  while [\
    \ \"$i\" -le \"$n\" ]; do\n    fib_tmp=\"$fib\"\n    fib=$((fib + fib_prev))\n\
    \    fib_prev=\"$fib_tmp\"\n    if is_prime \"$fib\"; then\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo \"$fib\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=96>
  stdout: <_io.BufferedReader name=4>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if [ $(is_prime \"$fib\") == \"true\" ]; then\n      i=$((i + 1))\n    fi\n\
    \  done\n  echo \"$fib\"\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n - 1))\")\n  local fib_n_2=$(fib\
    \ \"$((n - 2))\")\n  local fib_n_3=$(fib \"$((n - 3))\")\n  local fib_n_4=$(fib\
    \ \"$((n - 4))\")\n  local fib_n_5=$(fib \"$((n - 5))\")\n  local fib_n_6=$(fib\
    \ \"$((n - 6))\")\n  local fib_n_7=$(fib \"$((n - 7))\")\n  local fib_n_8=$(fib\
    \ \"$((n - 8))\")\n  local fib_n_9=$(fib \"$((n - 9))\")\n  local fib_n_10=$(fib\
    \ \"$((n - 10))\")\n  local fib_n_11=$(fib \"$((n - 11))\")\n  local fib_n_12=$(fib\
    \ \"$((n - 12))\")\n  local fib_n_13=$(fib \"$((n - 13))\")\n  local fib_n_14=$(fib\
    \ \"$((n - 14))\")\n  local fib_n_15=$(fib \"$((n - 15))\")\n  local fib_n_16=$(fib\
    \ \"$((n - 16))\")\n  local fib_n_17=$(fib \"$((n - 17))\")\n  local fib_n_18=$(fib\
    \ \"$((n - 18))\")\n  local fib_n_19=$(fib \"$((n - 19))\")\n  local fib_n_20=$(fib\
    \ \"$((n - 20))\")\n  local fib_n_21=$(fib \"$((n - 21))\")\n  local fib_n_22=$(fib\
    \ \"$((n - 22))\")\n  local fib_n_23=$(fib \"$((n - 23))\")\n  local fib_n_24=$(fib\
    \ \"$((n - 24))\")\n  local fib_n_25=$(fib \"$((n - 25))\")\n  local fib_n_26=$(fib\
    \ \"$((n - 26))\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwp0fkvh6.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpwp0fkvh6.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_is_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    fib_is_prime=$(is_prime $fib)\n    if [ $fib_is_prime\
    \ -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while [[ ! $(is_prime \"$fib_n\") ]]; do\n\
    \        n=$((n+1))\n        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\
    \n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[\
    \ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[\
    \ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n   \
    \ [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n\
    \    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=91>
  stdout: <_io.BufferedReader name=42>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  local fib_i=$(fib \"$i\")\n  while [[ $fib_i\
    \ -lt $fib_n ]]; do\n    if [[ $(is_prime \"$fib_i\") == \"true\" ]]; then\n \
    \     ((i++))\n      fib_i=$(fib \"$i\")\n    else\n      ((i++))\n      fib_i=$(fib\
    \ \"$i\")\n    fi\n  done\n  echo \"$fib_i\"\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpu4pkwdwe.sh: line 15: fib: command not found\n/tmp/tmpu4pkwdwe.sh:
    line 17: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=67>
  stdout: <_io.BufferedReader name=64>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      fib_prime=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib +\
    \ fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=2\n\
    \  while [[ $i -lt $n ]]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [[ $(is_prime \"$fib\") -eq 1 ]]; then\n      prime_fib=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo \"$prime_fib\"\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=61>
  stdout: <_io.BufferedReader name=46>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   local fib_prime=0\n    local fib_prime_count=0\n    while [ $fib_prime_count\
    \ -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n      \
    \  fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ]; then\n          \
    \  fib_prime_count=$((fib_prime_count + 1))\n            fib_prime=$fib\n    \
    \    fi\n    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=86>
  stdout: <_io.BufferedReader name=65>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local f1=1\n  local f2=1\n  local f3=0\n  local f=0\n  while [ $i -lt\
    \ $n ]; do\n    f3=$((f1+f2))\n    f1=$f2\n    f2=$f3\n    if is_prime $f3; then\n\
    \      f=$f3\n    fi\n    i=$((i+1))\n  done\n  echo $f\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        if [ $(is_prime $fib) -eq 1 ]; then\n  \
    \          i=$(($i+1))\n        fi\n        fib_prev=$fib\n        fib=$fib_next\n\
    \        fib_next=$(($fib+$fib_prev))\n    done\n    echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=70>
  stdout: <_io.BufferedReader name=22>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=35>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local f1=1\n    local f2=1\n    local i=2\n    local f\n    while [ $i -lt\
    \ $n ]; do\n        f=$((f1 + f2))\n        f1=$f2\n        f2=$f\n        i=$((i\
    \ + 1))\n    done\n    while [ $f -lt 1000000 ]; do\n        if [ $(is_prime $f)\
    \ == \"true\" ]; then\n            echo $f\n            return\n        fi\n \
    \       f=$((f1 + f2))\n        f1=$f2\n        f2=$f\n    done\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmpqrknozrs.sh: line 25: [: -lt: unary operator expected\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local f=0\n    local f1=1\n    local f2=1\n    while [ $i\
    \ -lt $n ]; do\n        if [ $f -gt 1 ]; then\n            if [ $(is_prime $f)\
    \ -eq 1 ]; then\n                ((i++))\n            fi\n        fi\n       \
    \ f=$((f1 + f2))\n        f1=$f2\n        f2=$f\n    done\n    echo $f\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=34>
  stdout: <_io.BufferedReader name=21>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local fib_prime=0\n\
    \  local fib_prime_count=0\n  while [ $fib_prime_count -lt $n ]; do\n    fib_tmp=$fib\n\
    \    fib=$((fib+fib_prev))\n    fib_prev=$fib_tmp\n    if [ $(is_prime $fib) -eq\
    \ 1 ]; then\n      fib_prime=$fib\n      fib_prime_count=$((fib_prime_count+1))\n\
    \    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=89>
  stdout: <_io.BufferedReader name=82>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   local prime_fib=0\n    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n   \
    \     fib=$((fib+fib_prev))\n        fib_prev=$fib_tmp\n        if is_prime $fib;\
    \ then\n            prime_fib=$fib\n            i=$((i+1))\n        fi\n    done\n\
    \    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=1\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) = \"1\" ]; then\n  \
    \          i=$((i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local f=1\n  local p=1\n  while [ $i -lt $n ]; do\n    f=$(fib $((i+1)))\n\
    \    if is_prime $f; then\n      p=$f\n      i=$((i+1))\n    fi\n  done\n  echo\
    \ $p\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n  \
    \  [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n \
    \   [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_1=1\n  local fib_2=1\n  while [ $i -lt $n ];\
    \ do\n    fib=$((fib_1 + fib_2))\n    fib_2=$fib_1\n    fib_1=$fib\n    if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=13>
  stdout: <_io.BufferedReader name=12>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  local fib_i=$(fib \"$i\")\n  while [ \"\
    $fib_i\" -lt \"$fib_n\" ]; do\n    if [ \"$(is_prime \"$fib_i\")\" = \"true\"\
    \ ]; then\n      i=$((i+1))\n      fib_i=$(fib \"$i\")\n    else\n      i=$((i+1))\n\
    \      fib_i=$(fib \"$i\")\n    fi\n  done\n  echo \"$fib_i\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmphadad31q.sh: line 15: fib: command not found\n/tmp/tmphadad31q.sh:
    line 17: fib: command not found\n/tmp/tmphadad31q.sh: line 18: [: : integer expression
    expected\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  local fib_prime_count=0\n  while [ $fib_prime_count -lt $n ]; do\n    fib_next=$((fib\
    \ + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n    if is_prime $fib; then\n\
    \      fib_prime=$fib\n      fib_prime_count=$((fib_prime_count + 1))\n    fi\n\
    \  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\"\
    ) = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=58>
  stdout: <_io.BufferedReader name=50>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local fib_prime=1\n\
    \  local fib_prime_prev=1\n  local fib_prime_next=1\n  local fib_prime_count=0\n\
    \  local fib_prime_count_prev=0\n  local fib_prime_count_next=0\n  local fib_prime_count_diff=0\n\
    \  local fib_prime_count_diff_prev=0\n  local fib_prime_count_diff_next=0\n  local\
    \ fib_prime_count_diff_prev_prev=0\n  local fib_prime_count_diff_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev=0\n  local fib_prime_count_diff_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev=0\n  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \ local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_diff_prev\n}\n\ncandidate() {\n    prime_fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while (( i < n\
    \ )); do\n    (( fib_next = fib + fib_prev ))\n    (( fib_prev = fib ))\n    ((\
    \ fib = fib_next ))\n    (( i++ ))\n  done\n  echo \"$fib\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local prime_fib=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$(($fib + $fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $(is_prime $fib) == \"true\" ]; then\n      prime_fib=$fib\n\
    \      i=$(($i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  while [ $i -lt $n ]; do\n    local fib_i=$(fib\
    \ \"$i\")\n    if [ $(is_prime \"$fib_i\") == \"true\" ]; then\n      echo \"\
    $fib_i\"\n    fi\n    i=$((i+1))\n  done\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpdspgnaaw.sh: line 15: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local count=0\n\
    \  while [ $count -lt $n ]; do\n    if [ $i -eq 1 ]; then\n      fib=$fib_prev\n\
    \    elif [ $i -eq 2 ]; then\n      fib=$fib_next\n    else\n      fib=$((fib_prev\
    \ + fib_next))\n      fib_prev=$fib_next\n      fib_next=$fib\n    fi\n    if\
    \ [ $(is_prime $fib) -eq 1 ]; then\n      count=$((count + 1))\n    fi\n    i=$((i\
    \ + 1))\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=24>
  stdout: <_io.BufferedReader name=11>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local prime_fib=0\n\
    \  local prime_fib_count=0\n  while [ $prime_fib_count -lt $n ]; do\n    fib_tmp=$fib\n\
    \    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n    if [ $(is_prime $fib)\
    \ -eq 1 ]; then\n      prime_fib=$fib\n      prime_fib_count=$((prime_fib_count\
    \ + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=26>
  stdout: <_io.BufferedReader name=14>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n\
    \        fib_prev=$fib_tmp\n        if is_prime $fib; then\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local fib=0\n    while [ $k\
    \ -lt $n ]; do\n        fib=$((i + j))\n        i=$j\n        j=$fib\n       \
    \ if is_prime $fib; then\n            k=$((k + 1))\n        fi\n    done\n   \
    \ echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  local count=0\n\
    \  while [ $count -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if [ $(is_prime $fib) = \"true\" ]; then\n      count=$((count\
    \ + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=18>
  stdout: <_io.BufferedReader name=8>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=35>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  while [ $i -lt $n ]; do\n    local fib_i=$(fib\
    \ \"$i\")\n    if [ $(is_prime \"$fib_i\") -eq 1 ]; then\n      ((i++))\n    else\n\
    \      ((n++))\n    fi\n  done\n  echo \"$fib_n\"\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpixveszui.sh: line 15: fib: command not found\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local is_prime=0\n  while [ $i -lt\
    \ $n ]; do\n    local fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if [ $(is_prime $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n\
    \  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib $n)\n  local fib_n_1=$(fib $(($n - 1)))\n  local fib_n_2=$(fib $(($n\
    \ - 2)))\n  if is_prime $fib_n; then\n    echo $fib_n\n  elif is_prime $fib_n_1;\
    \ then\n    echo $fib_n_1\n  elif is_prime $fib_n_2; then\n    echo $fib_n_2\n\
    \  else\n    prime_fib $(($n + 1))\n  fi\n}\n\ncandidate() {\n    prime_fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[\
    \ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[\
    \ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n \
    \   [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\"\
    \ ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=30>
  timestamp: 1660360360
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    local fib_n_3=$(fib \"$((n - 3))\")\n   \
    \ local fib_n_4=$(fib \"$((n - 4))\")\n    local fib_n_5=$(fib \"$((n - 5))\"\
    )\n    local fib_n_6=$(fib \"$((n - 6))\")\n    local fib_n_7=$(fib \"$((n - 7))\"\
    )\n    local fib_n_8=$(fib \"$((n - 8))\")\n    local fib_n_9=$(fib \"$((n - 9))\"\
    )\n    local fib_n_10=$(fib \"$((n - 10))\")\n    local fib_n_11=$(fib \"$((n\
    \ - 11))\")\n    local fib_n_12=$(fib \"$((n - 12))\")\n    local fib_n_13=$(fib\
    \ \"$((n - 13))\")\n    local fib_n_14=$(fib \"$((n - 14))\")\n    local fib_n_15=$(fib\
    \ \"$((n - 15))\")\n    local fib_n_16=$(fib \"$((n - 16))\")\n    local fib_n_17=$(fib\
    \ \"$((n - 17))\")\n    local fib_n_18=$(fib \"$((n - 18))\")\n    local fib_n_19=$(fib\
    \ \"$((n - 19))\")\n    local fib_n_20=$(fib \"$((n - 20))\")\n    local fib_n_21=$(fib\
    \ \"$((n - 21))\")\n    local fib_n_22=$(fib \"$((n - 22))\")\n    local fib_n_23=$(fib\
    \ \"$((n - 23))\")\n    local fib_n_24=$(fib \"$((n - 24))\")\n    local fib_n_25=$(fib\
    \ \"$((n - 25))\")\n    local fib_n_26=$(fib \"$((n - 26))\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kj51e7e.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp1kj51e7e.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_num=$(fib \"$n\")\n  local prime_num=$(prime \"$fib_num\")\n  echo \"$prime_num\"\
    \n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[\
    \ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[\
    \ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n   \
    \ [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n\
    \    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpilxhmk5d.sh: line 15: fib: command not found\n/tmp/tmpilxhmk5d.sh:
    line 16: prime: command not found\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    local fib_n_3=$(fib \"$((n - 3))\")\n   \
    \ local fib_n_4=$(fib \"$((n - 4))\")\n    local fib_n_5=$(fib \"$((n - 5))\"\
    )\n    local fib_n_6=$(fib \"$((n - 6))\")\n    local fib_n_7=$(fib \"$((n - 7))\"\
    )\n    local fib_n_8=$(fib \"$((n - 8))\")\n    local fib_n_9=$(fib \"$((n - 9))\"\
    )\n    local fib_n_10=$(fib \"$((n - 10))\")\n    local fib_n_11=$(fib \"$((n\
    \ - 11))\")\n    local fib_n_12=$(fib \"$((n - 12))\")\n    local fib_n_13=$(fib\
    \ \"$((n - 13))\")\n    local fib_n_14=$(fib \"$((n - 14))\")\n    local fib_n_15=$(fib\
    \ \"$((n - 15))\")\n    local fib_n_16=$(fib \"$((n - 16))\")\n    local fib_n_17=$(fib\
    \ \"$((n - 17))\")\n    local fib_n_18=$(fib \"$((n - 18))\")\n    local fib_n_19=$(fib\
    \ \"$((n - 19))\")\n    local fib_n_20=$(fib \"$((n - 20))\")\n    local fib_n_21=$(fib\
    \ \"$((n - 21))\")\n    local fib_n_22=$(fib \"$((n - 22))\")\n    local fib_n_23=$(fib\
    \ \"$((n - 23))\")\n    local fib_n_24=$(fib \"$((n - 24))\")\n    local fib_n_25=$(fib\
    \ \"$((n - 25))\")\n    local fib_n_26=$(fib \"$((n - 26))\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kj51e7e.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp1kj51e7e.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib=1\n    local prime_fib_count=0\n    while [ $prime_fib_count\
    \ -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        fib=$fib_next\n        if is_prime $fib; then\n            prime_fib=$fib\n\
    \            prime_fib_count=$((prime_fib_count + 1))\n        fi\n    done\n\
    \    echo $prime_fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\")\
    \ = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\")\
    \ = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\"\
    ) = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"\
    8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=37>
  stdout: <_io.BufferedReader name=23>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local prime_fib_count=0\n    while [ $prime_fib_count -lt $n ]; do\n    \
    \    fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n\
    \        if is_prime $fib; then\n            prime_fib_count=$((prime_fib_count\
    \ + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=29>
  stdout: <_io.BufferedReader name=3>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local prime_fib=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if is_prime $fib; then\n      prime_fib=$fib\n     \
    \ i=$((i + 1))\n    fi\n  done\n  echo $prime_fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    if is_prime $fib; then\n      i=$((i+1))\n    fi\n    fib_tmp=$fib\n\
    \    fib=$((fib+fib_prev))\n    fib_prev=$fib_tmp\n  done\n  echo $fib\n}\n\n\
    candidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=55>
  stdout: <_io.BufferedReader name=40>
  timestamp: 1660360360
- exit_code: 2
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n - 1))\")\n    local\
    \ fib_n_2=$(fib \"$((n - 2))\")\n    local fib_n_3=$(fib \"$((n - 3))\")\n   \
    \ local fib_n_4=$(fib \"$((n - 4))\")\n    local fib_n_5=$(fib \"$((n - 5))\"\
    )\n    local fib_n_6=$(fib \"$((n - 6))\")\n    local fib_n_7=$(fib \"$((n - 7))\"\
    )\n    local fib_n_8=$(fib \"$((n - 8))\")\n    local fib_n_9=$(fib \"$((n - 9))\"\
    )\n    local fib_n_10=$(fib \"$((n - 10))\")\n    local fib_n_11=$(fib \"$((n\
    \ - 11))\")\n    local fib_n_12=$(fib \"$((n - 12))\")\n    local fib_n_13=$(fib\
    \ \"$((n - 13))\")\n    local fib_n_14=$(fib \"$((n - 14))\")\n    local fib_n_15=$(fib\
    \ \"$((n - 15))\")\n    local fib_n_16=$(fib \"$((n - 16))\")\n    local fib_n_17=$(fib\
    \ \"$((n - 17))\")\n    local fib_n_18=$(fib \"$((n - 18))\")\n    local fib_n_19=$(fib\
    \ \"$((n - 19))\")\n    local fib_n_20=$(fib \"$((n - 20))\")\n    local fib_n_21=$(fib\
    \ \"$((n - 21))\")\n    local fib_n_22=$(fib \"$((n - 22))\")\n    local fib_n_23=$(fib\
    \ \"$((n - 23))\")\n    local fib_n_24=$(fib \"$((n - 24))\")\n    local fib_n_25=$(fib\
    \ \"$((n - 25))\")\n    local fib_n_26=$(fib \"$((n - 26))\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kj51e7e.sh: line 59: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp1kj51e7e.sh: line 63: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360345
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n\
    \ + 1))\n        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=5>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp=0\n \
    \   local fib_prime=0\n    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n   \
    \     fib=$((fib + fib_prev))\n        fib_prev=$fib_tmp\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            fib_prime=$fib\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=0\n    local fib_prev=1\n    while [ $i -lt $n ];\
    \ do\n        local fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n    \
    \    fib=$fib_next\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360355
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    i=$((i + 1))\n  done\n  while true; do\n    if [ $(is_prime \"$fib\") -eq\
    \ 1 ]; then\n      echo \"$fib\"\n      break\n    fi\n    fib_tmp=$fib\n    fib=$((fib\
    \ + fib_prev))\n    fib_prev=$fib_tmp\n  done\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=56>
  stdout: <_io.BufferedReader name=51>
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local fib=0\n  while [ $k -lt $n ]; do\n  \
    \  fib=$((i + j))\n    i=$j\n    j=$fib\n    if is_prime $fib; then\n      k=$((k\
    \ + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$(($fib + $fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if [ $(is_prime $fib) -eq 1 ]; then\n      i=$(($i + 1))\n    fi\n  done\n\
    \  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n\
    \    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n\
    \    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n\
    \    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\"\
    \ ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") =\
    \ \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local i=1\n  local fib_i=$(fib \"$i\")\n  while [ \"\
    $fib_i\" -lt \"$fib_n\" ]; do\n    if [ \"$(is_prime \"$fib_i\")\" = \"true\"\
    \ ]; then\n      i=$((i+1))\n      fib_i=$(fib \"$i\")\n    else\n      i=$((i+1))\n\
    \      fib_i=$(fib \"$i\")\n    fi\n  done\n  echo \"$fib_i\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmphadad31q.sh: line 15: fib: command not found\n/tmp/tmphadad31q.sh:
    line 17: fib: command not found\n/tmp/tmphadad31q.sh: line 18: [: : integer expression
    expected\n'''
  stdout: b''
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local fib_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if [ $((fib % 2)) -eq 0 ]; then\n      continue\n  \
    \  fi\n    if [ $(is_prime $fib) -eq 1 ]; then\n      fib_prime=$fib\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360360
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        fib_next=$(($fib + $fib_prev))\n       \
    \ fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n     \
    \       i=$(($i + 1))\n        fi\n    done\n    echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360350
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib=$fib_next\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=67>
  stdout: <_io.BufferedReader name=64>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    fib_next=$(($fib + $fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n\
    \    if is_prime $fib; then\n      i=$(($i + 1))\n    fi\n  done\n  echo $fib\n\
    }\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
    \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate\
    \ \"5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n  while [ $i -lt\
    \ $n ]; do\n    if [ $i -gt 1 ]; then\n      fib_prev=$fib\n      fib=$fib_next\n\
    \      fib_next=$((fib + fib_prev))\n    fi\n    if [ $(is_prime $fib) -eq 1 ];\
    \ then\n      i=$((i + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n\
    \    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") =\
    \ \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") =\
    \ \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=38>
  stdout: <_io.BufferedReader name=4>
  timestamp: 1660360365
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    if is_prime \"$fib_n\"; then\n        echo\
    \ \"$fib_n\"\n    else\n        prime_fib \"$((n + 1))\"\n    fi\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=42>
  stdout: <_io.BufferedReader name=31>
  timestamp: 1660360350
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib\
    \ \"$((n-2))\")\n  if [[ $(is_prime \"$fib_n\") == \"true\" ]]; then\n    echo\
    \ \"$fib_n\"\n  elif [[ $(is_prime \"$fib_n_1\") == \"true\" ]]; then\n    echo\
    \ \"$fib_n_1\"\n  elif [[ $(is_prime \"$fib_n_2\") == \"true\" ]]; then\n    echo\
    \ \"$fib_n_2\"\n  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp6v80mos0.sh: line 15: fib: command not found\n/tmp/tmp6v80mos0.sh:
    line 16: fib: command not found\n/tmp/tmp6v80mos0.sh: line 17: fib: command not
    found\n/tmp/tmp6v80mos0.sh: line 18: is_prime: command not found\n/tmp/tmp6v80mos0.sh:
    line 20: is_prime: command not found\n/tmp/tmp6v80mos0.sh: line 22: is_prime:
    command not found\n'''
  stdout: b''
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        if is_prime $fib; then\n            i=$((i+1))\n\
    \        fi\n        fib_next=$((fib+fib_prev))\n        fib_prev=$fib\n     \
    \   fib=$fib_next\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=26>
  stdout: <_io.BufferedReader name=20>
  timestamp: 1660360355
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local fib=0\n  while [ $k -lt $n ]; do\n  \
    \  fib=$((i + j))\n    i=$j\n    j=$fib\n    if is_prime $fib; then\n      k=$((k\
    \ + 1))\n    fi\n  done\n  echo $fib\n}\n\ncandidate() {\n    prime_fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n    [[ $(candidate\
    \ \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\" ]]\n    [[ $(candidate\
    \ \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"514229\" ]]\n    [[ $(candidate\
    \ \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360345
- exit_code: 1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n  local n=$1\n  local\
    \ i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n  local fib_prime=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if is_prime $fib; then\n      fib_prime=$fib\n     \
    \ i=$((i + 1))\n    fi\n  done\n  echo $fib_prime\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    while ! is_prime \"$fib_n\"; do\n        n=$((n+1))\n\
    \        fib_n=$(fib \"$n\")\n    done\n    echo \"$fib_n\"\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=35>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360360
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n\
    \    while [ $i -lt $n ]; do\n        if is_prime $fib; then\n            ((i++))\n\
    \        fi\n        fib=$fib_next\n        fib_next=$((fib + fib_prev))\n   \
    \     fib_prev=$fib\n    done\n    echo $fib\n}\n\ncandidate() {\n    prime_fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n  \
    \  [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\") = \"89\" ]]\n\
    \    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\") = \"1597\"\
    \ ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate \"9\") = \"\
    514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=6>
  stdout: <_io.BufferedReader name=32>
  timestamp: 1660360365
- exit_code: -1
  program: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"\
    2\")\n# \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n#\
    \ \"13\"\n# >>> $(prime_fib \"5\")\n# \"89\"\nprime_fib() {\n    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n\
    \    local count=0\n    while [ $count -lt $n ]; do\n        if [ $i -eq 1 ] ||\
    \ [ $i -eq 2 ]; then\n            fib=$i\n        else\n            fib_next=$(($fib\
    \ + $fib_prev))\n            fib_prev=$fib\n            fib=$fib_next\n      \
    \  fi\n        if [ $(is_prime $fib) -eq 1 ]; then\n            count=$(($count\
    \ + 1))\n        fi\n        i=$(($i + 1))\n    done\n    echo $fib\n}\n\ncandidate()\
    \ {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate \"3\")\
    \ = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"5\"\
    ) = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"7\"\
    ) = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
    \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.BufferedReader name=42>
  stdout: <_io.BufferedReader name=10>
  timestamp: 1660360365

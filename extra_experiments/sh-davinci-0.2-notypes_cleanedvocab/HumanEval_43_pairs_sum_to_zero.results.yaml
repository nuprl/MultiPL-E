language: sh
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input_list=$1\n    local input_array=($input_list)\n    local input_length=${#input_array[@]}\n\
    \    local i\n    local j\n    for ((i=0; i<input_length; i++)); do\n        for\
    \ ((j=i+1; j<input_length; j++)); do\n            if [[ $((input_array[i] + input_array[j]))\
    \ -eq 0 ]]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpa2ggcimj.sh: line 17: syntax error near unexpected token `}''\n/tmp/tmpa2ggcimj.sh:
    line 17: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=($@)\n    local i=0\n    local j=0\n    local len=${#input[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n    \
    \        if [[ ${input[i]} + ${input[j]} -eq 0 ]]; then\n                echo\
    \ \"true\"\n                return\n            fi\n        done\n    done\n \
    \   echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmf0ikx3n.sh: line 22: conditional binary operator expected\n/tmp/tmpmf0ikx3n.sh:
    line 22: syntax error near `+''\n/tmp/tmpmf0ikx3n.sh: line 22: `            if
    [[ ${input[i]} + ${input[j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  # hint: you can use the following function to check if\
    \ a number is in the list\n  # >>> $(contains \"1 2 3\" \"1\")\n  # \"true\"\n\
    \  # >>> $(contains \"1 2 3\" \"4\")\n  # \"false\"\n  contains() {\n    local\
    \ list=\"$1\"\n    local item=\"$2\"\n    if [[ $list =~ (^|[[:space:]])\"$item\"\
    ($|[[:space:]]) ]] ; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  }\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a nums=($@)\n    local -a pos\n    local -a neg\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        if [[ ${nums[$i]} -lt 0 ]]; then\n            neg+=(${nums[$i]})\n\
    \        else\n            pos+=(${nums[$i]})\n        fi\n    done\n    for ((i=0;\
    \ i<${#neg[@]}; i++)); do\n        for ((j=0; j<${#pos[@]}; j++)); do\n      \
    \      if [[ ${neg[$i]} + ${pos[$j]} -eq 0 ]]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp_rt_j25w.sh: line 28: conditional binary operator expected\n/tmp/tmp_rt_j25w.sh:
    line 28: syntax error near `+''\n/tmp/tmp_rt_j25w.sh: line 28: `            if
    [[ ${neg[$i]} + ${pos[$j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array=($@)\n    local -a seen=()\n    for i in \"${array[@]}\";\
    \ do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            echo\
    \ \"true\"\n            return\n        fi\n        seen+=($((-i)))\n    done\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($1)\n  local len=${#input[@]}\n  local i=0\n  local j=0\n  local\
    \ sum=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n  \
    \    sum=$((input[i] + input[j]))\n      if [ $sum -eq 0 ]; then\n        echo\
    \ \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array=($@)\n    local -a hash\n    local i\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        local num=${array[$i]}\n        local other=$((-num))\n \
    \       if [[ ${hash[$other]} ]]; then\n            echo \"true\"\n          \
    \  return\n        fi\n        hash[$num]=true\n    done\n    echo \"false\"\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp2ousa4zu.sh: line 22: hash: bad array subscript\n/tmp/tmp2ousa4zu.sh:
    line 22: hash: bad array subscript\n/tmp/tmp2ousa4zu.sh: line 22: hash: bad array
    subscript\n/tmp/tmp2ousa4zu.sh: line 22: hash: bad array subscript\n/tmp/tmp2ousa4zu.sh:
    line 22: hash: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=\"$1\"\n  local input_array=($input)\n  local input_length=${#input_array[@]}\n\
    \  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<input_length; i++));\
    \ do\n    for ((j=i+1; j<input_length; j++)); do\n      sum=$((input_array[i]\
    \ + input_array[j]))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\n \
    \       return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=\"$1\"\n  local nums=($input)\n  local num_nums=${#nums[@]}\n \
    \ local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<num_nums; i++)); do\n\
    \    for ((j=i+1; j<num_nums; j++)); do\n      sum=$((nums[i] + nums[j]))\n  \
    \    if [[ $sum -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n\
    \    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a list=($@)\n    local -a seen=()\n    local -i i=0\n    local -i\
    \ len=${#list[@]}\n    local -i num=0\n    local -i diff=0\n    local -i result=0\n\
    \    for ((i=0; i<len; i++)); do\n        num=${list[$i]}\n        diff=$((0 -\
    \ num))\n        if [[ ${seen[$diff]} ]]; then\n            result=1\n       \
    \     break\n        fi\n        seen[$num]=1\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpcpk92u20.sh: line 26: seen: bad array subscript\n/tmp/tmpcpk92u20.sh:
    line 26: seen: bad array subscript\n/tmp/tmpcpk92u20.sh: line 26: seen: bad array
    subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local nums=($1)\n  local len=${#nums[@]}\n  local i\n  local j\n  for ((i=0;\
    \ i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[ ${nums[i]}\
    \ -eq -${nums[j]} ]]; then\n        echo \"true\"\n        return\n      fi\n\
    \    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  # hint: use the \"sort\" command\n  # hint: use the \"\
    uniq\" command\n  # hint: use the \"tr\" command\n  # hint: use the \"grep\" command\n\
    \  # hint: use the \"wc\" command\n  # hint: use the \"cut\" command\n  # hint:\
    \ use the \"head\" command\n  # hint: use the \"tail\" command\n  # hint: use\
    \ the \"seq\" command\n  # hint: use the \"paste\" command\n  # hint: use the\
    \ \"xargs\" command\n  # hint: use the \"bc\" command\n  # hint: use the \"echo\"\
    \ command\n  # hint: use the \"tr\" command\n  # hint: use the \"grep\" command\n\
    \  # hint: use the \"wc\" command\n  # hint: use the \"cut\" command\n  # hint:\
    \ use the \"head\" command\n  # hint: use the \"tail\" command\n  # hint: use\
    \ the \"seq\" command\n  # hint: use the \"paste\" command\n  # hint: use the\
    \ \"xargs\" command\n  # hint: use the \"bc\" command\n  # hint: use the \"echo\"\
    \ command\n  # hint: use the \"tr\" command\n  # hint: use the \"grep\" command\n\
    \  # hint: use the \"wc\" command\n  # hint: use the \"cut\" command\n  # hint:\
    \ use the \"head\" command\n  # hint: use the \"tail\" command\n  # hint: use\
    \ the \"seq\" command\n  # hint: use the \"paste\" command\n  # hint: use the\
    \ \"xargs\" command\n  # hint: use the \"bc\" command\n  # hint: use the \"echo\"\
    \ command\n  # hint: use the \"tr\" command\n  # hint: use the \"grep\" command\n\
    \  # hint: use the \"wc\" command\n  # hint: use the \"cut\" command\n  # hint:\
    \ use the \"head\" command\n  # hint: use the \"tail\" command\n  # hint: use\
    \ the \"seq\" command\n  # hint: use the \"paste\" command\n  # hint: use the\
    \ \"xargs\" command\n  # hint: use the \"bc\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmxjga0yg.sh: line 62: syntax error near unexpected token `}''\n/tmp/tmpmxjga0yg.sh:
    line 62: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=\"$1\"\n  local sum=0\n  local i=0\n  local j=0\n  local len=0\n\
    \  local num=0\n  local num2=0\n  local nums=()\n  local nums2=()\n  local nums3=()\n\
    \  local nums4=()\n  local nums5=()\n  local nums6=()\n  local nums7=()\n  local\
    \ nums8=()\n  local nums9=()\n  local nums10=()\n  local nums11=()\n  local nums12=()\n\
    \  local nums13=()\n  local nums14=()\n  local nums15=()\n  local nums16=()\n\
    \  local nums17=()\n  local nums18=()\n  local nums19=()\n  local nums20=()\n\
    \  local nums21=()\n  local nums22=()\n  local nums23=()\n  local nums24=()\n\
    \  local nums25=()\n  local nums26=()\n  local nums27=()\n  local nums28=()\n\
    \  local nums29=()\n  local nums30=()\n  local nums31=()\n  local nums32=()\n\
    \  local nums33=()\n  local nums34=()\n  local nums35=()\n  local nums36=()\n\
    \  local nums37=()\n  local nums38=()\n  local nums39=()\n  local nums40=()\n\
    \  local nums41=()\n  local nums42=()\n  local nums43=()\n  local nums44=()\n\
    \  local nums45=()\n  local nums46=()\n  local nums47=()\n  local nums48=()\n\
    \  local nums49=()\n  local nums50=()\n  local nums51=()\n  local nums52=()\n\
    \  local nums53=()\n  local nums54=()\n  local nums55=()\n  local nums56=()\n\
    \  local nums57=()\n  local nums58=()\n  local num\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=$1\n  local nums=($list)\n  local nums_len=${#nums[@]}\n  local\
    \ i\n  local j\n  local sum\n  for ((i=0; i<nums_len; i++)); do\n    for ((j=i+1;\
    \ j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=$1\n  local count=0\n  local i=0\n  local j=0\n  local sum=0\n \
    \ for i in $list; do\n    for j in $list; do\n      if [ $i -ne $j ]; then\n \
    \       sum=$(( $i + $j ))\n        if [ $sum -eq 0 ]; then\n          count=$((\
    \ $count + 1 ))\n        fi\n      fi\n    done\n  done\n  if [ $count -gt 0 ];\
    \ then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=$1\n    local numbers=($input)\n    local length=${#numbers[@]}\n\
    \    local i=0\n    local j=0\n    local sum=0\n    while [ $i -lt $length ]\n\
    \    do\n        j=$((i+1))\n        while [ $j -lt $length ]\n        do\n  \
    \          sum=$((numbers[i]+numbers[j]))\n            if [ $sum -eq 0 ]\n   \
    \         then\n                echo \"true\"\n                return\n      \
    \      fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=($@)\n    local i\n    local j\n    for ((i=0; i<${#input[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#input[@]}; j++)); do\n            if [\
    \ $((${input[$i]} + ${input[$j]})) -eq 0 ]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # Hint: use the following functions:\n \
    \ #   - sort\n  #   - uniq\n  #   - head\n  #   - tail\n  #   - wc\n  #   - tr\n\
    \  #   - expr\n  #   - read\n  #   - echo\n  #   - return\n  #   - for\n  #  \
    \ - if\n  #   - continue\n  #   - break\n  #   - read\n  #   - echo\n  #   - return\n\
    \  #   - for\n  #   - if\n  #   - continue\n  #   - break\n  #   - read\n  # \
    \  - echo\n  #   - return\n  #   - for\n  #   - if\n  #   - continue\n  #   -\
    \ break\n  #   - read\n  #   - echo\n  #   - return\n  #   - for\n  #   - if\n\
    \  #   - continue\n  #   - break\n  #   - read\n  #   - echo\n  #   - return\n\
    \  #   - for\n  #   - if\n  #   - continue\n  #   - break\n  #   - read\n  # \
    \  - echo\n  #   - return\n  #   - for\n  #   - if\n  #   - continue\n  #   -\
    \ break\n  #   - read\n  #   - echo\n  #   - return\n  #   - for\n  #   - if\n\
    \  #   - continue\n  #   - break\n  #   - read\n  #   - echo\n  #   - return\n\
    \  #   - for\n  #   - if\n  #   - continue\n  #   - break\n  #   - read\n  # \
    \  - echo\n  #   - return\n  #   - for\n  #   - if\n  #   - continue\n  #   -\
    \ break\n  #   - read\n  #   - echo\n  #   - return\n  #   - for\n  #   - if\n\
    \  #   - continue\n  #   - break\n  #   - read\n  #   - echo\n  #   - return\n\
    \  #   - for\n  #  \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpsdacda42.sh: line 100: syntax error near unexpected token `}''\n/tmp/tmpsdacda42.sh:
    line 100: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=($@)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n\
    \    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len;\
    \ j++)); do\n            sum=$((${list[$i]} + ${list[$j]}))\n            if [\
    \ $sum -eq 0 ]; then\n                echo \"true\"\n                return\n\
    \            fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n    local -i i=0\n    local -i j=${#arr_sorted[@]}-1\n    while\
    \ [ $i -lt $j ]; do\n        local -i sum=$((arr_sorted[i]+arr_sorted[j]))\n \
    \       if [ $sum -eq 0 ]; then\n            echo \"true\"\n            return\n\
    \        elif [ $sum -lt 0 ]; then\n            ((i++))\n        else\n      \
    \      ((j--))\n        fi\n    done\n    echo \"false\"\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($1)\n  local -a seen\n  for num in \"${nums[@]}\"; do\n    if\
    \ [[ \"${seen[$num]}\" ]]; then\n      echo \"true\"\n      return\n    fi\n \
    \   seen[$((-num))]=true\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpgpst3myp.sh: line 23: seen[$((-num))]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=($@)\n    local -a set\n    local -i i\n    local -i j\n   \
    \ local -i len=${#arr[@]}\n    local -i sum\n    for ((i=0; i<len; i++)); do\n\
    \        for ((j=i+1; j<len; j++)); do\n            sum=${arr[i]}+${arr[j]}\n\
    \            if [[ $sum -eq 0 ]]; then\n                echo true\n          \
    \      return\n            fi\n        done\n    done\n    echo false\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local numbers=($@)\n    local num_numbers=${#numbers[@]}\n    local i=0\n\
    \    local j=0\n    local sum=0\n    for ((i=0; i<num_numbers; i++)); do\n   \
    \     for ((j=i+1; j<num_numbers; j++)); do\n            sum=$((numbers[i] + numbers[j]))\n\
    \            if [[ $sum -eq 0 ]]; then\n                echo \"true\"\n      \
    \          return\n            fi\n        done\n    done\n    echo \"false\"\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local nums_length=${#nums[@]}\n  local\
    \ i\n  local j\n  local sum\n  for ((i=0; i<nums_length; i++)); do\n    for ((j=i+1;\
    \ j<nums_length; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[ $sum\
    \ -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: use the \"sort\" and \"uniq\"\
    \ commands.\n    # Hint: use the \"in\" function to check if an element is in\
    \ a list.\n    # Hint: use the \"seq\" command to generate a list of numbers.\n\
    \    # Hint: use the \"let\" command to perform arithmetic.\n    # Hint: use the\
    \ \"echo\" command to return a value.\n    # Hint: use the \"return\" command\
    \ to return a value.\n    # Hint: use the \"exit\" command to return a value.\n\
    \    # Hint: use the \"read\" command to read a value.\n    # Hint: use the \"\
    set\" command to set a variable.\n    # Hint: use the \"local\" command to set\
    \ a variable.\n    # Hint: use the \"declare\" command to set a variable.\n  \
    \  # Hint: use the \"export\" command to set a variable.\n    # Hint: use the\
    \ \"readonly\" command to set a variable.\n    # Hint: use the \"shift\" command\
    \ to remove the first element of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n    # Hint: use the \"shift\" command\
    \ to remove the first argument of a list.\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpgig_2sbl.sh: line 43: syntax error near unexpected token `}''\n/tmp/tmpgig_2sbl.sh:
    line 43: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  # hint: you can use the following command to sort a list\
    \ of integers\n  # sort -n -k 1\n  # you can use the following command to test\
    \ if a list of integers contains a given integer\n  # echo \"1 2 3\" | grep -q\
    \ \"2\"\n  # the above command returns true if the list contains the integer 2,\
    \ and false otherwise\n  # you can use the following command to test if a list\
    \ of integers contains a given integer\n  # echo \"1 2 3\" | grep -q \"4\"\n \
    \ # the above command returns false if the list contains the integer 4, and true\
    \ otherwise\n  # you can use the following command to test if a list of integers\
    \ contains a given integer\n  # echo \"1 2 3\" | grep -q \"4\"\n  # the above\
    \ command returns false if the list contains the integer 4, and true otherwise\n\
    \  # you can use the following command to test if a list of integers contains\
    \ a given integer\n  # echo \"1 2 3\" | grep -q \"4\"\n  # the above command returns\
    \ false if the list contains the integer 4, and true otherwise\n  # you can use\
    \ the following command to test if a list of integers contains a given integer\n\
    \  # echo \"1 2 3\" | grep -q \"4\"\n  # the above command returns false if the\
    \ list contains the integer 4, and true otherwise\n  # you can use the following\
    \ command to test if a list of integers contains a given integer\n  # echo \"\
    1 2 3\" | grep -q \"4\"\n  # the above command returns false if the list contains\
    \ the integer 4, and true otherwise\n  # you can use the following command to\
    \ test if a list of integers contains a given integer\n  # echo \"1 2 3\" | grep\
    \ -q \"4\"\n  # the above command returns false if the list contains the integer\
    \ 4, and true otherwise\n  # you can use the following command to test if a list\
    \ of integers contains a given integer\n  # echo \"1 2 3\" | grep -q \"4\"\n \
    \ # the above command returns false if the list contains the integer 4, and true\
    \ otherwise\n  # you can use the following command to test if a list of integers\
    \ contains a given integer\n  # echo \"1 2 3\" | grep -q \"4\"\n  # the\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmprxj9gcch.sh: line 46: syntax error near unexpected token `}''\n/tmp/tmprxj9gcch.sh:
    line 46: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local nums=($@)\n  local nums_len=${#nums[@]}\n  local i=0\n  local j=0\n \
    \ local sum=0\n  for ((i=0; i<nums_len; i++)); do\n    for ((j=i+1; j<nums_len;\
    \ j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[ $sum -eq 0 ]]; then\n\
    \        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($1)\n  local -a seen\n  for num in \"${nums[@]}\"; do\n    if\
    \ [[ \"${seen[$num]}\" ]]; then\n      echo \"true\"\n      return\n    fi\n \
    \   seen[$((-num))]=1\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpj5fgqj8z.sh: line 23: seen[$((-num))]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a input=($@)\n    local -a seen=()\n    for i in \"${input[@]}\";\
    \ do\n        if [[ ${seen[$i]} ]]; then\n            echo \"true\"\n        \
    \    return\n        fi\n        seen[$((-i))]=1\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpyd4o19wa.sh: line 23: seen[$((-i))]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=($@)\n  local -a negative_array=()\n  local -a positive_array=()\n\
    \  for i in \"${array[@]}\"; do\n    if [ $i -lt 0 ]; then\n      negative_array+=($i)\n\
    \    else\n      positive_array+=($i)\n    fi\n  done\n  for i in \"${negative_array[@]}\"\
    ; do\n    for j in \"${positive_array[@]}\"; do\n      if [ $((i + j)) -eq 0 ];\
    \ then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # Hint: use the sort command\n  # Hint:\
    \ use the head and tail commands\n  # Hint: use the -eq operator\n  # Hint: use\
    \ the -ne operator\n  # Hint: use the -z operator\n  # Hint: use the -n operator\n\
    \  # Hint: use the -gt operator\n  # Hint: use the -lt operator\n  # Hint: use\
    \ the -ge operator\n  # Hint: use the -le operator\n  # Hint: use the -o operator\n\
    \  # Hint: use the -a operator\n  # Hint: use the -f operator\n  # Hint: use the\
    \ -d operator\n  # Hint: use the -e operator\n  # Hint: use the -r operator\n\
    \  # Hint: use the -w operator\n  # Hint: use the -x operator\n  # Hint: use the\
    \ -s operator\n  # Hint: use the -b operator\n  # Hint: use the -c operator\n\
    \  # Hint: use the -p operator\n  # Hint: use the -u operator\n  # Hint: use the\
    \ -g operator\n  # Hint: use the -k operator\n  # Hint: use the -t operator\n\
    \  # Hint: use the -O operator\n  # Hint: use the -G operator\n  # Hint: use the\
    \ -L operator\n  # Hint: use the -S operator\n  # Hint: use the -N operator\n\
    \  # Hint: use the -nt operator\n  # Hint: use the -ot operator\n  # Hint: use\
    \ the -ef operator\n  # Hint: use the -o operator\n  # Hint: use the -a operator\n\
    \  # Hint: use the -o operator\n  # Hint: use the -a operator\n  # Hint: use the\
    \ -o operator\n  # Hint: use the -a operator\n  # Hint: use the -o operator\n\
    \  # Hint: use the -a operator\n  # Hint: use the -o operator\n  # Hint: use the\
    \ -a operator\n  # Hint: use the -o operator\n  # Hint: use the\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpv_i0mcmo.sh: line 63: syntax error near unexpected token `}''\n/tmp/tmpv_i0mcmo.sh:
    line 63: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($@)\n  local i\n  local j\n  for ((i=0; i<${#input[@]}; i++));\
    \ do\n    for ((j=i+1; j<${#input[@]}; j++)); do\n      if [[ ${input[i]} + ${input[j]}\
    \ -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp3e2_6xon.sh: line 21: conditional binary operator expected\n/tmp/tmp3e2_6xon.sh:
    line 21: syntax error near `+''\n/tmp/tmp3e2_6xon.sh: line 21: `      if [[ ${input[i]}
    + ${input[j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=($@)\n    local n=${#input[@]}\n    local i=0\n    local j=0\n\
    \    local sum=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++));\
    \ do\n            sum=$((input[i] + input[j]))\n            if [ $sum -eq 0 ];\
    \ then\n                echo \"true\"\n                return\n            fi\n\
    \        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=$1\n    local numbers=($input)\n    local number_count=${#numbers[@]}\n\
    \    local i\n    local j\n    for ((i=0; i<number_count; i++)); do\n        for\
    \ ((j=i+1; j<number_count; j++)); do\n            if [ $((numbers[i] + numbers[j]))\
    \ -eq 0 ]; then\n                echo \"true\"\n                return\n     \
    \       fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=$1\n    local nums=($input)\n    local nums_len=${#nums[@]}\n\
    \    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<nums_len; i++));\
    \ do\n        for ((j=i+1; j<nums_len; j++)); do\n            sum=$((nums[i] +\
    \ nums[j]))\n            if [[ $sum -eq 0 ]]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local nums_len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  for ((i=0; i<nums_len; i++)); do\n    for ((j=i+1; j<nums_len;\
    \ j++)); do\n      if [[ $((nums[i] + nums[j])) -eq 0 ]]; then\n        echo \"\
    true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=(\"$@\")\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr\
    \ ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq=($(echo \"${arr_sorted[@]}\"\
    \ | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg=($(echo \"${arr_sorted_uniq[@]}\"\
    \ | tr ' ' '\\n' | awk '{print -$1}'))\n    local -a arr_sorted_uniq_neg_rev=($(echo\
    \ \"${arr_sorted_uniq_neg[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_rev_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_rev[@]}\" | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg_rev_uniq_pos=($(echo\
    \ \"${arr_sorted_uniq_neg_rev_uniq[@]}\" | tr ' ' '\\n' | awk '{print -$1}'))\n\
    \    local -a arr_sorted_uniq_neg_rev_uniq_pos_rev=($(echo \"${arr_sorted_uniq_neg_rev_uniq_pos[@]}\"\
    \ | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_rev_uniq_pos_rev[@]}\" | tr ' ' '\\n' | uniq))\n   \
    \ local -a arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq_neg=($(echo \"${arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq[@]}\"\
    \ | tr ' ' '\\n' | awk '{print -$1}'))\n    local -a arr_\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=\"$1\"\n  local nums=($list)\n  local nums_len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<nums_len; i++)); do\n    for\
    \ ((j=i+1; j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[\
    \ $sum -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=false\n  local i=0\n  local j=0\n  local sum=0\n\
    \  local array=($input)\n  for ((i=0; i<${#array[@]}; i++)); do\n    for ((j=i+1;\
    \ j<${#array[@]}; j++)); do\n      sum=$((array[i] + array[j]))\n      if [ $sum\
    \ -eq 0 ]; then\n        result=true\n        break\n      fi\n    done\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  # hint: you may want to use the `sort` command\n  # hint:\
    \ you may want to use the `uniq` command\n  # hint: you may want to use the `grep`\
    \ command\n  # hint: you may want to use the `wc` command\n  # hint: you may want\
    \ to use the `tr` command\n  # hint: you may want to use the `cut` command\n \
    \ # hint: you may want to use the `-c` option of `wc`\n  # hint: you may want\
    \ to use the `-d` option of `tr`\n  # hint: you may want to use the `-f` option\
    \ of `cut`\n  # hint: you may want to use the `-n` option of `grep`\n  # hint:\
    \ you may want to use the `-z` option of `grep`\n  # hint: you may want to use\
    \ the `-v` option of `grep`\n  # hint: you may want to use the `-c` option of\
    \ `grep`\n  # hint: you may want to use the `-w` option of `grep`\n  # hint: you\
    \ may want to use the `-l` option of `grep`\n  # hint: you may want to use the\
    \ `-e` option of `grep`\n  # hint: you may want to use the `-o` option of `grep`\n\
    \  # hint: you may want to use the `-i` option of `grep`\n  # hint: you may want\
    \ to use the `-E` option of `grep`\n  # hint: you may want to use the `-x` option\
    \ of `grep`\n  # hint: you may want to use the `-b` option of `grep`\n  # hint:\
    \ you may want to use the `-A` option of `grep`\n  # hint: you may want to use\
    \ the `-B` option of `grep`\n  # hint: you may want to use the `-C` option of\
    \ `grep`\n  # hint: you may want to use the `-m` option of `grep`\n  # hint: you\
    \ may want to use the `-P` option\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpe6umy30h.sh: line 43: syntax error near unexpected token `}''\n/tmp/tmpe6umy30h.sh:
    line 43: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpa2ggcimj.sh: line 17: syntax error near unexpected token `}''\n/tmp/tmpa2ggcimj.sh:
    line 17: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local numbers=($1)\n    local len=${#numbers[@]}\n    local i=0\n    local\
    \ j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            sum=$((numbers[i] + numbers[j]))\n           \
    \ if [[ $sum -eq 0 ]]; then\n                echo \"true\"\n                return\n\
    \            fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=($@)\n  local i\n  local j\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#list[@]}; j++)); do\n      if [ $((list[i] + list[j]))\
    \ -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n    done\n \
    \ done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=(\"$@\")\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr\
    \ ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq=($(echo \"${arr_sorted[@]}\"\
    \ | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg=($(echo \"${arr_sorted_uniq[@]}\"\
    \ | tr ' ' '\\n' | awk '{print -$1}'))\n    local -a arr_sorted_uniq_neg_rev=($(echo\
    \ \"${arr_sorted_uniq_neg[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_rev_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_rev[@]}\" | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg_rev_uniq_pos=($(echo\
    \ \"${arr_sorted_uniq_neg_rev_uniq[@]}\" | tr ' ' '\\n' | awk '{print -$1}'))\n\
    \    local -a arr_sorted_uniq_neg_rev_uniq_pos_rev=($(echo \"${arr_sorted_uniq_neg_rev_uniq_pos[@]}\"\
    \ | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_rev_uniq_pos_rev[@]}\" | tr ' ' '\\n' | uniq))\n   \
    \ local -a arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq_neg=($(echo \"${arr_sorted_uniq_neg_rev_uniq_pos_rev_uniq[@]}\"\
    \ | tr ' ' '\\n' | awk '{print -$1}'))\n    local -a arr_\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=\"false\"\n  local nums=($input)\n  local nums_len=${#nums[@]}\n\
    \  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<nums_len; i++)); do\n\
    \    for ((j=i+1; j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n  \
    \    if [ $sum -eq 0 ]; then\n        result=\"true\"\n        break\n      fi\n\
    \    done\n  done\n  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=$1\n  local result=\"false\"\n  for i in $list; do\n    for j in\
    \ $list; do\n      if [[ $i -eq $j ]]; then\n        continue\n      fi\n    \
    \  if [[ $((i + j)) -eq 0 ]]; then\n        result=\"true\"\n      fi\n    done\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=\"$1\"\n  local result=\"false\"\n  for i in $list; do\n    for\
    \ j in $list; do\n      if [ $i -ne $j ] && [ $((i + j)) -eq 0 ]; then\n     \
    \   result=\"true\"\n      fi\n    done\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: you can use the following bash\
    \ functions:\n    # - sort\n    # - uniq\n    # - wc\n    # - cut\n    # - tr\n\
    \    # - seq\n    # - paste\n    # - bc\n    # - grep\n    # - head\n    # - tail\n\
    \    # - wc\n    # - tr\n    # - sort\n    # - uniq\n    # - wc\n    # - cut\n\
    \    # - tr\n    # - seq\n    # - paste\n    # - bc\n    # - grep\n    # - head\n\
    \    # - tail\n    # - wc\n    # - tr\n    # - sort\n    # - uniq\n    # - wc\n\
    \    # - cut\n    # - tr\n    # - seq\n    # - paste\n    # - bc\n    # - grep\n\
    \    # - head\n    # - tail\n    # - wc\n    # - tr\n    # - sort\n    # - uniq\n\
    \    # - wc\n    # - cut\n    # - tr\n    # - seq\n    # - paste\n    # - bc\n\
    \    # - grep\n    # - head\n    # - tail\n    # - wc\n    # - tr\n    # - sort\n\
    \    # - uniq\n    # - wc\n    # - cut\n    # - tr\n    # - seq\n    # - paste\n\
    \    # - bc\n    # - grep\n    # - head\n    # - tail\n    # - wc\n    # - tr\n\
    \    # - sort\n    # - uniq\n    # - wc\n    # - cut\n    # - tr\n    # - seq\n\
    \    # - paste\n    # - bc\n    # - grep\n    # - head\n    # - tail\n    # -\
    \ wc\n    # - tr\n    # - sort\n    # - uniq\n    # - wc\n    # - cut\n    # -\
    \ tr\n    # - seq\n    # - paste\n    # - bc\n    # - grep\n    # - head\n   \
    \ # - tail\n    # - wc\n    # - tr\n    # - sort\n    # - uniq\n   \n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpa0rnlaqs.sh: line 112: syntax error near unexpected token `}''\n/tmp/tmpa0rnlaqs.sh:
    line 112: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the 'for' loop to iterate over the input\
    \ list\n    # HINT: use the 'for' loop to iterate over the input list\n    # HINT:\
    \ use the 'for' loop to iterate over the input list\n    # HINT: use the 'for'\
    \ loop to iterate over the input list\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the 'for' loop to iterate over the input\
    \ list\n    # HINT: use the 'for' loop to iterate over the input list\n    # HINT:\
    \ use the 'for' loop to iterate over the input list\n    # HINT: use the 'for'\
    \ loop to iterate over the input list\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the 'for' loop to iterate over the input\
    \ list\n    # HINT: use the 'for' loop to iterate over the input list\n    # HINT:\
    \ use the 'for' loop to iterate over the input list\n    # HINT: use the 'for'\
    \ loop to iterate over the input list\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the 'for' loop to iterate over the input\
    \ list\n    # HINT: use the 'for' loop to iterate over the input list\n    # HINT:\
    \ use the 'for' loop to iterate over the input list\n    # HINT: use the 'for'\
    \ loop to iterate over the input list\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the 'for' loop to iterate over the input\
    \ list\n    # HINT: use the 'for' loop to iterate over the input list\n    # HINT:\
    \ use the 'for' loop to iterate over the input list\n    # HINT: use the 'for'\
    \ loop to iterate over the input list\n    # HINT: use the 'for' loop to iterate\
    \ over the input list\n    # HINT: use the '\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpbhb2hc1s.sh: line 44: syntax error near unexpected token `}''\n/tmp/tmpbhb2hc1s.sh:
    line 44: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=($@)\n    local i=0\n    local j=0\n    local len=${#input[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n    \
    \        if [ $((input[i] + input[j])) -eq 0 ]; then\n                echo \"\
    true\"\n                return\n            fi\n        done\n    done\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($@)\n  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<${#input[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#input[@]}; j++)); do\n      sum=$((input[i]\
    \ + input[j]))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\n       \
    \ return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input_list=($@)\n  local num_elements=${#input_list[@]}\n  local i=0\n\
    \  local j=0\n  local sum=0\n  for ((i=0; i<num_elements; i++)); do\n    for ((j=i+1;\
    \ j<num_elements; j++)); do\n      sum=$((input_list[i] + input_list[j]))\n  \
    \    if [[ $sum -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n\
    \    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: you may want to use the `sort`\
    \ and `uniq` commands.\n    #       see `man sort` and `man uniq`\n    # Hint:\
    \ you may want to use the `$(...)` syntax to capture the\n    #       output of\
    \ a command.\n    # Hint: you may want to use the `-z` option to test if a string\
    \ is\n    #       empty.\n    # Hint: you may want to use the `-n` option to test\
    \ if a string is\n    #       non-empty.\n    # Hint: you may want to use the\
    \ `-eq` option to test if two integers\n    #       are equal.\n    # Hint: you\
    \ may want to use the `-ne` option to test if two integers\n    #       are not\
    \ equal.\n    # Hint: you may want to use the `-o` option to test if either of\
    \ two\n    #       conditions are true.\n    # Hint: you may want to use the `-a`\
    \ option to test if both of two\n    #       conditions are true.\n    # Hint:\
    \ you may want to use the `-gt` option to test if one integer\n    #       is\
    \ greater than another.\n    # Hint: you may want to use the `-lt` option to test\
    \ if one integer\n    #       is less than another.\n    # Hint: you may want\
    \ to use the `-ge` option to test if one integer\n    #       is greater than\
    \ or equal to another.\n    # Hint: you may want to use the `-le` option to test\
    \ if one integer\n    #       is less than or equal to another.\n    # Hint: you\
    \ may want to use the `-f` option to test if a file exists.\n    # Hint: you may\
    \ want to use the `-d` option to test if a file is a\n    #       directory.\n\
    \    # Hint: you may want to use the `-r` option to test if a file is\n    # \
    \      readable.\n    # Hint: you may want to use the `-w` option to test if a\
    \ file is\n    #       writable.\n    # Hint: you may want to use the\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpi0fvg17h.sh: line 49: syntax error near unexpected token `}''\n/tmp/tmpi0fvg17h.sh:
    line 49: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a nums\n    local i j\n    nums=($1)\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#nums[@]}; j++)); do\n            if ((nums[i]\
    \ + nums[j] == 0)); then\n                echo \"true\"\n                return\n\
    \            fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: you can use the following bash\
    \ functions:\n    # - sort\n    # - uniq\n    # - grep\n    # - wc\n    # - tr\n\
    \    # - cut\n    # - read\n    # - echo\n    # - seq\n    # - for\n    # - while\n\
    \    # - if\n    # - test\n    # - [\n    # - [[\n    # - ]]\n    # - ((\n   \
    \ # - ))\n    # - let\n    # - declare\n    # - local\n    # - readonly\n    #\
    \ - set\n    # - shift\n    # - break\n    # - continue\n    # - return\n    #\
    \ - true\n    # - false\n    # - :\n    # - exit\n    # - read\n    # - exec\n\
    \    # - eval\n    # - trap\n    # - kill\n    # - wait\n    # - wait $!\n   \
    \ # - jobs\n    # - fg\n    # - bg\n    # - disown\n    # - kill\n    # - kill\
    \ -9\n    # - kill -9 $!\n    # - kill -9 %+\n    # - kill -9 %-\n    # - killall\n\
    \    # - nohup\n    # - exec\n    # - exit\n    # - exit 0\n    # - exit 1\n \
    \   # - exit 2\n    # - set -e\n    # - set -o errexit\n    # - set -u\n    #\
    \ - set -o nounset\n    # - set -o xtrace\n    # - set -o verbose\n    # - set\
    \ -o pipefail\n    # - trap\n    # - trap ''\n    # - trap -\n    # - trap - SIGINT\n\
    \    # - trap - SIGTERM\n    # - trap - SIGKILL\n    # - trap - EXIT\n    # -\
    \ trap - ERR\n    # - trap - DEBUG\n    # - trap - RETURN\n    # - trap - INT\n\
    \    # - trap - TERM\n    # - trap - KILL\n    # - trap - HUP\n    # - trap -\
    \ QUIT\n    # - trap - PIPE\n    # - trap - WINCH\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpcclqih6c.sh: line 96: syntax error near unexpected token `}''\n/tmp/tmpcclqih6c.sh:
    line 96: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=($@)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' '\
    \ '\\n' | sort -n))\n    local -a arr_sorted_uniq=($(echo \"${arr_sorted[@]}\"\
    \ | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg=($(echo \"${arr_sorted_uniq[@]}\"\
    \ | tr ' ' '\\n' | awk '{print -$1}'))\n    local -a arr_sorted_uniq_neg_sorted=($(echo\
    \ \"${arr_sorted_uniq_neg[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_sorted_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_sorted[@]}\" | tr ' ' '\\n' | uniq))\n    local -a arr_sorted_uniq_neg_sorted_uniq_pos=($(echo\
    \ \"${arr_sorted_uniq_neg_sorted_uniq[@]}\" | tr ' ' '\\n' | awk '{print -$1}'))\n\
    \    local -a arr_sorted_uniq_neg_sorted_uniq_pos_sorted=($(echo \"${arr_sorted_uniq_neg_sorted_uniq_pos[@]}\"\
    \ | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_uniq_neg_sorted_uniq_pos_sorted_uniq=($(echo\
    \ \"${arr_sorted_uniq_neg_sorted_uniq_pos_sorted[@]}\" | tr ' ' '\\n' | uniq))\n\
    \    local -a arr_sorted_uniq_neg_sorted_uniq_pos_sorted_uniq_diff=($(echo \"\
    ${arr_sorted_uniq_neg_sorted_uniq_pos_sorted_uniq[@]}\" | tr ' ' '\\n' | awk '\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqiq4yg8h.sh: line 25: unexpected EOF while looking for matching
    `''''\n/tmp/tmpqiq4yg8h.sh: line 46: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($@)\n  local -a seen=()\n  for num in \"${nums[@]}\"; do\n \
    \   if [[ \" ${seen[*]} \" =~ \" ${num} \" ]]; then\n      echo \"true\"\n   \
    \   return\n    fi\n    seen+=($((0 - num)))\n  done\n  echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # Write your code here\n  # You can use the following command to convert a\
    \ string to an array:\n  #   array=( $string )\n  # The following command will\
    \ sort an array:\n  #   sorted=( $(printf '%s\\n' \"${array[@]}\" | sort -n) )\n\
    \  # The following command will convert an array to a string:\n  #   string=\"\
    ${sorted[@]}\"\n  # You can use the following command to print the result:\n \
    \ #   echo \"$result\"\n  # You can use the following command to debug:\n  # \
    \  echo \"Debug: $string\" >&2\n  array=( $1 )\n  sorted=( $(printf '%s\\n' \"\
    ${array[@]}\" | sort -n) )\n  string=\"${sorted[@]}\"\n  echo \"Debug: $string\"\
    \ >&2\n  for ((i=0; i<${#sorted[@]}; i++)); do\n    for ((j=i+1; j<${#sorted[@]};\
    \ j++)); do\n      if [[ ${sorted[$i]} + ${sorted[$j]} -eq 0 ]]; then\n      \
    \  echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpy_a69dpp.sh: line 33: conditional binary operator expected\n/tmp/tmpy_a69dpp.sh:
    line 33: syntax error near `+''\n/tmp/tmpy_a69dpp.sh: line 33: `      if [[ ${sorted[$i]}
    + ${sorted[$j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local input_array=($input)\n  local input_length=${#input_array[@]}\n\
    \  local i\n  local j\n  local sum\n  for ((i=0; i<$input_length; i++)); do\n\
    \    for ((j=i+1; j<$input_length; j++)); do\n      sum=$((${input_array[$i]}\
    \ + ${input_array[$j]}))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\
    \n        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array\n    local -i i j\n    local -i sum\n    array=($@)\n    for\
    \ ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++));\
    \ do\n            sum=$((array[i] + array[j]))\n            if [[ $sum -eq 0 ]];\
    \ then\n                echo \"true\"\n                return\n            fi\n\
    \        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: use the \"sort\" and \"uniq\"\
    \ commands\n    # Hint: use the \"for\" loop\n    # Hint: use the \"expr\" command\n\
    \    # Hint: use the \"continue\" command\n    # Hint: use the \"break\" command\n\
    \    # Hint: use the \"return\" command\n    # Hint: use the \"echo\" command\n\
    \    # Hint: use the \"read\" command\n    # Hint: use the \"set\" command\n \
    \   # Hint: use the \"shift\" command\n    # Hint: use the \"local\" command\n\
    \    # Hint: use the \"readonly\" command\n    # Hint: use the \"declare\" command\n\
    \    # Hint: use the \"typeset\" command\n    # Hint: use the \"let\" command\n\
    \    # Hint: use the \"read\" command\n    # Hint: use the \"expr\" command\n\
    \    # Hint: use the \"bc\" command\n    # Hint: use the \"bc\" command\n    #\
    \ Hint: use the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint:\
    \ use the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use\
    \ the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use the\
    \ \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use the \"bc\"\
    \ command\n    # Hint: use the \"bc\" command\n    # Hint: use the \"bc\" command\n\
    \    # Hint: use the \"bc\" command\n    # Hint: use the \"bc\" command\n    #\
    \ Hint: use the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint:\
    \ use the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use\
    \ the \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use the\
    \ \"bc\" command\n    # Hint: use the \"bc\" command\n    # Hint: use the \"bc\"\
    \ command\n    #\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpt6k9dagw.sh: line 59: syntax error near unexpected token `}''\n/tmp/tmpt6k9dagw.sh:
    line 59: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local nums_len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<nums_len; i++)); do\n    for\
    \ ((j=i+1; j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [\
    \ $sum -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # HINT: use the 'sort' command to sort the\
    \ input list.\n  # HINT: use the 'uniq' command to remove duplicates from the\
    \ input list.\n  # HINT: use the 'comm' command to find the intersection of the\
    \ input list\n  #       and the negative of the input list.\n  # HINT: use the\
    \ 'wc' command to count the number of lines in the output\n  #       of the 'comm'\
    \ command.\n  # HINT: use the 'test' command to check if the number of lines is\
    \ greater\n  #       than zero.\n  # HINT: use the 'echo' command to print the\
    \ output of the 'test' command.\n  # HINT: use the 'tr' command to remove the\
    \ newline character from the output\n  #       of the 'echo' command.\n  # HINT:\
    \ use the 'sed' command to remove the leading whitespace from the\n  #       output\
    \ of the 'tr' command.\n  # HINT: use the 'sed' command to remove the trailing\
    \ whitespace from the\n  #       output of the 'sed' command.\n  # HINT: use the\
    \ 'sed' command to replace the string '1' with the string\n  #       'true'.\n\
    \  # HINT: use the 'sed' command to replace the string '0' with the string\n \
    \ #       'false'.\n  # HINT: use the 'sed' command to replace the string '-1'\
    \ with the string\n  #       'false'.\n  # HINT: use the 'sed' command to replace\
    \ the string '-0' with the string\n  #       'false'.\n  # HINT: use the 'sed'\
    \ command to replace the string '0-1' with the string\n  #       'false'.\n  #\
    \ HINT: use the 'sed' command to replace the string '0-0' with the string\n  #\
    \       'false'.\n  # HINT: use the 'sed' command to replace the string '1-1'\
    \ with the string\n  #       'false'.\n  # HINT: use the 'sed' command to replace\
    \ the string '1-0' with the string\n  #       'false'.\n  # HINT: use the '\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp6f437qlk.sh: line 49: syntax error near unexpected token `}''\n/tmp/tmp6f437qlk.sh:
    line 49: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=(\"$@\")\n  local -a positive_array=()\n  local -a negative_array=()\n\
    \  for i in \"${array[@]}\"; do\n    if [ $i -lt 0 ]; then\n      negative_array+=(\"\
    $i\")\n    else\n      positive_array+=(\"$i\")\n    fi\n  done\n  for i in \"\
    ${positive_array[@]}\"; do\n    for j in \"${negative_array[@]}\"; do\n      if\
    \ [ $((i + j)) -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n\
    \    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3j4ubjln.sh: line 20: [: too many arguments\n/tmp/tmp3j4ubjln.sh:
    line 20: [: too many arguments\n/tmp/tmp3j4ubjln.sh: line 20: [: too many arguments\n/tmp/tmp3j4ubjln.sh:
    line 20: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($@)\n  local -a seen=()\n  for num in \"${nums[@]}\"; do\n \
    \   if [[ ${seen[$((-1 * num))]} ]]; then\n      echo \"true\"\n      return\n\
    \    fi\n    seen[$num]=true\n  done\n  echo \"false\"\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp23zk96ri.sh: line 19: seen: bad array subscript\n/tmp/tmp23zk96ri.sh:
    line 19: seen: bad array subscript\n/tmp/tmp23zk96ri.sh: line 19: seen: bad array
    subscript\n/tmp/tmp23zk96ri.sh: line 19: seen: bad array subscript\n/tmp/tmp23zk96ri.sh:
    line 19: seen: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=\"false\"\n  local i=0\n  local j=0\n  local\
    \ num_array=()\n  local num_array_len=0\n  local sum=0\n  local num=0\n  local\
    \ num_str=\"\"\n  local num_str_len=0\n  local num_str_start=0\n  local num_str_end=0\n\
    \  local num_str_end_char=\"\"\n  local num_str_end_char_ascii=0\n  local num_str_end_char_ascii_is_space=0\n\
    \  local num_str_end_char_ascii_is_newline=0\n  local num_str_end_char_ascii_is_tab=0\n\
    \  local num_str_end_char_ascii_is_zero=0\n  local num_str_end_char_ascii_is_nine=0\n\
    \  local num_str_end_char_ascii_is_minus=0\n  local num_str_end_char_ascii_is_valid=0\n\
    \  local num_str_end_char_ascii_is_invalid=0\n  local num_str_end_char_ascii_is_valid_or_space=0\n\
    \  local num_str_end_char_ascii_is_valid_or_space_or_newline=0\n  local num_str_end_char_ascii_is_valid_or_space_or_newline_or_tab=0\n\
    \  local num_str_end_char_ascii_is_valid_or_space_or_newline_or_tab_or_zero=0\n\
    \  local num_str_end_char_ascii_is_valid_or_space_or_newline_or_tab_or_zero_or_nine=0\n\
    \  local num_str_end_char_ascii_is_valid_or_space_or_newline_or_tab_or_zero_or_nine_or_minus=0\n\
    \  local num_str_end_char_ascii_is_valid_or_space\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local array=($input)\n  local length=${#array[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<length; i++)); do\n    for ((j=i+1;\
    \ j<length; j++)); do\n      sum=$((array[i] + array[j]))\n      if [ $sum -eq\
    \ 0 ]; then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=(\"$@\")\n    local -a sums\n    local sum\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            sum=$((arr[i]\
    \ + arr[j]))\n            if [[ \"$sum\" -eq 0 ]]; then\n                echo\
    \ \"true\"\n                return\n            fi\n        done\n    done\n \
    \   echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=false\n  for i in $input; do\n    for j in $input;\
    \ do\n      if [ $i -ne $j ] && [ $(( $i + $j )) -eq 0 ]; then\n        result=true\n\
    \      fi\n    done\n  done\n  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local output=false\n  for i in $input; do\n    for j in $input;\
    \ do\n      if [ $i -ne $j ] && [ $((i + j)) -eq 0 ]; then\n        output=true\n\
    \      fi\n    done\n  done\n  echo $output\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local sum=0\n  local nums=($@)\n  for (( i=0; i<${#nums[@]}; i++ )); do\n \
    \   for (( j=i+1; j<${#nums[@]}; j++ )); do\n      sum=$(( ${nums[$i]} + ${nums[$j]}\
    \ ))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\n        return\n \
    \     fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a arr=($@)\n  local -a neg_arr\n  local -a pos_arr\n  local -a zero_arr\n\
    \  local -a neg_arr_sorted\n  local -a pos_arr_sorted\n  local -a zero_arr_sorted\n\
    \  local -a neg_arr_sorted_uniq\n  local -a pos_arr_sorted_uniq\n  local -a zero_arr_sorted_uniq\n\
    \  local -a neg_arr_sorted_uniq_rev\n  local -a pos_arr_sorted_uniq_rev\n  local\
    \ -a zero_arr_sorted_uniq_rev\n  local -a neg_arr_sorted_uniq_rev_rev\n  local\
    \ -a pos_arr_sorted_uniq_rev_rev\n  local -a zero_arr_sorted_uniq_rev_rev\n  local\
    \ -a neg_arr_sorted_uniq_rev_rev_rev\n  local -a pos_arr_sorted_uniq_rev_rev_rev\n\
    \  local -a zero_arr_sorted_uniq_rev_rev_rev\n  local -a neg_arr_sorted_uniq_rev_rev_rev_rev\n\
    \  local -a pos_arr_sorted_uniq_rev_rev_rev_rev\n  local -a zero_arr_sorted_uniq_rev_rev_rev_rev\n\
    \  local -a neg_arr_sorted_uniq_rev_rev_rev_rev_rev\n  local -a pos_arr_sorted_uniq_rev_rev_rev_rev_rev\n\
    \  local -a zero_arr_sorted_uniq_rev_rev_rev_rev_rev\n  local -a neg_arr_sorted_uniq_rev_rev_rev_rev_rev_rev\n\
    \  local -a pos_arr_sorted_uniq_rev_rev_rev_rev_rev_rev\n  local -a zero_arr_sorted_uniq_rev_rev_rev_rev_rev_rev\n\
    \  local -a neg_arr_sorted_uniq_rev_rev_rev_rev_rev_\n}\n\ncandidate() {\n   \
    \ pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array\n    local -i i j\n    array=($@)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n            if [[\
    \ ${array[i]} + ${array[j]} -eq 0 ]]; then\n                echo \"true\"\n  \
    \              return\n            fi\n        done\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpu2nb4vlr.sh: line 21: conditional binary operator expected\n/tmp/tmpu2nb4vlr.sh:
    line 21: syntax error near `+''\n/tmp/tmpu2nb4vlr.sh: line 21: `            if
    [[ ${array[i]} + ${array[j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input_list=$1\n  local input_array=($input_list)\n  local input_length=${#input_array[@]}\n\
    \  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<input_length; i++));\
    \ do\n    for ((j=i+1; j<input_length; j++)); do\n      sum=$((input_array[i]\
    \ + input_array[j]))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\n \
    \       return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=\"$1\"\n  local nums=($input)\n  local len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1;\
    \ j<len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[ $sum -eq 0 ]];\
    \ then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local num_nums=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<num_nums; i++)); do\n    for\
    \ ((j=i+1; j<num_nums; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [\
    \ $sum -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a arr=(\"$@\")\n    local -a seen=()\n    local -a seen_neg=()\n \
    \   local -a seen_pos=()\n    local -a seen_zero=()\n    local -a seen_neg_zero=()\n\
    \    local -a seen_pos_zero=()\n    local -a seen_neg_pos=()\n    local -a seen_pos_neg=()\n\
    \    local -a seen_neg_neg=()\n    local -a seen_pos_pos=()\n    local -a seen_neg_pos_zero=()\n\
    \    local -a seen_pos_neg_zero=()\n    local -a seen_neg_zero_pos=()\n    local\
    \ -a seen_pos_zero_neg=()\n    local -a seen_zero_neg_pos=()\n    local -a seen_zero_pos_neg=()\n\
    \    local -a seen_neg_zero_zero=()\n    local -a seen_pos_zero_zero=()\n    local\
    \ -a seen_zero_neg_zero=()\n    local -a seen_zero_pos_zero=()\n    local -a seen_zero_zero_neg=()\n\
    \    local -a seen_zero_zero_pos=()\n    local -a seen_zero_zero_zero=()\n   \
    \ local -a seen_neg_pos_pos=()\n    local -a seen_pos_neg_neg=()\n    local -a\
    \ seen_neg_neg_pos=()\n    local -a seen_pos_pos_neg=()\n    local -a seen_neg_pos_neg=()\n\
    \    local -a seen_pos_neg_pos=()\n    local -a seen_neg_neg_neg=()\n    local\
    \ -a seen_pos_pos_pos=()\n    local -a seen_neg_pos_pos_zero=()\n    local -a\
    \ seen_pos_neg_neg_zero=()\n    local -a seen_neg_neg_pos_zero=()\n    local -a\
    \ seen_pos_pos_neg_zero=()\n    local -a seen_neg_pos_neg_zero=()\n    local -a\
    \ seen_pos_neg_pos_zero=()\n\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a numbers=($1)\n    local -a positives\n    local -a negatives\n \
    \   local i\n    local j\n    local k\n    local sum\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        if [[ ${numbers[$i]} -lt 0 ]]; then\n            negatives+=(${numbers[$i]})\n\
    \        else\n            positives+=(${numbers[$i]})\n        fi\n    done\n\
    \    for ((i=0; i<${#negatives[@]}; i++)); do\n        for ((j=0; j<${#positives[@]};\
    \ j++)); do\n            sum=$(( ${negatives[$i]} + ${positives[$j]} ))\n    \
    \        if [[ $sum -eq 0 ]]; then\n                echo \"true\"\n          \
    \      return\n            fi\n        done\n    done\n    echo \"false\"\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a input=($@)\n  local -a seen\n  for ((i=0; i<${#input[@]}; i++)); do\n\
    \    if [[ \"${seen[${input[$i]}]}\" ]]; then\n      echo \"true\"\n      return\n\
    \    fi\n    seen[${input[$i]}]=true\n    seen[-${input[$i]}]=true\n  done\n \
    \ echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a arr=(\"$@\")\n  local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n  local -a arr_sorted_unique=($(printf \"%s\\n\" \"${arr_sorted[@]}\"\
    \ | uniq))\n  local -a arr_sorted_unique_neg=($(printf \"%s\\n\" \"${arr_sorted_unique[@]}\"\
    \ | awk '{print -$1}'))\n  local -a arr_sorted_unique_neg_rev=($(printf \"%s\\\
    n\" \"${arr_sorted_unique_neg[@]}\" | tac))\n  local -a arr_sorted_unique_neg_rev_uniq=($(printf\
    \ \"%s\\n\" \"${arr_sorted_unique_neg_rev[@]}\" | uniq))\n  local -a arr_sorted_unique_neg_rev_uniq_pos=($(printf\
    \ \"%s\\n\" \"${arr_sorted_unique_neg_rev_uniq[@]}\" | awk '{print -$1}'))\n \
    \ local -a arr_sorted_unique_neg_rev_uniq_pos_rev=($(printf \"%s\\n\" \"${arr_sorted_unique_neg_rev_uniq_pos[@]}\"\
    \ | tac))\n  local -a arr_sorted_unique_neg_rev_uniq_pos_rev_uniq=($(printf \"\
    %s\\n\" \"${arr_sorted_unique_neg_rev_uniq_pos_rev[@]}\" | uniq))\n  local -a\
    \ arr_sorted_unique_neg_rev_uniq_pos_rev_uniq_neg=($(printf \"%s\\n\" \"${arr_sorted_unique_neg_rev_uniq_pos_rev_uniq[@]}\"\
    \ | awk '{print -$1}'))\n  local -a arr_sorted_unique_neg_rev_uniq_pos_rev_uniq_neg_rev=($(printf\
    \ \"%s\\n\" \"${arr_sorted_unique_neg_rev_uniq\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxnh61uc1.sh: line 43: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpxnh61uc1.sh: line 47: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local numbers=($input)\n  local length=${#numbers[@]}\n \
    \ local i\n  local j\n  for ((i=0; i<length; i++)); do\n    for ((j=i+1; j<length;\
    \ j++)); do\n      if [[ ${numbers[i]} + ${numbers[j]} -eq 0 ]]; then\n      \
    \  echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp046u1d8l.sh: line 23: conditional binary operator expected\n/tmp/tmp046u1d8l.sh:
    line 23: syntax error near `+''\n/tmp/tmp046u1d8l.sh: line 23: `      if [[ ${numbers[i]}
    + ${numbers[j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # hint: you can use the following to check\
    \ if a number is in a list:\n  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\"\
    \ || echo \"no\"\n  # hint: you can use the following to check if a number is\
    \ in a list:\n  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"\
    no\"\n  # hint: you can use the following to check if a number is in a list:\n\
    \  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"no\"\n  # hint:\
    \ you can use the following to check if a number is in a list:\n  # echo \"1 2\
    \ 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"no\"\n  # hint: you can use\
    \ the following to check if a number is in a list:\n  # echo \"1 2 3 4\" | grep\
    \ -q \"3\" && echo \"yes\" || echo \"no\"\n  # hint: you can use the following\
    \ to check if a number is in a list:\n  # echo \"1 2 3 4\" | grep -q \"3\" &&\
    \ echo \"yes\" || echo \"no\"\n  # hint: you can use the following to check if\
    \ a number is in a list:\n  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\"\
    \ || echo \"no\"\n  # hint: you can use the following to check if a number is\
    \ in a list:\n  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"\
    no\"\n  # hint: you can use the following to check if a number is in a list:\n\
    \  # echo \"1 2 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"no\"\n  # hint:\
    \ you can use the following to check if a number is in a list:\n  # echo \"1 2\
    \ 3 4\" | grep -q \"3\" && echo \"yes\" || echo \"no\"\n  # hint: you can use\
    \ the following to check if a number is in a list:\n  # echo \"1 2 3 4\" | grep\
    \ -\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmponz3sda4.sh: line 39: syntax error near unexpected token `}''\n/tmp/tmponz3sda4.sh:
    line 39: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # HINT: use the \"sort\" command to sort\
    \ the list of integers\n  # HINT: use the \"head\" and \"tail\" commands to get\
    \ the first and last elements of the list\n  # HINT: use the \"expr\" command\
    \ to compute the sum of the first and last elements\n  # HINT: use the \"wc\"\
    \ command to count the number of elements in the list\n  # HINT: use the \"test\"\
    \ command to compare the sum to zero\n  # HINT: use the \"test\" command to compare\
    \ the number of elements to 1\n  # HINT: use the \"test\" command to compare the\
    \ number of elements to 2\n  # HINT: use the \"test\" command to compare the number\
    \ of elements to 3\n  # HINT: use the \"test\" command to compare the number of\
    \ elements to 4\n  # HINT: use the \"test\" command to compare the number of elements\
    \ to 5\n  # HINT: use the \"test\" command to compare the number of elements to\
    \ 6\n  # HINT: use the \"test\" command to compare the number of elements to 7\n\
    \  # HINT: use the \"test\" command to compare the number of elements to 8\n \
    \ # HINT: use the \"test\" command to compare the number of elements to 9\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 10\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 11\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 12\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 13\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 14\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 15\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 16\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 17\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 18\n  #\
    \ HINT: use the \"test\" command to compare the number of elements to 19\n  #\
    \ HINT: use the \"test\" command to compare the number of\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpjwk90z11.sh: line 42: syntax error near unexpected token `}''\n/tmp/tmpjwk90z11.sh:
    line 42: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array\n    local -i i j\n    local -i len\n    array=($1)\n    len=${#array[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n    \
    \        if ((array[i] + array[j] == 0)); then\n                echo \"true\"\n\
    \                return\n            fi\n        done\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local nums_len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<nums_len; i++)); do\n    for\
    \ ((j=i+1; j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [\
    \ $sum -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($@)\n  local i=0\n  local j=0\n  local n=${#input[@]}\n  while\
    \ [ $i -lt $n ]; do\n    j=$((i+1))\n    while [ $j -lt $n ]; do\n      if [ $((input[i]\
    \ + input[j])) -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n\
    \      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local num_nums=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<num_nums; i++)); do\n    for\
    \ ((j=i+1; j<num_nums; j++)); do\n      sum=$(( nums[i] + nums[j] ))\n      if\
    \ [[ $sum -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n  \
    \  done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local nums=($@)\n  local len=${#nums[@]}\n  for ((i=0; i<len; i++)); do\n \
    \   for ((j=i+1; j<len; j++)); do\n      if ((nums[i] + nums[j] == 0)); then\n\
    \        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=($@)\n  local i=0\n  local j=0\n  local len=${#list[@]}\n  while\
    \ (( i < len - 1 )); do\n    j=$(( i + 1 ))\n    while (( j < len )); do\n   \
    \   if (( list[i] + list[j] == 0 )); then\n        echo \"true\"\n        return\n\
    \      fi\n      j=$(( j + 1 ))\n    done\n    i=$(( i + 1 ))\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # hint: use the \"sort\" command to sort\
    \ the numbers\n  # hint: use the \"uniq\" command to remove duplicates\n  # hint:\
    \ use the \"comm\" command to find the intersection of two sorted lists\n  # hint:\
    \ use the \"wc\" command to count the number of lines in a file\n  # hint: use\
    \ the \"tr\" command to convert a string to lowercase\n  # hint: use the \"test\"\
    \ command to check if a file is empty\n  # hint: use the \"test\" command to check\
    \ if a string is empty\n  # hint: use the \"test\" command to check if a string\
    \ is equal to another string\n  # hint: use the \"test\" command to check if a\
    \ string is not equal to another string\n  # hint: use the \"test\" command to\
    \ check if an integer is greater than another integer\n  # hint: use the \"test\"\
    \ command to check if an integer is less than another integer\n  # hint: use the\
    \ \"test\" command to check if an integer is equal to another integer\n  # hint:\
    \ use the \"test\" command to check if an integer is not equal to another integer\n\
    \  # hint: use the \"test\" command to check if a file exists\n  # hint: use the\
    \ \"test\" command to check if a file does not exist\n  # hint: use the \"test\"\
    \ command to check if a file is readable\n  # hint: use the \"test\" command to\
    \ check if a file is writable\n  # hint: use the \"test\" command to check if\
    \ a file is executable\n  # hint: use the \"test\" command to check if a file\
    \ is a directory\n  # hint: use the \"test\" command to check if a file is a regular\
    \ file\n  # hint: use the \"test\" command to check if a file is a symbolic link\n\
    \  # hint: use the \"test\" command to check if a file is a socket\n  # hint:\
    \ use the \"test\" command to check if a file is a named pipe\n  # hint: use the\
    \ \"test\" command to check if a file is a block special file\n  # hint: use the\
    \ \"test\" command to check if a file is a character special file\n  # hint: use\
    \ the \"test\" command to check if a file is a set\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmprg2r9vgh.sh: line 43: syntax error near unexpected token `}''\n/tmp/tmprg2r9vgh.sh:
    line 43: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return 1\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($1)\n  local -a nums_seen=()\n  for num in \"${nums[@]}\"; do\n\
    \    if [[ \" ${nums_seen[@]} \" =~ \" ${-num} \" ]]; then\n      echo \"true\"\
    \n      return\n    fi\n    nums_seen+=($num)\n  done\n  echo \"false\"\n}\n\n\
    candidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp8aih_i8f.sh: line 19:  ${-num} : bad substitution\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=\"false\"\n  for i in $input; do\n    for j\
    \ in $input; do\n      if [ $i -ne $j ] && [ $((i+j)) -eq 0 ]; then\n        result=\"\
    true\"\n      fi\n    done\n  done\n  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=false\n  local i=0\n  local j=0\n  local sum=0\n\
    \  for i in $input; do\n    for j in $input; do\n      if [ $i -ne $j ]; then\n\
    \        sum=$(( $i + $j ))\n        if [ $sum -eq 0 ]; then\n          result=true\n\
    \        fi\n      fi\n    done\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($@)\n  local -a negs=()\n  local -a poss=()\n  for num in \"\
    ${nums[@]}\"; do\n    if [[ $num -lt 0 ]]; then\n      negs+=($num)\n    else\n\
    \      poss+=($num)\n    fi\n  done\n  for neg in \"${negs[@]}\"; do\n    for\
    \ pos in \"${poss[@]}\"; do\n      if [[ $((neg + pos)) -eq 0 ]]; then\n     \
    \   echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=($@)\n    local i\n    local j\n    for ((i=0; i<${#list[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[\
    \ $((list[i] + list[j])) -eq 0 ]]; then\n                echo \"true\"\n     \
    \           return\n            fi\n        done\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=($@)\n  local -a hash\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    local num=${array[$i]}\n    local num_neg=$((-1 * num))\n    if [[ ${hash[$num_neg]}\
    \ ]]; then\n      echo \"true\"\n      return\n    fi\n    hash[$num]=1\n  done\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpb79kswm6.sh: line 21: hash: bad array subscript\n/tmp/tmpb79kswm6.sh:
    line 21: hash: bad array subscript\n/tmp/tmpb79kswm6.sh: line 21: hash: bad array
    subscript\n/tmp/tmpb79kswm6.sh: line 21: hash: bad array subscript\n/tmp/tmpb79kswm6.sh:
    line 21: hash: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=$1\n  local nums=($list)\n  local len=${#nums[@]}\n  local i=0\n\
    \  local j=0\n  local sum=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len;\
    \ j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [ $sum -eq 0 ]; then\n\
    \        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function.\n  # Hint: you can use the following bash\
    \ functions:\n  #   - sort\n  #   - uniq\n  #   - wc\n  #   - tr\n  #   - expr\n\
    \  #   - read\n  #   - echo\n  #   - for\n  #   - if\n  #   - test\n  #   - [\n\
    \  #   - -z\n  #   - -n\n  #   - -eq\n  #   - -ne\n  #   - -lt\n  #   - -le\n\
    \  #   - -gt\n  #   - -ge\n  #   - -a\n  #   - -o\n  #   - -f\n  #   - -d\n  #\
    \   - -e\n  #   - -r\n  #   - -w\n  #   - -x\n  #   - -s\n  #   - -t\n  #   -\
    \ -p\n  #   - -c\n  #   - -b\n  #   - -u\n  #   - -g\n  #   - -k\n  #   - -O\n\
    \  #   - -G\n  #   - -L\n  #   - -S\n  #   - -N\n  #   - -nt\n  #   - -ot\n  #\
    \   - -ef\n  #   - -o\n  #   - -a\n  #   - -z\n  #   - -n\n  #   - -eq\n  #  \
    \ - -ne\n  #   - -lt\n  #   - -le\n  #   - -gt\n  #   - -ge\n  #   - -N\n  # \
    \  - -o\n  #   - -a\n  #   - -z\n  #   - -n\n  #   - -eq\n  #   - -ne\n  #   -\
    \ -lt\n  #   - -le\n  #   - -gt\n  #   - -ge\n  #   - -N\n  #   - -o\n  #   -\
    \ -a\n  #   - -z\n  #   - -n\n  #   - -eq\n  #   - -ne\n}\n\ncandidate() {\n \
    \   pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpz1r1cx5a.sh: line 89: syntax error near unexpected token `}''\n/tmp/tmpz1r1cx5a.sh:
    line 89: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=$1\n  local n=$(echo $list | wc -w)\n  local i=1\n  local j=2\n\
    \  while [ $i -lt $n ]; do\n    while [ $j -le $n ]; do\n      if [ $(( $(echo\
    \ $list | cut -d \" \" -f $i) + $(echo $list | cut -d \" \" -f $j) )) -eq 0 ];\
    \ then\n        echo \"true\"\n        return\n      fi\n      j=$(( $j + 1 ))\n\
    \    done\n    i=$(( $i + 1 ))\n    j=$(( $i + 1 ))\n  done\n  echo \"false\"\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=$1\n    local result=false\n    for i in $list; do\n        for\
    \ j in $list; do\n            if [ $i -ne $j ] && [ $((i+j)) -eq 0 ]; then\n \
    \               result=true\n            fi\n        done\n    done\n    echo\
    \ $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a arr=(\"$@\")\n  local -a arr_sorted=(\"$@\")\n  local -a arr_sorted_neg=(\"\
    $@\")\n  local -a arr_sorted_pos=(\"$@\")\n  local -a arr_sorted_neg_pos=(\"$@\"\
    )\n  local -a arr_sorted_pos_neg=(\"$@\")\n  local -a arr_sorted_neg_pos_neg=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos=(\"$@\")\n  local -a arr_sorted_neg_pos_neg_pos=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos_neg=(\"$@\")\n  local -a arr_sorted_neg_pos_neg_pos_neg=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos_neg_pos=(\"$@\")\n  local -a arr_sorted_neg_pos_neg_pos_neg_pos=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos_neg_pos_neg=(\"$@\")\n  local -a arr_sorted_neg_pos_neg_pos_neg_pos_neg=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos_neg_pos_neg_pos=(\"$@\")\n  local -a\
    \ arr_sorted_neg_pos_neg_pos_neg_pos_neg_pos=(\"$@\")\n  local -a arr_sorted_pos_neg_pos_neg_pos_neg_pos_neg=(\"\
    $@\")\n  local -a arr_sorted_neg_pos_neg_pos_neg_pos_neg_pos_neg=(\"$@\")\n  local\
    \ -a arr_sorted_pos_neg_pos_neg_pos_neg_pos_neg_pos=(\"$@\")\n  local -a arr_sorted_neg_pos_neg_pos_neg_pos_neg_pos_neg_pos=(\"\
    $@\")\n  local -a arr_sorted_pos_neg_pos_neg_pos_neg\n}\n\ncandidate() {\n   \
    \ pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n \
    \   [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a array=($@)\n    local -a pos\n    local -a neg\n    local -a res\n\
    \    for i in ${array[@]}; do\n        if [ $i -lt 0 ]; then\n            neg+=($i)\n\
    \        else\n            pos+=($i)\n        fi\n    done\n    for i in ${pos[@]};\
    \ do\n        for j in ${neg[@]}; do\n            if [ $i -eq $((-1 * $j)) ];\
    \ then\n                res+=($i)\n            fi\n        done\n    done\n  \
    \  if [ ${#res[@]} -eq 0 ]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local numbers=($1)\n  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#numbers[@]}; j++)); do\n      sum=$((${numbers[$i]}\
    \ + ${numbers[$j]}))\n      if [ $sum -eq 0 ]; then\n        echo \"true\"\n \
    \       return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($@)\n  local i\n  local j\n  for ((i=0; i<${#input[@]}; i++));\
    \ do\n    for ((j=i+1; j<${#input[@]}; j++)); do\n      if [ $((${input[$i]} +\
    \ ${input[$j]})) -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n\
    \    done\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($@)\n  local -a seen=()\n  for ((i=0; i<${#nums[@]}; i++));\
    \ do\n    local num=${nums[$i]}\n    if [[ ${seen[$((0-num))]} ]]; then\n    \
    \  echo \"true\"\n      return\n    fi\n    seen[$num]=1\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp9om2dfau.sh: line 20: seen: bad array subscript\n/tmp/tmp9om2dfau.sh:
    line 20: seen: bad array subscript\n/tmp/tmp9om2dfau.sh: line 20: seen: bad array
    subscript\n/tmp/tmp9om2dfau.sh: line 20: seen: bad array subscript\n/tmp/tmp9om2dfau.sh:
    line 20: seen: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  local arr=($@)\n  local len=${#arr[@]}\n  local i=0\n \
    \ local j=0\n  local sum=0\n  for ((i=0; i<$len; i++))\n  do\n    for ((j=$i+1;\
    \ j<$len; j++))\n    do\n      sum=$((${arr[$i]}+${arr[$j]}))\n      if [ $sum\
    \ -eq 0 ]\n      then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpa2ggcimj.sh: line 17: syntax error near unexpected token `}''\n/tmp/tmpa2ggcimj.sh:
    line 17: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input_list=\"$1\"\n  local input_list_length=$(echo \"$input_list\" |\
    \ wc -w)\n  local i=1\n  local j=1\n  local sum=0\n  while [ $i -le $input_list_length\
    \ ]; do\n    local first_number=$(echo \"$input_list\" | cut -d \" \" -f $i)\n\
    \    j=$((i + 1))\n    while [ $j -le $input_list_length ]; do\n      local second_number=$(echo\
    \ \"$input_list\" | cut -d \" \" -f $j)\n      sum=$((first_number + second_number))\n\
    \      if [ $sum -eq 0 ]; then\n        echo \"true\"\n        return\n      fi\n\
    \      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n  echo \"false\"\n}\n\
    \ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=$1\n    local result=false\n    for i in $list; do\n        for\
    \ j in $list; do\n            if [[ $i -eq $j ]]; then\n                continue\n\
    \            fi\n            if [[ $((i + j)) -eq 0 ]]; then\n               \
    \ result=true\n                break\n            fi\n        done\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: you can use the following bash\
    \ builtins:\n    #   - read\n    #   - echo\n    #   - for\n    #   - if\n   \
    \ #   - continue\n    #   - break\n    #   - expr\n    #   - test\n    #   - [\n\
    \    #   - ]\n    #   - ((\n    #   - ))\n    #   - let\n    #   - declare\n \
    \   #   - set\n    #   - unset\n    #   - readonly\n    #   - local\n    #   -\
    \ shift\n    #   - getopts\n    #   - getopts\n    #   - set\n    #   - set -o\n\
    \    #   - trap\n    #   - kill\n    #   - kill -l\n    #   - kill -L\n    # \
    \  - exit\n    #   - return\n    #   - exec\n    #   - eval\n    #   - $(command)\n\
    \    #   - `command`\n    #   - $((arithmetic-expression))\n    #   - $[arithmetic-expression]\n\
    \    #   - $variable\n    #   - ${variable}\n    #   - ${variable:-word}\n   \
    \ #   - ${variable:=word}\n    #   - ${variable:?message}\n    #   - ${variable:+word}\n\
    \    #   - ${#variable}\n    #   - ${variable#pattern}\n    #   - ${variable##pattern}\n\
    \    #   - ${variable%pattern}\n    #   - ${variable%%pattern}\n    #   - ${variable/pattern/string}\n\
    \    #   - ${variable//pattern/string}\n    #   - ${variable/#pattern/string}\n\
    \    #   - ${variable/%pattern/string}\n    #   - ${variable:offset:length}\n\
    \    #   - ${!prefix*}\n    #   - ${!prefix@}\n    #   - ${!name[@]}\n    #  \
    \ - ${!name[*]}\n    #   - ${array[@]}\n    #   - ${array[*]}\n    #   - ${#array[@]}\n\
    \    #   - ${#array[\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpjl030h42.sh: line 77: syntax error near unexpected token `}''\n/tmp/tmpjl030h42.sh:
    line 77: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=($@)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n\
    \    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len;\
    \ j++)); do\n            sum=$((list[i] + list[j]))\n            if [[ $sum -eq\
    \ 0 ]]; then\n                echo \"true\"\n                return\n        \
    \    fi\n        done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a nums=($@)\n    local -a seen=()\n    for num in \"${nums[@]}\";\
    \ do\n        if [[ \"${seen[$num]}\" == \"true\" ]]; then\n            echo \"\
    true\"\n            return\n        fi\n        seen[$((-num))]=\"true\"\n   \
    \ done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpz0z3q7br.sh: line 23: seen[$((-num))]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # your code here\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=($@)\n  local output=\"false\"\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local sum=0\n  local len=${#input[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    for ((j=i+1; j<len; j++)); do\n      sum=$((input[i] + input[j]))\n     \
    \ if [[ $sum -eq 0 ]]; then\n        output=\"true\"\n        break\n      fi\n\
    \    done\n  done\n  echo $output\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local result=false\n  for i in $input; do\n    for j in $input;\
    \ do\n      if [[ $i -eq $j ]]; then\n        continue\n      fi\n      if [[\
    \ $((i + j)) -eq 0 ]]; then\n        result=true\n        break\n      fi\n  \
    \  done\n  done\n  echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=($@)\n  local -i i=0\n  local -i j=0\n  local -i len=${#array[@]}\n\
    \  local -i sum=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++));\
    \ do\n      sum=$((array[i] + array[j]))\n      if [[ $sum -eq 0 ]]; then\n  \
    \      echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=($@)\n  local -a neg_array\n  local -a pos_array\n  local -a\
    \ zero_array\n  local -a neg_array_sorted\n  local -a pos_array_sorted\n  local\
    \ -a zero_array_sorted\n  local -a neg_array_sorted_uniq\n  local -a pos_array_sorted_uniq\n\
    \  local -a zero_array_sorted_uniq\n  local -a neg_array_sorted_uniq_rev\n  local\
    \ -a pos_array_sorted_uniq_rev\n  local -a zero_array_sorted_uniq_rev\n  local\
    \ -a neg_array_sorted_uniq_rev_sorted\n  local -a pos_array_sorted_uniq_rev_sorted\n\
    \  local -a zero_array_sorted_uniq_rev_sorted\n  local -a neg_array_sorted_uniq_rev_sorted_uniq\n\
    \  local -a pos_array_sorted_uniq_rev_sorted_uniq\n  local -a zero_array_sorted_uniq_rev_sorted_uniq\n\
    \  local -a neg_array_sorted_uniq_rev_sorted_uniq_rev\n  local -a pos_array_sorted_uniq_rev_sorted_uniq_rev\n\
    \  local -a zero_array_sorted_uniq_rev_sorted_uniq_rev\n  local -a neg_array_sorted_uniq_rev_sorted_uniq_rev_sorted\n\
    \  local -a pos_array_sorted_uniq_rev_sorted_uniq_rev_sorted\n  local -a zero_array_sorted_uniq_rev_sorted_uniq_rev_sorted\n\
    \  local -a neg_array_sorted_uniq_rev_sorted_uniq_rev_sorted_uniq\n  local -a\
    \ pos_array_sorted_uniq_rev_sorted_uniq_rev_sorted_uniq\n  local -a zero_array_sorted_uniq_rev_sorted\n\
    }\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a arr=(\"$@\")\n  local -A map\n  for i in \"${arr[@]}\"; do\n    map[$i]=1\n\
    \  done\n  for i in \"${arr[@]}\"; do\n    if [[ -n \"${map[-$i]}\" ]]; then\n\
    \      echo \"true\"\n      return\n    fi\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # HINT: use the following command to\
    \ sort the input\n    # sorted=$(echo \"$@\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' ')\n    # HINT: use the following command to test if two numbers sum to zero\n\
    \    # test $(($number1 + $number2)) -eq 0\n    # HINT: use the following command\
    \ to get the number of elements in the list\n    # number_of_elements=$#\n   \
    \ # HINT: use a loop to iterate over the list\n    # for number in $sorted; do\n\
    \    #     ...\n    # done\n    sorted=$(echo \"$@\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' ')\n    number_of_elements=$#\n    for ((i=1; i<$number_of_elements;\
    \ i++)); do\n        for ((j=i+1; j<=$number_of_elements; j++)); do\n        \
    \    if test $((${sorted[$i]} + ${sorted[$j]})) -eq 0; then\n                echo\
    \ \"true\"\n                return\n            fi\n        done\n    done\n \
    \   echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local numbers=\"$1\"\n  local number\n  local sum\n  local found_pair\n  for\
    \ number in $numbers; do\n    sum=$((-1 * $number))\n    if [[ $numbers =~ $sum\
    \ ]]; then\n      found_pair=true\n      break\n    fi\n  done\n  if [[ -n $found_pair\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to zero\n    # Hint: use a loop\
    \ to check if there are two distinct elements in the list that sum to zero\n \
    \   # Hint: use a loop to check if there are two distinct elements in the list\
    \ that sum to zero\n    # Hint: use a loop to check if there are two distinct\
    \ elements in the list that sum to zero\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to zero\n    # Hint: use a loop\
    \ to check if there are two distinct elements in the list that sum to zero\n \
    \   # Hint: use a loop to check if there are two distinct elements in the list\
    \ that sum to zero\n    # Hint: use a loop to check if there are two distinct\
    \ elements in the list that sum to zero\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to zero\n    # Hint: use a loop\
    \ to check if there are two distinct elements in the list that sum to zero\n \
    \   # Hint: use a loop to check if there are two distinct elements in the list\
    \ that sum to zero\n    # Hint: use a loop to check if there are two distinct\
    \ elements in the list that sum to zero\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to zero\n    # Hint: use a loop\
    \ to check if there are two distinct elements in the list that sum to zero\n \
    \   # Hint: use a loop to check if there are two distinct elements in the list\
    \ that sum to zero\n    # Hint: use a loop to check if there are two distinct\
    \ elements in the list that sum to zero\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to zero\n    # Hint: use a loop\
    \ to check if there are two distinct elements in the list that sum to zero\n \
    \   # Hint: use a loop to check if there are two distinct elements in the list\
    \ that sum to zero\n    # Hint: use a loop to check if there are two distinct\
    \ elements in the list that sum to zero\n    # Hint: use a loop to check if there\
    \ are two distinct elements in the list that sum to\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpem21yed4.sh: line 38: syntax error near unexpected token `}''\n/tmp/tmpem21yed4.sh:
    line 38: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=$1\n  local nums=($input)\n  local nums_len=${#nums[@]}\n  local\
    \ i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<nums_len; i++)); do\n    for\
    \ ((j=i+1; j<nums_len; j++)); do\n      sum=$((nums[i] + nums[j]))\n      if [[\
    \ $sum -eq 0 ]]; then\n        echo \"true\"\n        return\n      fi\n    done\n\
    \  done\n  echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n  \
    \  [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # hint: use the \"for\" loop\n    for\
    \ i in $1; do\n        for j in $1; do\n            if [ $i -eq $j ]; then\n \
    \               continue\n            fi\n            if [ $((i+j)) -eq 0 ]; then\n\
    \                echo \"true\"\n                return\n            fi\n     \
    \   done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=\"$1\"\n  local result=\"false\"\n  local i=0\n  local j=0\n  local\
    \ sum=0\n  for i in $input; do\n    for j in $input; do\n      if [ $i -ne $j\
    \ ]; then\n        sum=$((i + j))\n        if [ $sum -eq 0 ]; then\n         \
    \ result=\"true\"\n          break\n        fi\n      fi\n    done\n  done\n \
    \ echo \"$result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local -a numbers=($1)\n    local -a seen\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        local number=${numbers[$i]}\n        if [[ \"${seen[$((-number))]}\"\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n      \
    \  seen[$number]=true\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpewywm7al.sh: line 20: seen: bad array subscript\n/tmp/tmpewywm7al.sh:
    line 20: seen: bad array subscript\n/tmp/tmpewywm7al.sh: line 20: seen: bad array
    subscript\n/tmp/tmpewywm7al.sh: line 20: seen: bad array subscript\n/tmp/tmpewywm7al.sh:
    line 20: seen: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=$1\n    local input_array=($input)\n    local len=${#input_array[@]}\n\
    \    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<$len; i++))\n\
    \    do\n        for ((j=i+1; j<$len; j++))\n        do\n            sum=$((${input_array[$i]}\
    \ + ${input_array[$j]}))\n            if [ $sum -eq 0 ]\n            then\n  \
    \              echo \"true\"\n                return\n            fi\n       \
    \ done\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=$1\n    local result=\"false\"\n    for i in $input; do\n   \
    \     for j in $input; do\n            if [ $i -ne $j ] && [ $((i+j)) -eq 0 ];\
    \ then\n                result=\"true\"\n            fi\n        done\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a array=($@)\n  local -a seen\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    local x=${array[$i]}\n    if [[ ${seen[$x]} ]]; then\n      echo \"true\"\
    \n      return\n    fi\n    local y=$((-x))\n    seen[$y]=1\n  done\n  echo \"\
    false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3abi8ksb.sh: line 25: seen[$y]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    return\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local list=\"$1\"\n    local sum=0\n    local i=0\n    local j=0\n    local\
    \ len=0\n    local num=0\n    local num_list=()\n    local num_list_len=0\n  \
    \  local num_list_i=0\n    local num_list_j=0\n    local num_list_sum=0\n    local\
    \ result=\"false\"\n\n    # convert the list to an array of integers\n    len=${#list}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${list:i:1}\n        if [[ \"$num\"\
    \ =~ ^[0-9]+$ ]]; then\n            num_list[num_list_len]=$num\n            num_list_len=$((num_list_len+1))\n\
    \        fi\n    done\n\n    # check if there are two distinct elements in the\
    \ list that sum to zero\n    for ((i=0; i<num_list_len; i++)); do\n        for\
    \ ((j=i+1; j<num_list_len; j++)); do\n            num_list_sum=$((num_list[i]+num_list[j]))\n\
    \            if [[ \"$num_list_sum\" -eq 0 ]]; then\n                result=\"\
    true\"\n                break\n            fi\n        done\n    done\n\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # Hint: you can use the `sort` command to\
    \ sort the input list.\n  #       `sort` will sort the input in ascending order.\n\
    \  #       You can use the `-n` option to sort the input as numbers.\n  #    \
    \   You can use the `-r` option to sort the input in descending order.\n  #  \
    \     You can use the `-g` option to sort the input as numbers in general\n  #\
    \       floating point format.\n  #       You can use the `-b` option to ignore\
    \ leading blanks.\n  #       You can use the `-t` option to specify the field\
    \ separator.\n  #       You can use the `-k` option to sort by a key.\n  #   \
    \    You can use the `-u` option to output only the first of an equal run.\n \
    \ #       You can use the `-z` option to separate lines by NUL characters.\n \
    \ #       You can use the `-o` option to output to a file.\n  #       You can\
    \ use the `-c` option to check whether the input is sorted.\n  #       You can\
    \ use the `-h` option to sort human readable numbers.\n  #       You can use the\
    \ `-M` option to sort month names.\n  #       You can use the `-V` option to sort\
    \ version numbers.\n  #       You can use the `-C` option to use the POSIX locale.\n\
    \  #       You can use the `-m` option to merge already sorted files.\n  #   \
    \    You can use the `-d` option to sort by dictionary order.\n  #       You can\
    \ use the `-f` option to fold lower case to upper case characters.\n  #      \
    \ You can use the `-i` option to ignore non-printing characters.\n  #       You\
    \ can use the `-n` option to sort by numeric value.\n  #       You can use the\
    \ `-r` option to reverse the result of comparisons.\n  #       You can use the\
    \ `-R` option to sort in a random order.\n  #       You can use the `-s` option\
    \ to stable sort.\n  #       You can use the `-S` option to specify the amount\
    \ of memory to use.\n \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp0_ovzqsi.sh: line 44: syntax error near unexpected token `}''\n/tmp/tmp0_ovzqsi.sh:
    line 44: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 1
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # your code here\n  return 0\n}\n\ncandidate() {\n    pairs_sum_to_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # Hint: use the \"sort\" and \"uniq\"\
    \ commands.\n    # Hint: use the \"comm\" command.\n    # Hint: use the \"wc\"\
    \ command.\n    # Hint: use the \"tr\" command.\n    # Hint: use the \"cut\" command.\n\
    \    # Hint: use the \"grep\" command.\n    # Hint: use the \"sed\" command.\n\
    \    # Hint: use the \"awk\" command.\n    # Hint: use the \"bc\" command.\n \
    \   # Hint: use the \"paste\" command.\n    # Hint: use the \"xargs\" command.\n\
    \    # Hint: use the \"expr\" command.\n    # Hint: use the \"head\" command.\n\
    \    # Hint: use the \"tail\" command.\n    # Hint: use the \"tee\" command.\n\
    \    # Hint: use the \"yes\" command.\n    # Hint: use the \"true\" command.\n\
    \    # Hint: use the \"false\" command.\n    # Hint: use the \"cat\" command.\n\
    \    # Hint: use the \"tr\" command.\n    # Hint: use the \"sort\" command.\n\
    \    # Hint: use the \"uniq\" command.\n    # Hint: use the \"comm\" command.\n\
    \    # Hint: use the \"wc\" command.\n    # Hint: use the \"tr\" command.\n  \
    \  # Hint: use the \"cut\" command.\n    # Hint: use the \"grep\" command.\n \
    \   # Hint: use the \"sed\" command.\n    # Hint: use the \"awk\" command.\n \
    \   # Hint: use the \"bc\" command.\n    # Hint: use the \"paste\" command.\n\
    \    # Hint: use the \"xargs\" command.\n    # Hint: use the \"expr\" command.\n\
    \    # Hint: use the \"head\" command.\n    # Hint: use the \"tail\" command.\n\
    \    # Hint: use the \"tee\" command.\n    # Hint: use the \"yes\" command.\n\
    \    # Hint: use the\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpazaup4p1.sh: line 55: syntax error near unexpected token `}''\n/tmp/tmpazaup4p1.sh:
    line 55: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input_list=$1\n  local input_array=($input_list)\n  local num_elements=${#input_array[@]}\n\
    \  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<num_elements; i++));\
    \ do\n    for ((j=i+1; j<num_elements; j++)); do\n      sum=$((input_array[i]\
    \ + input_array[j]))\n      if [[ $sum -eq 0 ]]; then\n        echo \"true\"\n\
    \        return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    local input=($@)\n    local i\n    local j\n    for ((i=0; i<${#input[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#input[@]}; j++)); do\n            if [[\
    \ ${input[i]} + ${input[j]} -eq 0 ]]; then\n                echo \"true\"\n  \
    \              return\n            fi\n        done\n    done\n    echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmrknchrg.sh: line 21: conditional binary operator expected\n/tmp/tmpmrknchrg.sh:
    line 21: syntax error near `+''\n/tmp/tmpmrknchrg.sh: line 21: `            if
    [[ ${input[i]} + ${input[j]} -eq 0 ]]; then''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \    # TODO: implement this function\n    # hint: you can use the following command\
    \ to sort the input\n    # sorted_list=$(echo $1 | tr \" \" \"\\n\" | sort -n)\n\
    \    # hint: you can use the following command to check if a string is in a list\n\
    \    # list=\"1 2 3\"\n    # if [[ $list =~ \"2\" ]]; then\n    #     echo \"\
    2 is in the list\"\n    # fi\n    # hint: you can use the following command to\
    \ check if a string is in a list\n    # list=\"1 2 3\"\n    # if [[ $list =~ \"\
    2\" ]]; then\n    #     echo \"2 is in the list\"\n    # fi\n    # hint: you can\
    \ use the following command to check if a string is in a list\n    # list=\"1\
    \ 2 3\"\n    # if [[ $list =~ \"2\" ]]; then\n    #     echo \"2 is in the list\"\
    \n    # fi\n    # hint: you can use the following command to check if a string\
    \ is in a list\n    # list=\"1 2 3\"\n    # if [[ $list =~ \"2\" ]]; then\n  \
    \  #     echo \"2 is in the list\"\n    # fi\n    # hint: you can use the following\
    \ command to check if a string is in a list\n    # list=\"1 2 3\"\n    # if [[\
    \ $list =~ \"2\" ]]; then\n    #     echo \"2 is in the list\"\n    # fi\n   \
    \ # hint: you can use the following command to check if a string is in a list\n\
    \    # list=\"1 2 3\"\n    # if [[ $list =~ \"2\" ]]; then\n    #     echo \"\
    2 is in the list\"\n    # fi\n    # hint: you can use the following command to\
    \ check if a string is in a list\n    # list=\"1 2 3\"\n    # if [[ $list =~ \"\
    2\" ]]; then\n    #     echo \"2 is in the list\"\n    # fi\n    # hint: you can\
    \ use the following command to check if a string is in a list\n    # list=\"1\
    \ 2 3\"\n    # if [[ $list =~ \"2\" ]]; then\n\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpfkrd08bt.sh: line 58: syntax error near unexpected token `}''\n/tmp/tmpfkrd08bt.sh:
    line 58: `}''\n"'
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local list=($@)\n  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#list[@]}; j++)); do\n      sum=$((${list[$i]}\
    \ + ${list[$j]}))\n      if [[ $sum -eq 0 ]]; then\n        echo \"true\"\n  \
    \      return\n      fi\n    done\n  done\n  echo \"false\"\n}\n\ncandidate()\
    \ {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3\
    \ 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") =\
    \ \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local input=\"$1\"\n  local output=\"false\"\n  local numbers=($input)\n  local\
    \ number_count=${#numbers[@]}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ sum=0\n  for ((i=0; i<number_count; i++)); do\n    for ((j=i+1; j<number_count;\
    \ j++)); do\n      sum=$((numbers[i] + numbers[j]))\n      if [ $sum -eq 0 ];\
    \ then\n        output=\"true\"\n        break\n      fi\n    done\n  done\n \
    \ echo \"$output\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n\
    \    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local -a nums=($1)\n  local -a negs=()\n  local -a poss=()\n  for num in \"\
    ${nums[@]}\"; do\n    if [[ $num -lt 0 ]]; then\n      negs+=(\"$num\")\n    else\n\
    \      poss+=(\"$num\")\n    fi\n  done\n  for neg in \"${negs[@]}\"; do\n   \
    \ for pos in \"${poss[@]}\"; do\n      if [[ $((neg + pos)) -eq 0 ]]; then\n \
    \       echo \"true\"\n        return\n      fi\n    done\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3 -2 1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate \"-3\
    \ 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 0
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  local numbers=($@)\n  local sum=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    for ((j=i+1; j<${#numbers[@]};\
    \ j++)); do\n      sum=$((numbers[i] + numbers[j]))\n      if [ $sum -eq 0 ];\
    \ then\n        echo \"true\"\n        return\n      fi\n    done\n  done\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    pairs_sum_to_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 3 5 0\") = \"false\" ]]\n    [[ $(candidate \"1 3\
    \ -2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 7\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n    [[ $(candidate \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\") = \"true\" ]]\n    [[ $(candidate\
    \ \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 30\") =\
    \ \"false\" ]]\n    [[ $(candidate \"-3 9 -1 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660360606
- exit_code: 2
  program: "#!/bin/bash\n# pairs_sum_to_zero takes a list of integers as an input.\n\
    # it returns true if there are two distinct elements in the list that\n# sum to\
    \ zero, and false otherwise.\n# >>> $(pairs_sum_to_zero \"1 3 5 0\")\n# \"false\"\
    \n# >>> $(pairs_sum_to_zero \"1 3 -2 1\")\n# \"false\"\n# >>> $(pairs_sum_to_zero\
    \ \"1 2 3 7\")\n# \"false\"\n# >>> $(pairs_sum_to_zero \"2 4 -5 3 5 7\")\n# \"\
    true\"\n# >>> $(pairs_sum_to_zero \"1\")\n# \"false\"\npairs_sum_to_zero() {\n\
    \  # TODO: implement this function\n  # HINT: use the `sort` command to sort the\
    \ list of integers\n  # HINT: use the `uniq` command to remove duplicates from\
    \ the list\n  # HINT: use the `grep` command to search for the pattern \"^-.*\\\
    b0\\b\"\n  # HINT: use the `grep` command to search for the pattern \"^0\\b.*\\\
    b0\\b\"\n  # HINT: use the `grep` command to search for the pattern \"^.*\\b0\\\
    b.*\\b0\\b\"\n  # HINT: use the `grep` command to search for the pattern \"^.*\\\
    b0\\b.*\\b-0\\b\"\n  # HINT: use the `grep` command to search for the pattern\
    \ \"^.*\\b-0\\b.*\\b0\\b\"\n  # HINT: use the `grep` command to search for the\
    \ pattern \"^.*\\b-0\\b.*\\b-0\\b\"\n  # HINT: use the `grep` command to search\
    \ for the pattern \"^.*\\b-0\\b\"\n  # HINT: use the `grep` command to search\
    \ for the pattern \"^-.*\\b0\\b\"\n  # HINT: use the `grep` command to search\
    \ for the pattern \"^0\\b\"\n  # HINT: use the `grep` command to search for the\
    \ pattern \"^-0\\b\"\n  # HINT: use the `grep` command to search for the pattern\
    \ \"^0\\b.*\\b0\\b\"\n  # HINT: use the `grep` command to search for the pattern\
    \ \"^.*\\b0\\b.*\\b0\\b\"\n  # HINT: use the `grep` command to search for the\
    \ pattern \"^.*\\b0\\b.*\\b-0\\b\"\n  # HINT: use the `grep` command to search\
    \ for the pattern \"^.*\\b-0\\b.*\\b0\\b\"\n  # HINT: use the `grep` command to\
    \ search for the pattern \"^.*\\b-0\\b.*\\b-0\\b\"\n}\n\ncandidate() {\n    pairs_sum_to_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 0\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 3 -2 1\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 3 7\") = \"false\" ]]\n    [[ $(candidate \"2 4 -5 3 5 7\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 30\"\
    ) = \"true\" ]]\n    [[ $(candidate \"-3 9 -1 3 2 31\") = \"true\" ]]\n    [[\
    \ $(candidate \"-3 9 -1 4 2 30\") = \"false\" ]]\n    [[ $(candidate \"-3 9 -1\
    \ 4 2 31\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpddlg0yvb.sh: line 34: syntax error near unexpected token `}''\n/tmp/tmpddlg0yvb.sh:
    line 34: `}''\n"'
  stdout: b''
  timestamp: 1660360606

language: sh
name: HumanEval_95_check_dict_case
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [[ -z \"$1\" ]]; then\n        echo \"false\"\n        return\n  \
    \  fi\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n \
    \   local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local\
    \ upper_keys=$(echo \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$keys\"\
    \ == \"$lower_keys\" ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local -i upper=0\n  local -i lower=0\n  local -i i=0\n\
    \  local -i len=0\n  local -i ret=0\n  local -i empty=0\n  local -i header=0\n\
    \  local -i header_len=0\n  local -i header_upper=0\n  local -i header_lower=0\n\
    \  local -i header_mixed=0\n  local -i header_empty=0\n  local -i header_ret=0\n\
    \  local -i header_valid=0\n  local -i header_invalid=0\n  local -i header_valid_upper=0\n\
    \  local -i header_valid_lower=0\n  local -i header_valid_mixed=0\n  local -i\
    \ header_valid_empty=0\n  local -i header_valid_ret=0\n  local -i header_invalid_upper=0\n\
    \  local -i header_invalid_lower=0\n  local -i header_invalid_mixed=0\n  local\
    \ -i header_invalid_empty=0\n  local -i header_invalid_ret=0\n  local -i header_valid_upper_lower=0\n\
    \  local -i header_valid_upper_mixed=0\n  local -i header_valid_upper_empty=0\n\
    \  local -i header_valid_upper_ret=0\n  local -i header_valid_lower_mixed=0\n\
    \  local -i header_valid_lower_empty=0\n  local -i header_valid_lower_ret=0\n\
    \  local -i header_valid_mixed_empty=0\n  local -i header_valid_mixed_ret=0\n\
    \  local -i header_valid_empty_ret=0\n  local -i header_invalid_upper_lower=0\n\
    \  local -i header_invalid_upper_mixed=0\n  local -i header_invalid_upper_empty=0\n\
    \  local -i header_invalid_upper_ret=0\n  local -i header_invalid_lower_mixed=0\n\
    \  local -i header_invalid_lower_empty=0\n \n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local -i cnt=0\n    local -i lower=0\n    local\
    \ -i upper=0\n    local -i digit=0\n    local -i other=0\n    local -i total=0\n\
    \    local -i result=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n\
    \    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local\
    \ -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n\
    \    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local\
    \ -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n\
    \    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local\
    \ -i Z=0\n    local -i zero=0\n    local -i one=0\n    local -i two=0\n    local\
    \ -i three=0\n    local -i four=0\n    local -i five=0\n    local -i six=0\n \
    \   local -i seven=0\n    local -i eight=0\n    local -i nine=0\n    local -i\
    \ space=0\n    local -i comma\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # You can use the following command to convert\
    \ the string to lower case\n    # echo $string | tr '[:upper:]' '[:lower:]'\n\
    \    # You can use the following command to convert the string to upper case\n\
    \    # echo $string | tr '[:lower:]' '[:upper:]'\n    # You can use the following\
    \ command to check if a string is in lower case\n    # [[ $string =~ ^[a-z]+$\
    \ ]]\n    # You can use the following command to check if a string is in upper\
    \ case\n    # [[ $string =~ ^[A-Z]+$ ]]\n    # You can use the following command\
    \ to check if a string is a number\n    # [[ $string =~ ^[0-9]+$ ]]\n    # You\
    \ can use the following command to check if a string is a string\n    # [[ $string\
    \ =~ ^[a-zA-Z]+$ ]]\n    # You can use the following command to check if a string\
    \ is a string or a number\n    # [[ $string =~ ^[a-zA-Z0-9]+$ ]]\n    # You can\
    \ use the following command to check if a string is a string or a number or a\
    \ special character\n    # [[ $string =~ ^[a-zA-Z0-9!@#$%^&*()_+-=]+$ ]]\n   \
    \ # You can use the following command to check if a string is a string or a number\
    \ or a special character or a space\n    # [[ $string =~ ^[a-zA-Z0-9!@#$%^&*()_+-=\
    \ ]+$ ]]\n    # You can use the following command to check if a string is a string\
    \ or a number or a special character or a space or a comma\n    # [[ $string =~\
    \ ^[a-zA-Z0-9!@#$%^&*()_+-=, ]+$ ]]\n    # You can use the following command to\
    \ check if a string is a string or a number or a special character or a space\
    \ or a comma or a new line\n    # [[ $string =~ ^[a-zA-Z0-9!@#$%^&*()_+-\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpxvqwtwvz.sh: line 40: syntax error near unexpected token `}''\n/tmp/tmpxvqwtwvz.sh:
    line 40: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    if [ -z \"$1\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    IFS=\",\"\n    read -ra ADDR <<< \"$1\"\n    for\
    \ i in \"${ADDR[@]}\"; do\n        if [[ $i =~ [A-Z] ]]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    done\n    echo \"false\"\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys=$(echo \"$csv\" | cut -d, -f1)\n    for key in $keys; do\n   \
    \     if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n            lower_case_keys=$((lower_case_keys\
    \ + 1))\n        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n            upper_case_keys=$((upper_case_keys\
    \ + 1))\n        fi\n    done\n    if [[ $lower_case_keys -eq $(echo \"$csv\"\
    \ | wc -l) ]]; then\n        echo \"true\"\n    elif [[ $upper_case_keys -eq $(echo\
    \ \"$csv\" | wc -l) ]]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case=$(echo \"$csv\" | awk -F, '{print\
    \ tolower($1)}')\n    local upper_case=$(echo \"$csv\" | awk -F, '{print toupper($1)}')\n\
    \    if [[ \"$csv\" == \"$lower_case\" ]]; then\n        echo \"true\"\n    elif\
    \ [[ \"$csv\" == \"$upper_case\" ]]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n  # Split\
    \ the CSV into lines\n  local lines=($(echo \"$1\" | tr '\\n' ' '))\n  # Split\
    \ the first line into keys and values\n  local first_line=($(echo \"${lines[0]}\"\
    \ | tr ',' ' '))\n  local first_key=\"${first_line[0]}\"\n  local first_value=\"\
    ${first_line[1]}\"\n  # Check if the first key is all lower case\n  if [[ \"$first_key\"\
    \ =~ ^[a-z]+$ ]]; then\n    local lower_case=\"true\"\n  else\n    local lower_case=\"\
    false\"\n  fi\n  # Check if the first key is all upper case\n  if [[ \"$first_key\"\
    \ =~ ^[A-Z]+$ ]]; then\n    local upper_case=\"true\"\n  else\n    local upper_case=\"\
    false\"\n  fi\n  # Iterate over the rest of the lines\n  for ((i=1; i<${#lines[@]};\
    \ i++)); do\n    # Split the line into keys and values\n    local line=($(echo\
    \ \"${lines[$i]}\" | tr ',' ' '))\n    local key=\"${line[0]}\"\n    local value=\"\
    ${line[1]}\"\n    # Check if the key is all lower case\n    if [[ \"$key\" =~\
    \ ^[a-z]+$ ]]; then\n      if [ \"$lower_case\" != \"true\" ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    else\n      lower_case=\"false\"\n\
    \    fi\n    # Check if the key is all upper case\n    if [[ \"$key\" =~ ^[A-Z]+$\
    \ ]]; then\n      if [ \"$upper_case\" != \"true\" ]; then\n        echo \"false\"\
    \n        return\n      fi\n    else\n      upper_case=\"false\"\n    fi\n  done\n\
    \  # Return true if all keys are lower case or all keys are upper case\n  if [\
    \ \"$lower_case\" == \"true\" ] || [ \"$upper_case\" == \"true\" ]; then\n   \
    \ echo \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpxzj_r_l2.sh: line 67: syntax error near unexpected token `}''\n/tmp/tmpxzj_r_l2.sh:
    line 67: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    #echo \"true\"\n    #echo \"false\"\n   \
    \ #echo \"true\"\n    #echo \"false\"\n    #echo \"false\"\n    #echo \"true\"\
    \n    if [ -z \"$1\" ]; then\n        echo \"false\"\n    else\n        echo \"\
    $1\" | awk -F, '{print $1}' | grep -q '[a-z]'\n        if [ $? -eq 0 ]; then\n\
    \            echo \"$1\" | awk -F, '{print $1}' | grep -q '[A-Z]'\n          \
    \  if [ $? -eq 0 ]; then\n                echo \"false\"\n            else\n \
    \               echo \"true\"\n            fi\n        else\n            echo\
    \ \"$1\" | awk -F, '{print $1}' | grep -q '[A-Z]'\n            if [ $? -eq 0 ];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    csv=\"$1\"\n    keys=$(echo \"$csv\" | cut -d, -f1)\n    if [ -z \"$keys\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $keys =~\
    \ [A-Z] ]]; then\n        if [[ $keys =~ [a-z] ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    else\n        if [[ $keys =~ [A-Z] ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    fi\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # TODO: implement this function\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local first_key=$(echo\
    \ \"$keys\" | head -n1)\n    local first_key_upper=$(echo \"$first_key\" | tr\
    \ '[:lower:]' '[:upper:]')\n    local first_key_lower=$(echo \"$first_key\" |\
    \ tr '[:upper:]' '[:lower:]')\n    local keys_upper=$(echo \"$keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n    local keys_lower=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    if [ \"$keys\" == \"$keys_upper\" ] || [ \"$keys\" == \"$keys_lower\" ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local -a keys=($(echo \"$1\" | cut -d, -f1))\n    local -a lower_keys=($(echo\
    \ \"${keys[@]}\" | tr '[:upper:]' '[:lower:]'))\n    local -a upper_keys=($(echo\
    \ \"${keys[@]}\" | tr '[:lower:]' '[:upper:]'))\n    if [ \"${keys[*]}\" = \"\
    ${lower_keys[*]}\" ] || [ \"${keys[*]}\" = \"${upper_keys[*]}\" ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local lower_case_keys=$(echo \"$csv\" | cut -d, -f1\
    \ | grep -E '^[a-z]+$')\n    local upper_case_keys=$(echo \"$csv\" | cut -d, -f1\
    \ | grep -E '^[A-Z]+$')\n    if [ -z \"$lower_case_keys\" ] && [ -z \"$upper_case_keys\"\
    \ ]; then\n        echo \"false\"\n    elif [ -z \"$lower_case_keys\" ] && [ -n\
    \ \"$upper_case_keys\" ]; then\n        echo \"true\"\n    elif [ -n \"$lower_case_keys\"\
    \ ] && [ -z \"$upper_case_keys\" ]; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local keys=$(echo \"$csv\" | cut -d, -f1)\n  local\
    \ lower=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n  local upper=$(echo \"\
    $keys\" | tr '[:lower:]' '[:upper:]')\n  if [ \"$keys\" = \"$lower\" ] || [ \"\
    $keys\" = \"$upper\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local all_lower=true\n    local all_upper=true\n\
    \    local is_empty=true\n    while IFS=, read -r key value; do\n        is_empty=false\n\
    \        if [[ \"$key\" =~ [A-Z] ]]; then\n            all_lower=false\n     \
    \   fi\n        if [[ \"$key\" =~ [a-z] ]]; then\n            all_upper=false\n\
    \        fi\n    done <<< \"$csv\"\n    if $is_empty; then\n        echo \"false\"\
    \n    elif $all_lower || $all_upper; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$keys\" == \"$lower_keys\"\
    \ ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpzz_8hpr9.sh: line 187: syntax error near unexpected token `}''\n/tmp/tmpzz_8hpr9.sh:
    line 187: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    #\
    \ echo \"false\"\n    # echo \"true\"\n    # echo \"true\"\n    # echo \"false\"\
    \n    # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo\
    \ \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\
    \    # echo \"true\"\n    # echo \"true\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"true\"\n    #\
    \ echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\
    \n    # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo\
    \ \"false\"\n    # echo \"true\"\n    # echo \"true\"\n    # echo \"false\"\n\
    \    # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"true\"\n    # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\
    \n    # echo \"false\"\n    # echo \"true\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n   \
    \ # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\
    \n    # echo \"true\"\n    # echo \"true\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"true\"\n    #\
    \ echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\
    \n    # echo \"true\"\n\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpy81cvbuu.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpy81cvbuu.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_length=$(echo \"$csv\" | wc -l)\n   \
    \ if [ \"$csv_length\" -eq 0 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    local first_key=$(echo \"$csv\" | head -n 1 | cut -d, -f1)\n    local\
    \ first_key_length=$(echo \"$first_key\" | wc -c)\n    local first_key_lower=$(echo\
    \ \"$first_key\" | tr '[:upper:]' '[:lower:]')\n    local first_key_upper=$(echo\
    \ \"$first_key\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$first_key\" = \"$first_key_lower\"\
    \ ]; then\n        local key_case=\"lower\"\n    elif [ \"$first_key\" = \"$first_key_upper\"\
    \ ]; then\n        local key_case=\"upper\"\n    else\n        echo \"false\"\n\
    \        return\n    fi\n    local key_length=$(echo \"$csv\" | cut -d, -f1 |\
    \ wc -c)\n    if [ \"$key_length\" -ne \"$first_key_length\" ]; then\n       \
    \ echo \"false\"\n        return\n    fi\n    local key_lower=$(echo \"$csv\"\
    \ | cut -d, -f1 | tr '[:upper:]' '[:lower:]')\n    local key_upper=$(echo \"$csv\"\
    \ | cut -d, -f1 | tr '[:lower:]' '[:upper:]')\n    if [ \"$key_case\" = \"lower\"\
    \ ]; then\n        if [ \"$key_lower\" = \"$csv\" ]; then\n            echo \"\
    true\"\n        else\n            echo \"false\"\n        fi\n    else\n     \
    \   if [ \"$key_upper\" = \"$csv\" ]; then\n            echo \"true\"\n      \
    \  else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    #echo $1\n    #echo $2\n    #echo $3\n  \
    \  #echo $4\n    #echo $5\n    #echo $6\n    #echo $7\n    #echo $8\n    #echo\
    \ $9\n    #echo ${10}\n    #echo ${11}\n    #echo ${12}\n    #echo ${13}\n   \
    \ #echo ${14}\n    #echo ${15}\n    #echo ${16}\n    #echo ${17}\n    #echo ${18}\n\
    \    #echo ${19}\n    #echo ${20}\n    #echo ${21}\n    #echo ${22}\n    #echo\
    \ ${23}\n    #echo ${24}\n    #echo ${25}\n    #echo ${26}\n    #echo ${27}\n\
    \    #echo ${28}\n    #echo ${29}\n    #echo ${30}\n    #echo ${31}\n    #echo\
    \ ${32}\n    #echo ${33}\n    #echo ${34}\n    #echo ${35}\n    #echo ${36}\n\
    \    #echo ${37}\n    #echo ${38}\n    #echo ${39}\n    #echo ${40}\n    #echo\
    \ ${41}\n    #echo ${42}\n    #echo ${43}\n    #echo ${44}\n    #echo ${45}\n\
    \    #echo ${46}\n    #echo ${47}\n    #echo ${48}\n    #echo ${49}\n    #echo\
    \ ${50}\n    #echo ${51}\n    #echo ${52}\n    #echo ${53}\n    #echo ${54}\n\
    \    #echo ${55}\n    #echo ${56}\n    #echo ${57}\n    #echo ${58}\n    #echo\
    \ ${59}\n    #echo ${60}\n    #echo ${61}\n    #echo ${62}\n    #echo ${63}\n\
    \    #echo ${64}\n    #echo ${65}\n    #echo ${66}\n    #echo ${67}\n    #echo\
    \ ${68}\n    #echo ${69}\n    #echo ${70}\n    #echo ${71}\n    #echo ${72}\n\
    \    #echo ${73}\n    #\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp0h78fxp7.sh: line 92: syntax error near unexpected token `}''\n/tmp/tmp0h78fxp7.sh:
    line 92: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local lower_keys=$(echo \"$csv\" | cut -d, -f1 | grep\
    \ -E '^[a-z]+$')\n    local upper_keys=$(echo \"$csv\" | cut -d, -f1 | grep -E\
    \ '^[A-Z]+$')\n    if [ -z \"$lower_keys\" ]; then\n        echo \"true\"\n  \
    \  elif [ -z \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local dict_case=\"$(echo \"$csv\" | awk -F, '{print\
    \ $1}' | grep -E '^[a-z]+$' | wc -l)\"\n    local dict_case2=\"$(echo \"$csv\"\
    \ | awk -F, '{print $1}' | grep -E '^[A-Z]+$' | wc -l)\"\n    local dict_case3=\"\
    $(echo \"$csv\" | awk -F, '{print $1}' | grep -E '^[0-9]+$' | wc -l)\"\n    local\
    \ dict_case4=\"$(echo \"$csv\" | awk -F, '{print $1}' | grep -E '^[a-zA-Z]+$'\
    \ | wc -l)\"\n    local dict_case5=\"$(echo \"$csv\" | awk -F, '{print $1}' |\
    \ grep -E '^[0-9a-zA-Z]+$' | wc -l)\"\n    local dict_case6=\"$(echo \"$csv\"\
    \ | awk -F, '{print $1}' | grep -E '^[0-9a-z]+$' | wc -l)\"\n    local dict_case7=\"\
    $(echo \"$csv\" | awk -F, '{print $1}' | grep -E '^[0-9A-Z]+$' | wc -l)\"\n  \
    \  if [ \"$dict_case\" -eq \"$dict_case4\" ] || [ \"$dict_case2\" -eq \"$dict_case4\"\
    \ ] || [ \"$dict_case3\" -eq \"$dict_case5\" ] || [ \"$dict_case6\" -eq \"$dict_case5\"\
    \ ] || [ \"$dict_case7\" -eq \"$dict_case5\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n  local csv=$1\n\
    \  local keys=$(echo \"$csv\" | cut -d, -f1)\n  local lower_keys=$(echo \"$keys\"\
    \ | tr '[:upper:]' '[:lower:]')\n  local upper_keys=$(echo \"$keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n  if [ \"$keys\" = \"$lower_keys\" ] || [ \"$keys\" = \"$upper_keys\"\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local first_key=$(echo \"$csv\" | head -n 1 | cut -d,\
    \ -f1)\n    local first_key_lower=$(echo \"$first_key\" | tr '[:upper:]' '[:lower:]')\n\
    \    local first_key_upper=$(echo \"$first_key\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$first_key\" = \"$first_key_lower\" ]; then\n        local keys=$(echo\
    \ \"$csv\" | cut -d, -f1)\n        local keys_lower=$(echo \"$keys\" | tr '[:upper:]'\
    \ '[:lower:]')\n        if [ \"$keys\" = \"$keys_lower\" ]; then\n           \
    \ echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ [ \"$first_key\" = \"$first_key_upper\" ]; then\n        local keys=$(echo \"\
    $csv\" | cut -d, -f1)\n        local keys_upper=$(echo \"$keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n        if [ \"$keys\" = \"$keys_upper\" ]; then\n           \
    \ echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Fill in the code here\n  if [[ -z $1 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  IFS=$'\\n'\n  for line in $1; do\n    IFS=','\n    read -a\
    \ arr <<< \"$line\"\n    if [[ ${arr[0]} =~ [A-Z] ]]; then\n      if [[ ${arr[0]}\
    \ =~ [a-z] ]]; then\n        echo \"false\"\n        return\n      fi\n    elif\
    \ [[ ${arr[0]} =~ [a-z] ]]; then\n      if [[ ${arr[0]} =~ [A-Z] ]]; then\n  \
    \      echo \"false\"\n        return\n      fi\n    else\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_len=$(echo \"$csv\" | wc -l)\n    if\
    \ [ \"$csv_len\" -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv_keys=$(echo \"$csv\" | cut -d, -f1)\n    local csv_keys_len=$(echo\
    \ \"$csv_keys\" | wc -l)\n    local csv_keys_lower=$(echo \"$csv_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_upper=$(echo \"$csv_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n    if [ \"$csv_keys\" = \"$csv_keys_lower\" ]; then\n       \
    \ echo \"true\"\n    elif [ \"$csv_keys\" = \"$csv_keys_upper\" ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local keys=$(echo \"$csv\" | cut -d, -f1)\n  local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n  local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n  if [[ \"$keys\" == \"$lower_keys\"\
    \ ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local keys=\"$(echo \"$csv\" | cut -d, -f1)\"\n  local\
    \ lower_keys=\"$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\"\n  local upper_keys=\"\
    $(echo \"$keys\" | tr '[:lower:]' '[:upper:]')\"\n  if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n    echo \"true\"\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local IFS=\",\"\n    local -a arr=($1)\n    local -a keys=(${arr[@]::2})\n\
    \    local -a values=(${arr[@]:2})\n    local -a upper_keys=($(echo ${keys[@]}\
    \ | tr '[:lower:]' '[:upper:]'))\n    local -a lower_keys=($(echo ${keys[@]} |\
    \ tr '[:upper:]' '[:lower:]'))\n    if [ \"${keys[@]}\" == \"${upper_keys[@]}\"\
    \ ] || [ \"${keys[@]}\" == \"${lower_keys[@]}\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp6vpl8ppd.sh: line 27: [: too many arguments\n/tmp/tmp6vpl8ppd.sh:
    line 27: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"true\"\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local first_key\n    local first_key_case\n   \
    \ local key\n    local key_case\n    local keys\n    local keys_case\n    local\
    \ line\n    local lines\n    local lower_case\n    local upper_case\n    local\
    \ value\n    local values\n    local -a keys_array\n    local -a values_array\n\
    \    local -A dict\n    if [[ -z \"$csv\" ]]; then\n        echo \"false\"\n \
    \       return\n    fi\n    IFS=',' read -ra keys_array <<< \"$csv\"\n    first_key=\"\
    ${keys_array[0]}\"\n    first_key_case=\"$(echo \"$first_key\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    if [[ \"$first_key\" == \"$first_key_case\" ]]; then\n \
    \       lower_case=\"true\"\n        upper_case=\"false\"\n    else\n        lower_case=\"\
    false\"\n        upper_case=\"true\"\n    fi\n    IFS=$'\\n' read -ra lines <<<\
    \ \"$csv\"\n    for line in \"${lines[@]}\"; do\n        IFS=',' read -ra values_array\
    \ <<< \"$line\"\n        key=\"${values_array[0]}\"\n        value=\"${values_array[1]}\"\
    \n        key_case=\"$(echo \"$key\" | tr '[:upper:]' '[:lower:]')\"\n       \
    \ if [[ \"$key\" == \"$key_case\" ]]; then\n            keys_case=\"$lower_case\"\
    \n        else\n            keys_case=\"$upper_case\"\n        fi\n        if\
    \ [[ \"$keys_case\" == \"false\" ]]; then\n            echo \"false\"\n      \
    \      return\n        fi\n        dict[\"$key\"]=\"$value\"\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    IFS=',' read -ra ADDR <<< \"$1\"\n    for i in \"${ADDR[@]}\"; do\n     \
    \   if [[ $i =~ ^[A-Z]+$ ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: Implement this function\n    # Hint: Use the `is_upper` and `is_lower`\
    \ functions\n    # Hint: Use the `get_csv_keys` function\n    # Hint: Use the\
    \ `all` function\n    # Hint: Use the `is_empty` function\n    # Hint: Use the\
    \ `is_string` function\n    # Hint: Use the `is_upper` function\n    # Hint: Use\
    \ the `is_lower` function\n    # Hint: Use the `get_csv_keys` function\n    #\
    \ Hint: Use the `all` function\n    # Hint: Use the `is_empty` function\n    #\
    \ Hint: Use the `is_string` function\n    # Hint: Use the `is_upper` function\n\
    \    # Hint: Use the `is_lower` function\n    # Hint: Use the `get_csv_keys` function\n\
    \    # Hint: Use the `all` function\n    # Hint: Use the `is_empty` function\n\
    \    # Hint: Use the `is_string` function\n    # Hint: Use the `is_upper` function\n\
    \    # Hint: Use the `is_lower` function\n    # Hint: Use the `get_csv_keys` function\n\
    \    # Hint: Use the `all` function\n    # Hint: Use the `is_empty` function\n\
    \    # Hint: Use the `is_string` function\n    # Hint: Use the `is_upper` function\n\
    \    # Hint: Use the `is_lower` function\n    # Hint: Use the `get_csv_keys` function\n\
    \    # Hint: Use the `all` function\n    # Hint: Use the `is_empty` function\n\
    \    # Hint: Use the `is_string` function\n    # Hint: Use the `is_upper` function\n\
    \    # Hint: Use the `is_lower` function\n    # Hint: Use the `get_csv_keys` function\n\
    \    # Hint: Use the `all` function\n    # Hint: Use the `is_empty` function\n\
    \    # Hint: Use the `is_string` function\n    # Hint: Use\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp_z_1fef1.sh: line 54: syntax error near unexpected token `}''\n/tmp/tmp_z_1fef1.sh:
    line 54: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  csv=$1\n  if [[ -z \"$csv\" ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  keys=$(echo \"$csv\" | cut -d, -f1)\n  if [[ \"$keys\" =~ [A-Z] ]]; then\n\
    \    if [[ \"$keys\" =~ [a-z] ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  else\n    if [[ \"$keys\" =~ [A-Z] ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local keys=$(echo \"$csv\" | cut -d, -f1)\n  local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n  local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n  if [[ \"$keys\" == \"$lower_keys\"\
    \ ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local upper_keys=$(echo \"$keys\" | tr '[:lower:]' '[:upper:]')\n    local lower_keys=$(echo\
    \ \"$keys\" | tr '[:upper:]' '[:lower:]')\n    if [[ \"$keys\" == \"$upper_keys\"\
    \ ]] || [[ \"$keys\" == \"$lower_keys\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: implement this function\n    # Hint: use `tr` to convert the\
    \ case of the keys\n    # Hint: use `grep` to check if the keys are all lower\
    \ case or all upper case\n    # Hint: use `grep -v` to filter out the lines that\
    \ are not keys\n    # Hint: use `grep -c` to count the number of lines that match\
    \ the pattern\n    # Hint: use `wc -l` to count the number of lines in the CSV\n\
    \    # Hint: use `test` to compare the counts\n    # Hint: use `echo` to return\
    \ the result\n    # Hint: use `tr -d '\\n'` to remove the newline character from\
    \ the result\n    # Hint: use `tr -d '\\r'` to remove the carriage return character\
    \ from the result\n    # Hint: use `tr -d '\\r\\n'` to remove the newline and\
    \ carriage return characters from the result\n    # Hint: use `tr -d '\\n\\r'`\
    \ to remove the newline and carriage return characters from the result\n    #\
    \ Hint: use `tr -d '\\r\\n'` to remove the newline and carriage return characters\
    \ from the result\n    # Hint: use `tr -d '\\n\\r'` to remove the newline and\
    \ carriage return characters from the result\n    # Hint: use `tr -d '\\r\\n'`\
    \ to remove the newline and carriage return characters from the result\n    #\
    \ Hint: use `tr -d '\\n\\r'` to remove the newline and carriage return characters\
    \ from the result\n    # Hint: use `tr -d '\\r\\n'` to remove the newline and\
    \ carriage return characters from the result\n    # Hint: use `tr -d '\\n\\r'`\
    \ to remove the newline and carriage return characters from the result\n    #\
    \ Hint: use `tr -d '\\r\\n'` to remove the newline and carriage return characters\
    \ from the result\n    # Hint: use `tr -d '\\n\\r'` to remove the newline and\
    \ carriage return characters from the result\n    # Hint: use `tr -d '\\r\\n'\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkr_cysx8.sh: line 38: syntax error near unexpected token `}''\n/tmp/tmpkr_cysx8.sh:
    line 38: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys_count=0\n    local keys_count_lower=0\n    local keys_count_upper=0\n\
    \    local keys_count_other=0\n    local keys_count_total=0\n    local keys_count_total_lower=0\n\
    \    local keys_count_total_upper=0\n    local keys_count_total_other=0\n    local\
    \ keys_count_total_lower_upper=0\n    local keys_count_total_lower_other=0\n \
    \   local keys_count_total_upper_other=0\n    local keys_count_total_lower_upper_other=0\n\
    \    local keys_count_total_lower_upper_other_zero=0\n    local keys_count_total_lower_upper_other_nonzero=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty=0\n    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull_nonzero=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull_nonzero_nonempty=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull=0\n\
    \    local keys_count_total_lower_upper_other_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull_nonzero_nonempty_nonnull_nonzero\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_keys=$(echo \"$csv\" | cut -d, -f1)\n\
    \    local csv_values=$(echo \"$csv\" | cut -d, -f2)\n    local csv_keys_lower=$(echo\
    \ \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\n    local csv_keys_upper=$(echo\
    \ \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$csv_keys\" == \"$csv_keys_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$csv_keys\" == \"$csv_keys_upper\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys=0\n    local line\n    local key\n    local value\n    while IFS=,\
    \ read -r key value; do\n        if [[ $key =~ ^[a-z]+$ ]]; then\n           \
    \ (( lower_case_keys++ ))\n        elif [[ $key =~ ^[A-Z]+$ ]]; then\n       \
    \     (( upper_case_keys++ ))\n        fi\n        (( keys++ ))\n    done <<<\
    \ \"$csv\"\n    if [[ $keys -eq 0 ]]; then\n        echo \"false\"\n    elif [[\
    \ $lower_case_keys -eq $keys ]]; then\n        echo \"true\"\n    elif [[ $upper_case_keys\
    \ -eq $keys ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys\n    local key\n    local upper_keys\n\
    \    local lower_keys\n    local upper_key\n    local lower_key\n    local upper_count\n\
    \    local lower_count\n    local count\n    local result\n\n    if [ -z \"$csv\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n\n    keys=$(echo \"\
    $csv\" | cut -d, -f1)\n    upper_keys=$(echo \"$keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n\n    upper_count=0\n\
    \    lower_count=0\n    for key in $keys; do\n        upper_key=$(echo \"$upper_keys\"\
    \ | grep -w \"$key\")\n        lower_key=$(echo \"$lower_keys\" | grep -w \"$key\"\
    )\n        if [ -n \"$upper_key\" ]; then\n            upper_count=$((upper_count\
    \ + 1))\n        fi\n        if [ -n \"$lower_key\" ]; then\n            lower_count=$((lower_count\
    \ + 1))\n        fi\n    done\n\n    count=$(echo \"$keys\" | wc -w)\n    if [\
    \ \"$upper_count\" -eq \"$count\" ]; then\n        result=\"true\"\n    elif [\
    \ \"$lower_count\" -eq \"$count\" ]; then\n        result=\"true\"\n    else\n\
    \        result=\"false\"\n    fi\n\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local first_key\n    local first_key_case\n   \
    \ local key\n    local key_case\n    local result=\"true\"\n    while IFS=, read\
    \ -r key value; do\n        if [[ -z \"$first_key\" ]]; then\n            first_key=\"\
    $key\"\n            first_key_case=\"$(echo \"$first_key\" | tr '[:upper:]' '[:lower:]')\"\
    \n        fi\n        key_case=\"$(echo \"$key\" | tr '[:upper:]' '[:lower:]')\"\
    \n        if [[ \"$key_case\" != \"$first_key_case\" ]]; then\n            result=\"\
    false\"\n            break\n        fi\n    done <<< \"$csv\"\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys_count=0\n    local keys_count_lower=0\n    local keys_count_upper=0\n\
    \    local keys_count_other=0\n    local keys_count_total=0\n    local keys_count_total_lower=0\n\
    \    local keys_count_total_upper=0\n    local keys_count_total_other=0\n    local\
    \ keys_count_total_lower_upper=0\n    local keys_count_total_lower_other=0\n \
    \   local keys_count_total_upper_other=0\n    local keys_count_total_lower_upper_other=0\n\
    \    local keys_count_total_lower_upper_other_duplicate=0\n    local keys_count_total_lower_upper_other_duplicate_lower=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_upper=0\n    local keys_count_total_lower_upper_other_duplicate_other=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper=0\n    local\
    \ keys_count_total_lower_upper_other_duplicate_lower_other=0\n    local keys_count_total_lower_upper_other_duplicate_upper_other=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other_duplicate=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other_duplicate_lower=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other_duplicate_upper=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other_duplicate_other=0\n\
    \    local keys_count_total_lower_upper_other_duplicate_lower_upper_other_duplicate_lower_upper=\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local lower=0\n    local upper=0\n    local mixed=0\n\
    \    local empty=0\n    local total=0\n    while IFS=',' read -r key value; do\n\
    \        if [[ -z \"$key\" ]]; then\n            empty=$((empty+1))\n        elif\
    \ [[ \"$key\" =~ ^[a-z]+$ ]]; then\n            lower=$((lower+1))\n        elif\
    \ [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n            upper=$((upper+1))\n        else\n\
    \            mixed=$((mixed+1))\n        fi\n        total=$((total+1))\n    done\
    \ <<< \"$csv\"\n    if [[ $empty -eq $total ]]; then\n        echo \"false\"\n\
    \    elif [[ $lower -eq $total ]]; then\n        echo \"true\"\n    elif [[ $upper\
    \ -eq $total ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local first_key=$(echo \"$keys\" | head -n1)\n    local is_lower=$(echo \"$first_key\"\
    \ | grep -q \"[a-z]\" && echo \"true\" || echo \"false\")\n    local is_upper=$(echo\
    \ \"$first_key\" | grep -q \"[A-Z]\" && echo \"true\" || echo \"false\")\n   \
    \ local is_all_lower=$(echo \"$keys\" | grep -q \"[A-Z]\" && echo \"false\" ||\
    \ echo \"true\")\n    local is_all_upper=$(echo \"$keys\" | grep -q \"[a-z]\"\
    \ && echo \"false\" || echo \"true\")\n    if [ \"$is_lower\" == \"true\" ] &&\
    \ [ \"$is_all_lower\" == \"true\" ]; then\n        echo \"true\"\n    elif [ \"\
    $is_upper\" == \"true\" ] && [ \"$is_all_upper\" == \"true\" ]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case=0\n    local upper_case=0\n  \
    \  local mixed_case=0\n    local empty=0\n    local non_string=0\n    local line\n\
    \    local key\n    local value\n    local IFS=','\n    while read -r line; do\n\
    \        key=\"$(echo \"$line\" | cut -d ',' -f 1)\"\n        value=\"$(echo \"\
    $line\" | cut -d ',' -f 2)\"\n        if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n  \
    \          lower_case=1\n        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n     \
    \       upper_case=1\n        elif [[ \"$key\" =~ ^[a-zA-Z]+$ ]]; then\n     \
    \       mixed_case=1\n        elif [[ -z \"$key\" ]]; then\n            empty=1\n\
    \        else\n            non_string=1\n        fi\n    done <<< \"$csv\"\n \
    \   if [[ \"$lower_case\" -eq 1 && \"$upper_case\" -eq 0 && \"$mixed_case\" -eq\
    \ 0 && \"$empty\" -eq 0 && \"$non_string\" -eq 0 ]]; then\n        echo \"true\"\
    \n    elif [[ \"$lower_case\" -eq 0 && \"$upper_case\" -eq 1 && \"$mixed_case\"\
    \ -eq 0 && \"$empty\" -eq 0 && \"$non_string\" -eq 0 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # TODO: Implement this function\n  # Hint: Use the following command to\
    \ get the first line of a CSV:\n  # echo \"$1\" | head -n 1\n  # Hint: Use the\
    \ following command to get the first key of a CSV:\n  # echo \"$1\" | head -n\
    \ 1 | cut -d, -f1\n  # Hint: Use the following command to check if a string is\
    \ in lower case:\n  # [[ \"$1\" =~ ^[a-z]+$ ]]\n  # Hint: Use the following command\
    \ to check if a string is in upper case:\n  # [[ \"$1\" =~ ^[A-Z]+$ ]]\n  # Hint:\
    \ Use the following command to check if a string is empty:\n  # [[ -z \"$1\" ]]\n\
    \  # Hint: Use the following command to check if a string is not empty:\n  # [[\
    \ -n \"$1\" ]]\n  # Hint: Use the following command to check if a CSV is empty:\n\
    \  # [[ -z \"$(echo \"$1\" | head -n 1)\" ]]\n  # Hint: Use the following command\
    \ to check if a CSV is not empty:\n  # [[ -n \"$(echo \"$1\" | head -n 1)\" ]]\n\
    \  # Hint: Use the following command to check if a CSV has only one line:\n  #\
    \ [[ $(echo \"$1\" | wc -l) -eq 1 ]]\n  # Hint: Use the following command to check\
    \ if a CSV has more than one line:\n  # [[ $(echo \"$1\" | wc -l) -gt 1 ]]\n \
    \ # Hint: Use the following command to check if a CSV has more than one line:\n\
    \  # [[ $(echo \"$1\" | wc -l) -gt 1 ]]\n  # Hint: Use the following command to\
    \ check if a CSV has more than one line:\n  # [[ $(echo \"$1\" | wc -l) -gt 1\
    \ ]]\n  # Hint: Use the following command to check if a CSV has more than one\
    \ line:\n  # [[ $(echo \"$1\" | wc -l) -gt 1 ]]\n  # Hint: Use the following command\
    \ to check if a CSV has more\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpspry120q.sh: line 45: syntax error near unexpected token `}''\n/tmp/tmpspry120q.sh:
    line 45: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=\"$(echo \"$csv\" | cut -d, -f1)\"\n\
    \    local lower_keys=\"$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\"\n   \
    \ local upper_keys=\"$(echo \"$keys\" | tr '[:lower:]' '[:upper:]')\"\n    if\
    \ [[ \"$keys\" == \"$lower_keys\" ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # Use the following command to read the CSV:\n\
    \    # IFS=\",\" read -r -a array <<< \"$1\"\n    # Use the following command\
    \ to check if a string is in lower case:\n    # [[ \"$string\" =~ ^[a-z]+$ ]]\n\
    \    # Use the following command to check if a string is in upper case:\n    #\
    \ [[ \"$string\" =~ ^[A-Z]+$ ]]\n    # Use the following command to check if an\
    \ array is empty:\n    # [[ ${#array[@]} -eq 0 ]]\n    # Use the following command\
    \ to return a value from a function:\n    # echo \"$value\"\n    IFS=\",\" read\
    \ -r -a array <<< \"$1\"\n    if [[ ${#array[@]} -eq 0 ]]; then\n        echo\
    \ \"false\"\n    else\n        IFS=\",\" read -r -a array <<< \"$1\"\n       \
    \ if [[ \"${array[0]}\" =~ ^[a-z]+$ ]]; then\n            for i in \"${array[@]}\"\
    ; do\n                if [[ ! \"$i\" =~ ^[a-z]+$ ]]; then\n                  \
    \  echo \"false\"\n                    return\n                fi\n          \
    \  done\n            echo \"true\"\n        elif [[ \"${array[0]}\" =~ ^[A-Z]+$\
    \ ]]; then\n            for i in \"${array[@]}\"; do\n                if [[ !\
    \ \"$i\" =~ ^[A-Z]+$ ]]; then\n                    echo \"false\"\n          \
    \          return\n                fi\n            done\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkpe9uyi_.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpkpe9uyi_.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  # You can add more functions as you need\n  #\
    \ You can write to a file or to stdout\n  # No need to return anything\n  # You\
    \ can use the following command to read from stdin\n  # read input\n  # echo $input\n\
    \  # You can use the following command to write to stdout\n  # echo \"Hello World\"\
    \n  # You can use the following command to write to stderr\n  # echo \"Hello World\"\
    \ >&2\n  # You can use the following command to write to a file\n  # echo \"Hello\
    \ World\" > output.txt\n  # You can use the following command to read from a file\n\
    \  # cat input.txt\n  # You can use the following command to read from a file\
    \ line by line\n  # while read line; do\n  #   echo $line\n  # done < input.txt\n\
    \  # You can use the following command to read from stdin line by line\n  # while\
    \ read line; do\n  #   echo $line\n  # done\n  # You can use the following command\
    \ to read from stdin line by line and split by comma\n  # while IFS=',' read -ra\
    \ arr; do\n  #   for i in \"${arr[@]}\"; do\n  #     echo $i\n  #   done\n  #\
    \ done\n  # You can use the following command to read from stdin line by line\
    \ and split by comma and remove leading and trailing spaces\n  # while IFS=','\
    \ read -ra arr; do\n  #   for i in \"${arr[@]}\"; do\n  #     echo $i\n  #   done\n\
    \  # done | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'\n  # You can use\
    \ the following command to read from stdin line by line and split by comma and\
    \ remove leading and trailing spaces and remove empty lines\n  # while IFS=','\
    \ read -ra arr; do\n  #   for i in \"${arr[@]}\"; do\n  #     echo $i\n  #   done\n\
    \  # done | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | sed '/\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmprjxjc4ps.sh: line 58: syntax error near unexpected token `}''\n/tmp/tmprjxjc4ps.sh:
    line 58: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: Implement this function.\n    # Hint: You can use the following\
    \ command to check if a string is in upper case:\n    # [[ \"${str}\" == \"${str^^}\"\
    \ ]]\n    # Hint: You can use the following command to check if a string is in\
    \ lower case:\n    # [[ \"${str}\" == \"${str,,}\" ]]\n    # Hint: You can use\
    \ the following command to convert a string to upper case:\n    # str=\"${str^^}\"\
    \n    # Hint: You can use the following command to convert a string to lower case:\n\
    \    # str=\"${str,,}\"\n    # Hint: You can use the following command to get\
    \ the first character of a string:\n    # str=\"${str:0:1}\"\n    # Hint: You\
    \ can use the following command to get the rest of the string after the first\
    \ character:\n    # str=\"${str:1}\"\n    # Hint: You can use the following command\
    \ to get the length of a string:\n    # str_len=\"${#str}\"\n    # Hint: You can\
    \ use the following command to get the last character of a string:\n    # str=\"\
    ${str: -1}\"\n    # Hint: You can use the following command to get the rest of\
    \ the string except the last character:\n    # str=\"${str::-1}\"\n    # Hint:\
    \ You can use the following command to check if a string is empty:\n    # [[ -z\
    \ \"${str}\" ]]\n    # Hint: You can use the following command to check if a string\
    \ is not empty:\n    # [[ -n \"${str}\" ]]\n    # Hint: You can use the following\
    \ command to check if a string is a number:\n    # [[ \"${str}\" =~ ^[0-9]+$ ]]\n\
    \    # Hint: You can use the following command to check if a string is a number:\n\
    \    # [[ \"${str}\" =~ ^[0-9]+$ ]]\n    # Hint: You can use the following command\
    \ to check if a string is a number:\n    # [[ \"${str}\" =~ ^[0-9]+$ ]]\n    #\
    \ Hint: You can use the following command to check if a string is\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpk5kjerc8.sh: line 47: syntax error near unexpected token `}''\n/tmp/tmpk5kjerc8.sh:
    line 47: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    if [ -z \"$1\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    IFS=\",\"\n    while read -r key value; do\n   \
    \     if [[ $key =~ [A-Z] ]]; then\n            if [[ $key =~ [a-z] ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    else\n            if [[ $key =~ [A-Z] ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        fi\n    done <<< \"$1\"\n  \
    \  echo \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    IFS=',' read -ra arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ \"$i\" =~ ^[A-Z]+$ ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local -i num_lines=$(echo \"$csv\" | wc -l)\n \
    \   local -i num_fields=$(echo \"$csv\" | head -n 1 | awk -F, '{print NF}')\n\
    \    local -i num_fields_all=$(echo \"$csv\" | awk -F, '{print NF}' | sort -u\
    \ | wc -l)\n    if [[ $num_lines -eq 0 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $num_fields_all -eq 1 ]]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_keys=\"$(echo \"$csv\" | cut -d, -f1)\"\
    \n    local csv_values=\"$(echo \"$csv\" | cut -d, -f2)\"\n    local csv_keys_lower=\"\
    $(echo \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\"\n    local csv_keys_upper=\"\
    $(echo \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$csv_keys\" ==\
    \ \"$csv_keys_lower\" ] || [ \"$csv_keys\" == \"$csv_keys_upper\" ]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local -a keys\n    local -a values\n    local -a upper\n\
    \    local -a lower\n    local -a num\n    local -a other\n    local -a all\n\
    \    local -a all_upper\n    local -a all_lower\n    local -a all_num\n    local\
    \ -a all_other\n    local -a all_all\n    local -a all_all_upper\n    local -a\
    \ all_all_lower\n    local -a all_all_num\n    local -a all_all_other\n    local\
    \ -a all_all_all\n    local -a all_all_all_upper\n    local -a all_all_all_lower\n\
    \    local -a all_all_all_num\n    local -a all_all_all_other\n    local -a all_all_all_all\n\
    \    local -a all_all_all_all_upper\n    local -a all_all_all_all_lower\n    local\
    \ -a all_all_all_all_num\n    local -a all_all_all_all_other\n    local -a all_all_all_all_all\n\
    \    local -a all_all_all_all_all_upper\n    local -a all_all_all_all_all_lower\n\
    \    local -a all_all_all_all_all_num\n    local -a all_all_all_all_all_other\n\
    \    local -a all_all_all_all_all_all\n    local -a all_all_all_all_all_all_upper\n\
    \    local -a all_all_all_all_all_all_lower\n    local -a all_all_all_all_all_all_num\n\
    \    local -a all_all_all_all_all_all_other\n    local -a all_all_all_all_all_all_all\n\
    \    local -a all_all_all_all_all_all_all_upper\n    local -a all_all_all_all_all_all_all_lower\n\
    \    local -a all_all_all_all_all_all_all_num\n    local -a all_all_all_all_\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkpe9uyi_.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpkpe9uyi_.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local is_lower=false\n    local is_upper=false\n\
    \    local is_mixed=false\n    local is_empty=false\n    local is_valid=false\n\
    \    local is_invalid=false\n    local is_digit=false\n    local is_alpha=false\n\
    \    local is_alnum=false\n    local is_punct=false\n    local is_graph=false\n\
    \    local is_print=false\n    local is_space=false\n    local is_blank=false\n\
    \    local is_cntrl=false\n    local is_xdigit=false\n    local is_upper_or_lower=false\n\
    \    local is_upper_or_mixed=false\n    local is_lower_or_mixed=false\n    local\
    \ is_upper_or_lower_or_mixed=false\n    local is_upper_or_lower_or_digit=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed=false\n    local is_upper_or_lower_or_digit_or_mixed_or_empty=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid=false\n   \
    \ local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid_or_valid=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid_or_valid_or_punct=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid_or_valid_or_punct_or_graph=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid_or_valid_or_punct_or_graph_or_print=false\n\
    \    local is_upper_or_lower_or_digit_or_mixed_or_empty_or_invalid_or_valid_or_punct_or_graph_or_print_or_space=false\n\
    \    local is_upper_\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    IFS=\",\"\n    read -r -a array <<< \"$1\"\n    if [[ \"${array[0]}\" =~\
    \ [A-Z] ]]; then\n        for i in \"${array[@]}\"; do\n            if [[ ! \"\
    $i\" =~ [A-Z] ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n    else\n        for i in \"${array[@]}\"; do\n\
    \            if [[ ! \"$i\" =~ [a-z] ]]; then\n                echo \"false\"\n\
    \                return\n            fi\n        done\n    fi\n    echo \"true\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    csv=\"$1\"\n    if [ -z \"$csv\" ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    # Check if all keys are lower case\n    if echo \"\
    $csv\" | grep -q -v -E '^[a-z]'; then\n        # Check if all keys are upper case\n\
    \        if echo \"$csv\" | grep -q -v -E '^[A-Z]'; then\n            echo \"\
    false\"\n        else\n            echo \"true\"\n        fi\n    else\n     \
    \   echo \"true\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_keys=$(echo \"$csv\" | cut -d, -f1)\n\
    \    local csv_values=$(echo \"$csv\" | cut -d, -f2)\n    local csv_keys_lower=$(echo\
    \ \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\n    local csv_keys_upper=$(echo\
    \ \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$csv_keys\" == \"$csv_keys_lower\"\
    \ ] || [ \"$csv_keys\" == \"$csv_keys_upper\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # You can use the following command to read\
    \ a CSV line into an array:\n    # IFS=',' read -r -a array <<< \"$line\"\n  \
    \  # where $line is a variable containing a CSV line.\n    # You can use the following\
    \ command to convert a string to lower case:\n    # lower_case_string=$(echo \"\
    $string\" | tr '[:upper:]' '[:lower:]')\n    # where $string is a variable containing\
    \ a string.\n    # You can use the following command to convert a string to upper\
    \ case:\n    # upper_case_string=$(echo \"$string\" | tr '[:lower:]' '[:upper:]')\n\
    \    # where $string is a variable containing a string.\n    # You can use the\
    \ following command to check if a string is in lower case:\n    # if [[ \"$string\"\
    \ == \"$lower_case_string\" ]]; then ...\n    # where $string is a variable containing\
    \ a string.\n    # You can use the following command to check if a string is in\
    \ upper case:\n    # if [[ \"$string\" == \"$upper_case_string\" ]]; then ...\n\
    \    # where $string is a variable containing a string.\n    # You can use the\
    \ following command to convert a string to lower case:\n    # lower_case_string=$(echo\
    \ \"$string\" | tr '[:upper:]' '[:lower:]')\n    # where $string is a variable\
    \ containing a string.\n    # You can use the following command to convert a string\
    \ to upper case:\n    # upper_case_string=$(echo \"$string\" | tr '[:lower:]'\
    \ '[:upper:]')\n    # where $string is a variable containing a string.\n    #\
    \ You can use the following command to check if a string is in lower case:\n \
    \   # if [[ \"$string\" == \"$lower_case_string\" ]]; then ...\n    # where $string\
    \ is a variable containing a string.\n    # You can use the following command\
    \ to check if a string is in upper case:\n    # if [[ \"$string\" == \"$upper_case_string\"\
    \ ]]; then ...\n    # where $string is a variable containing a string.\n    #\
    \ You can use the following command to convert a string to lower case:\n    #\
    \ lower_case\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp76c_ynd1.sh: line 47: syntax error near unexpected token `}''\n/tmp/tmp76c_ynd1.sh:
    line 47: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  echo \"$1\" | awk -F, '{\n    if (NR == 1) {\n      if ($1 ~ /^[a-z]+$/)\
    \ {\n        lower = 1;\n      } else if ($1 ~ /^[A-Z]+$/) {\n        upper =\
    \ 1;\n      } else {\n        print \"false\";\n        exit;\n      }\n    }\
    \ else {\n      if (lower && $1 !~ /^[a-z]+$/) {\n        print \"false\";\n \
    \       exit;\n      } else if (upper && $1 !~ /^[A-Z]+$/) {\n        print \"\
    false\";\n        exit;\n      }\n    }\n  } END {\n    if (NR == 0) {\n     \
    \ print \"false\";\n    } else {\n      print \"true\";\n    }\n  }'\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$keys\" == \"$lower\" ]];\
    \ then\n        echo \"true\"\n    elif [[ \"$keys\" == \"$upper\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" = \"$lower_keys\"\
    \ ] || [ \"$keys\" = \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case=0\n    local upper_case=0\n  \
    \  local mixed_case=0\n    local other_case=0\n    local total_keys=0\n    while\
    \ IFS=, read -r key value; do\n        if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n \
    \           lower_case=$((lower_case + 1))\n        elif [[ \"$key\" =~ ^[A-Z]+$\
    \ ]]; then\n            upper_case=$((upper_case + 1))\n        elif [[ \"$key\"\
    \ =~ ^[a-zA-Z]+$ ]]; then\n            mixed_case=$((mixed_case + 1))\n      \
    \  else\n            other_case=$((other_case + 1))\n        fi\n        total_keys=$((total_keys\
    \ + 1))\n    done <<< \"$csv\"\n    if [[ \"$total_keys\" -eq 0 ]]; then\n   \
    \     echo \"false\"\n    elif [[ \"$lower_case\" -eq \"$total_keys\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$upper_case\" -eq \"$total_keys\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  # echo \"true\"\n  # echo \"false\"\n  # echo\
    \ \"true\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp1iqtbwdn.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmp1iqtbwdn.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local csv_len=$(echo \"$csv\" | wc -l)\n    if [ $csv_len\
    \ -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    local csv_keys=$(echo\
    \ \"$csv\" | cut -d ',' -f 1)\n    local csv_keys_lower=$(echo \"$csv_keys\" |\
    \ tr '[:upper:]' '[:lower:]')\n    local csv_keys_upper=$(echo \"$csv_keys\" |\
    \ tr '[:lower:]' '[:upper:]')\n    if [ \"$csv_keys\" == \"$csv_keys_lower\" ]\
    \ || [ \"$csv_keys\" == \"$csv_keys_upper\" ]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local lower_case_keys=0\n  local upper_case_keys=0\n\
    \  local keys_count=0\n  local keys_count_lower=0\n  local keys_count_upper=0\n\
    \  local keys_count_other=0\n  local keys_count_total=0\n  local keys_count_total_lower=0\n\
    \  local keys_count_total_upper=0\n  local keys_count_total_other=0\n  local keys_count_total_lower_upper=0\n\
    \  local keys_count_total_lower_other=0\n  local keys_count_total_upper_other=0\n\
    \  local keys_count_total_lower_upper_other=0\n  local keys_count_total_lower_upper_other_count=0\n\
    \  local keys_count_total_lower_upper_other_count_lower=0\n  local keys_count_total_lower_upper_other_count_upper=0\n\
    \  local keys_count_total_lower_upper_other_count_other=0\n  local keys_count_total_lower_upper_other_count_lower_upper=0\n\
    \  local keys_count_total_lower_upper_other_count_lower_other=0\n  local keys_count_total_lower_upper_other_count_upper_other=0\n\
    \  local keys_count_total_lower_upper_other_count_lower_upper_other=0\n  local\
    \ keys_count_total_lower_upper_other_count_lower_upper_other_count=0\n  local\
    \ keys_count_total_lower_upper_other_count_lower_upper_other_count_lower=0\n \
    \ local keys_count_total_lower_upper_other_count_lower_upper_other_count_upper=0\n\
    \  local keys_count_total_lower_upper_other_count_lower_upper_other_count_other=0\n\
    \  local keys_count_total_lower_upper_other_count_lower_upper_other_count_lower_upper=0\n\
    \  local keys_count_total_lower_upper_other_count_lower_upper_other_count_lower_other=0\n\
    \  local\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys_are_strings=0\n    local keys_are_numbers=0\n    local keys_are_mixed=0\n\
    \    local keys_are_empty=0\n    local keys_are_mixed_case=0\n    local keys_are_mixed_case_and_strings=0\n\
    \    local keys_are_mixed_case_and_numbers=0\n    local keys_are_mixed_case_and_empty=0\n\
    \    local keys_are_mixed_case_and_strings_and_numbers=0\n    local keys_are_mixed_case_and_strings_and_empty=0\n\
    \    local keys_are_mixed_case_and_numbers_and_empty=0\n    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n\
    \    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local\
    \ keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n\
    \    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local\
    \ keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n\
    \    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local\
    \ keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n\
    \    local keys_are_mixed_case_and_strings_and_numbers_and_empty=0\n    local\
    \ keys_are_mixed_case_and_strings_and_numbers_and_empty=\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    IFS=',' read -ra arr <<< \"$1\"\n    if [ \"${#arr[@]}\" -eq 0 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    first_key=${arr[0]}\n   \
    \ if [[ $first_key =~ [A-Z] ]]; then\n        is_upper=true\n    elif [[ $first_key\
    \ =~ [a-z] ]]; then\n        is_upper=false\n    else\n        echo \"false\"\n\
    \        return\n    fi\n    for key in \"${arr[@]}\"; do\n        if [[ $key\
    \ =~ [A-Z] ]] && [ \"$is_upper\" = false ]; then\n            echo \"false\"\n\
    \            return\n        elif [[ $key =~ [a-z] ]] && [ \"$is_upper\" = true\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkpe9uyi_.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpkpe9uyi_.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local lower_case_keys=0\n  local upper_case_keys=0\n\
    \  local keys_count=0\n  local keys_count_lower=0\n  local keys_count_upper=0\n\
    \  local keys_count_mixed=0\n  local keys_count_other=0\n  local keys_count_total=0\n\
    \  local keys_count_total_lower=0\n  local keys_count_total_upper=0\n  local keys_count_total_mixed=0\n\
    \  local keys_count_total_other=0\n  local keys_count_total_all=0\n  local keys_count_total_all_lower=0\n\
    \  local keys_count_total_all_upper=0\n  local keys_count_total_all_mixed=0\n\
    \  local keys_count_total_all_other=0\n  local keys_count_total_all_lower_upper=0\n\
    \  local keys_count_total_all_lower_mixed=0\n  local keys_count_total_all_lower_other=0\n\
    \  local keys_count_total_all_upper_mixed=0\n  local keys_count_total_all_upper_other=0\n\
    \  local keys_count_total_all_mixed_other=0\n  local keys_count_total_all_lower_upper_mixed=0\n\
    \  local keys_count_total_all_lower_upper_other=0\n  local keys_count_total_all_lower_mixed_other=0\n\
    \  local keys_count_total_all_upper_mixed_other=0\n  local keys_count_total_all_lower_upper_mixed_other=0\n\
    \  local keys_count_total_all_lower_upper_mixed_other_lower=0\n  local keys_count_total_all_lower_upper_mixed_other_upper=0\n\
    \  local keys_count_total_all_lower_upper_mixed_other_mixed=0\n  local keys_count_total_all_lower_upper_mixed_other_other=0\n\
    \  local keys_count_total_all_lower_upper_mixed_\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkpe9uyi_.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpkpe9uyi_.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local\
    \ lower=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$keys\" == \"$lower\" ]];\
    \ then\n        echo \"true\"\n    elif [[ \"$keys\" == \"$upper\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # TODO: Write your code here\n  echo \"true\"\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=$(echo \"$csv\" | cut -d,\
    \ -f1 | grep -v '[A-Z]')\n    local upper_case_keys=$(echo \"$csv\" | cut -d,\
    \ -f1 | grep -v '[a-z]')\n    if [ -z \"$csv\" ]; then\n        echo \"false\"\
    \n    elif [ -z \"$lower_case_keys\" ]; then\n        echo \"true\"\n    elif\
    \ [ -z \"$upper_case_keys\" ]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower=0\n    local upper=0\n    local other=0\n\
    \    local line\n    local key\n    while IFS= read -r line; do\n        key=\"\
    ${line%,*}\"\n        if [[ \"$key\" =~ [a-z] ]]; then\n            lower=1\n\
    \        elif [[ \"$key\" =~ [A-Z] ]]; then\n            upper=1\n        else\n\
    \            other=1\n        fi\n    done <<< \"$csv\"\n    if [[ $lower -eq\
    \ 1 && $upper -eq 1 ]] || [[ $other -eq 1 ]]; then\n        echo \"false\"\n \
    \   else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local lower_case_keys=$(echo \"$csv\" | cut -d, -f1\
    \ | grep -v '[A-Z]')\n    local upper_case_keys=$(echo \"$csv\" | cut -d, -f1\
    \ | grep -v '[a-z]')\n    if [ -z \"$lower_case_keys\" ] && [ -z \"$upper_case_keys\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case=0\n    local upper_case=0\n  \
    \  local mixed_case=0\n    local line\n    local key\n    local value\n    local\
    \ IFS=','\n    while read -r line; do\n        key=$(echo \"$line\" | cut -d','\
    \ -f1)\n        value=$(echo \"$line\" | cut -d',' -f2)\n        if [[ \"$key\"\
    \ =~ ^[a-z]+$ ]]; then\n            lower_case=1\n        elif [[ \"$key\" =~\
    \ ^[A-Z]+$ ]]; then\n            upper_case=1\n        else\n            mixed_case=1\n\
    \        fi\n    done <<< \"$csv\"\n    if [[ $lower_case -eq 1 && $upper_case\
    \ -eq 0 && $mixed_case -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $lower_case\
    \ -eq 0 && $upper_case -eq 1 && $mixed_case -eq 0 ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d ',' -f 1)\n    local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local first_key=$(echo \"$csv\" | head -n 1 | cut -d,\
    \ -f1)\n    if [[ \"$first_key\" =~ [A-Z] ]]; then\n        echo \"$csv\" | grep\
    \ -v \"^[A-Z]\" | grep -q \"^[A-Z]\"\n    else\n        echo \"$csv\" | grep -v\
    \ \"^[a-z]\" | grep -q \"^[a-z]\"\n    fi\n    if [ $? -eq 0 ]; then\n       \
    \ echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # You can use the following command to get\
    \ the first character of a string:\n    # ${string:0:1}\n    # You can use the\
    \ following command to convert a string to lower case:\n    # ${string,,}\n  \
    \  # You can use the following command to convert a string to upper case:\n  \
    \  # ${string^^}\n    # You can use the following command to get the length of\
    \ a string:\n    # ${#string}\n    # You can use the following command to get\
    \ the number of lines in a string:\n    # $(echo -n \"$string\" | grep -c \"^\"\
    )\n    # You can use the following command to get the number of fields in a string:\n\
    \    # $(echo -n \"$string\" | grep -o \",\" | grep -c \"^\")\n    # You can use\
    \ the following command to get the nth field in a string:\n    # $(echo -n \"\
    $string\" | cut -d \",\" -f n)\n    # You can use the following command to get\
    \ the nth line in a string:\n    # $(echo -n \"$string\" | sed -n np)\n    # You\
    \ can use the following command to get the first n lines in a string:\n    # $(echo\
    \ -n \"$string\" | head -n n)\n    # You can use the following command to get\
    \ the last n lines in a string:\n    # $(echo -n \"$string\" | tail -n n)\n  \
    \  # You can use the following command to get the first n characters in a string:\n\
    \    # $(echo -n \"$string\" | head -c n)\n    # You can use the following command\
    \ to get the last n characters in a string:\n    # $(echo -n \"$string\" | tail\
    \ -c n)\n    # You can use the following command to get the nth character in a\
    \ string:\n    # $(echo -n \"$string\" | cut -c n)\n    # You can use the following\
    \ command to get the substring of a string:\n    # $(echo -n \"$string\" | cut\
    \ -c m-n)\n    # You can use the following command to get the substring of a string:\n\
    \    # $(echo -n \"$string\" | cut -c m-n)\n    # You can\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqgs7dpzu.sh: line 49: syntax error near unexpected token `}''\n/tmp/tmpqgs7dpzu.sh:
    line 49: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_len=$(echo \"$csv\" | wc -l)\n    if\
    \ [ \"$csv_len\" -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv_keys=$(echo \"$csv\" | cut -d, -f1)\n    local csv_keys_len=$(echo\
    \ \"$csv_keys\" | wc -l)\n    local csv_keys_lower=$(echo \"$csv_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_upper=$(echo \"$csv_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n    if [ \"$csv_keys\" == \"$csv_keys_lower\" ]; then\n      \
    \  echo \"true\"\n    elif [ \"$csv_keys\" == \"$csv_keys_upper\" ]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  if [[ -z \"$1\" ]]; then\n    echo \"false\"\n    return\n  fi\n  local\
    \ csv=\"$1\"\n  local lower_case_keys=0\n  local upper_case_keys=0\n  while IFS=,\
    \ read -r key value; do\n    if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n      lower_case_keys=$((lower_case_keys\
    \ + 1))\n    elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n      upper_case_keys=$((upper_case_keys\
    \ + 1))\n    else\n      echo \"false\"\n      return\n    fi\n  done <<< \"$csv\"\
    \n  if [[ \"$lower_case_keys\" -gt 0 && \"$upper_case_keys\" -gt 0 ]]; then\n\
    \    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local is_upper=false\n    local is_lower=false\n\
    \    local is_empty=true\n    local is_valid=true\n    local key\n    local value\n\
    \    for line in $(echo \"$csv\" | tr '\\n' ' '); do\n        is_empty=false\n\
    \        IFS=',' read -r key value <<< \"$line\"\n        if [[ \"$key\" =~ ^[A-Z]+$\
    \ ]]; then\n            is_upper=true\n        elif [[ \"$key\" =~ ^[a-z]+$ ]];\
    \ then\n            is_lower=true\n        else\n            is_valid=false\n\
    \            break\n        fi\n    done\n    if [[ \"$is_empty\" = true ]]; then\n\
    \        echo \"false\"\n    elif [[ \"$is_valid\" = true ]]; then\n        if\
    \ [[ \"$is_upper\" = true && \"$is_lower\" = false ]]; then\n            echo\
    \ \"true\"\n        elif [[ \"$is_upper\" = false && \"$is_lower\" = true ]];\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local keys=$(echo \"$csv\" | cut -d',' -f1)\n  local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n  local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n  if [[ \"$keys\" == \"$lower_keys\"\
    \ ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    if [ -z \"$1\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    IFS=',' read -r -a array <<< \"$1\"\n    if [ \"\
    ${#array[@]}\" -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [[ \"${array[0]}\" =~ ^[a-z]+$ ]]; then\n        for i in \"${array[@]}\"\
    ; do\n            if [[ ! \"$i\" =~ ^[a-z]+$ ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n        echo \"\
    true\"\n        return\n    fi\n    if [[ \"${array[0]}\" =~ ^[A-Z]+$ ]]; then\n\
    \        for i in \"${array[@]}\"; do\n            if [[ ! \"$i\" =~ ^[A-Z]+$\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n        done\n        echo \"true\"\n        return\n    fi\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"false\"\n    # echo \"false\"\n    # echo \"true\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpkpe9uyi_.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmpkpe9uyi_.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=$1\n  local is_upper=0\n  local is_lower=0\n  local is_empty=0\n\
    \  local is_other=0\n  local is_mixed=0\n  local is_valid=0\n  local is_invalid=0\n\
    \  local is_valid_upper=0\n  local is_valid_lower=0\n  local is_valid_other=0\n\
    \  local is_valid_mixed=0\n  local is_valid_empty=0\n  local is_valid_invalid=0\n\
    \  local is_valid_all=0\n  local is_valid_none=0\n  local is_valid_any=0\n  local\
    \ is_valid_all_upper=0\n  local is_valid_all_lower=0\n  local is_valid_all_other=0\n\
    \  local is_valid_all_mixed=0\n  local is_valid_all_empty=0\n  local is_valid_all_invalid=0\n\
    \  local is_valid_any_upper=0\n  local is_valid_any_lower=0\n  local is_valid_any_other=0\n\
    \  local is_valid_any_mixed=0\n  local is_valid_any_empty=0\n  local is_valid_any_invalid=0\n\
    \  local is_valid_none_upper=0\n  local is_valid_none_lower=0\n  local is_valid_none_other=0\n\
    \  local is_valid_none_mixed=0\n  local is_valid_none_empty=0\n  local is_valid_none_invalid=0\n\
    \  local is_valid_upper_lower=0\n  local is_valid_upper_other=0\n  local is_valid_upper_mixed=0\n\
    \  local is_valid_upper_empty=0\n  local is_valid_upper_invalid=0\n  local is_valid_lower_other=0\n\
    \  local is_valid_lower_mixed=0\n  local is_valid_lower_empty=0\n  local is_valid_lower_invalid=0\n\
    \  local is_valid_other_mixed=0\n  local is_valid_other\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local csv_keys=\"$(echo \"$csv\" | cut -d, -f1)\"\n\
    \  local csv_keys_lower=\"$(echo \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\"\
    \n  local csv_keys_upper=\"$(echo \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\"\
    \n  if [[ \"$csv_keys\" == \"$csv_keys_lower\" ]]; then\n    echo \"true\"\n \
    \ elif [[ \"$csv_keys\" == \"$csv_keys_upper\" ]]; then\n    echo \"true\"\n \
    \ else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local -a keys\n    local -a values\n    local -a\
    \ upper_keys\n    local -a lower_keys\n    local -a upper_values\n    local -a\
    \ lower_values\n    local -a upper_keys_values\n    local -a lower_keys_values\n\
    \    local -a upper_keys_lower_values\n    local -a lower_keys_upper_values\n\
    \    local -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n\
    \    local -a upper_keys_lower_values_upper_values\n    local -a lower_keys_upper_values_lower_values\n\
    \    local -a upper_keys_upper_values_lower_values\n    local -a lower_keys_lower_values_upper_values\n\
    \    local -a upper_keys_upper_values_upper_values\n    local -a lower_keys_lower_values_lower_values\n\
    \    local -a upper_keys_lower_values_lower_values\n    local -a lower_keys_upper_values_upper_values\n\
    \    local -a upper_keys_lower_values_upper_values_lower_values\n    local -a\
    \ lower_keys_upper_values_lower_values_upper_values\n    local -a upper_keys_upper_values_lower_values_upper_values\n\
    \    local -a lower_keys_lower_values_upper_values_lower_values\n    local -a\
    \ upper_keys_upper_values_lower_values_lower_values\n    local -a lower_keys_lower_values_upper_values_upper_values\n\
    \    local -a upper_keys_upper_values_upper_values_lower_values\n    local -a\
    \ lower_keys_lower_values_lower_values_upper_values\n    local -a upper_keys_upper_values_upper_values_upper_values\n\
    \    local -a lower_keys_lower_values_lower_values_lower_values\n    local -a\
    \ upper_keys_lower_values_lower_values_lower_values\n    local -a lower_keys_upper_values_upper_values_upper_values\n\
    \    local -a upper_keys_lower_values_upper_values_lower_values_upper_\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  local csv=\"$1\"\n  local lower_keys=0\n  local upper_keys=0\n  local all_keys=0\n\
    \  local keys_count=0\n  local keys_count_lower=0\n  local keys_count_upper=0\n\
    \  local keys_count_all=0\n  local keys_count_lower_all=0\n  local keys_count_upper_all=0\n\
    \  local keys_count_lower_upper=0\n  local keys_count_upper_lower=0\n  local keys_count_lower_upper_all=0\n\
    \  local keys_count_upper_lower_all=0\n  local keys_count_lower_upper_all_keys=0\n\
    \  local keys_count_upper_lower_all_keys=0\n  local keys_count_lower_upper_all_keys_count=0\n\
    \  local keys_count_upper_lower_all_keys_count=0\n  local keys_count_lower_upper_all_keys_count_lower=0\n\
    \  local keys_count_upper_lower_all_keys_count_upper=0\n  local keys_count_lower_upper_all_keys_count_lower_upper=0\n\
    \  local keys_count_upper_lower_all_keys_count_upper_lower=0\n  local keys_count_lower_upper_all_keys_count_lower_upper_all=0\n\
    \  local keys_count_upper_lower_all_keys_count_upper_lower_all=0\n  local keys_count_lower_upper_all_keys_count_lower_upper_all_keys=0\n\
    \  local keys_count_upper_lower_all_keys_count_upper_lower_all_keys=0\n  local\
    \ keys_count_lower_upper_all_keys_count_lower_upper_all_keys_count=0\n  local\
    \ keys_count_upper_lower_all_keys_count_upper_lower_all_keys_count=0\n  local\
    \ keys_count_lower_upper_all_keys_count_lower_upper_all_keys_count_lower=0\n \
    \ local keys_count_upper_lower_all_keys_count_upper_lower_all_keys_count_\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n\
    \    return\n  fi\n  IFS=',' read -ra arr <<< \"$1\"\n  if [[ ${arr[0]} =~ [A-Z]\
    \ ]]; then\n    for i in \"${arr[@]}\"; do\n      if [[ ! $i =~ [A-Z] ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\
    \n    return\n  else\n    for i in \"${arr[@]}\"; do\n      if [[ ! $i =~ [a-z]\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n    return\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_len=\"$(echo \"$csv\" | wc -l)\"\n  \
    \  if [[ \"$csv_len\" -eq 0 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    local csv_keys=\"$(echo \"$csv\" | cut -d, -f1)\"\n    local csv_keys_len=\"\
    $(echo \"$csv_keys\" | wc -l)\"\n    if [[ \"$csv_keys_len\" -eq 0 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    local csv_keys_lower=\"$(echo\
    \ \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\"\n    local csv_keys_upper=\"$(echo\
    \ \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$csv_keys\" == \"\
    $csv_keys_lower\" ]]; then\n        echo \"true\"\n    elif [[ \"$csv_keys\" ==\
    \ \"$csv_keys_upper\" ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Check if the CSV is empty\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n\n  # Check if all keys are strings in lower case\n  if [\
    \ \"$(echo \"$1\" | tr '[:upper:]' '[:lower:]')\" == \"$1\" ]; then\n    echo\
    \ \"true\"\n    return\n  fi\n\n  # Check if all keys are strings in upper case\n\
    \  if [ \"$(echo \"$1\" | tr '[:lower:]' '[:upper:]')\" == \"$1\" ]; then\n  \
    \  echo \"true\"\n    return\n  fi\n\n  # If none of the above conditions are\
    \ met, return false\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: implement this function\n    # Hint: use the following command\
    \ to convert a string to lower case:\n    # echo \"STRING\" | tr '[:upper:]' '[:lower:]'\n\
    \    # Hint: use the following command to convert a string to upper case:\n  \
    \  # echo \"STRING\" | tr '[:lower:]' '[:upper:]'\n    # Hint: use the following\
    \ command to check if a string is all lower case:\n    # echo \"STRING\" | grep\
    \ -q '[^[:lower:]]' && echo \"false\" || echo \"true\"\n    # Hint: use the following\
    \ command to check if a string is all upper case:\n    # echo \"STRING\" | grep\
    \ -q '[^[:upper:]]' && echo \"false\" || echo \"true\"\n    # Hint: use the following\
    \ command to check if a string is all digits:\n    # echo \"STRING\" | grep -q\
    \ '[^[:digit:]]' && echo \"false\" || echo \"true\"\n    # Hint: use the following\
    \ command to check if a string is empty:\n    # echo \"STRING\" | grep -q '^$'\
    \ && echo \"true\" || echo \"false\"\n    # Hint: use the following command to\
    \ get the first column of a CSV:\n    # echo \"CSV\" | cut -d ',' -f 1\n    #\
    \ Hint: use the following command to get the second column of a CSV:\n    # echo\
    \ \"CSV\" | cut -d ',' -f 2\n    # Hint: use the following command to get the\
    \ first row of a CSV:\n    # echo \"CSV\" | head -n 1\n    # Hint: use the following\
    \ command to get the second row of a CSV:\n    # echo \"CSV\" | head -n 2 | tail\
    \ -n 1\n    # Hint: use the following command to get the number of rows of a CSV:\n\
    \    # echo \"CSV\" | wc -l\n    # Hint: use the following command to get the\
    \ number of columns of a CSV:\n    # echo \"CSV\" | head -n 1 | tr ',' '\\n' |\
    \ wc -l\n    # Hint: use the following command to get the number\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpvw9nuynd.sh: line 43: syntax error near unexpected token `}''\n/tmp/tmpvw9nuynd.sh:
    line 43: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys_count=0\n    local keys_count_lower=0\n    local keys_count_upper=0\n\
    \    local keys_count_other=0\n    local keys_count_total=0\n    local keys_count_total_lower=0\n\
    \    local keys_count_total_upper=0\n    local keys_count_total_other=0\n    local\
    \ keys_count_total_lower_upper=0\n    local keys_count_total_lower_other=0\n \
    \   local keys_count_total_upper_other=0\n    local keys_count_total_lower_upper_other=0\n\
    \    local keys_count_total_lower_upper_other_zero=0\n    local keys_count_total_lower_upper_other_one=0\n\
    \    local keys_count_total_lower_upper_other_two=0\n    local keys_count_total_lower_upper_other_three=0\n\
    \    local keys_count_total_lower_upper_other_four=0\n    local keys_count_total_lower_upper_other_five=0\n\
    \    local keys_count_total_lower_upper_other_six=0\n    local keys_count_total_lower_upper_other_seven=0\n\
    \    local keys_count_total_lower_upper_other_eight=0\n    local keys_count_total_lower_upper_other_nine=0\n\
    \    local keys_count_total_lower_upper_other_ten=0\n    local keys_count_total_lower_upper_other_eleven=0\n\
    \    local keys_count_total_lower_upper_other_twelve=0\n    local keys_count_total_lower_upper_other_thirteen=0\n\
    \    local keys_count_total_lower_upper_other_fourteen=0\n    local keys_count_total_lower_upper_other_fifteen=0\n\
    \    local keys_count_total_lower_upper_other_sixteen=0\n    local keys_count_total_lower_upper_other_seventeen=0\n\
    \    local keys_count_total_\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # You can use the following command to get\
    \ the first key:\n    # key=$(echo $1 | cut -d',' -f1)\n    # You can use the\
    \ following command to check if the key is in lower case:\n    # [[ $key =~ [a-z]+\
    \ ]]\n    # You can use the following command to check if the key is in upper\
    \ case:\n    # [[ $key =~ [A-Z]+ ]]\n    # You can use the following command to\
    \ check if the key is a string:\n    # [[ $key =~ [a-zA-Z]+ ]]\n    # You can\
    \ use the following command to check if the key is a number:\n    # [[ $key =~\
    \ [0-9]+ ]]\n    # You can use the following command to check if the key is a\
    \ string or a number:\n    # [[ $key =~ [a-zA-Z0-9]+ ]]\n    # You can use the\
    \ following command to check if the key is a string or a number or an underscore:\n\
    \    # [[ $key =~ [a-zA-Z0-9_]+ ]]\n    # You can use the following command to\
    \ check if the key is a string or a number or an underscore or a dash:\n    #\
    \ [[ $key =~ [a-zA-Z0-9_-]+ ]]\n    # You can use the following command to check\
    \ if the key is a string or a number or an underscore or a dash or a dot:\n  \
    \  # [[ $key =~ [a-zA-Z0-9_.-]+ ]]\n    # You can use the following command to\
    \ check if the key is a string or a number or an underscore or a dash or a dot\
    \ or a space:\n    # [[ $key =~ [a-zA-Z0-9_.- ]+ ]]\n    # You can use the following\
    \ command to check if the key is a string or a number or an underscore or a dash\
    \ or a dot or a space or a comma:\n    # [[ $key =~ [a-zA-Z0-9_.,- ]+ ]]\n   \
    \ # You can use the following command to check if the key is a string or a number\
    \ or an underscore or a dash or\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp7v5svad3.sh: line 41: syntax error near unexpected token `}''\n/tmp/tmp7v5svad3.sh:
    line 41: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: implement this function\n    # Hint: use tr to convert a string\
    \ to upper case or lower case\n    # Hint: use grep to check if a string is in\
    \ upper case or lower case\n    # Hint: use cut to extract the first column of\
    \ a CSV\n    # Hint: use wc to count the number of lines in a CSV\n    # Hint:\
    \ use expr to compare two numbers\n    # Hint: use echo to return a string\n \
    \   # Hint: use return to return a value\n    # Hint: use $1 to access the first\
    \ argument\n    # Hint: use $# to access the number of arguments\n    # Hint:\
    \ use $@ to access all arguments\n    # Hint: use $0 to access the name of the\
    \ script\n    # Hint: use $? to access the return value of the last command\n\
    \    # Hint: use $! to access the process id of the last command\n    # Hint:\
    \ use $# to access the number of arguments\n    # Hint: use $@ to access all arguments\n\
    \    # Hint: use $0 to access the name of the script\n    # Hint: use $? to access\
    \ the return value of the last command\n    # Hint: use $! to access the process\
    \ id of the last command\n    # Hint: use $# to access the number of arguments\n\
    \    # Hint: use $@ to access all arguments\n    # Hint: use $0 to access the\
    \ name of the script\n    # Hint: use $? to access the return value of the last\
    \ command\n    # Hint: use $! to access the process id of the last command\n \
    \   # Hint: use $# to access the number of arguments\n    # Hint: use $@ to access\
    \ all arguments\n    # Hint: use $0 to access the name of the script\n    # Hint:\
    \ use $? to access the return value of the last command\n    # Hint: use $! to\
    \ access the process id of the last command\n    # Hint: use $# to access the\
    \ number of arguments\n    # Hint: use $@ to access all arguments\n    # Hint:\
    \ use $0 to access the name of the script\n    # Hint: use $? to access the return\
    \ value of the last\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqsk0mde2.sh: line 50: syntax error near unexpected token `}''\n/tmp/tmpqsk0mde2.sh:
    line 50: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" = \"$lower_keys\"\
    \ ] || [ \"$keys\" = \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local lower=$(echo\
    \ \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo \"$keys\" |\
    \ tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower\" ] || [ \"$keys\"\
    \ == \"$upper\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local mixed_case_keys=0\n    local non_string_keys=0\n    local empty_keys=0\n\
    \    local empty_values=0\n    local empty_lines=0\n    local total_lines=0\n\
    \    local total_keys=0\n    local total_values=0\n    local total_empty_fields=0\n\
    \    local total_non_string_fields=0\n    local total_fields=0\n    local total_empty_lines=0\n\
    \    local total_non_empty_lines=0\n    local total_lines=0\n    local total_fields=0\n\
    \    local total_empty_fields=0\n    local total_non_empty_fields=0\n    local\
    \ total_non_string_fields=0\n    local total_string_fields=0\n    local total_empty_lines=0\n\
    \    local total_non_empty_lines=0\n    local total_lines=0\n    local total_keys=0\n\
    \    local total_values=0\n    local total_empty_keys=0\n    local total_non_empty_keys=0\n\
    \    local total_non_string_keys=0\n    local total_string_keys=0\n    local total_empty_values=0\n\
    \    local total_non_empty_values=0\n    local total_non_string_values=0\n   \
    \ local total_string_values=0\n    local total_lower_case_keys=0\n    local total_upper_case_keys=0\n\
    \    local total_mixed_case_keys=0\n    local total_lower_case_values=0\n    local\
    \ total_upper_case_values=0\n    local total_mixed_case_values=0\n    local total_lower_case_fields=0\n\
    \    local total_upper_case_fields=0\n    local total_mixed_case_fields=0\n  \
    \  local total_lower_case_lines=0\n    local total_upper_case_lines=0\n    local\
    \ total_mixed_case_lines=0\n    local total_lower_case_csv=0\n    local total_upper_case_\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n    else\n       \
    \ IFS=',' read -ra arr <<< \"$1\"\n        if [[ \"${arr[0]}\" =~ ^[a-z]+$ ]];\
    \ then\n            for i in \"${arr[@]}\"; do\n                if [[ ! \"$i\"\
    \ =~ ^[a-z]+$ ]]; then\n                    echo \"false\"\n                 \
    \   return\n                fi\n            done\n            echo \"true\"\n\
    \        elif [[ \"${arr[0]}\" =~ ^[A-Z]+$ ]]; then\n            for i in \"${arr[@]}\"\
    ; do\n                if [[ ! \"$i\" =~ ^[A-Z]+$ ]]; then\n                  \
    \  echo \"false\"\n                    return\n                fi\n          \
    \  done\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: Implement this function\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # Write your code here\n  echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=$1\n    local csv_len=$(echo \"$csv\" | wc -l)\n    if [ \"\
    $csv_len\" -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n   \
    \ local csv_keys=$(echo \"$csv\" | cut -d, -f1)\n    local csv_keys_len=$(echo\
    \ \"$csv_keys\" | wc -l)\n    local csv_keys_lower=$(echo \"$csv_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_upper=$(echo \"$csv_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n    if [ \"$csv_keys\" == \"$csv_keys_lower\" ] || [ \"$csv_keys\"\
    \ == \"$csv_keys_upper\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: Implement this function\n    # Hint: You may use the following\
    \ functions:\n    #       - $(is_upper $str)\n    #       - $(is_lower $str)\n\
    \    #       - $(is_empty $str)\n    #       - $(is_csv $str)\n    #       - $(get_csv_keys\
    \ $str)\n    #       - $(get_csv_values $str)\n    #       - $(get_csv_key_value_pairs\
    \ $str)\n    #       - $(get_csv_key_value_pair $str $key)\n    #       - $(get_csv_value\
    \ $str $key)\n    #       - $(get_csv_key $str $value)\n    #       - $(get_csv_key_index\
    \ $str $key)\n    #       - $(get_csv_value_index $str $value)\n    #       -\
    \ $(get_csv_key_value_pair_index $str $key $value)\n    #       - $(get_csv_key_value_pair_index\
    \ $str $key $value)\n    #       - $(get_csv_key_value_pair_index $str $key $value)\n\
    \    #       - $(get_csv_key_value_pair_index $str $key $value)\n    #       -\
    \ $(get_csv_key_value_pair_index $str $key $value)\n    #       - $(get_csv_key_value_pair_index\
    \ $str $key $value)\n    #       - $(get_csv_key_value_pair_index $str $key $value)\n\
    \    #       - $(get_csv_key_value_pair_index $str $key $value)\n    #       -\
    \ $(get_csv_key_value_pair_index $str $key $value)\n    #       - $(get_csv_key_value_pair_index\
    \ $str $key $value)\n    #       - $(get_csv_key_value_pair_index $str $key $value)\n\
    \    #       - $(get_csv_key_value_pair_index $str $key $value)\n    #       -\
    \ $(get_csv_key_value_pair_index $str\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpotabqq27.sh: line 44: syntax error near unexpected token `}''\n/tmp/tmpotabqq27.sh:
    line 44: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local lower_case_keys=0\n    local upper_case_keys=0\n\
    \    local keys_count=0\n    local keys_count_lower=0\n    local keys_count_upper=0\n\
    \    local keys_count_mixed=0\n    local keys_count_numeric=0\n    local keys_count_other=0\n\
    \    local keys_count_empty=0\n    local keys_count_total=0\n    local keys_count_total_lower=0\n\
    \    local keys_count_total_upper=0\n    local keys_count_total_mixed=0\n    local\
    \ keys_count_total_numeric=0\n    local keys_count_total_other=0\n    local keys_count_total_empty=0\n\
    \    local keys_count_total_all=0\n    local keys_count_total_all_lower=0\n  \
    \  local keys_count_total_all_upper=0\n    local keys_count_total_all_mixed=0\n\
    \    local keys_count_total_all_numeric=0\n    local keys_count_total_all_other=0\n\
    \    local keys_count_total_all_empty=0\n    local keys_count_total_all_empty_lower=0\n\
    \    local keys_count_total_all_empty_upper=0\n    local keys_count_total_all_empty_mixed=0\n\
    \    local keys_count_total_all_empty_numeric=0\n    local keys_count_total_all_empty_other=0\n\
    \    local keys_count_total_all_empty_empty=0\n    local keys_count_total_all_empty_empty_lower=0\n\
    \    local keys_count_total_all_empty_empty_upper=0\n    local keys_count_total_all_empty_empty_mixed=0\n\
    \    local keys_count_total_all_empty_empty_numeric=0\n    local keys_count_total_all_empty_empty_other=0\n\
    \    local keys_count_total_all_empty_empty_empty=0\n    local keys_count_total_all_empty_empty_empty_lower=0\n\
    \    local\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local csv_keys=\"$(echo \"$csv\" | cut -d, -f1)\"\
    \n    local csv_values=\"$(echo \"$csv\" | cut -d, -f2)\"\n    local csv_keys_lower=\"\
    $(echo \"$csv_keys\" | tr '[:upper:]' '[:lower:]')\"\n    local csv_keys_upper=\"\
    $(echo \"$csv_keys\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$csv_keys\"\
    \ == \"$csv_keys_lower\" ]]; then\n        echo \"true\"\n    elif [[ \"$csv_keys\"\
    \ == \"$csv_keys_upper\" ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo $1\n    # echo $2\n    # echo $3\n    # echo $4\n    # echo $5\n  \
    \  # echo $6\n    # echo $7\n    # echo $8\n    # echo $9\n    # echo ${10}\n\
    \    # echo ${11}\n    # echo ${12}\n    # echo ${13}\n    # echo ${14}\n    #\
    \ echo ${15}\n    # echo ${16}\n    # echo ${17}\n    # echo ${18}\n    # echo\
    \ ${19}\n    # echo ${20}\n    # echo ${21}\n    # echo ${22}\n    # echo ${23}\n\
    \    # echo ${24}\n    # echo ${25}\n    # echo ${26}\n    # echo ${27}\n    #\
    \ echo ${28}\n    # echo ${29}\n    # echo ${30}\n    # echo ${31}\n    # echo\
    \ ${32}\n    # echo ${33}\n    # echo ${34}\n    # echo ${35}\n    # echo ${36}\n\
    \    # echo ${37}\n    # echo ${38}\n    # echo ${39}\n    # echo ${40}\n    #\
    \ echo ${41}\n    # echo ${42}\n    # echo ${43}\n    # echo ${44}\n    # echo\
    \ ${45}\n    # echo ${46}\n    # echo ${47}\n    # echo ${48}\n    # echo ${49}\n\
    \    # echo ${50}\n    # echo ${51}\n    # echo ${52}\n    # echo ${53}\n    #\
    \ echo ${54}\n    # echo ${55}\n    # echo ${56}\n    # echo ${57}\n    # echo\
    \ ${58}\n    # echo ${59}\n    # echo ${60}\n    # echo ${61}\n    # echo ${62}\n\
    \    # echo ${63}\n    # echo ${64}\n    # echo ${65}\n    # echo ${66}\n    #\
    \ echo ${67}\n    # echo ${68}\n    # echo ${69}\n    # echo ${70}\n    # echo\
    \ ${71}\n    #\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpx_eiuxth.sh: line 92: syntax error near unexpected token `}''\n/tmp/tmpx_eiuxth.sh:
    line 92: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local lower_case_keys=$(echo \"$csv\" | cut -d',' -f1\
    \ | grep -v '[A-Z]')\n    local upper_case_keys=$(echo \"$csv\" | cut -d',' -f1\
    \ | grep -v '[a-z]')\n    if [ -z \"$lower_case_keys\" ] && [ -z \"$upper_case_keys\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=$1\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local lower=$(echo\
    \ \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo \"$keys\" |\
    \ tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower\" ] || [ \"$keys\"\
    \ == \"$upper\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n    local\
    \ lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" = \"$lower_keys\"\
    \ ] || [ \"$keys\" = \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # TODO: implement this function\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower=$(echo \"$keys\" | grep -v '[A-Z]')\n    local upper=$(echo \"$keys\"\
    \ | grep -v '[a-z]')\n    if [[ -z \"$csv\" ]]; then\n        echo \"false\"\n\
    \    elif [[ -z \"$lower\" ]]; then\n        echo \"true\"\n    elif [[ -z \"\
    $upper\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n \
    \   fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # You can use the following command to check\
    \ if a string is in lower case:\n    # [[ \"$string\" =~ ^[a-z]+$ ]]\n    # You\
    \ can use the following command to check if a string is in upper case:\n    #\
    \ [[ \"$string\" =~ ^[A-Z]+$ ]]\n    # You can use the following command to check\
    \ if a string is empty:\n    # [[ -z \"$string\" ]]\n    # You can use the following\
    \ command to check if a string is a number:\n    # [[ \"$string\" =~ ^[0-9]+$\
    \ ]]\n    # You can use the following command to check if a string is a letter:\n\
    \    # [[ \"$string\" =~ ^[a-zA-Z]+$ ]]\n    # You can use the following command\
    \ to check if a string is a letter or a number:\n    # [[ \"$string\" =~ ^[a-zA-Z0-9]+$\
    \ ]]\n    # You can use the following command to check if a string is a letter\
    \ or a number or an underscore:\n    # [[ \"$string\" =~ ^[a-zA-Z0-9_]+$ ]]\n\
    \    # You can use the following command to check if a string is a letter or a\
    \ number or an underscore or a dash:\n    # [[ \"$string\" =~ ^[a-zA-Z0-9_-]+$\
    \ ]]\n    # You can use the following command to check if a string is a letter\
    \ or a number or an underscore or a dash or a space:\n    # [[ \"$string\" =~\
    \ ^[a-zA-Z0-9_- ]+$ ]]\n    # You can use the following command to check if a\
    \ string is a letter or a number or an underscore or a dash or a space or a comma:\n\
    \    # [[ \"$string\" =~ ^[a-zA-Z0-9_,-]+$ ]]\n    # You can use the following\
    \ command to check if a string is a letter or a number or an underscore or a dash\
    \ or a space or a comma or a dot:\n    # [[ \"$string\" =~ ^[a-zA-Z0-9_,-.]+$\
    \ ]]\n    # You\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp7wluzttb.sh: line 41: syntax error near unexpected token `}''\n/tmp/tmp7wluzttb.sh:
    line 41: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    echo \"$1\" | awk -F, '{\n        if (NR == 1) {\n            if ($1\
    \ == tolower($1)) {\n                lower = 1;\n            } else if ($1 ==\
    \ toupper($1)) {\n                upper = 1;\n            } else {\n         \
    \       print \"false\";\n                exit;\n            }\n        } else\
    \ {\n            if (lower && $1 != tolower($1)) {\n                print \"false\"\
    ;\n                exit;\n            } else if (upper && $1 != toupper($1)) {\n\
    \                print \"false\";\n                exit;\n            }\n    \
    \    }\n    }\n    END {\n        if (NR == 0) {\n            print \"false\"\
    ;\n        } else {\n            print \"true\";\n        }\n    }'\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n  # TODO: Implement this function\n  # Hint: Use the following command to\
    \ get the first character of a string:\n  # ${string:0:1}\n  # Hint: Use the following\
    \ command to get the length of a string:\n  # ${#string}\n  # Hint: Use the following\
    \ command to convert a string to lower case:\n  # ${string,,}\n  # Hint: Use the\
    \ following command to convert a string to upper case:\n  # ${string^^}\n  # Hint:\
    \ Use the following command to get the first line of a CSV:\n  # head -n 1 $1\n\
    \  # Hint: Use the following command to get the rest of a CSV:\n  # tail -n +2\
    \ $1\n  # Hint: Use the following command to get the first character of a string:\n\
    \  # ${string:0:1}\n  # Hint: Use the following command to get the length of a\
    \ string:\n  # ${#string}\n  # Hint: Use the following command to convert a string\
    \ to lower case:\n  # ${string,,}\n  # Hint: Use the following command to convert\
    \ a string to upper case:\n  # ${string^^}\n  # Hint: Use the following command\
    \ to get the first line of a CSV:\n  # head -n 1 $1\n  # Hint: Use the following\
    \ command to get the rest of a CSV:\n  # tail -n +2 $1\n  # Hint: Use the following\
    \ command to get the first character of a string:\n  # ${string:0:1}\n  # Hint:\
    \ Use the following command to get the length of a string:\n  # ${#string}\n \
    \ # Hint: Use the following command to convert a string to lower case:\n  # ${string,,}\n\
    \  # Hint: Use the following command to convert a string to upper case:\n  # ${string^^}\n\
    \  # Hint: Use the following command to get the first line of a CSV:\n  # head\
    \ -n 1 $1\n  # Hint: Use the following command to get the rest of a CSV:\n  #\
    \ tail -n +2 $1\n  # Hint: Use the following command to get the first character\
    \ of a string:\n  # ${\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp5roz321k.sh: line 56: syntax error near unexpected token `}''\n/tmp/tmp5roz321k.sh:
    line 56: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower_keys=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper_keys=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" == \"$lower_keys\"\
    \ ] || [ \"$keys\" == \"$upper_keys\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local -a keys\n    local -a values\n    local -a\
    \ lower_keys\n    local -a upper_keys\n    local -a lower_values\n    local -a\
    \ upper_values\n    local -a lower_keys_values\n    local -a upper_keys_values\n\
    \    local -a lower_keys_upper_values\n    local -a upper_keys_lower_values\n\
    \    local -a lower_keys_lower_values\n    local -a upper_keys_upper_values\n\
    \    local -a lower_keys_upper_values_lower_values\n    local -a upper_keys_lower_values_upper_values\n\
    \    local -a lower_keys_lower_values_upper_values\n    local -a upper_keys_upper_values_lower_values\n\
    \    local -a lower_keys_upper_values_upper_values\n    local -a upper_keys_lower_values_lower_values\n\
    \    local -a lower_keys_lower_values_lower_values\n    local -a upper_keys_upper_values_upper_values\n\
    \    local -a lower_keys_upper_values_lower_values_upper_values\n    local -a\
    \ upper_keys_lower_values_upper_values_lower_values\n    local -a lower_keys_lower_values_upper_values_lower_values\n\
    \    local -a upper_keys_upper_values_lower_values_upper_values\n    local -a\
    \ lower_keys_upper_values_upper_values_lower_values\n    local -a upper_keys_lower_values_lower_values_upper_values\n\
    \    local -a lower_keys_lower_values_lower_values_upper_values\n    local -a\
    \ upper_keys_upper_values_upper_values_lower_values\n    local -a lower_keys_upper_values_lower_values_lower_values\n\
    \    local -a upper_keys_lower_values_upper_values_upper_values\n    local -a\
    \ lower_keys_lower_values_upper_values_upper_values\n    local -a upper_keys_upper_values_lower_values_lower_values\n\
    \    local -a lower_keys_upper_values_upper_values_upper_values\n    local\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 2
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    # echo \"true\"\n    # echo \"false\"\n \
    \   # echo \"true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    true\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n   \
    \ # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n  \
    \  # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"\
    false\"\n    # echo \"false\"\n    # echo \"false\"\n    # echo \"false\"\n\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphl_clf3j.sh: line 91: syntax error near unexpected token `}''\n/tmp/tmphl_clf3j.sh:
    line 91: `}''\n"'
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    if [[ \"$1\" == \"\" ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    IFS=$'\\n' read -d '' -r -a lines < <(echo \"$1\")\n    IFS=',' read\
    \ -r -a first_line <<< \"${lines[0]}\"\n    IFS=',' read -r -a second_line <<<\
    \ \"${lines[1]}\"\n    if [[ \"${first_line[0]}\" == \"${second_line[0]}\" ]];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [[ \"${first_line[0]}\"\
    \ == \"${first_line[0]^^}\" ]]; then\n        for line in \"${lines[@]}\"; do\n\
    \            IFS=',' read -r -a line_array <<< \"$line\"\n            if [[ \"\
    ${line_array[0]}\" != \"${line_array[0]^^}\" ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n    else\n    \
    \    for line in \"${lines[@]}\"; do\n            IFS=',' read -r -a line_array\
    \ <<< \"$line\"\n            if [[ \"${line_array[0]}\" != \"${line_array[0,,]}\"\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n        done\n    fi\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmppx9scnua.sh: line 39: 0,,: syntax error: operand expected (error
    token is ",")\n'''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local first_key\n    local key\n    local is_lower\n\
    \    local is_upper\n    local is_all_lower\n    local is_all_upper\n    local\
    \ is_all_string\n    local is_all_number\n    local is_all_empty\n    local is_all_same\n\
    \    local is_all_different\n    local is_all_same_case\n    local is_all_different_case\n\
    \    local is_all_same_or_empty\n    local is_all_different_or_empty\n    local\
    \ is_all_same_case_or_empty\n    local is_all_different_case_or_empty\n    local\
    \ is_all_same_or_number\n    local is_all_different_or_number\n    local is_all_same_case_or_number\n\
    \    local is_all_different_case_or_number\n    local is_all_same_or_empty_or_number\n\
    \    local is_all_different_or_empty_or_number\n    local is_all_same_case_or_empty_or_number\n\
    \    local is_all_different_case_or_empty_or_number\n    local is_all_same_or_empty_or_number_or_string\n\
    \    local is_all_different_or_empty_or_number_or_string\n    local is_all_same_case_or_empty_or_number_or_string\n\
    \    local is_all_different_case_or_empty_or_number_or_string\n    local is_all_same_or_empty_or_number_or_string_or_lower\n\
    \    local is_all_different_or_empty_or_number_or_string_or_lower\n    local is_all_same_case_or_empty_or_number_or_string_or_lower\n\
    \    local is_all_different_case_or_empty_or_number_or_string_or_lower\n    local\
    \ is_all_same_or_empty_or_number_or_string_or_upper\n    local is_all_different_or_empty_or_number_or_string_or_upper\n\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    local csv=\"$1\"\n    local keys=$(echo \"$csv\" | cut -d, -f1)\n   \
    \ local lower=$(echo \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo\
    \ \"$keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$keys\" = \"$lower\" ];\
    \ then\n        echo \"true\"\n    elif [ \"$keys\" = \"$upper\" ]; then\n   \
    \     echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030
- exit_code: 1
  program: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
    \ \n# case or all keys are strings in upper case, else return false.\n# The function\
    \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
    \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
    nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n#\
    \ \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n\
    # \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\ncheck_dict_case()\
    \ {\n    # Write your code here\n    echo \"false\"\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660360030

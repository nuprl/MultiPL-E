language: sh
name: HumanEval_85_add
results:
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum +\
    \ i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 $((${#lst}-1)));\
    \ do\n        if [[ $((i%2)) -eq 1 ]] && [[ $((lst[i]%2)) -eq 0 ]]; then\n   \
    \         sum=$((sum+lst[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  local i=0\n  for num in $lst; do\n\
    \    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      \
    \      sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $((i%2)) -eq 0 ] && [ $((i%4)) -ne 0 ]\n    \
    \    then\n            sum=$((sum+i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$@\n    local sum=0\n    for i in $lst; do\n        if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum + i))\n        fi\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  for i in $(seq 0 2 $((${#lst} - 1)));\
    \ do\n    sum=$(($sum + ${lst:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 1 $(count \"\
    $lst\")); do\n        local num=$(get \"$lst\" \"$i\")\n        if [[ $((i % 2))\
    \ -eq 1 ]] && [[ $((num % 2)) -eq 0 ]]; then\n            sum=$((sum + num))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7hvsktwh.sh: line 9: count: command not found\n/tmp/tmp7hvsktwh.sh:
    line 10: get: command not found\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        local num=${lst:$i:1}\n        ((sum += num))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $lst; do\n    if [ $((i\
    \ % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            sum=$((sum+${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local result=()\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            result+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $(($i % 2)) -eq 0 ] && [ $(($i % 4)) -ne 0 ]\n\
    \        then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    echo \"$@\" | tr ' ' '\\n' | awk 'NR%2==0 && NR%2!=0 {print $1}'\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for e in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((e % 2)) -eq 0 ]; then\n        \
    \    res=$((res + e))\n        fi\n        i=$((i + 1))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        (( lst[i] % 2 == 0 )) && (( sum += lst[i] ))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $(($i % 2)) -eq 1 ] && [ $(($num % 2)) -eq 0 ]; then\n    \
    \        res=$(($res + $num))\n        fi\n        i=$(($i + 1))\n    done\n \
    \   echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=($@)\n  local sum=0\n  for ((i=1; i<${#lst[@]}; i+=2)); do\n\
    \    if [[ $((lst[i] % 2)) -eq 0 ]]; then\n      sum=$((sum + lst[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for ((i=1; i<${#lst}; i+=2));\
    \ do\n        local num=\"${lst:$i:1}\"\n        if ((num % 2 == 0)); then\n \
    \           ((sum += num))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  local i=0\n  for n in $lst; do\n\
    \    if (( $i % 2 == 1 )) && (( $n % 2 == 0 )); then\n      (( sum += n ))\n \
    \   fi\n    (( i++ ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for ((i=1; i<${#lst}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            res=$((res + lst[i]))\n        fi\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for e in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((e % 2)) -eq 0 ]; then\n        \
    \    res=$((res + e))\n        fi\n        i=$((i + 1))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local result=0\n    for i in $(seq 0 $((${#lst}\
    \ - 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            result=$((result + lst[i]))\n        fi\n    done\n    echo\
    \ $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n   \
    \     fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local input=\"$1\"\n    local output=\"\"\n    local i=0\n    local\
    \ n=0\n    for n in $input; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2))\
    \ -eq 0 ]; then\n            output=\"$output $n\"\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 1 2 $((${#lst}-1)));\
    \ do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp92cbkalr.sh: line 10: 0 +  : syntax error: operand expected
    (error token is "+  ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  for i in $(seq 0 2 $((${#lst} - 1)));\
    \ do\n    sum=$(($sum + ${lst:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=(\"$@\")\n    local sum=0\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n   \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum +\
    \ i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        (( ${lst[i]} % 2 == 0 )) && (( sum += ${lst[i]} ))\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    echo \"$1\" | tr ' ' '\\n' | awk '{if(NR%2==0) print $1}'\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      \
    \      res=$((res + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    res=$((res + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local result=\"\"\n    for (( i=0; i<${#lst[@]};\
    \ i++ )); do\n        if (( i % 2 == 1 && lst[i] % 2 == 0 )); then\n         \
    \   result=\"$result ${lst[i]}\"\n        fi\n    done\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      \
    \      sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      \
    \      sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if ((i % 2 == 1)) && ((n % 2 == 0)); then\n            sum=$((sum\
    \ + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  for i in $(seq 0 $((${#lst} - 1)));\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + lst[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 0 2 $((${#lst} -\
    \ 1))); do\n    sum=$(($sum + ${lst:$i:1}))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n   \
    \     fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$@\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if (( i % 2 == 1 && num % 2 == 0 )); then\n            sum=$(( sum\
    \ + num ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=(\"$@\")\n    local result=0\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        ((lst[i] % 2 == 0)) && ((result += lst[i]))\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        res=$(($res + ${lst:$i:1}))\n    done\n    echo $res\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local index=0\n    for i in $lst;\
    \ do\n        if [ $((index % 2)) -eq 1 ] && [ $((i % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + i))\n        fi\n        index=$((index + 1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        res=$(($res + ${lst:$i:1}))\n    done\n    echo $res\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$@\"\n    local sum=0\n    for i in $lst; do\n      \
    \  if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i%2)) -eq 1 ] && [ $((n%2)) -eq 0 ]; then\n            sum=$((sum+n))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i%2)) -eq 1 ] && [ $((num%2)) -eq 0 ]; then\n          \
    \  sum=$((sum+num))\n        fi\n        i=$((i+1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n   \
    \     fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  local i=0\n  for num in $lst; do\n \
    \   if [[ $((i % 2)) -eq 1 ]] && [[ $((num % 2)) -eq 0 ]]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for (( i=1; i<${#lst}; i+=2 ));\
    \ do\n        if [[ $(( ${lst:$i:1} % 2 )) -eq 0 ]]; then\n            res=$((\
    \ res + ${lst:$i:1} ))\n        fi\n    done\n    echo $res\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoczs8rv3.sh: line 10: % 2 : syntax error: operand expected (error
    token is "% 2 ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n   \
    \     fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ]; then\n            if [ $((n % 2)) -eq 0\
    \ ]; then\n                sum=$((sum + n))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 $((${#lst}-1)));\
    \ do\n        if [[ $((i%2)) -eq 1 ]] && [[ $((lst[i]%2)) -eq 0 ]]; then\n   \
    \         sum=$((sum+lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum +\
    \ i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    echo \"$@\" | awk '{\n        for (i = 1; i <= NF; i++) {\n     \
    \       if (i % 2 == 0 && $i % 2 == 0) {\n                printf \"%s \", $i\n\
    \            }\n        }\n    }'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(echo $lst | tr\
    \ \" \" \"\\n\"); do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i]%2)) -eq 0 ]]; then\n            res+=(${lst[i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            sum=$((sum+${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local result=0\n    for i in $(seq 0 $((${#lst}\
    \ - 1))); do\n        if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n\
    \            result=$((result + lst[i]))\n        fi\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=\"\"\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $(($i % 2)) -eq 1 ] && [ $(($n % 2)) -eq 0 ]; then\n      \
    \      res=\"$res $n\"\n        fi\n        i=$(($i + 1))\n    done\n    echo\
    \ \"$res\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for (( i=0; i<${#lst}; i++ ));\
    \ do\n        if [[ $(( $i % 2 )) -eq 1 ]]; then\n            local num=${lst:$i:1}\n\
    \            if [[ $(( $num % 2 )) -eq 0 ]]; then\n                sum=$(( $sum\
    \ + $num ))\n            fi\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpup__yze8.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for num in\
    \ $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i]%2)) -eq 0 ]]; then\n            sum=$((sum+lst[i]))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 0 $((${#lst} - 1)));\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + lst[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=(\"$@\")\n    local res=()\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n\
    \        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$@\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for num in\
    \ $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  lst=\"$1\"\n  sum=0\n  for i in $(seq 0 2 $((${#lst} - 1))); do\n \
    \   sum=$(($sum + ${lst:$i:1}))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local -n lst=$1\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpu4d52p0v.sh: line 7: local: `4 88'': invalid variable name for
    name reference\n"'
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $((i%2)) -eq 0 ] && [ $((i%4)) -ne 0 ]\n    \
    \    then\n            sum=$((sum+i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=(\"$@\")\n    local sum=0\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            sum=$((sum+${lst[$i]}))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local num=0\n    for num in\
    \ $lst; do\n        if [ $((num % 2)) -eq 0 ] && [ $((num % 4)) -ne 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if ((i % 2 == 1)) && ((n % 2 == 0)); then\n            sum=$((sum\
    \ + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    echo $lst | tr ' ' '\\n' | awk 'NR%2==0 && $1%2==0'\
    \ | paste -sd+ - | bc\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if (( i % 2 == 1 )) && (( n % 2 == 0 )); then\n            sum=$((\
    \ sum + n ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    echo $lst | awk '{\n        for (i = 1; i <= NF;\
    \ i++) {\n            if (i % 2 == 0 && $i % 2 == 0) {\n                sum +=\
    \ $i\n            }\n        }\n        print sum\n    }'\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $(( ${#lst[@]}\
    \ - 1 )) ); do\n        sum=$(( sum + ${lst[$i]} ))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqtadflul.sh: line 10: sum + 4 88 : syntax error in expression
    (error token is "88 ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 1 $((${#lst} - 1)));\
    \ do\n    if [[ $((i % 2)) -eq 1 ]]; then\n      sum=$((sum + ${lst:$i:1}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6w1wl5wa.sh: line 11: sum +  : syntax error: operand expected
    (error token is "+  ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 0 2 $((${#lst} -\
    \ 1))); do\n    sum=$(($sum + ${lst:$i:1}))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $lst; do\n        if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n            res=$((res + i))\n        fi\n   \
    \ done\n    echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 $((${#lst}\
    \ - 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((${lst[$i]} % 2)) -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  local i=0\n  for n in $lst; do\n   \
    \ if [ $((i%2)) -eq 1 ] && [ $((n%2)) -eq 0 ]; then\n      sum=$((sum+n))\n  \
    \  fi\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $lst; do\n      \
    \  if (( $i % 2 == 0 )); then\n            sum=$(( $sum + $i ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for ((i=1; i<${#lst}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 $((${#lst}\
    \ - 1))); do\n        if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      \
    \      sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $(($i % 2)) -eq 0 ] && [ $(($i % 4)) -ne 0 ]\n\
    \        then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $((i%2)) -eq 0 ] && [ $((i%4)) -ne 0 ]\n    \
    \    then\n            sum=$((sum+i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum +\
    \ i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=(\"$@\")\n    local sum=0\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        if [[ $(( ${lst[$i]} % 2 )) -eq 0 ]]; then\n           \
    \ sum=$(( sum + ${lst[$i]} ))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for num in\
    \ $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=($@)\n  local sum=0\n  for ((i=1; i<${#lst[@]}; i+=2)); do\n\
    \    if [[ $((lst[i] % 2)) -eq 0 ]]; then\n      sum=$((sum + lst[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 0 $((${#lst} - 1)));\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + lst[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 1 ${#lst}); do\n\
    \        if [ $((i % 2)) -ne 0 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [ $((i % 2)) -eq 1 ]; then\n            sum=$((sum + ${lst:$i:1}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0yv54d7.sh: line 11: sum +  : syntax error: operand expected
    (error token is "+  ")\n'''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n\
    \            res=$((res + lst[i]))\n        fi\n    done\n    echo \"$res\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum + i))\n        fi\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local res=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    res=$((res + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $res\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=\"$1\"\n  local sum=0\n  for i in $(seq 0 2 $((${#lst} -\
    \ 1))); do\n    sum=$(($sum + ${lst:$i:1}))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$@\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        local num=\"${lst:$i:1}\"\n        if [[ $((num % 2)) -eq\
    \ 0 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i] % 2)) -eq 0 ]];\
    \ then\n            res=$((res + lst[i]))\n        fi\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$@\n    local res=0\n    local i=0\n    local num=0\n \
    \   for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq\
    \ 0 ]; then\n            res=$((res + num))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    local i=0\n    for n in $lst;\
    \ do\n        if (( i % 2 == 1 )) && (( n % 2 == 0 )); then\n            sum=$((\
    \ sum + n ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local result=()\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            result+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for n in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n        \
    \    res=$((res + n))\n        fi\n        i=$((i + 1))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$@\"\n    local sum=0\n    for i in $lst; do\n      \
    \  if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$@\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(echo $lst | tr \" \"\
    \ \"\\n\")\n    do\n        if [ $((i%2)) -eq 0 ] && [ $((i%4)) -ne 0 ]\n    \
    \    then\n            sum=$((sum+i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 $((${#lst}-1)));\
    \ do\n        if [ $((i%2)) -eq 1 ] && [ $((lst[i]%2)) -eq 0 ]; then\n       \
    \     res=$((res+lst[i]))\n        fi\n    done\n    echo $res\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for (( i=1; i<${#lst[@]}; i+=2\
    \ )); do\n        if (( lst[i] % 2 == 0 )); then\n            (( sum += lst[i]\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=\"$1\"\n    local sum=0\n    for i in $(seq 0 $((${#lst}\
    \ - 1))); do\n        if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($1)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            sum=$((sum+${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    local i=0\n    for e in $lst;\
    \ do\n        if [ $((i % 2)) -eq 1 ] && [ $((e % 2)) -eq 0 ]; then\n        \
    \    res=$((res + e))\n        fi\n        i=$((i + 1))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local res=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        res=$(($res + ${lst:$i:1}))\n    done\n    echo \"$res\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 $((${#lst} -\
    \ 1))); do\n        if [ $((i % 2)) -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if ((lst[i] % 2 == 0)); then\n            res+=(${lst[i]})\n   \
    \     fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            sum=$((sum+${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=($@)\n    local res=()\n    for ((i=1; i<${#lst[@]}; i+=2));\
    \ do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n            res+=(${lst[$i]})\n\
    \        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n    local lst=$1\n    local sum=0\n    for i in $(seq 0 2 $((${#lst}\
    \ - 1))); do\n        sum=$(($sum + ${lst:$i:1}))\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359851
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    add() {\n  local lst=$1\n  local sum=0\n  for i in $(seq 0 $(( $(echo $lst | wc\
    \ -w) - 1 ))); do\n    local num=$(echo $lst | cut -d ' ' -f $(( i + 1 )))\n \
    \   if [ $(( num % 2 )) -eq 0 ] && [ $(( i % 2 )) -ne 0 ]; then\n      sum=$((\
    \ sum + num ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359851

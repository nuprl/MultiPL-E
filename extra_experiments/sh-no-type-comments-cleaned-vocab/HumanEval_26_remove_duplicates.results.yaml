language: sh
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    for i in \"${array[@]}\"; do\n        if [[\
    \ ! \" ${unique_array[@]} \" =~ \" ${i} \" ]]; then\n            unique_array+=(\"\
    $i\")\n        else\n            duplicates_array+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${duplicates_array[@]} \"\
    \ =~ \" ${i} \" ]]; then\n            result_array+=(\"$i\")\n        fi\n   \
    \ done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique_arr=()\n    local -a duplicates_arr=()\n\
    \    local -a result_arr=()\n    for i in \"${arr[@]}\"; do\n        if [[ \"\
    \ ${unique_arr[@]} \" =~ \" ${i} \" ]]; then\n            duplicates_arr+=(\"\
    $i\")\n        else\n            unique_arr+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \" ${duplicates_arr[@]} \" =~ \"\
    \ ${i} \" ]]; then\n            :\n        else\n            result_arr+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result_arr[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -A map=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ -z \"${map[$i]}\" ]]; then\n  \
    \          result+=(\"$i\")\n            map[$i]=1\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpcz9galfi.sh: line 11: map: bad array subscript\n/tmp/tmpcz9galfi.sh:
    line 13: map[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a uniq=()\n    local -a dup=()\n  \
    \  local -a result=()\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${uniq[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            dup+=(\"$i\")\n        else\n       \
    \     uniq+=(\"$i\")\n        fi\n    done\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ \" ${dup[@]} \" =~ \" ${i} \" ]]; then\n            continue\n \
    \       else\n            result+=(\"$i\")\n        fi\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique[*]} \" == *\" $element \"* ]]; then\n        \
    \    duplicates+=(\"$element\")\n        else\n            unique+=(\"$element\"\
    )\n        fi\n    done\n    for element in \"${array[@]}\"; do\n        if [[\
    \ \" ${duplicates[*]} \" != *\" $element \"* ]]; then\n            result+=(\"\
    $element\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n\
    \    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n\
    \    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n\
    \    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n\
    \    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n\
    \    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n\
    \    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n\
    \    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n\
    \    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n\
    \    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n\
    \    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n\
    \    local ce=0\n   \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    for i in $input; do\n      \
    \  if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo ${output[@]}\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if [[ -z \"${seen[$element]}\"\
    \ ]]; then\n            result+=(\"$element\")\n            seen[$element]=1\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmppgr60y61.sh: line 11: seen: bad array subscript\n/tmp/tmppgr60y61.sh:
    line 13: seen[$element]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local seen=\"\"\n    for i\
    \ in $input; do\n        if [[ ! $seen =~ $i ]]; then\n            output=\"$output\
    \ $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [[ $result\
    \ != *\"$i\"* ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if ! in_array \"$i\" \"${seen[@]}\"\
    ; then\n            result+=(\"$i\")\n        fi\n        seen+=(\"$i\")\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp_enmnyy0.sh: line 11: in_array: command not found\n/tmp/tmp_enmnyy0.sh:
    line 11: in_array: command not found\n/tmp/tmp_enmnyy0.sh: line 11: in_array:
    command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${duplicates[*]} \" != *\" $i \"* ]]; then\n          \
    \  result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local -A seen\n  for i in $input;\
    \ do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      output=\"$output $i\"\n   \
    \   seen[$i]=1\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=($@)\n  local -a result=()\n  local -a seen=()\n  for i\
    \ in \"${array[@]}\"; do\n    if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    result+=(\"$i\")\n    seen+=(\"$i\")\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    for i in $input; do\n    \
    \    if [[ $input =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n         \
    \   output=\"$output $i\"\n            input=${input// $i / }\n        fi\n  \
    \  done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $(echo $@ | tr ' ' '\\n' | sort | uniq -u)\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local item\n    for item in \"${array[@]}\"\
    ; do\n        if [[ ! \" ${unique_array[*]} \" =~ \" ${item} \" ]]; then\n   \
    \         unique_array+=(\"${item}\")\n        else\n            duplicates_array+=(\"\
    ${item}\")\n        fi\n    done\n    for item in \"${array[@]}\"; do\n      \
    \  if [[ ! \" ${duplicates_array[*]} \" =~ \" ${item} \" ]]; then\n          \
    \  result_array+=(\"${item}\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local list=\"$1\"\n    local unique_list=\"\"\n    local element=\"\"\
    \n    for element in $list; do\n        if ! echo \"$unique_list\" | grep -q \"\
    $element\"; then\n            unique_list=\"$unique_list $element\"\n        fi\n\
    \    done\n    echo \"$unique_list\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  for i in $input; do\n    if [[ $output\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n    fi\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[*]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \"${unique_array[*]}\" =~ \"${element}\" ]]; then\n      \
    \      duplicates_array+=(\"${element}\")\n        else\n            unique_array+=(\"\
    ${element}\")\n        fi\n    done\n    for element in \"${array[@]}\"; do\n\
    \        if [[ \"${duplicates_array[*]}\" =~ \"${element}\" ]]; then\n       \
    \     continue\n        else\n            result_array+=(\"${element}\")\n   \
    \     fi\n    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ \" ${unique[*]} \" == *\" $i \"* ]];\
    \ then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"$i\")\n    fi\n\
    \  done\n  echo \"${unique[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ ! $seen =~ (^|[[:space:]])\"$i\"($|[[:space:]])\
    \ ]]; then\n            output=\"$output $i\"\n            seen=\"$seen $i\"\n\
    \        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local list=\"$1\"\n    local -a unique_list\n    local -a list_array=($list)\n\
    \    local -A seen\n    for i in \"${list_array[@]}\"; do\n        if [[ ! ${seen[$i]}\
    \ ]]; then\n            unique_list+=(\"$i\")\n            seen[$i]=1\n      \
    \  fi\n    done\n    echo \"${unique_list[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a output\n    local -A seen\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n        \
    \    output+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n    echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpx6_259le.sh: line 11: seen: bad array subscript\n/tmp/tmpx6_259le.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a seen=()\n    local -a result=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \" ${seen[*]} \" == *\" $i \"*\
    \ ]]; then\n            continue\n        fi\n        seen+=(\"$i\")\n       \
    \ result+=(\"$i\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${duplicates[*]} \" != *\" $i \"* ]]; then\n          \
    \  result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n      output+=(\"$i\"\
    )\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local seen=\"\"\n    for i\
    \ in $input; do\n        if [[ ! $seen =~ $i ]]; then\n            output=\"$output\
    \ $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      seen+=(\"$i\")\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a new_arr=()\n    local -a seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            new_arr+=(\"$i\")\n            seen+=(\"$i\")\n      \
    \  fi\n    done\n    echo \"${new_arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n \
    \           result+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3rejxecc.sh: line 11: seen: bad array subscript\n/tmp/tmp3rejxecc.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicate_array=()\n\
    \  local -a result_array=()\n  for element in \"${array[@]}\"; do\n    if [[ \"\
    \ ${unique_array[*]} \" == *\" $element \"* ]]; then\n      duplicate_array+=(\"\
    $element\")\n    else\n      unique_array+=(\"$element\")\n    fi\n  done\n  for\
    \ element in \"${array[@]}\"; do\n    if [[ \" ${duplicate_array[*]} \" != *\"\
    \ $element \"* ]]; then\n      result_array+=(\"$element\")\n    fi\n  done\n\
    \  echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    local seen=()\n    for\
    \ i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]];\
    \ then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local n=${#array[@]}\n    local m=0\n    local is_duplicate=0\n    for ((i=0;\
    \ i<n; i++)); do\n        is_duplicate=0\n        for ((j=0; j<m; j++)); do\n\
    \            if [[ \"${array[i]}\" == \"${unique_array[j]}\" ]]; then\n      \
    \          is_duplicate=1\n                duplicates_array[k]=${array[i]}\n \
    \               k=$((k+1))\n                break\n            fi\n        done\n\
    \        if [[ $is_duplicate -eq 0 ]]; then\n            unique_array[m]=${array[i]}\n\
    \            m=$((m+1))\n        fi\n    done\n    k=0\n    for ((i=0; i<n; i++));\
    \ do\n        is_duplicate=0\n        for ((j=0; j<k; j++)); do\n            if\
    \ [[ \"${array[i]}\" == \"${duplicates_array[j]}\" ]]; then\n                is_duplicate=1\n\
    \                break\n            fi\n        done\n        if [[ $is_duplicate\
    \ -eq 0 ]]; then\n            result_array[k]=${array[i]}\n            k=$((k+1))\n\
    \        fi\n    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=(\"$@\")\n  local output=()\n  local seen=()\n  for i in \"\
    ${input[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n     \
    \ output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${duplicates[*]} \" != *\" $i \"* ]]; then\n          \
    \  result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ ! \" ${unique[@]} \" =~ \" ${i} \"\
    \ ]]; then\n      unique+=(\"$i\")\n    else\n      duplicates+=(\"$i\")\n   \
    \ fi\n  done\n  for i in \"${duplicates[@]}\"; do\n    array=(${array[@]/$i})\n\
    \  done\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local -a result\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${duplicates[@]} \" =~ \" ${i} \" ]]; then\n          \
    \  continue\n        else\n            result+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local -i len=${#array[@]}\n\
    \    local -i len_unique=0\n    local -i len_duplicates=0\n    local -i found=0\n\
    \    for ((i=0; i<len; i++)); do\n        found=0\n        for ((j=0; j<len_unique;\
    \ j++)); do\n            if [[ \"${array[i]}\" == \"${unique[j]}\" ]]; then\n\
    \                found=1\n                break\n            fi\n        done\n\
    \        if [[ $found -eq 0 ]]; then\n            unique[len_unique]=${array[i]}\n\
    \            len_unique+=1\n        else\n            duplicates[len_duplicates]=${array[i]}\n\
    \            len_duplicates+=1\n        fi\n    done\n    for ((k=0; k<len_unique;\
    \ k++)); do\n        for ((l=0; l<len_duplicates; l++)); do\n            if [[\
    \ \"${unique[k]}\" == \"${duplicates[l]}\" ]]; then\n                unique[k]=\"\
    \"\n                break\n            fi\n        done\n    done\n    echo \"\
    ${unique[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local i\n\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n            duplicates+=($i)\n        else\n    \
    \        unique+=($i)\n        fi\n    done\n\n    for i in \"${duplicates[@]}\"\
    ; do\n        arr=(${arr[@]/$i})\n    done\n\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    for i in $input; do\n      \
    \  if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo ${output[@]}\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n  \
    \  local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n   \
    \ local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local\
    \ aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local\
    \ ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local\
    \ kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local\
    \ pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local\
    \ uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local\
    \ zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n \
    \   local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local\
    \ iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n\
    \    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local\
    \ rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n\
    \    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local\
    \ aaaa=0\n   \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    local seen=()\n    for\
    \ i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]];\
    \ then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -A seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n   \
    \         res+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n    echo\
    \ \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmpfvcg1y6s.sh: line 11: seen: bad array subscript\n/tmp/tmpfvcg1y6s.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i\n    for i in \"${array[@]}\"; do\n\
    \        if [[ \" ${unique_array[*]} \" == *\" $i \"* ]]; then\n            duplicates_array+=(\"\
    $i\")\n        else\n            unique_array+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${duplicates_array[*]} \"\
    \ != *\" $i \"* ]]; then\n            result_array+=(\"$i\")\n        fi\n   \
    \ done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local n=0\n    local m=0\n    local found=0\n    local temp=\"\
    \"\n    local array=()\n    local array_sorted=()\n    local array_unique=()\n\
    \    local array_unique_sorted=()\n    local array_unique_sorted_filtered=()\n\
    \    local array_unique_sorted_filtered_string=\"\"\n    # Convert input to array.\n\
    \    IFS=' ' read -r -a array <<< \"$input\"\n    # Sort array.\n    array_sorted=($(printf\
    \ '%s\\n' \"${array[@]}\" | sort -n))\n    # Remove duplicates.\n    array_unique=($(printf\
    \ '%s\\n' \"${array_sorted[@]}\" | uniq))\n    # Sort array.\n    array_unique_sorted=($(printf\
    \ '%s\\n' \"${array_unique[@]}\" | sort -n))\n    # Remove duplicates.\n    array_unique_sorted_filtered=($(printf\
    \ '%s\\n' \"${array_unique_sorted[@]}\" | uniq -u))\n    # Convert array to string.\n\
    \    array_unique_sorted_filtered_string=$(printf '%s\\n' \"${array_unique_sorted_filtered[@]}\"\
    )\n    # Print string.\n    echo \"$array_unique_sorted_filtered_string\"\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  for i in \"${array[@]}\"\
    ; do\n    if [[ ! \" ${unique_array[@]} \" =~ \" ${i} \" ]]; then\n      unique_array+=(\"\
    $i\")\n    fi\n  done\n  echo \"${unique_array[@]}\"\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local -a output=()\n  local -a seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=(\"$i\"\
    )\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${seen[*]} \" != *\" $i \"\
    * ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local i\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique_array[*]}\
    \ \" != *\" $i \"* ]]; then\n            unique_array+=(\"$i\")\n        else\n\
    \            duplicates_array+=(\"$i\")\n        fi\n    done\n    for i in \"\
    ${duplicates_array[@]}\"; do\n        unique_array=(${unique_array[@]/$i})\n \
    \   done\n    echo \"${unique_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($1)\n    local -a output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -a seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local list=\"$1\"\n    local -a array=()\n    local -a seen=()\n    for\
    \ item in $list; do\n        if ! contains \"$item\" \"${seen[@]}\"; then\n  \
    \          array+=(\"$item\")\n            seen+=(\"$item\")\n        fi\n   \
    \ done\n    echo \"${array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpjtp_e4jr.sh: line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh:
    line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains:
    command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh:
    line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains:
    command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh:
    line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains:
    command not found\n/tmp/tmpjtp_e4jr.sh: line 11: contains: command not found\n/tmp/tmpjtp_e4jr.sh:
    line 11: contains: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local list=\"$1\"\n  local -a seen\n  local -a result\n  local item\n \
    \ for item in $list; do\n    if ! contains \"${seen[@]}\" \"$item\"; then\n  \
    \    result+=(\"$item\")\n    fi\n    seen+=(\"$item\")\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpzpdmc5wa.sh: line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh:
    line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains:
    command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh:
    line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains:
    command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh:
    line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains:
    command not found\n/tmp/tmpzpdmc5wa.sh: line 12: contains: command not found\n/tmp/tmpzpdmc5wa.sh:
    line 12: contains: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo \"\
    ${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local input_array=($input)\n\
    \  local output_array=()\n  local i=0\n  local j=0\n  local found=0\n  for i in\
    \ \"${input_array[@]}\"; do\n    found=0\n    for j in \"${output_array[@]}\"\
    ; do\n      if [ \"$i\" == \"$j\" ]; then\n        found=1\n        break\n  \
    \    fi\n    done\n    if [ $found -eq 0 ]; then\n      output_array+=(\"$i\"\
    )\n    fi\n  done\n  output=$(join_by \" \" \"${output_array[@]}\")\n  echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmppp5fyp2y.sh: line 26: join_by: command not found\n/tmp/tmppp5fyp2y.sh:
    line 26: join_by: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $@ | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique_arr=()\n    local -a duplicates_arr=()\n\
    \    local -a result_arr=()\n    for i in \"${arr[@]}\"; do\n        if [[ ! \"\
    \ ${unique_arr[@]} \" =~ \" ${i} \" ]]; then\n            unique_arr+=(\"$i\"\
    )\n        else\n            duplicates_arr+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${duplicates_arr[@]} \" =~\
    \ \" ${i} \" ]]; then\n            result_arr+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result_arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local n=0\n    local m=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n  \
    \  local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local eeee=0\n    local\
    \ ffff=0\n    local g\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local -A seen\n    for i in\
    \ $input; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n            seen[$i]=1\n\
    \            output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  local item\n  for item in \"${array[@]}\"; do\n    if\
    \ [[ \" ${unique[*]} \" == *\" $item \"* ]]; then\n      duplicates+=(\"$item\"\
    )\n    else\n      unique+=(\"$item\")\n    fi\n  done\n  for item in \"${array[@]}\"\
    ; do\n    if [[ \" ${duplicates[*]} \" != *\" $item \"* ]]; then\n      result+=(\"\
    $item\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    output+=(\"$i\")\n    seen+=(\"$i\")\n  done\n  echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if ! contains \"$i\" \"${seen[@]}\"; then\n    \
    \  result+=(\"$i\")\n    fi\n    seen+=(\"$i\")\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpcusp46mb.sh: line 11: contains: command not found\n/tmp/tmpcusp46mb.sh:
    line 11: contains: command not found\n/tmp/tmpcusp46mb.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  local seen=\"\"\n  for i in $input;\
    \ do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"\
    $output $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -a seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n \
    \           result+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3rejxecc.sh: line 11: seen: bad array subscript\n/tmp/tmp3rejxecc.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local n=${#array[@]}\n    local m=0\n    local is_duplicate=0\n    for ((i=0;\
    \ i<n; i++)); do\n        is_duplicate=0\n        for ((j=0; j<m; j++)); do\n\
    \            if [[ \"${array[i]}\" == \"${unique_array[j]}\" ]]; then\n      \
    \          is_duplicate=1\n                break\n            fi\n        done\n\
    \        if [[ $is_duplicate -eq 0 ]]; then\n            unique_array[m]=${array[i]}\n\
    \            ((m++))\n        else\n            duplicates_array[k]=${array[i]}\n\
    \            ((k++))\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n  \
    \      is_duplicate=0\n        for ((j=0; j<k; j++)); do\n            if [[ \"\
    ${array[i]}\" == \"${duplicates_array[j]}\" ]]; then\n                is_duplicate=1\n\
    \                break\n            fi\n        done\n        if [[ $is_duplicate\
    \ -eq 0 ]]; then\n            result_array[i]=${array[i]}\n        fi\n    done\n\
    \    echo ${result_array[@]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=(\"$@\")\n  local output=()\n  local seen=()\n  for i in \"\
    ${input[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n     \
    \ output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    local item\n\
    \    for item in $input; do\n        if ! contains \"${seen[@]}\" \"$item\"; then\n\
    \            output+=(\"$item\")\n        fi\n        seen+=(\"$item\")\n    done\n\
    \    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp3zw7p8l0.sh: line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh:
    line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains:
    command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh:
    line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains:
    command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh:
    line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains:
    command not found\n/tmp/tmp3zw7p8l0.sh: line 12: contains: command not found\n/tmp/tmp3zw7p8l0.sh:
    line 12: contains: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -a seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($1)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ ! $seen =~ $i ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicate_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local n=${#array[@]}\n    local m=0\n    local is_duplicate=0\n    for ((i=0;\
    \ i<n; i++)); do\n        is_duplicate=0\n        for ((j=0; j<m; j++)); do\n\
    \            if [[ \"${array[i]}\" == \"${unique_array[j]}\" ]]; then\n      \
    \          is_duplicate=1\n                break\n            fi\n        done\n\
    \        if [[ $is_duplicate -eq 0 ]]; then\n            unique_array[m]=${array[i]}\n\
    \            ((m++))\n        else\n            duplicate_array[k]=${array[i]}\n\
    \            ((k++))\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n  \
    \      is_duplicate=0\n        for ((j=0; j<k; j++)); do\n            if [[ \"\
    ${array[i]}\" == \"${duplicate_array[j]}\" ]]; then\n                is_duplicate=1\n\
    \                break\n            fi\n        done\n        if [[ $is_duplicate\
    \ -eq 0 ]]; then\n            result_array[i]=${array[i]}\n        fi\n    done\n\
    \    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    output+=(\"$i\")\n    seen+=(\"$i\")\n  done\n  echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a unique\n  local -a duplicates\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ ! \" ${unique[@]} \" =~ \" ${i} \" ]]; then\n\
    \      unique+=(\"$i\")\n    else\n      duplicates+=(\"$i\")\n    fi\n  done\n\
    \  for i in \"${duplicates[@]}\"; do\n    arr=( \"${arr[@]/$i}\" )\n  done\n \
    \ echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ \" ${seen[*]} \" == *\" $i \"* ]]; then\n      continue\n    fi\n\
    \    seen+=($i)\n    output+=($i)\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            res+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=\"\"\n  local element=\"\
    \"\n  for element in $input; do\n    if [[ ! \"$seen\" =~ \"$element\" ]]; then\n\
    \      output=\"$output $element\"\n      seen=\"$seen $element\"\n    fi\n  done\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=($i)\n            seen+=($i)\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -A map=()\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ -z \"${map[$i]}\" ]]; then\n     \
    \       res+=(\"$i\")\n            map[$i]=1\n        fi\n    done\n    echo \"\
    ${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp9vce3e18.sh: line 11: map: bad array subscript\n/tmp/tmp9vce3e18.sh:
    line 13: map[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=\"\"\n  for i in\
    \ $input; do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"\
    $output $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ \"$seen\" != *\"$i\"* ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if ! contains \"$i\" \"${seen[@]}\"; then\n\
    \            res+=(\"$i\")\n        fi\n        seen+=(\"$i\")\n    done\n   \
    \ echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpdk5l3ur5.sh: line 11: contains: command not found\n/tmp/tmpdk5l3ur5.sh:
    line 11: contains: command not found\n/tmp/tmpdk5l3ur5.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  for i in $input; do\n    if [[ !\
    \ $output =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n      output=\"$output\
    \ $i\"\n    fi\n  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n      output+=(\"$i\"\
    )\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a uniq\n    local -a dup\n    local\
    \ i\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${uniq[*]} \" =~ \" ${i}\
    \ \" ]]; then\n            dup+=(\"$i\")\n        else\n            uniq+=(\"\
    $i\")\n        fi\n    done\n    for i in \"${dup[@]}\"; do\n        arr=(${arr[@]/$i})\n\
    \    done\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ ! \"\
    \ ${unique[@]} \" =~ \" ${i} \" ]]; then\n            unique+=(\"$i\")\n     \
    \   else\n            duplicates+=(\"$i\")\n        fi\n    done\n    for i in\
    \ \"${array[@]}\"; do\n        if [[ ! \" ${duplicates[@]} \" =~ \" ${i} \" ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=($i)\n      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  local seen=\"\"\n  for i in $input;\
    \ do\n    if [[ $seen != *\"$i\"* ]]; then\n      output=\"$output $i\"\n    \
    \  seen=\"$seen $i\"\n    fi\n  done\n  echo $output\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique\n  local -a duplicates\n  local\
    \ -a result\n\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]} \" ==\
    \ *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a new_array=()\n  local -a seen=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]];\
    \ then\n      new_array+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo\
    \ \"${new_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -a uniq=()\n  \
    \  local -a dup=()\n    local i\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ \" ${uniq[*]} \" == *\" $i \"* ]]; then\n            dup+=(\"$i\")\n       \
    \ else\n            uniq+=(\"$i\")\n        fi\n    done\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ \" ${dup[*]} \" != *\" $i \"* ]]; then\n            res+=(\"\
    $i\")\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique_arr=()\n    local -a duplicates_arr=()\n\
    \    local -a result_arr=()\n    local i=0\n    local j=0\n    local k=0\n   \
    \ local n=${#arr[@]}\n    local m=0\n    local is_duplicate=0\n    for ((i=0;\
    \ i<n; i++)); do\n        is_duplicate=0\n        for ((j=0; j<m; j++)); do\n\
    \            if [[ \"${arr[i]}\" == \"${unique_arr[j]}\" ]]; then\n          \
    \      is_duplicate=1\n                break\n            fi\n        done\n \
    \       if [[ $is_duplicate -eq 0 ]]; then\n            unique_arr[m]=${arr[i]}\n\
    \            ((m++))\n        else\n            duplicates_arr[k]=${arr[i]}\n\
    \            ((k++))\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n  \
    \      is_duplicate=0\n        for ((j=0; j<k; j++)); do\n            if [[ \"\
    ${arr[i]}\" == \"${duplicates_arr[j]}\" ]]; then\n                is_duplicate=1\n\
    \                break\n            fi\n        done\n        if [[ $is_duplicate\
    \ -eq 0 ]]; then\n            result_arr[i]=${arr[i]}\n        fi\n    done\n\
    \    echo \"${result_arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            res+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a seen=()\n    local -a result=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            seen+=(\"$i\")\n            result+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique_arr=()\n    local -a result=()\n\
    \    local i\n    local j\n    local k\n\n    for ((i = 0; i < ${#arr[@]}; i++));\
    \ do\n        for ((j = 0; j < ${#unique_arr[@]}; j++)); do\n            if [[\
    \ \"${arr[$i]}\" == \"${unique_arr[$j]}\" ]]; then\n                break\n  \
    \          fi\n        done\n        if [[ $j -eq ${#unique_arr[@]} ]]; then\n\
    \            unique_arr+=(\"${arr[$i]}\")\n        fi\n    done\n\n    for ((i\
    \ = 0; i < ${#arr[@]}; i++)); do\n        for ((j = 0; j < ${#unique_arr[@]};\
    \ j++)); do\n            if [[ \"${arr[$i]}\" == \"${unique_arr[$j]}\" ]]; then\n\
    \                for ((k = 0; k < ${#result[@]}; k++)); do\n                 \
    \   if [[ \"${arr[$i]}\" == \"${result[$k]}\" ]]; then\n                     \
    \   break\n                    fi\n                done\n                if [[\
    \ $k -eq ${#result[@]} ]]; then\n                    result+=(\"${arr[$i]}\")\n\
    \                    break\n                fi\n            fi\n        done\n\
    \    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local i\n    for i in\
    \ $input; do\n        if [[ $output != *\"$i\"* ]]; then\n            output+=\"\
    $i \"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -A seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n\
    \            output+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n\
    \    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \"\
    \ ${element} \" ]]; then\n            result+=(\"$element\")\n            seen+=(\"\
    $element\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${unique[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ \" ${duplicates[@]} \" =~ \" ${i} \" ]]; then\n          \
    \  continue\n        else\n            result+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    local index\n    for element\
    \ in \"${array[@]}\"; do\n        index=$(index_of \"$element\" \"${unique_array[@]}\"\
    )\n        if [[ $index == -1 ]]; then\n            unique_array+=(\"$element\"\
    )\n        else\n            duplicates_array+=(\"$element\")\n        fi\n  \
    \  done\n    for element in \"${array[@]}\"; do\n        index=$(index_of \"$element\"\
    \ \"${duplicates_array[@]}\")\n        if [[ $index == -1 ]]; then\n         \
    \   result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp9b162m2s.sh: line 14: index_of: command not found\n/tmp/tmp9b162m2s.sh:
    line 22: index_of: command not found\n/tmp/tmp9b162m2s.sh: line 14: index_of:
    command not found\n/tmp/tmp9b162m2s.sh: line 22: index_of: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ ! \" ${result[@]} \" =~ \" ${i} \" ]]; then\n            result+=($i)\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -A seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n   \
    \         res+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n    echo\
    \ \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmpfvcg1y6s.sh: line 11: seen: bad array subscript\n/tmp/tmpfvcg1y6s.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$1\" | tr ' ' '\\n' | awk '!a[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -A seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n\
    \            output+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n\
    \    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=()\n    local seen=()\n    for element\
    \ in $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${element} \" ]]; then\n\
    \            output+=(\"$element\")\n            seen+=(\"$element\")\n      \
    \  fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local -a output\n  local -a seen\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=(\"$i\"\
    )\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n  \
    \          duplicates_array+=(\"$element\")\n        else\n            unique_array+=(\"\
    $element\")\n        fi\n    done\n    for element in \"${array[@]}\"; do\n  \
    \      if [[ \" ${duplicates_array[*]} \" != *\" $element \"* ]]; then\n     \
    \       result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    local index\n\n    for element\
    \ in \"${array[@]}\"; do\n        index=$(index_of \"$element\" \"${unique_array[@]}\"\
    )\n        if [[ $index == -1 ]]; then\n            unique_array+=(\"$element\"\
    )\n        else\n            duplicates_array+=(\"$element\")\n        fi\n  \
    \  done\n\n    for element in \"${array[@]}\"; do\n        index=$(index_of \"\
    $element\" \"${duplicates_array[@]}\")\n        if [[ $index == -1 ]]; then\n\
    \            result_array+=(\"$element\")\n        fi\n    done\n\n    echo \"\
    ${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpi5pu131b.sh: line 15: index_of: command not found\n/tmp/tmpi5pu131b.sh:
    line 24: index_of: command not found\n/tmp/tmpi5pu131b.sh: line 15: index_of:
    command not found\n/tmp/tmpi5pu131b.sh: line 24: index_of: command not found\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n\
    \            result+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwj7cvj0j.sh: line 11: seen: bad array subscript\n/tmp/tmpwj7cvj0j.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array\n  local -a unique\n  local -a duplicates\n  array=($@)\n\
    \  unique=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n\
    \  duplicates=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort | uniq -d | tr '\\\
    n' ' '))\n  echo \"${unique[@]}\" | tr ' ' '\\n' | grep -v -F -f <(echo \"${duplicates[@]}\"\
    \ | tr ' ' '\\n') | tr '\\n' ' '\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    local seen=()\n    for\
    \ i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]];\
    \ then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ ! $seen =~ $i ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local -a result\n    local i\n    local j\n    local k\n\n    for ((i = 0;\
    \ i < ${#array[@]}; i++)); do\n        for ((j = 0; j < ${#unique[@]}; j++));\
    \ do\n            if [[ \"${array[$i]}\" == \"${unique[$j]}\" ]]; then\n     \
    \           duplicates+=(\"${array[$i]}\")\n                break\n          \
    \  fi\n        done\n        if [[ $j -eq ${#unique[@]} ]]; then\n           \
    \ unique+=(\"${array[$i]}\")\n        fi\n    done\n\n    for ((i = 0; i < ${#array[@]};\
    \ i++)); do\n        for ((j = 0; j < ${#duplicates[@]}; j++)); do\n         \
    \   if [[ \"${array[$i]}\" == \"${duplicates[$j]}\" ]]; then\n               \
    \ break\n            fi\n        done\n        if [[ $j -eq ${#duplicates[@]}\
    \ ]]; then\n            result+=(\"${array[$i]}\")\n        fi\n    done\n\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n    done\n  \
    \  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a new_array=()\n    local -a seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \"\
    \ ${element} \" ]]; then\n            new_array+=(\"$element\")\n            seen+=(\"\
    $element\")\n        fi\n    done\n    echo \"${new_array[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -A seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      result+=(\"\
    $i\")\n      seen[$i]=1\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpzv8c3ab8.sh: line 11: seen: bad array subscript\n/tmp/tmpzv8c3ab8.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=()\n    local seen=()\n    local\
    \ element=\n    for element in $input; do\n        if [[ ! \" ${seen[*]} \" =~\
    \ \" ${element} \" ]]; then\n            output+=(\"$element\")\n            seen+=(\"\
    $element\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=($@)\n    local output=()\n    for i in \"${input[@]}\";\
    \ do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a uniq=()\n    local -a dup=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ \" ${uniq[@]} \" =~ \" ${i} \" ]];\
    \ then\n            dup+=(\"$i\")\n        else\n            uniq+=(\"$i\")\n\
    \        fi\n    done\n    for i in \"${dup[@]}\"; do\n        arr=(${arr[@]/$i})\n\
    \    done\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=(\"$@\")\n  local output=()\n  local seen=()\n  for i in \"\
    ${input[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n     \
    \ output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local item\n    for item in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique_array[*]} \" == *\" $item \"* ]]; then\n     \
    \       duplicates_array+=($item)\n        else\n            unique_array+=($item)\n\
    \        fi\n    done\n    for item in \"${array[@]}\"; do\n        if [[ \" ${duplicates_array[*]}\
    \ \" != *\" $item \"* ]]; then\n            result_array+=($item)\n        fi\n\
    \    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=($@)\n  local -a unique=()\n  local -a duplicates=()\n \
    \ local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ ! \" ${unique[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      unique+=(\"$i\")\n    else\n      duplicates+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ ! \" ${duplicates[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ ! $seen =~ (^|[[:space:]])\"$i\"($|[[:space:]])\
    \ ]]; then\n            output=\"$output $i\"\n            seen=\"$seen $i\"\n\
    \        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if [[ -z \"${seen[$element]}\"\
    \ ]]; then\n            result+=(\"$element\")\n            seen[$element]=1\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmppgr60y61.sh: line 11: seen: bad array subscript\n/tmp/tmppgr60y61.sh:
    line 13: seen[$element]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660359352
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n\
    \      seen+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660359352
